{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-11-17T01:55:10.233723+00:00",
  "repo": "ietf-rats-wg/draft-ietf-rats-corim",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "C9B42A"
    },
    {
      "name": "more discussion needed",
      "description": "Issue is resolved but follow on discussion could cause a conclusion to be revisited",
      "color": "4795F7"
    },
    {
      "name": "mustfix",
      "description": "This is essential requirement for CoRIM Publish",
      "color": "382CCE"
    },
    {
      "name": "For-next-release",
      "description": "WIll only be addressed after first publish of CoRIM",
      "color": "DEDE3B"
    },
    {
      "name": "shouldfix",
      "description": "Moderately important to fix, but not a showstopper",
      "color": "c5def5"
    },
    {
      "name": "preferable first release",
      "description": "Desirable to accommodate in initial release",
      "color": "D6F345"
    },
    {
      "name": "for-guidance",
      "description": "An issue for describing \"best use\" of the format, and is not a strict disambiguation.",
      "color": "FEBA66"
    },
    {
      "name": "not yet ready for review",
      "description": "",
      "color": "0e8a16"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOH6-tI85RFlTP",
      "title": "endorsed-reference-triple",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/2",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To handle a class of endorsements that are conditionally asserted based on acceptance of specific reference value(s), a new triple is needed.\r\n```\r\n;\r\n; Triples map extension\r\n;\r\n $$triples-map-extension //= (\r\n  comid.endorsed-reference-triples => [+ endorsed-reference-triple-record]\r\n)\r\ncomid.endorsed-reference-triples = 7\r\n\r\nendorsed-reference-triple-record = [\r\n  environment-map ; target environment\r\n  [ + endorsed-reference-map ] ; reference values with endorsed values\r\n]\r\nendorsed-reference-map = non-empty<{\r\n  ? comid.pos => uint ; position - avoids using mkey\r\n  ? comid.refv => measurement-map, ; reference values\r\n  ? comid.endv => measurement-map / measurement-values-map ; endorsed values\r\n}>\r\ncomid.refv = 0\r\ncomid.endv = 1\r\ncomid.pos = 2\r\n```",
      "createdAt": "2022-09-02T16:48:05Z",
      "updatedAt": "2023-01-23T21:53:17Z",
      "closedAt": "2023-01-23T21:52:56Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "refinement proposal:\r\n\r\n* remove `pos`: the order in the array matters\r\n* remove optionality of refv and endv\r\n* also, flip the reference/endorsed\r\n\r\n```\r\n$$triples-map-extension //= (\r\n  comid.reference-endorsed-triples => [ + reference-endorsed-triple-record ]\r\n)\r\ncomid.reference-endorsed-triples = 7\r\n\r\nreference-endorsed-triple-record = [\r\n  environment-map ; target environment\r\n  [ + reference-endorsed-record ] ; reference values with endorsed values\r\n]\r\n\r\nreference-endorsed-record = [\r\n  reference-values : measurement-map\r\n  endorsed-values : measurement-map / measurement-values-map\r\n]\r\n```",
          "createdAt": "2022-09-22T16:38:43Z",
          "updatedAt": "2022-09-22T16:55:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Noting the point that if mkey and pos are removed and position semantics are inferred from the array context which is part of the triple object. Then there is a possibility for Verifier undecidability if two or more tags are created for the same triple subject that have the same type measurements in the triple object. If the measurements are intended NOT as time series data but as set data the Verifier would accept the Evidence if it matched one of the reference values in the set. If the measurements are intended as series data then the Verifier is undecided as to which measurement is first, second etc... as each tag would have a measurement at position 0. \r\n\r\nIf 'pos' is retained, then existence of pos addresses both forms of ambiguity. Namely, if pos is omitted, then set semantics are applied across all measurements from multiple tags (for the same environment e.g., class-map/class-id is the same across multiple tags). If pos is supplied then there should be a strict ordering 0 to n even though there may be multiple tags supplying measurements. If not (e.g., two measurements at pos = 0) should result in an error. \r\n\r\nI don't know if there is a use case for mkey where mkey type isn't time series related. If time series use case is the only motivation for mkey, then I prefer adding 'pos' to reference-endorsed-map/-record vs. mkey. ",
          "createdAt": "2022-09-22T17:20:52Z",
          "updatedAt": "2022-09-22T17:23:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Here is additional use case context for conditional endorsement. A vendor might monitor target environment (TE) vulnerabilities over a period of time and maintain a vulnerabilities database (e.g., https://cve.mitre.org/ ). They might use SVN (or version #) to track changes to the TE where a vulnerability is fixed. When the vendor produces a RV for the TE, it also may provide a list of known vulnerabilities (CVE). Since the verifier needs to obtain current / fresh RVs, it is convenient to have known CVEs included as endorsed values. \r\n\r\nPragmatically, the CoRIM / CoMID schema using only reference-values-triple and endorsed-values-triple doesn't allow conditional endorsements to be correlated easily. When an evidence / RV match is found, the verifier must perform a more detailed query (one that includes matching on specific measurement values) to know if a given endorsed-value applies. This is like an inner-loop function that many implementation will want to optimize. If the reference-values-triple is pre-loaded with the endorsements for the inner-loop processing the verifier doesn't need to fetch, parse, pre-process and stage endorsed-values for inner-loop optimization. \r\nFor many vendors, they are most aware of which vulnerabilities affect the TE they mfr and know which patches / updates to apply to resolve them. They're motivated to ensure verifiers are equipped with vulnerability and other info needed for an accurate and timely appraisal. ",
          "createdAt": "2022-10-03T21:10:40Z",
          "updatedAt": "2022-10-03T21:10:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: removal of 'pos' would cause reference-endorsed-triple-record to only support time series use case. Another viable use of multi-valued reference-endorsed-map structures is when there are multiple evidence values in the form of reference-endorsed-map structures that would match similar structures in reference-endorsed-triple-record. Having an explicit mechanism for treating the multi-valued triple object as time series would avoid this confusion.",
          "createdAt": "2022-10-12T19:28:35Z",
          "updatedAt": "2022-10-12T19:28:35Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Considering issue #24, if the scope of #24 is limited to new triples only, and there are use cases for time-series data with endorsed values (only) or reference values (only), then the decision to make both `reference-values` and `endorsed-values` optional should be reconsidered as the new triple would be needed to cover all the forms involving time series data.",
          "createdAt": "2022-11-17T18:53:08Z",
          "updatedAt": "2022-11-17T18:53:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The current proposal is therefore:\r\n```\r\n$$triples-map-extension //= (\r\n  comid.reference-endorsed-triples => [ + reference-endorsed-triple-record ]\r\n)\r\ncomid.reference-endorsed-triples = 7\r\n\r\nreference-endorsed-triple-record = [\r\n  environment-map ; identifies the target environment\r\n  [ + reference-endorsed-map ] ; reference values with endorsed values\r\n]\r\n\r\nreference-endorsed-map = {\r\n  &(ref-vals :0) => [ + measurement-map / measurement-values-map ]\r\n  &(end-vals :1) => [ + measurement-map / measurement-values-map ]\r\n}\r\n```",
          "createdAt": "2022-11-17T19:02:26Z",
          "updatedAt": "2022-11-17T19:02:26Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Updating proposed CDDL to reflect convention that we disallow multiple instances of the same type measurement.\r\n\r\n```\r\nreference-endorsed-triple-record = [\r\n  environment-map ; identifies the target environment\r\n  ref-map ; reference measurements that match evidence\r\n  end-map ; endorsements that are accepted if above reference values match evidence\r\n]\r\n \r\nref-map = {\r\n  &(ref-vals :0) =>  measurement-map / measurement-values-map ; no time series data as reference values is possible\r\n}\r\n \r\nend-map = {\r\n  &(end-vals :0) => [ + measurement-map / measurement-values-map ] ; array denotes time series data \u2013 array index 0 is the most recent value, index n is most historical value\r\n}\r\n```\r\nNote: the use of ref-map and end-map may be pedestrian, but helps to illustrate the part handles time series and the part that handles conditional endorsement. ",
          "createdAt": "2022-11-23T19:33:17Z",
          "updatedAt": "2022-11-23T19:33:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "resolved by PR #36 ",
          "createdAt": "2022-12-07T22:46:22Z",
          "updatedAt": "2022-12-07T22:46:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved by PR #36",
          "createdAt": "2023-01-23T21:53:16Z",
          "updatedAt": "2023-01-23T21:53:16Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOH6-tI85SfTEh",
      "title": "create and \"introduction\" section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/4",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "It should contain at least:\r\n\r\n* An overview of the CoRIM model\r\n* A big-picture pic of the data structures and their relationships",
      "createdAt": "2022-09-23T14:58:57Z",
      "updatedAt": "2023-03-29T17:09:08Z",
      "closedAt": "2023-03-29T17:09:07Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There are UML class diagrams available for reference.",
          "createdAt": "2022-09-23T16:35:50Z",
          "updatedAt": "2022-09-23T16:35:50Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOH6-tI85SfTa9",
      "title": "What is a \"tagged integer\"?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/5",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Provide a description of a \"tagged integer\", in particular what purposes it serves.\r\n\r\nAlso, consider maybe a more evocative name.",
      "createdAt": "2022-09-23T14:59:51Z",
      "updatedAt": "2023-02-28T21:13:46Z",
      "closedAt": "2023-02-28T21:13:46Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "From Ned's original comment: _\"It is used in connection with $class-id-type-choice /= tagged-int-type where vendor ID is required. It can be used in cases where there are a small number of object classes and limited storage for larger class IDs such as OID and UUID.\"_",
          "createdAt": "2022-09-23T15:00:22Z",
          "updatedAt": "2022-09-23T15:00:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "How about \"constrained object identifier\". A typical use case for constrained environments might use a PEN as the vendor and an integer value corresponding to the modules / submodules that makes up the device.",
          "createdAt": "2022-09-23T16:24:13Z",
          "updatedAt": "2022-09-23T16:24:13Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOH6-tI85SfT2z",
      "title": "rework the CoRIM Intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/6",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Text (temporarily) expunged:\r\n\r\n```\r\nConcise Reference Integrity Manifests (CoRIM) contain tags that describe the\r\ncomposition and measurements of a platform, device, component, or software.\r\n\r\nCoRIM is an envelope to carry information typically exchanged between Endorsers\r\nand Verifiers {{-rats-arch}}. Endorsements are information produced by\r\nEndorsers and consumed by Verifiers. CoRIM contains Endorsement Claims. Inside\r\nCoRIM, Claims about hardware or firmware are described using CoMID tags.\r\nSoftware Claims are described using CoSWID tags.\r\n\r\nCoRIM can be integrity protected and authenticated using cryptography. The\r\nCoRIM signer is the entity that asserts Endorsement Claims.  In a complex\r\nsupply chain, it is likely multiple Endorsers will produce CoRIMs, pertaining\r\nto individual components they produce, at different times. Hence a CoRIM can\r\nprovide a link to other CoRIMs such that a combination of CoRIMs describe a\r\ndevice class.\r\n```\r\n\r\nThere are a couple of problems with that text:\r\n\r\n1. it mentions RATS-ARCH but does not use the vocabulary correctly (specifically, it squashes together endorsements and ref-values into endorsements -- and their providers are merged accordingly)\r\n2. there are some other clarity issues that popped up in a quick skimming session before submission of -03",
      "createdAt": "2022-09-23T15:01:12Z",
      "updatedAt": "2023-03-29T17:09:08Z",
      "closedAt": "2023-03-29T17:09:08Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Every big topic needs its introduction. E.g. the whole document as discussed in #4\r\n\r\nthe list of topics include:\r\n* CoRIM docuement\r\n* BOM\r\n* CoMID\r\n* reference to CoSWID",
          "createdAt": "2023-01-25T15:57:00Z",
          "updatedAt": "2023-01-25T15:57:00Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Some of the sections referenced in this issue, especially CoRIM Introduction and CoMID Introduction is addressed by:\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/68",
          "createdAt": "2023-03-21T18:31:00Z",
          "updatedAt": "2023-03-21T18:31:00Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOH6-tI85SfUMO",
      "title": "CoMID intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/7",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Provide an introduction to CoMID that contain at least:\r\n\r\n* An overview of the CoMID model\r\n* A big-picture pic of the data structures and their relationships\r\n\r\nAlso think of where to put the triples high level description. Does that go only here or also detailed in \u00a73.1.4 ?",
      "createdAt": "2022-09-23T15:02:16Z",
      "updatedAt": "2023-03-29T17:09:09Z",
      "closedAt": "2023-03-29T17:09:09Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure what a 'category' is in \u00a73.1.4. Also category should be categories in second sentence. The section 3 issue#88 seems to suggest that an overview of the structures / big picture belongs here.",
          "createdAt": "2022-09-23T16:32:05Z",
          "updatedAt": "2022-09-23T16:32:05Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue is addressed by: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/68",
          "createdAt": "2023-03-21T18:29:45Z",
          "updatedAt": "2023-03-21T18:29:45Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOH6-tI85SfuaR",
      "title": "provide description of SVN",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/8",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Describe SVN and \"min\" SVN.",
      "createdAt": "2022-09-23T16:37:40Z",
      "updatedAt": "2023-03-01T15:10:42Z",
      "closedAt": "2023-03-01T15:10:42Z",
      "comments": []
    },
    {
      "number": 9,
      "id": "I_kwDOH6-tI85Sfuo5",
      "title": "Describe raw values types",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/9",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "documentation",
        "mustfix"
      ],
      "body": "Provide a description of the Raw Values types. Also clarify why we need a type choice instead of just raw bytes.",
      "createdAt": "2022-09-23T16:38:41Z",
      "updatedAt": "2024-05-07T09:05:50Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Since this is a section in the I-D, is shouldn't be considered an enhancement.",
          "createdAt": "2023-08-15T19:41:11Z",
          "updatedAt": "2023-08-15T19:41:11Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue also needs to describe the :\r\n\r\n1) What is the role of mask?\r\n\r\n2) How verifier would use the mask during appraisal",
          "createdAt": "2023-08-16T14:30:08Z",
          "updatedAt": "2023-08-16T14:30:08Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOH6-tI85Sfuxe",
      "title": "Describe extensibility",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/10",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "documentation"
      ],
      "body": "Provide a description of the extensibility features of CoRIM & CoMID.\r\n\r\nSpecifically, we need to document:\r\n* CDDL sockets (`$$NAME-extension`) using the new registries\r\n* extensible type choices (`$NAME-type-choice`) using CBOR tags\r\n\r\nBesides, we need to define what we mean by \"standard CoRIM type\" (see the Profile Types section).",
      "createdAt": "2022-09-23T16:39:19Z",
      "updatedAt": "2024-05-07T09:06:46Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Since this is included in the CoRIM text, it shouldn't be considered an enhancement.",
          "createdAt": "2023-08-15T20:42:54Z",
          "updatedAt": "2023-08-15T20:42:54Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @thomas-fossati I think this issue has been addressed. Please revisit and close this!",
          "createdAt": "2024-05-07T09:06:44Z",
          "updatedAt": "2024-05-07T09:06:44Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOH6-tI85Sfu8b",
      "title": "Security and privacy considerations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/11",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "enhancement",
        "mustfix"
      ],
      "body": "Add security and privacy considerations.",
      "createdAt": "2022-09-23T16:40:06Z",
      "updatedAt": "2024-10-09T14:57:46Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Add system security reference to replace the mega bullet list.",
          "createdAt": "2024-10-09T14:57:44Z",
          "updatedAt": "2024-10-09T14:57:44Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOH6-tI85SfvF0",
      "title": "Add meta to the COSE Header Parameters",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/12",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement",
        "preferable first release"
      ],
      "body": "",
      "createdAt": "2022-09-23T16:40:45Z",
      "updatedAt": "2024-05-07T09:09:20Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOH6-tI85SfvYo",
      "title": "CBOR tags registrations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/13",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Populate the table from the contents found in [cbor-tags.txt](https://github.com/ietf-rats/ietf-corim-cddl/blob/main/cbor-tags.txt).  Use the template below.\r\n\r\n| Tag | Data Item | Semantics | Reference |\r\n| --- | --------- | --------- | --------- |\r\n| | | | {{&SELF}} |\r\n",
      "createdAt": "2022-09-23T16:42:02Z",
      "updatedAt": "2023-03-09T18:55:12Z",
      "closedAt": "2023-03-09T18:55:12Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "It is actually https://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/main/cddl/cbor-tags.txt now",
          "createdAt": "2023-03-06T10:04:09Z",
          "updatedAt": "2023-03-06T10:04:09Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOH6-tI85Sfvkm",
      "title": "CoRIM registries",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/14",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "enhancement",
        "mustfix"
      ],
      "body": "Add needed CoRIM registries. Most likely this needs to be just copy-pasted from [-02](https://www.ietf.org/archive/id/draft-birkholz-rats-corim-02.html#section-7).",
      "createdAt": "2022-09-23T16:42:52Z",
      "updatedAt": "2024-08-21T14:13:40Z",
      "closedAt": "2024-08-21T14:13:39Z",
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOH6-tI85Sfvs_",
      "title": "CoMID registries",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/15",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "enhancement",
        "mustfix"
      ],
      "body": "Add needed CoMID registries. Most likely this needs to be just copy-pasted from [-02](https://www.ietf.org/archive/id/draft-birkholz-rats-corim-02.html#section-7).",
      "createdAt": "2022-09-23T16:43:25Z",
      "updatedAt": "2024-08-21T14:13:40Z",
      "closedAt": "2024-08-21T14:13:40Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Codepoints that have been in use and then deprecated (e.g., for triples that have gone out of fashion) need to be marked explicitly as \"reserved\" in the corresponding IANA registries.",
          "createdAt": "2024-07-04T09:30:45Z",
          "updatedAt": "2024-07-04T09:30:45Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOH6-tI85SfwYb",
      "title": "Terminology",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/16",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement",
        "mustfix"
      ],
      "body": "We should provide clear and unambiguous definitions for (at least) the following terms:\r\n\r\n* endorsed values\r\n* reference values\r\n* environments\r\n* triple",
      "createdAt": "2022-09-23T16:46:25Z",
      "updatedAt": "2024-05-07T09:18:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Consider adding 'measurements' and 'class ID' and 'instance ID' as well. \r\n",
          "createdAt": "2022-09-23T19:05:50Z",
          "updatedAt": "2022-09-23T19:05:50Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOH6-tI85Sfw8I",
      "title": "\"update\" triple / linked tag relationship needed ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/17",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "Applying an update requires a way to represent the update to the CoRIM community. The linked-tag-relationship is an existing mechanism that probably should include 'update' as we currently have 'supplements' and 'replaces'. However, the specific details of how to apply the update may require a triple record.",
      "createdAt": "2022-09-23T16:48:43Z",
      "updatedAt": "2022-12-06T09:58:49Z",
      "closedAt": "2022-12-06T09:58:41Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This discussion is now moved to #32",
          "createdAt": "2022-12-06T09:58:41Z",
          "updatedAt": "2022-12-06T09:58:49Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOH6-tI85SfxNd",
      "title": "profile should include a digest?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/18",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "question",
        "For-next-release"
      ],
      "body": "The profile-type-choice is an identifier (uri / oid) only. It should allow for a digest of the profile that can be integrity checked. Alternatively, the profile could be included directly in the RIM. This approach might extend $concise-tag-type-choice that defines a profile structure in which case the corim.profile element might be omitted.\r\n\r\nIf the profile is realized as a machine readable file (e.g. cddl) then the profile ID also should have a locator which may require a digest for integrity checking.\r\nNote: Profile could extend CoRIM and could be included in the CoRIM.",
      "createdAt": "2022-09-23T16:49:55Z",
      "updatedAt": "2024-05-07T09:17:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOH6-tI85ShEzE",
      "title": "measurement authorization support",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/20",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "It is possible for not-well-behaved suppliers (endorsers / ref-val-providers) could assert authorship of reference values over another supplier who believes they have authorship privilege. A Verifier can detect this situation if the RIM issuing CA (or a higher level CA) ensures that the entity authorized to author reference values is named by the RIM. \r\n\r\nThe measurement-map can be extended with a statement that names the authoring entity as in:\r\n```\r\nmeasurement-map = {\r\n...\r\n? comid.authorized-by => [ + $crypto-key-type-choice ]\r\n}\r\n$crypto-key-type-choice /= tagged-pkix-base64-key-type\r\n$crypto-key-type-choice /= tagged-pkix-base64-cert-type\r\n$crypto-key-type-choice /= tagged-pkix-base64-cert-path-type\r\n```\r\nGiven the $crypto-key-type-choice names the supply chain entity that is authorized to provide measurements. If the certificate path used to sign the RIM includes a statement that acknowledges that entity as the measurement authoring authority, then Verifiers can check for consistency. \r\n\r\nAn attacker would have to convince the top level CA to grant it measurement issuing authority for the same set of measurements as the the other supplier or compromise the top level CA. ",
      "createdAt": "2022-09-23T22:47:00Z",
      "updatedAt": "2022-10-04T18:35:41Z",
      "closedAt": "2022-10-04T18:35:41Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "I_kwDOH6-tI85S4_RF",
      "title": "Provide a CDDL definition of SW Update Flow",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/21",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently the existing CoRIM schema does not lend itself to natural expression for Providing Endorsements for SW updates.\r\n\r\nThis issue tracks the further work required in this area!",
      "createdAt": "2022-09-29T10:57:22Z",
      "updatedAt": "2022-12-06T10:00:40Z",
      "closedAt": "2022-12-06T10:00:40Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Here is the proposed flow:\r\n\r\n1) Each Measured Component/Layer within the device has its Reference Values expressed in a Reference Triple Record as below:\r\n\r\n```\r\n; REFERENCE-VALUE triple\r\n; \"target environment $TE\" \"has reference measurements\" \"$RV\"\r\nreference-triple-record = [\r\n  environment-map ; target environment\r\n  [ + measurement-map ] ; reference measurements\r\n]\r\n```\r\nHere \"Target Environment\" is the Identifier for the Reference Measurements\r\n\r\n2) A Device is composed of a set of Components/layers which is expressed with Domain Membership Triple\r\n\r\n```\r\n; DOMAIN-MEMBERSHIP-TRIPLE-RECORD\r\n; Predicate: $TD Target domain has member environment(s) $EV\r\n\r\n$$triples-map-extension //= ( \r\ncomid.domain-membership-triples => domain-membership-triple-record \r\n)\r\ncomid.domain-membership-triples = 5\r\n\r\ndomain-membership-triple-record = [\r\n $domain-type-choice, [ + environment-map ]\r\n]\r\n```\r\n\r\n3) When a Device Component/layer has a SW Update: It first pushes a new REFERENCE VALUE Triple Record, as below:\r\n\r\n```\r\n; REFERENCE-VALUE triple\r\n; \"target environment $TE\" \"has reference measurements\" \"$RV\"\r\nreference-triple-record = [\r\n  environment-map ; target environment\r\n  [ + measurement-map ] ; reference measurements\r\n]\r\n```\r\n\r\n4) Then it pushes a new Update Triple Record which associates new Environment to the Old Environment.\r\n```\r\n$$triples-map-extension //= ( \r\ncomid.environment-update-triples => environment-update-triple-record \r\n)\r\n\r\ncomid.environment-update-triples = 6\r\n\r\n; \"target environment $TE\" updates one or more existing environments.\r\nenvironment-update-triple-record  = [\r\nenvironment-map ; target environment\r\n [ +environment-map   ]\r\n]\r\n```\r\n**TBD:** Should we restrict update from just one environment or to allow update of 1+ environments\r\n\r\n5) After a successful Update in 4 an explicit \"Environment Blocklist Triple\" might be sent by Endorser to remove certain Environments from the Domain, after a successful Update.  CDDL for the same is listed below:\r\n\r\n```\r\n; ENVIRONMENT-BLOCKLIST-TRIPLE-RECORD\r\n; Predicate: $TD Target domain has member environment(s) removed from the supply chain $EV\r\n\r\n$$triples-map-extension //= ( \r\ncomid.environment-blocklist-triples => environment-blocklist-triple-record \r\n)\r\ncomid.environment-blocklist-triples = 7\r\n\r\nenvironment-blocklist-triple-record = [\r\n $domain-type-choice, [ + environment-map ]\r\n]\r\n```",
          "createdAt": "2022-09-29T12:54:48Z",
          "updatedAt": "2022-09-29T14:50:49Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Possibly user can use the Ref Triple with same Env ID and different Measurements, and update it to Verifier\r\nThen use the Updates Triple with same Env ID in both target and source",
          "createdAt": "2022-09-29T17:03:05Z",
          "updatedAt": "2022-09-29T17:03:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There is potentially a 'CRUD' lifecycle consideration for each structure described by CoRIM (e.g., RIM, tag, domain, environment, measurement and triple). An \"update\" potentially could change any of these structures. It makes sense to describe updates in terms of CRUD semantics for each statement in the schema. Maybe only C and D are valid lifecycle considerations? Given U semantics means 'changes' rather than 'adds', an \"update\" might include any of C, U and D for a given statement. \r\n\r\nMaybe this suggestion exceeds the scope of this issue, but maybe there should be separate issues created for each statement type in CoRIM that considers CRUD semantics? Then this issue could address mapping an \"update\" to the various places within CoRIM that define CRUD semantics.",
          "createdAt": "2022-09-29T18:01:35Z",
          "updatedAt": "2022-09-29T18:01:35Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Currently the existing CoRIM schema does not lend itself to natural expression for Providing Endorsements for SW updates.\r\n> \r\n> This issue tracks the further work required in this area!\r\n\r\nI think there should be separate issues for CoMID and CoSWID related update handling. CoSWID already uses a relationship approach and defines a number of relationship types (supplemental, patch, update, etc...). ",
          "createdAt": "2022-09-29T18:08:00Z",
          "updatedAt": "2022-09-29T18:51:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It should be possible to update a component and corresponding measurement without rolling class-id. The class-id may describe the component's long-lived (strawman) relationship to other components. The strawman definition should not be forced to change every time a measurement value changes. In this use case, different class-map identifiers are essentially aliases for the original. Aliases indicate that some sort of measurement change occurred, but greater analysis is needed to determine if substantive change to the strawman definition of the component has not changed. Another reason to allow 'alias' class-maps is the way an organization manages class identifiers could change over time moving from say ('vendor', 'model', 'index') to ('class-id'=UUID) or ('class-id'=OID). These are alias changes that don't affect the strawman definition.\r\n\r\nAllowing the strawman to change is also a valid use case. If it is determined that the strawman should add / remove a feature (e.g., add a finger or remove a finger). Then a new class-map value indicates an addition, removal of a class-map value indicates deletion. It is important that this type of addition/deletion isn't confused with the above paragraph alias use case.\r\n",
          "createdAt": "2022-10-03T21:23:04Z",
          "updatedAt": "2022-10-03T21:23:04Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @henkbirkholz @thomas-fossati Based on our earlier discussion I propose an alternative better strategy which addresses some of the concerns above and tries to capture the SW Update Flow in a more coherent manner!\r\n\r\n```\r\n$identifier-type-choice /= tstr\r\n$identifier-type-choice /= \"reference-value\"\r\n$identifier-type-choice /= \"endorsed-value\"\r\n\r\n; it is expected that when the user uses this map \r\n; in the subject environment map needs to be present\r\nidentifier-map = non-empty<{\r\n  &(type:0) => $identifier-type-choice\r\n  ? &(env: 1) => environment-map\r\n  &(mkey : 2) ==> $measured-element-type-choice\r\n}>\r\n\r\n; for a given supply chain entity an identifier updates one or more identifiers\r\n; if this triple record is not supplied in a CoRIM then it is assumed that the \r\n; newly added reference or endorsed value (via reference-triple-record/endorsed-triple-record)\r\n; Has an Update path to any other ref/end value in the Verifier.\r\n\r\n; The triple below sets the relationship explicitly \r\nupdate-triple-record = [\r\n    identifier-map\r\n    [+ identifier-map]\r\n]\r\n\r\n==============================================================================\r\n; explicit removal of old reference values or endorsed values \r\nblacklist-triple-record = non-empty<{\r\n  environment-map\r\n  [+ identifier-map]\r\n}\r\n```\r\n",
          "createdAt": "2022-11-16T14:16:12Z",
          "updatedAt": "2022-11-16T20:21:33Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposed solution above is aligned with the core principles laid down in Attestation Architecture.\r\n\r\nA domain has Multiple Environments  - identified uniquely by Environment Identifiers ( Example Class Id)\r\nIt is the individual Environments which are measured by a set of Reference Values and Endorsed Values\r\n\r\nFor a particular Environment, Say `Env-X` A particular Reference Value may Change. Stated Alternatively for a Reference Value Identified by a Id, the value of Reference may change. \r\n\r\nOne does not need to change Environment Identifier even if any Endorsed Value or Reference Value changes.\r\n\r\nThe new approach approach solves the issue identified in the earlier solution (Stated at the top of the issue), where each measurement is associated with Id identified as Environment. Thus each time a measurement changes, will introduce a new Environment ID, which is unsustainable, as highlighted below:\r\n _The class-id may describe the component's long-lived (strawman) relationship to other components. The strawman definition should not be forced to change every time a measurement value changes. This would lead to a sea of Environments which are constantly changing. This makes the Device Composition Impractical and impossible to compose_\r\n",
          "createdAt": "2022-11-16T16:31:10Z",
          "updatedAt": "2022-11-16T16:37:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "a bunch of fly-by comments\r\n\r\n> $identifier-type-choice /= tstr $identifier-type-choice /= \"reference-value\" $identifier-type-choice /= \"endorsed-value\"\r\n\r\nthese could/should be numeric identifiers\r\n\r\n> ; it is expected that when the user uses this map ; in the subject environment map needs to be present identifier-map = non-empty<{ &(type:0) => $identifier-type-choice ? &(env: 1) => environment-map &(mkey : 2) ==> $measured-element-type-choice }>\r\n\r\nusing the term \"identifier\" has very little meaning, identifier of what exactly?\r\n\r\n> ; for a given supply chain entity an identifier updates one or more identifiers ; if this triple record is not supplied in a CoRIM then it is assumed that the ; newly added reference or endorsed value (via reference-triple-record/endorsed-triple-record) ; Has an Update path to any other ref/end value in the Verifier.\r\n> \r\n> ; The triple below sets the relationship explicitly update-triple-record = [ identifier-map [+ identifier-map] ]\r\n> \r\n> ============================================================================== ; explicit removal of old reference values or endorsed values blacklist-triple-record = non-empty<{ environment-map [+ identifier-map] }\r\n\r\nyou haven't followed the \"terminology\" thread in the IETF :-)",
          "createdAt": "2022-11-16T17:42:27Z",
          "updatedAt": "2022-11-16T17:42:27Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> terminology\r\n\r\nusing the term \"identifier\" has very little meaning, identifier of what exactly?\r\nOne has to unpack the identifier-map to understand for what this identifier belongs to:\r\n\r\nIt is the identifier type ==> that establishes the identifier name, it could be either the reference-value or endorsed-value\r\nAnd the Environment and Measurement Identity completes its value\r\n\r\n\r\n",
          "createdAt": "2022-11-16T17:50:48Z",
          "updatedAt": "2022-11-16T17:50:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> One has to unpack the identifier-map to understand for what this identifier belongs to:\r\n> It is the identifier type ==> that establishes the identifier name, it could be either the reference-value or endorsed-value\r\n> And the Environment and Measurement Identity completes its value\r\n\r\nmeasurement identifier then?",
          "createdAt": "2022-11-16T18:27:24Z",
          "updatedAt": "2022-11-16T18:27:24Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "```\r\nidentifier-map = non-empty<{\r\n  &(type:0) => $identifier-type-choice\r\n  ? &(env: 1) => environment-map\r\n  &(mkey : 2) ==> $measured-element-type-choice\r\n}>\r\n```\r\n\r\nis a stray/unqualified mkey ok?",
          "createdAt": "2022-11-16T18:28:01Z",
          "updatedAt": "2022-11-16T18:28:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > One has to unpack the identifier-map to understand for what this identifier belongs to:\r\n> > It is the identifier type ==> that establishes the identifier name, it could be either the reference-value or endorsed-value\r\n> > And the Environment and Measurement Identity completes its value\r\n> \r\n> measurement identifier then?\r\n\r\nok, we can think of a name that is applicable to both ref values and endorsed values",
          "createdAt": "2022-11-16T18:30:18Z",
          "updatedAt": "2022-11-16T18:30:18Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> ```\r\n> identifier-map = non-empty<{\r\n>   &(type:0) => $identifier-type-choice\r\n>   ? &(env: 1) => environment-map\r\n>   &(mkey : 2) ==> $measured-element-type-choice\r\n> }>\r\n> ```\r\n> \r\n> is a stray/unqualified mkey ok?\r\n\r\nNot sure I fully understood the question?\r\n\r\nIt is expected that the Supply Chain entity will use the same `mkey`  that it used to provision the updated ref-val or end-val\r\n",
          "createdAt": "2022-11-16T18:34:52Z",
          "updatedAt": "2022-11-16T18:34:52Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > ```\r\n> > identifier-map = non-empty<{\r\n> >   &(type:0) => $identifier-type-choice\r\n> >   ? &(env: 1) => environment-map\r\n> >   &(mkey : 2) ==> $measured-element-type-choice\r\n> > }>\r\n> > ```\r\n> >   \r\n> > is a stray/unqualified mkey ok?\r\n> \r\n> Not sure I fully understood the question?\r\n\r\nI meant: if `env` is optional, it seems you want to allow `mkey`s that are not anchored onto a parent environment.\r\n",
          "createdAt": "2022-11-16T18:49:12Z",
          "updatedAt": "2022-11-16T18:49:53Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah now I got the point. Thanks. Yes, I wanted to make the Env-map mandatory! Happy to do that in fact!\r\nBut when the new update id updates many id's on th right then Env-map becomes repetitive which is a slight distraction.\r\n\r\nAnd I do not want to have many more maps, so this is a dilemma\r\n\r\nHappy to make it mandatory!",
          "createdAt": "2022-11-16T18:52:34Z",
          "updatedAt": "2022-11-16T18:52:34Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This has now morphed into the x- triples discussion (see #32)",
          "createdAt": "2022-12-06T10:00:40Z",
          "updatedAt": "2022-12-06T10:00:40Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOH6-tI85T2MnO",
      "title": "multi-valued vs. time series measurements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/24",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "reference, endorsed, and reference-endorsed triples support the idea that the object of the triple can be multi-valued. There are two use cases for its use. (a) when there are multiple of the same type measurements. For example, 'digest' or 'raw-value-group' where evidence is constructed so that the first digest is in the first array position and the second digest is in the second array position. Otherwise, the digests are not named (that is they share the same environment-map identity).\r\n\r\nIn the time series use case there is a single evidence value that is compared across multiple reference values. Reference values are ordered according to the series semantics (e.g., time) such that the measurement at position 0 is compared first, then the measurement at position 1 and so forth. \r\n\r\nThe verifier is undecided which comparison algorithm to apply unless the triple contains extra information. It is possible to use mkey to supply the extra information, but mkey (as part of measurement-map) should expect to match an mkey in Evidence as it becomes part of the evidence matching logic. Additionally, if mkey is deprecated this approach is no longer available to disambiguate the use cases. \r\n\r\nA solution should include, at least, a boolean that indicates whether to apply time series vs. multi-valued attributes semantics. \r\nIt is best to keep it independent from the environment-map and the measurement-map structures as these carry matching semantics overhead.\r\n\r\nPossible solutions:\r\n(a) Add a flag for series:\r\n```\r\nreference-triple-record = [\r\n  environment-map\r\n  [ + measurement-map ]\r\n]\r\n```\r\n\r\n```\r\nmeasurement-map = {\r\n  ? &(series: 0) => bool .default false\r\n  &(mval: 1) => measurement-values-map\r\n  ? &(authorized-by: 2) => [ + $crypto-key-type-choice ]\r\n}\r\n```\r\n\r\n(b) Add another level of array:\r\n```\r\nmeasurement-map = {\r\n  &(mval: 1) => [ + measurement-values-map ] ; If multiple array entries exist then apply series comparison semantics\r\n  ? &(authorized-by: 2) => [ + $crypto-key-type-choice ]\r\n}\r\n```\r\n(c) Don't deprecate mkey:\r\n```\r\nmeasurement-map = {\r\n  ? &(mkey: 0) => $measured-element-type-choice\r\n  &(mval: 1) => measurement-values-map\r\n  ? &(authorized-by: 2) => [ + $crypto-key-type-choice ]\r\n}\r\n$measured-element-type-choice /= bool .default true ; only use the flag when series semantics are desired\r\n```\r\n",
      "createdAt": "2022-10-12T19:40:13Z",
      "updatedAt": "2023-01-23T21:52:17Z",
      "closedAt": "2023-01-23T21:51:50Z",
      "comments": [
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "There is another possible solution, to have an optional dedicated second list of measurement-maps dedicated for time series:\r\n\r\n(d) Dedicated time series list:\r\n\r\nreference-triple-record = [\r\n  environment-map\r\n  [ * measurement-map ] ; multi-valued list, which can be an empty list\r\n  ? [ + measurement-map ] ; If this second list is present, it contains a time series of measurement-maps\r\n]\r\n\r\nIf each entry in a time series should be a multi-valued list, then the definition will be:\r\n\r\nreference-triple-record = [\r\n  environment-map\r\n  [ * measurement-map ] ; multi-valued list, which can be an empty list\r\n  ? [ + [ + measurement-map] ] ; If this second list is present, it contains a time series of measurement-map lists.\r\n]\r\n\r\nTo minimize change to the existing reference-trip-record definition, one option is to only add time series support in the new reference-endorsed-triple-record in pull-request 23.",
          "createdAt": "2022-10-28T22:36:32Z",
          "updatedAt": "2022-11-02T18:10:12Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue #24 should be considered in context with issue #2 as both conditional endorsements and time series use cases can exist simultaneously.",
          "createdAt": "2022-11-17T18:47:51Z",
          "updatedAt": "2022-11-17T18:47:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "After today's discussion, people are leaning toward option (b) - adding a nested array that contains time series and relying on array indies for sequencing. However, the exact triple definition should incorporate thinking from issue #2.",
          "createdAt": "2022-11-17T18:57:21Z",
          "updatedAt": "2022-11-17T18:57:21Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "Option (b) sounds fine. With issue #2 incorporated, will the triple definitions be something like below?\r\n\r\n```\r\n$$triples-map-extension //= (\r\n  comid.reference-endorsed-triples => [ + reference-endorsed-triple-record ]\r\n)\r\ncomid.reference-endorsed-triples = 7\r\n\r\nreference-endorsed-triple-record = [\r\n  environment-map ; identifies the target environment\r\n  [ + reference-endorsed-measurement-map ] ; reference values with endorsed values\r\n]\r\n\r\nreference-endorsed-measurement-map = {\r\n  &(mval: 1) => [ + measurement-values-map ] ; If multiple array entries exist then apply series comparison semantics\r\n  ? &(authorized-by: 2) => [ + $crypto-key-type-choice ]\r\n}\r\n\r\nreference-endorsed-measurement-map = {\r\n  &(ref-vals :0) => [ +  measurement-values-map ]\r\n  &(end-vals :1) => [ + measurement-values-map ]\r\n}\r\n```\r\n",
          "createdAt": "2022-11-19T05:02:14Z",
          "updatedAt": "2022-11-19T05:02:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There\u2019s a definition similar to that in a branch but it lacks ref/end-Val\u2019s as array for time series use case.",
          "createdAt": "2022-11-19T18:10:40Z",
          "updatedAt": "2022-11-19T18:10:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Another refinement round.\r\n\r\nThe triple _subject_ is a compound structure consisting of an environment identifier plus measurements that, when matched to evidence, is a condition of the _object_.\r\nThe _object_ is a time series of conditional reference and endorsed triples\r\n```\r\nconditional-reference-series-triple-record = [\r\n  [ \r\n    environment-map,\r\n    measurement-map / measurement-values-map\r\n  ] ; triple subject is a compound statement\r\n  [ + reference-endorsed-record ] ; triple object is a series\r\n]\r\n \r\nreference-endorsed-record = [\r\n  measurement-map / measurement-values-map  ; reference values\r\n  ? measurement-map / measurement-values-map  ; conditionally endorsed values, could be empty, but still a valid expression in a series\r\n]\r\n```",
          "createdAt": "2022-12-07T18:45:52Z",
          "updatedAt": "2022-12-07T18:45:52Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "An `x-conditional-reference-series-triple-record` should be defined also",
          "createdAt": "2022-12-07T18:47:22Z",
          "updatedAt": "2022-12-07T18:47:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "resolved by PR #36",
          "createdAt": "2022-12-07T22:45:14Z",
          "updatedAt": "2022-12-07T22:45:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved by PR #36 - closing issue.",
          "createdAt": "2023-01-23T21:52:17Z",
          "updatedAt": "2023-01-23T21:52:17Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOH6-tI85XKr4F",
      "title": "the CI must check the examples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/27",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "bug"
      ],
      "body": "The top-level Makefile does not invoke the `check-co{rim,mid}-examples` targets in the cddl folder.  As a result the examples are not checked as part of the CI execution.",
      "createdAt": "2022-11-23T21:18:56Z",
      "updatedAt": "2023-03-08T15:27:27Z",
      "closedAt": "2023-03-08T15:27:27Z",
      "comments": []
    },
    {
      "number": 29,
      "id": "I_kwDOH6-tI85XTPuT",
      "title": "CoRIM should allow at most one profile",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/29",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "Currently we allow 0..n profile(s) in the CoRIM.\r\n\r\nThere is no way a receiver can unambiguously identify which profile applies to which of the embedded CoMIDs / CoSWIDs, which makes the ingestion process unnecessarily brittle.\r\n\r\nWe should allow 0..1 instead, and explain that - if present - the profile applies to *all* the embedded CoMIDs & CoSWIDs.",
      "createdAt": "2022-11-25T15:03:53Z",
      "updatedAt": "2023-02-28T10:17:02Z",
      "closedAt": "2023-02-28T10:17:02Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "If profile A and profile B are part of the same Attester then an implementation that supports A also must support B. In this scenario, the subset of tags/triples that aligns with B would be required to be placed in a separate RIM. The verifier would check signatures for both and bring both into its internal set given some evidence conforms to A and some to B. \r\nThe net is verifier does extra work checking signatures for no reduction in complexity. ",
          "createdAt": "2022-11-25T19:39:27Z",
          "updatedAt": "2022-11-25T19:39:27Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "A profile defines the domain of interpretation of what's found in the CoRIM bag.  If a CoRIM declares profile A as well as B then, when processing the embedded CoMID/CoSWID, the ingest logics needs to apply heuristics to decide whether the CoMID is to be interpreted according to A or B.  This becomes a real pain in the neck especially when A and B are quite but not exactly the same, in which case the risk for the heuristic to fire a false positive are pretty high.  Given the potential security risk associated with erroneous ingest of ref-vals & co, I'd rather err on the side of caution and accept the potential double signature penalty.\r\n",
          "createdAt": "2022-11-25T20:55:06Z",
          "updatedAt": "2022-11-25T20:55:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Right. That\u2019s a reasonable trade off.\r\n\r\nSent from my iPhone\r\n\r\nOn Nov 25, 2022, at 12:55 PM, Thomas Fossati ***@***.***> wrote:\r\n\r\n\ufeff\r\n\r\nA profile defines the domain of interpretation of what's found in the CoRIM bag. If a CoRIM declares profile A as well as B then, when processing the embedded CoMID/CoSWID, the ingest logics needs to apply heuristics to decide whether the CoMID is to be interpreted according to A or B. This becomes a real pain in the neck especially when A and B are quite but not exactly the same, in which case the risk for the heuristic to fire a false positive are pretty high. Given the potential security risk associated with erroneous ingest of ref-vals & co, I'd rather err on the side of caution and accept the potential double signature penalty.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/29#issuecomment-1327881302>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSAGNQ5TWSEVURUCPOTWKERTJANCNFSM6AAAAAASLMZD4A>.\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n",
          "createdAt": "2022-11-26T02:21:48Z",
          "updatedAt": "2022-11-26T02:21:48Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOH6-tI85YClUO",
      "title": "clarify CoRIM scope and their relationship with HBOM/SBOM",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/30",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Systems that build CoRIM might also be involved in building BOMs.  We should make it clear that although such systems are likely to use the same input data, CoRIM and BOMs are different objects, with separate scope/applicability.  A CoRIM serves the quite specific purpose of describing RATS target and attesting environments, in terms of their shape and aggregation, to attestation verifiers.  This generally involves a different level of abstraction than that required for a BOM.\r\n\r\n\r\n",
      "createdAt": "2022-12-05T17:37:03Z",
      "updatedAt": "2023-01-23T21:55:29Z",
      "closedAt": "2023-01-23T21:55:29Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Close as this is being tracked by issue #40",
          "createdAt": "2023-01-23T21:55:29Z",
          "updatedAt": "2023-01-23T21:55:29Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOH6-tI85YCsDj",
      "title": "define matching rules for the \"base\" profile (i.e., DICE)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/31",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith",
        "andrew-draper"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "We must clarify how a receiver is supposed to process unknown semantics.\r\n\r\nCurrently CoRIM does not have a way to say: _\"if you don\u2019t understand this triple you should abort processing, because it contains critical semantics.\"_\r\n\r\nThe implicit assumption (which we should clearly state) is that any such decision belongs to the definition of a CoRIM profile.\r\n\r\nAdditionally, we need to say\r\n1. what is the default behaviour that all profiles should implement\r\n2. what to do if a profile is not specified",
      "createdAt": "2022-12-05T17:56:03Z",
      "updatedAt": "2024-07-31T14:57:32Z",
      "closedAt": "2024-07-31T14:57:32Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed.  We should define the \"default profile\" matching rules in the CoRIM base spec.  Other CoRIM profiles MUST define their own matching rules, including handling optionality, cardinality, etc. in their own spec.",
          "createdAt": "2022-12-07T15:23:20Z",
          "updatedAt": "2022-12-07T15:23:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "todo: document a verification flow that treats DICE matching as the default profile where DICE tcbinfo and concise-evidence are evidence inputs and corim is the endorsement and reference values inputs.",
          "createdAt": "2022-12-14T15:53:15Z",
          "updatedAt": "2022-12-14T15:53:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Noting: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Notes-on-the-appraisal-flow ",
          "createdAt": "2023-02-27T19:45:57Z",
          "updatedAt": "2023-02-27T19:45:57Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "https://ietf-rats-wg.github.io/draft-smith-rats-evidence-trans/draft-smith-rats-evidence-trans.html",
          "createdAt": "2024-07-31T14:57:32Z",
          "updatedAt": "2024-07-31T14:57:32Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOH6-tI85YDIOK",
      "title": "Triple lifecycle - revocation at triple-level granularity",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/32",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "xcorim is current method for revoking statements in a CoRIM. It is applied at RIM granularity, meaning all tags (and by extension all triples) in the RIM will be marked by Verifiers as 'revoked'. \r\nRevocation at triple-level granularity in the form of \u2018x-<triple-name>\u2019 would offer greater precision in revoking statements (assertions) that are no longer true. \r\n\r\nThe current semantics for additional triples over the same triple subject (e.g., environment) are that these statements are additive to any previously asserted statements. Hence, issuing a 'new' triple doesn't have the semantics of replacing/invalidating the previous triple.\r\n\r\nWhile it may be possible to use x-triples to revoke all triples in a RIM, don\u2019t yet know if it makes sense to stop supporting xcorim as it addresses the use case where a RIM signing key is abused (but not where a private key is compromised), and an efficient method for walking back the abuse is needed / desirable.\r\n\r\nThe x-triple method is roughly characterized by creating a triple record that is identical to an existing triple record except for prepending 'x-' to the triple name and adding the field `x-reason` that identifies the reason for revoking the statement.\r\n\r\nFor example the triple:\r\n```\r\nreference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n]\r\n```\r\nmight have a revocation triple of the form:\r\n```\r\nx-reference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n  ? refval-x-reason\r\n]\r\n\r\n$refval-x-reason /= obsolete\r\n$refval-x-reason /= insecure\r\n```\r\nThere should be a discussion as to whether x-reason should be optional.",
      "createdAt": "2022-12-05T18:58:53Z",
      "updatedAt": "2024-05-07T09:19:48Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "As an aside the lifecycle for triples might be:\r\n\r\nCreate\r\nRevoke\r\nEvaluate\r\nDelete",
          "createdAt": "2022-12-05T21:24:00Z",
          "updatedAt": "2022-12-05T21:24:00Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed:\r\n\r\n* x-reasons are specific to each `x-` triple\r\n* x-reason is mandatory for each `x-` triple\r\n* all x-reason type choices are extensible\r\n* when a triple is defined, its `x-` twin must also be defined (or at least considered)\r\n\r\n\r\nSome examples for existing triples:\r\n```\r\nx-reference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n  $refval-x-reason\r\n]\r\n \r\n$refval-x-reason /= obsolete\r\n$refval-x-reason /= insecure\r\n[...]\r\n```\r\n \r\nFor verification keys:\r\n```\r\nx-attest-key-triple-record = [\r\n  environment-map\r\n  [ + $crypto-key-type-choice ]\r\n  $attest-key-x-reason\r\n]\r\n \r\n$attest-key-x-reason /= decommissioned\r\n$attest-key-x-reason /= compromised\r\n[...]\r\n```",
          "createdAt": "2022-12-07T15:38:20Z",
          "updatedAt": "2022-12-07T15:39:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The range of possible reason codes is infinite and the semantics behind each reason code is defined by a specification, whether it is a standards document, profile, or other. \r\n\r\nDo it make sense to leave it this open ended? Ideally the reason doesn't affect Verifier behavior except when an Appraisal policy for Evidence is used that keys off of the reason code. \r\nIf the reason code implies changed Verifier behavior independent of a policy, then there should be some way to indicate this so that verifiers can all have consistent behavior. The examples above all have the same outcome, which is the 'x-' form of the triple causes Evidence matching to fail if matched. Compare this to 'delete' where the triple is removed from the Verifier's list. Evidence that doesn't match a Reference Value doesn't necessarily result in appraisal failure. Instead, they are held in reserve until the appraisal concludes and if the Attester is trusted the unmatched Evidence measurements are added to the appraised claims list and accepted as truth. ",
          "createdAt": "2022-12-08T17:30:06Z",
          "updatedAt": "2022-12-08T17:30:06Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed (12/14/2022) it is ok to have an open type for the x-reason.  The policy must be written so that it catches an unknown x-reason and, when it does, it defaults to some sensible behaviour.",
          "createdAt": "2022-12-14T16:00:05Z",
          "updatedAt": "2022-12-14T16:00:05Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOH6-tI85YDNpR",
      "title": "Triple lifecycle - deletion",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/33",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "There is a need to consider triple lifecycle e.g., CRUD where deletion at the triple level of granularity may be appropriate.\r\n\r\nDelete should happen only if there is an error in the production of the CoRIM. Revocation is used when a triple assertion is de-asserted. \r\n\r\nThe existing CoMID has a \u2018replaces\u2019 relationship reason at the tag level of granularity. Is this adequate, or do we need a triple level deletion mechanism?\r\n\r\nAs an aside the lifecycle for triples might be:\r\n- Create\r\n- Revoke\r\n- Update\r\n- Delta update\r\n- Evaluate?\r\n- Delete",
      "createdAt": "2022-12-05T19:11:19Z",
      "updatedAt": "2024-05-07T09:16:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "ACTION: document the semantic effects at the triple level of a \"replaces\" at the tag level (i.e., delete + create).",
          "createdAt": "2022-12-07T15:51:09Z",
          "updatedAt": "2022-12-07T15:51:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: 'delete' semantics may be characterized as an action that removes the triple from the Verifier's list. Evidence that doesn't match a Reference Value doesn't necessarily result in appraisal failure. Instead, they are held in reserve until the appraisal concludes and if the Attester is trusted the unmatched Evidence measurements are added to the appraised claims list and accepted as truth.",
          "createdAt": "2022-12-08T17:31:45Z",
          "updatedAt": "2022-12-08T17:31:45Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "I_kwDOH6-tI85YEKzC",
      "title": "Triple lifecycle - Evaluation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/34",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "In the context of defining a triples lifecycle model such as:\r\n- create\r\n- revoke\r\n- evaluate\r\n- delete \r\nThe Evaluate step is probably least well defined. There is a recurrent debate around the static/dynamic nature of CoRIM. \r\nThere may be two cases for Evaluate semantics, \r\n\r\n1. Reference values are not \u2018exact match\u2019 wrt evidence values. That is to say reference measurements are of a different form than evidence measurements and Verifier matching is 'exact' matching. For example, a match could be true if evidence is with in a range of values.\r\n2. One triple is used to define evidence while a different triple is needed for reference values.The \u2018reference\u2019 triple has predicate semantics and possibly subject / object syntax that are inappropriate for both reference and evidence.\r\n\r\nThere could be more to the evaluation as a result of Appraisal Policy for Evidence but use cases are needed.  Possibly the trust anchors addition to CoRIM is one? \r\n\r\nGiven there may be a small collection of related triples - a 'family' of triples, the logic that relates the \u2018family\u2019 of triples may appropriately be  Evaluation stage.\r\n\r\nA state transition diagram might be:\r\nC -> D, R, E\r\nR -> D\r\nE -> R, D",
      "createdAt": "2022-12-05T21:37:01Z",
      "updatedAt": "2024-05-07T09:16:57Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 35,
      "id": "I_kwDOH6-tI85YLHkm",
      "title": "Triple lifecycle - full vs delta updates",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/35",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "We should have a way to indicate whether a CoRIM provides a delta update -- i.e., an entry in the update sequence (e.g., $\\delta_n$ in the chain: $\\delta_{1} \\leftarrow \\delta_{2} \\leftarrow \\ldots \\leftarrow \\delta_{n}$) --, or the full set of deltas in one go, i.e. the whole chain.\r\nThe `updates` link relation should be used to create the linked CoRIMs list in the former case.\r\n\r\n",
      "createdAt": "2022-12-06T14:58:35Z",
      "updatedAt": "2024-05-07T09:16:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Off-topic test:\r\n\r\nSolid solution strenghtening: $\\Delta \\sigma_y = Gb{\\sqrt {C}}\\epsilon^{(3/2)}$",
          "createdAt": "2022-12-07T16:01:12Z",
          "updatedAt": "2022-12-08T17:50:12Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Noting that we decided that each type of tag should have its own lifecycle model. We also determined that CoRIM has its own lifecycle as well. CoRIM prose should have a section on lifecycles to document these decisions and introduce subsections for tag specific lifecycle documentation.",
          "createdAt": "2023-01-25T16:20:03Z",
          "updatedAt": "2023-01-25T16:20:03Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOH6-tI85YqHd0",
      "title": "corim-frags.mk for easier use in submodules",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/39",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith",
        "thomas-fossati"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "corim-frags.mk lists the names of cddl files used to capture the various corim statements. When draft-ietf-rats-corim repo is a submodule to another repo, the list of cddl files are builid dependencies for profiles that depend on them. The list of dependencies needs to be updated if the corim repo updates the list.\r\n\r\nIt is difficult to reuse the corim-frags.mk file in  a parent makefile because the pathnames default to the current folder. If the corim-frags.mk included a pathname macro then the parent makefile could define the pathname macro. \r\n\r\nFor example if an entry in corim-frags.mk was something like `CORIM_FRAGS += $(CORIM_DIR)/corim.cddl` and the parent makefile defined `CORIM_DIR := draft-ietf-rats-corim/cddl` then when the corim-frags.mk is imported into the parent makefile, the correct submodule path to the dependent files could be added without reentering a long list of dependencies.",
      "createdAt": "2022-12-09T20:47:52Z",
      "updatedAt": "2023-03-01T15:17:29Z",
      "closedAt": "2023-03-01T15:17:29Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Unless I've misunderstood your requirement, it seems to me that what you want could be achieved without needing to fiddle with the CoRIM build system:\r\n\r\nFor example, if your dependent project includes this repo in a sub-folder named `corim-base`:\r\n\r\n```sh\r\n\u251c\u2500\u2500 Makefile\r\n\u251c\u2500\u2500 corim-base\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CONTRIBUTING.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Gemfile\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 LICENSE.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Makefile\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cddl\r\n...\r\n\u2514\u2500\u2500 my-comid-extn.cddl\r\n```\r\n\r\nand your `my-comid-extn.cddl` is something like:\r\n```cddl\r\nmy-comid-extn = {\r\n  0 => \"my CoMID extn\"\r\n  1 => concise-mid-tag\r\n}\r\n```\r\n\r\nthen you can drive the build process with a `Makefile` that looks like:\r\n```make\r\nall: autogen.cddl\r\n\r\nCORIM_BASE := corim-base/cddl/\r\n\r\ninclude $(CORIM_BASE)comid-frags.mk\r\n\r\nREL_COMID_FRAGS := $(addprefix $(CORIM_BASE),$(COMID_FRAGS))\r\n\r\nCOSWID := $(CORIM_BASE)/concise-swid-tag.cddl\r\n\r\n$(COSWID): ; $(MAKE) -C $(CORIM_BASE)\r\n\r\nautogen.cddl: my-comid-extn.cddl $(COSWID)\r\n\t@for f in my-comid-extn.cddl $(REL_COMID_FRAGS) ; do cat $$f >> $@ ; done\r\n\t@cddl $@ g 1\r\n```\r\n\r\n",
          "createdAt": "2023-02-28T18:17:53Z",
          "updatedAt": "2023-02-28T18:18:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "As agreed the suggestion in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/39#issuecomment-1448653050 is deemed sufficient to resolve the issue.",
          "createdAt": "2023-03-01T15:17:29Z",
          "updatedAt": "2023-03-01T15:17:29Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOH6-tI85bKTFi",
      "title": "BOM tag",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/40",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "In the 11th Jan 2023 meeting we have identified the need for a new BOM (bill of material) object that tells the verifier what a *complete* set of tags looks like.\r\n\r\nThe BOM object must list all the needed tags (CoMID, CoSWIDs, CoTS) using their IDs.\r\n\r\nAdditionally, the BOM will indicate the validity period of the aggregate.\r\n\r\nA BOM object represents the signal for the verifier to *activate* the listed tags.  Data contained in a tag must not be used for appraisal until a BOM which activates that tag is received and successfully processed.  All the tags listed in the BOM must be activated in the same transaction, i.e., either all or none.",
      "createdAt": "2023-01-11T17:33:01Z",
      "updatedAt": "2023-02-04T21:35:10Z",
      "closedAt": "2023-02-04T21:35:10Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The constrained BOM (CoBOM?) would likely borrow from concise-mid-tag `? &(linked-tags: 3) => [ + linked-tag-map ] `as a way to relate the various tags under a common BOM.\r\n\r\nThere is an expectation that the list of 'linked-tags' in the BOM is an acyclic graph. Possibly, the function a CoBOM issuer performs is to check for cycles?\r\n\r\nPossible CDDL:\r\n```\r\nconcise-bom-tag = {\r\n  &(linked-tags: 0) => [ + linked-tag-map ],\r\n  &(validity: 1) => validity-map\r\n}\r\n\r\n$concise-tag-type-choice /= #6.507(bytes .cbor concise-bom-tag)\r\n```",
          "createdAt": "2023-01-11T17:45:38Z",
          "updatedAt": "2023-01-11T17:46:29Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "We also need a unique ID for the BOM for ref-counting the referenced tags and decide when they can be wiped out.\r\n\r\nAnd also for \"partial\" CoRIMs to reference their parent BOM.",
          "createdAt": "2023-01-12T12:36:08Z",
          "updatedAt": "2023-01-12T12:36:08Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "There is another interesting use case for linking BOMs horizontally (say for expressing update semantics).  That would need another link relation.",
          "createdAt": "2023-01-12T12:41:21Z",
          "updatedAt": "2023-01-12T12:41:21Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "For link relationship a most common and obvious use case is that the Specific BOM Tag ID gets updated, to add new endorsements (i .e. CoMID list is modified to incorporate new endorsements). Hence the new BOM  Tag ID updates the existing BOM Tag ID",
          "createdAt": "2023-01-12T14:58:00Z",
          "updatedAt": "2023-01-12T14:58:00Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> For link relationship a most common and obvious use case is that the Specific BOM Tag ID gets updated, to add new endorsements (i .e. CoMID list is modified to incorporate new endorsements). Hence the new BOM Tag ID updates the existing BOM Tag ID\r\n\r\nIs there semantic differential between a BOM update and a BOM replacement? If not the 'replaces' relationship type might work. Replaces semantic is that previously issued tags are discarded. That seems appropriate for a BOM.",
          "createdAt": "2023-01-12T16:54:33Z",
          "updatedAt": "2023-01-12T16:54:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> There is another interesting use case for linking BOMs horizontally (say for expressing update semantics). That would need another link relation.\r\n\r\nI'm not following the use case for 'horizontal' BOMs. Isn't the idea that one entity is authorized / trusted to know which tags belong in the BOM? What would it mean to a Verifier to have multiple (conflicting) trusted BOMs / BOM providers?",
          "createdAt": "2023-01-12T16:56:57Z",
          "updatedAt": "2023-01-12T16:56:57Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > For link relationship a most common and obvious use case is that the Specific BOM Tag ID gets updated, to add new endorsements (i .e. CoMID list is modified to incorporate new endorsements). Hence the new BOM Tag ID updates the existing BOM Tag ID\r\n> \r\n> Is there semantic differential between a BOM update and a BOM replacement? If not the 'replaces' relationship type might work. Replaces semantic is that previously issued tags are discarded. That seems appropriate for a BOM.\r\n\r\nYes, they are different! A \"Replace\" would mean that the existing old TAG-ID is over-written, so an old configuration (old SBOM Tag ID), mapped configuration (or a set ) reported from an attester may fail \"Verification\". \r\n\r\nAn \"Updates\" Semantic means that Both Old BOM Tag ID and New BOM Tag ID are relevant and valid combinations from Verifier perspective! Any one reported from attester is a valid combination!",
          "createdAt": "2023-01-12T17:00:49Z",
          "updatedAt": "2023-01-12T17:00:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> We also need a unique ID for the BOM for ref-counting the referenced tags and decide when they can be wiped out.\r\n\r\nReusing tag-identity-map as the unique ID. Also, concise TA stores might be using `#6.507`?\r\nHere is an updated proposed CDDL for BOM.\r\n```\r\nconcise-bom-tag = {\r\n  &(tag-identity: 0) => tag-identity-map\r\n  &(linked-tags: 1) => [ + linked-tag-map ],\r\n  &(validity: 2) => validity-map\r\n}\r\n$concise-tag-type-choice /= #6.508(bytes .cbor concise-bom-tag)\r\n```",
          "createdAt": "2023-01-12T17:03:06Z",
          "updatedAt": "2023-01-12T17:03:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> A \"Replace\" would mean that the existing old TAG-ID is over-written,\r\n\r\nI thought we defined 'replaces' semantics to be that the tag-id remains the same, but the tag version number is incremented. This was to preserve referential integrity based on tag-id.\r\n\r\nUpdate semantics means two tags (different IDs) could exist at the same time. Verifier has to determine which tag to use. Normally, this is done by Attester reporting which version of thing it is or by policy that has an allow/deny list that includes/excludes one of the tags. \r\n\r\nThe use case for multiple valid BOMs (for the same version of thing) doesn't make sense to me. ",
          "createdAt": "2023-01-12T17:36:58Z",
          "updatedAt": "2023-01-12T17:36:58Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "_I thought we defined 'replaces' semantics to be that the tag-id remains the same, but the tag version number is incremented. This was to preserve referential integrity based on tag-id._\r\n@nedmsmith This will make the construct complicated, as the Verifier has to throw the old list without been explicit command for deletion! ",
          "createdAt": "2023-01-13T15:06:42Z",
          "updatedAt": "2023-01-13T15:06:42Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> @nedmsmith This will make the construct complicated, as the Verifier has to throw the old list without been explicit command for deletion!\r\n\r\nCorrect. Issue #33 captures this complication already. The question to ask is whether the tag lifecycle applies to all forms of tag (comid, coswid, cotas, cobom, .... <any other tag type that is added in the future>)? Note that `concise-bom-tag` contains `linked-tag-map` which contains tag lifecycle information.",
          "createdAt": "2023-01-13T17:06:11Z",
          "updatedAt": "2023-01-13T17:11:48Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "As discussed above and in the last meeting, horizontal linking boms are not necessary, but issue #33 remains.",
          "createdAt": "2023-02-02T18:14:02Z",
          "updatedAt": "2023-02-02T18:14:02Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOH6-tI85cnvGn",
      "title": "Create section for conditional endorsement triple",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/44",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "A section, description and cddl for conditional-reference-series-triple-record and reference-endorsed-record. Possibly, these should be divided into separate CDDL files.",
      "createdAt": "2023-01-23T22:17:30Z",
      "updatedAt": "2023-03-03T23:19:11Z",
      "closedAt": "2023-03-03T23:19:11Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "We need to discuss whether it should be added by extension or added directly to triples-map.",
          "createdAt": "2023-01-23T22:18:25Z",
          "updatedAt": "2023-01-23T22:18:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Continuing discussion thread here. \r\nNote Thomas's musings: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Thomas'-musings-on-PR%2349 \r\nGiven we rewrite the outer layer of the conditional-reference-series-triple-record as an extended environment map. The crstr might look like:\r\n```\r\ncrstr = [ \r\n   ext-environment-record,\r\n   [ + reference-endorsed-record ] ; series of reference + optional endorsement triples\r\n]\r\n```\r\n```\r\next-environment-record = [\r\n  env: environment-map\r\n  rvs: [ + measurement-map ]\r\n]\r\n```\r\nMaybe it's helpful to define a series as a stand-alone triple (to reduce apparent complexity?) as:\r\n```\r\nseries-records = [ + cond-end-triple-record ]\r\ncond-end-triple-record = [ \r\n     refv: measurement-map,\r\n     ? endv: measurement-map\r\n]\r\n```\r\nThe semantics of the series-triple are that if the refv measurements match evidence, then accept the endv measurements. But rather than processing all the cond-end-triple-records, series logic means halt processing on the first record where refv matches evidence. Note that it isn't necessarily wrong to assert that for the given refv measurements,\r\nthere are endv measurements that make sense. The rule could be applied independent of a specific Target Environment. The verifier might need to work from other triples that are used to construct a list of Target Environments to know how to \r\napply the rule, but we're already asking the Verifier to do this sort of thing (as I'll explain later).\r\n\r\nThere may not be a use case for the series-triple that we know of as it stands and we can assume the triple needs to specify a Target Environment (whether is is by way of `environment-map`, or `ext-environment-map`). \r\n\r\nAdditionally, the current set of triples in triples-map implies matching context that isn't explicitly captured in CDDL. \r\nIf we consider `reference-triples` and `endorsed-triples`, we expect they are related if they appear in the same tag. \r\nBut the CDDL doesn't express exactly how. The verifier is expected to relate them if the environment-map is common. \r\nThe Verifier might define CDDL as:\r\n```\r\nref-end-triples => [ + ref-end-triple-record ] ; an anti-series triple\r\nref-end-triple-record = [ environment-map, [ + cond-end-triple-record] ]\r\n```\r\nHere, `environment-map` is common to both the reference measurements and the endorsement measurements. \r\nAs is pointed out in the notes on appraisal flow https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Notes-on-the-appraisal-flow \r\nthe endorsement measurements are optional: \"Alongside the environment identifiers, the matched Reference Values MAY also be used in selecting applicable Endorsed Values.\"\r\nThese semantics are captured in CDDL in `cond-end-triple-record`. But in the context of the `ref-end-triples`, the array does not imply \"series\" matching rules (which terminates at the first matched reference values), instead matching is applied to all the records in the array and if there isn't matching Evidence for all of them, appraisal fails. \r\nWe might refer to this matching semantic as \"anti-series\" for convenience. \r\n\r\nSo we can say the current schema describes an anti-series matching semantic for reference and (optional) endorsed values, based on a common `environment-map`.\r\n\r\nThe series matching semantic is not that different from anti-series. The SGX use case expects the series measurements are related by a common \"extended\" environment `ext-environment-map` and matching is series instead of anti-series, \r\nbut otherwise it is quite similar to what CoMID is doing currently.\r\n\r\nIf CoMID were to make `ref-end-triples` a first class triple, rather than implying that the Verifier should do this, \r\nthen the `ref-end-triples` schema (above), for anti-series, would be quite similar to the `cstr-triple` schema (below), for series.\r\n```\r\n...\r\ncstr-triple => [ + cstr ]\r\n...\r\ncstr = [ ext-environment-record, series-records ]\r\nseries-records = [+ cond-end-triple-record]\r\n\r\n```\r\n\r\nThe series matching semantic is of course reasonable and ought to be part of the base set of triples structures. \r\n",
          "createdAt": "2023-02-27T18:41:10Z",
          "updatedAt": "2023-02-27T18:41:10Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "> Additionally, the current set of triples in triples-map implies matching context that isn't explicitly captured in CDDL.\r\nIf we consider reference-triples and endorsed-triples, we expect they are related if they appear in the same tag.\r\nBut the CDDL doesn't express exactly how. The verifier is expected to relate them if the environment-map is common.\r\nThe Verifier might define CDDL as:\r\n...\r\n> These semantics are captured in CDDL in cond-end-triple-record. But in the context of the ref-end-triples, the array does not imply \"series\" matching rules (which terminates at the first matched reference values), instead matching is applied to all the records in the array and if there isn't matching Evidence for all of them, appraisal fails.\r\nWe might refer to this matching semantic as \"anti-series\" for convenience.\r\n\r\nVery good points!",
          "createdAt": "2023-03-02T03:38:10Z",
          "updatedAt": "2023-03-02T03:38:10Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "as a refinement on Ned's proposal, would the following work?\r\n\r\n~~~cddl\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-series-triples: 8) =>\r\n  [ + conditional-endorsement-series-triple-record ]\r\n)\r\n\r\n; an environment with a set of measurements that must match evidence\r\nstateful-environment-map = {\r\n  environment-map\r\n  [ + measurement-map ]\r\n}\r\n\r\nconditional-endorsement-series-triple-record = [\r\n  stateful-environment-map\r\n  ; order matters: the first matching record wins\r\n  [ + conditional-series-record ]\r\n]\r\n\r\nconditional-series-record = [\r\n  ; reference values to be matched against evidence\r\n  refv: [ + measurement-map ]\r\n  ; endorsed values that apply in case revf matches\r\n  endv: [ + measurement-map ]\r\n]\r\n~~~\r\n\r\nThe definition of `stateful-environment-map` would allow us to model a simpler, non-series variant of the \"conditional endorsement\" semantics as follows:\r\n\r\n~~~cddl\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-triples: 9) =>\r\n  [ + conditional-endorsement-triple-record ]\r\n)\r\n\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-map\r\n  ; endorsed values\r\n  [ + measurement-map ]\r\n]\r\n~~~",
          "createdAt": "2023-03-02T14:40:18Z",
          "updatedAt": "2023-03-02T14:40:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "We originally defined reference and endorsed triples as:\r\n```\r\nendorsed-triple-record = [\r\n  environment-map\r\n  [ + measurement-map]\r\n]\r\nreference-triple-record = [\r\n  environment-map\r\n  [ + measurement-map]\r\n]\r\n```\r\nbut later changed them to:\r\n```\r\nendorsed-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n]\r\nreference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n]\r\n```\r\nlargely because there wasn't a good way to disambiguate multiple measurements having the same code point. \r\nThe idea was the subject (environment-map) could be used to provide disambiguation. \r\n\r\nWhat is the reasoning for `measurement-map` in `conditional-endorsement-triple-record` having multiples?",
          "createdAt": "2023-03-02T16:16:40Z",
          "updatedAt": "2023-03-02T16:16:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> What is the reasoning for `measurement-map` in `conditional-endorsement-triple-record` having multiples?\r\n\r\nThe background reasoning is in the [musings](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Thomas'-musings-on-PR%2349#multiple-measurements-per-triple).\r\n\r\nThat said, I am happy with the single measurement per triple, i.e.:\r\n\r\n```cddl\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-map\r\n  ; endorsed value\r\n  measurement-map\r\n]\r\n```",
          "createdAt": "2023-03-02T16:55:45Z",
          "updatedAt": "2023-03-02T16:56:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm suggesting the following:\r\n```\r\nconditional-endorsement-series-triple-record = [\r\n  stateful-environment-map\r\n  ; order matters: the first matching record wins\r\n  [ + conditional-series-record ]\r\n]\r\n\r\nconditional-series-record = [\r\n  ; reference values to be matched against evidence\r\n  refv: measurement-map\r\n  ; endorsed values that apply in case revf matches\r\n  endv: measurement-map \r\n]\r\n```\r\nis sufficient for series use cases.\r\n\r\nI can't tell if there is a use case for:\r\n```\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-triples: 9) =>\r\n  [ + conditional-endorsement-triple-record ]\r\n)\r\n\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-map\r\n  ; endorsed values\r\n  [ + measurement-map ]\r\n]\r\n```\r\nBut if so, it should be documented that `[ + measurment-map ]` is disambiguated by `mkey`, or by a `$raw-value-type-choice`. But otherwise, a singleton `measurement-map` can be disambiguated by a more precise `stateful-environment-map` among several `[ + conditional-endorsement-triple-record ]` records.\r\n\r\n",
          "createdAt": "2023-03-02T17:15:49Z",
          "updatedAt": "2023-03-02T17:19:01Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "This definition does not seem correct to me.\r\n```\r\nstateful-environment-map = {\r\n  environment-map\r\n  [ + measurement-map ]\r\n}\r\n```\r\nAnd it can be simplified to remove nesting. So one form could be:\r\n```\r\nstateful-environment-record = [\r\n  environment-map\r\n  measurement-map\r\n]\r\n```\r\nWhich is the same as `reference-triple-record`.",
          "createdAt": "2023-03-02T17:26:41Z",
          "updatedAt": "2023-03-02T17:26:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm suggesting the following:\r\n> \r\n> ```\r\n> conditional-endorsement-series-triple-record = [\r\n>   stateful-environment-map\r\n>   ; order matters: the first matching record wins\r\n>   [ + conditional-series-record ]\r\n> ]\r\n> \r\n> conditional-series-record = [\r\n>   ; reference values to be matched against evidence\r\n>   refv: measurement-map\r\n>   ; endorsed values that apply in case revf matches\r\n>   endv: measurement-map \r\n> ]\r\n> ```\r\n> \r\n> is sufficient for series use cases.\r\n\r\n\ud83d\udc4d \r\n\r\n> I can't tell if there is a use case for:\r\n> \r\n> ```\r\n> $$triples-map-extension //= (\r\n>   &(conditional-endorsement-triples: 9) =>\r\n>   [ + conditional-endorsement-triple-record ]\r\n> )\r\n> \r\n> conditional-endorsement-triple-record = [\r\n>   stateful-environment-map\r\n>   ; endorsed values\r\n>   [ + measurement-map ]\r\n> ]\r\n> ```\r\n\r\nneither do I :-)  I do have a use case for:\r\n\r\n```cddl\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-map\r\n  ; endorsed values\r\n  measurement-map\r\n]\r\n```\r\n\r\nthough (i.e., certification data).\r\n\r\nLet's drop my `[ + measurement-map ]` and keep the good old `measurement-map`.",
          "createdAt": "2023-03-02T17:35:41Z",
          "updatedAt": "2023-03-02T17:35:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> This definition does not seem correct to me.\r\n\r\nwhy?",
          "createdAt": "2023-03-02T17:36:50Z",
          "updatedAt": "2023-03-02T17:36:50Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the same caveat applies as described above for `conditional-endorsements-triple-record`. Namely, it should be documented that multiple like measurements in `[ + measurment-map ]` in `stateful-environment-map` is disambiguated by `mkey`, or by a `$raw-value-type-choice`. \r\nBut otherwise, a singleton `measurement-map` can be disambiguated by a more precise `environment-map` in `stateful-environment-map` among several `[ + conditional-endorsement-series-triple-record ]` or `[ + conditional-endorsement-triple-record ]` records.",
          "createdAt": "2023-03-02T17:39:03Z",
          "updatedAt": "2023-03-02T17:39:03Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know if we have advise for when to use one form of disambiguation over another. ",
          "createdAt": "2023-03-02T17:42:38Z",
          "updatedAt": "2023-03-02T17:42:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the same caveat applies as described above for `conditional-endorsements-triple-record`. Namely, it should be documented that multiple like measurements in `[ + measurment-map ]` in `stateful-environment-map` is disambiguated by `mkey`, or by a `$raw-value-type-choice`.\r\n\r\nWFM",
          "createdAt": "2023-03-02T17:42:48Z",
          "updatedAt": "2023-03-02T17:42:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't know if we have advise for when to use one form of disambiguation over another.\r\n\r\nthe choice may be profile specific",
          "createdAt": "2023-03-02T17:44:10Z",
          "updatedAt": "2023-03-02T17:44:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> the choice may be profile specific\r\n\r\nBut there could be advice that a profile author applies to arrive at a conclusion. Or we may not have advice in which case it is a stylistic preference.\r\n",
          "createdAt": "2023-03-02T17:45:54Z",
          "updatedAt": "2023-03-02T17:45:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> But there could be advice that a profile author applies to arrive at a conclusion. Or we may not have advice in which case it is a stylistic preference.\r\n\r\nI think what we can reasonably say is just _\"it MUST be possible to disambiguate among measurements of the same type.\"_ and add _\"E.g., via mkey or ...\"_",
          "createdAt": "2023-03-02T17:49:08Z",
          "updatedAt": "2023-03-02T17:50:23Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "> > This definition does not seem correct to me.\r\n> \r\n> why?\r\n\r\nIn my test, the tool `diag2cbor` can't parse `.diag` file with data in this `stateful-environment-map`",
          "createdAt": "2023-03-02T18:09:45Z",
          "updatedAt": "2023-03-02T18:09:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > This definition does not seem correct to me.\r\n> > \r\n> > why?\r\n> \r\n> In my test, the tool `diag2cbor` can't parse `.diag` file with data in this `stateful-environment-map`\r\n\r\nNot sure what could be wrong.  Can you provide the code?",
          "createdAt": "2023-03-02T18:18:16Z",
          "updatedAt": "2023-03-02T18:18:16Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "Isn't it the requirement that each item in a map must be a name:value pair?\r\n\r\n> > > > This definition does not seem correct to me.\r\n> > > \r\n> > > \r\n> > > why?\r\n> > \r\n> > \r\n> > In my test, the tool `diag2cbor` can't parse `.diag` file with data in this `stateful-environment-map`\r\n> \r\n> Not sure what could be wrong. Can you provide the code?\r\n\r\n",
          "createdAt": "2023-03-02T18:26:08Z",
          "updatedAt": "2023-03-02T18:26:08Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Isn't it the requirement that each item in a map must be a name:value pair?\r\n\r\nAh yes, sorry I didn't notice the typo.  Replace `[` with `{` and `]` with `}` to get what I really meant :-)\r\n",
          "createdAt": "2023-03-02T18:33:07Z",
          "updatedAt": "2023-03-02T18:33:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "To summarize, the CDDL being proposed is (I think):\r\n```\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-series-triples: 8) =>\r\n  [ + conditional-endorsement-series-triple-record ]\r\n)\r\n```\r\n```\r\nconditional-endorsement-series-triple-record = [\r\n  stateful-environment-record,\r\n  ; order matters: the first matching record wins\r\n  [ + conditional-series-record ]\r\n]\r\n```\r\n```\r\n; an environment with a set of measurements that must match evidence\r\nstateful-environment-record = [\r\n  environment-map,\r\n  measurement-map\r\n]\r\n```\r\n```\r\nconditional-series-record = [\r\n  ; reference values to be matched against evidence\r\n  refv: measurement-map\r\n  ; endorsed values that apply in case revf matches\r\n  endv: measurement-map\r\n]\r\n```\r\nA simple, non-series variant of the \"conditional-endorsement-series-triples\" could be as follows:\r\n\r\n```\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-triples: 9) =>\r\n  [ + conditional-endorsement-triple-record ]\r\n)\r\n```\r\n```\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-record,\r\n  ; endorsed values\r\n  measurement-map\r\n]\r\n```\r\nIf there are multiple measurements needed that reuse the same code point. These could be supplied using additional triple record entries. They could be disambiguated using different `stateful-environment-record` values, different `mkey` values, or different `$raw-value-type-choice` values. \r\n\r\nIn cases where `authorized-by` is needed, the scope of authorization may need to be clarified. Normally, we expect authorized-by to have triple level scope. That is to say all measurements contained within the same triple record rely on a single authority. If there are multiple sources for measurements, there should be different triple records defined. We don't expect `authorized-by` scope to be finer granularity than the triple record.\r\n\r\nGiven this is a correct assumption. There only needs to be a single `authorized-by` source for a given triple. That suggests for `conditional-endorsement-series-triples` the `measurement-map` in `stateful-environment-record` could be a reasonable place for `authorized-by`. This also implies the `measurement-map` structures in `conditional-series-record` are unnecessary, at least for the purpose of `authorized-by`. We could replace `measurement-map` with `measurement-values-map` as a way to prevent potentially conflicting authorization being supplied. This also removes `mkey` which suggests any measurements that require disambiguation will need to rely on different `stateful-environment-record` or `$raw-value-type-choice` for that purpose. This is my preference. If there is a use case for keeping `measurement-map` in the series record then there needs to be normative that prevents use of `authorized-by` here.\r\n\r\nThe `conditional-endorsement-triples` might follow a similar convention depending on the use case requirements. I don't have a strong opinion, but need prose to account for the potential for colliding `authorized-by` statements.\r\n\r\n",
          "createdAt": "2023-03-02T22:37:05Z",
          "updatedAt": "2023-03-02T22:43:45Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Consequently, the following CDDL is what I think is the candidate for the PR:\r\n```\r\n$$triples-map-extension //= (\r\n  &(conditional-endorsement-series-triples: 8) =>\r\n  [ + conditional-endorsement-series-triple-record ]\r\n)\r\nconditional-endorsement-series-triple-record = [\r\n  stateful-environment-record,\r\n  ; order matters: the first matching record wins and halts matching\r\n  [ + conditional-series-record ]\r\n]\r\n; an environment with a set of measurements that must match evidence\r\nstateful-environment-record = [\r\n  environment-map,\r\n  measurement-map\r\n]\r\nconditional-series-record = [\r\n  ; reference values to be matched against evidence\r\n  refv: measurement-values-map\r\n  ; endorsed values that apply in case revf matches\r\n  endv: measurement-values-map\r\n]\r\n```",
          "createdAt": "2023-03-02T22:39:43Z",
          "updatedAt": "2023-03-02T22:46:34Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "> Consequently, the following CDDL is what I think is the candidate for the PR:\r\n> \r\n> ```\r\n> $$triples-map-extension //= (\r\n>   &(conditional-endorsement-series-triples: 8) =>\r\n>   [ + conditional-endorsement-series-triple-record ]\r\n> )\r\n> conditional-endorsement-series-triple-record = [\r\n>   stateful-environment-record,\r\n>   ; order matters: the first matching record wins and halts matching\r\n>   [ + conditional-series-record ]\r\n> ]\r\n> ; an environment with a set of measurements that must match evidence\r\n> stateful-environment-record = [\r\n>   environment-map,\r\n>   measurement-map\r\n> ]\r\n> conditional-series-record = [\r\n>   ; reference values to be matched against evidence\r\n>   refv: measurement-values-map\r\n>   ; endorsed values that apply in case revf matches\r\n>   endv: measurement-values-map\r\n> ]\r\n> ```\r\n\r\nThis CDDL looks good to me.\r\n\r\n> We need to discuss whether it should be added by extension or added directly to triples-map.\r\n\r\nAdding directly to triples map sounds good, and the CDDL would look like:\r\n\r\n```\r\ntriples-map = non-empty<{\r\n  ? &(reference-triples: 0) => [ + reference-triple-record ]\r\n  ? &(endorsed-triples: 1)  => [ + endorsed-triple-record ]\r\n  ? &(identity-triples: 2) => [ + identity-triple-record ]\r\n  ? &(attest-key-triples: 3) => [ + attest-key-triple-record ]\r\n  ? &(dependency-triples: 4) => [ + domain-dependency-triple-record ]\r\n  ? &(membership-triples: 5) => [ + domain-membership-triple-record ]\r\n  ? &(coswid-triples: 6) => [ + coswid-triple-record ]\r\n  ? &(conditional-endorsement-series-triples: 8) => [ + conditional-endorsement-series-triple-record ]\r\n  ? &(conditional-endorsement-triples: 9) => [ + conditional-endorsement-triple-record ]\r\n  * $$triples-map-extension\r\n}>\r\n\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-record,\r\n  ; endorsed values\r\n  measurement-values-map\r\n]\r\n```\r\n",
          "createdAt": "2023-03-02T23:56:33Z",
          "updatedAt": "2023-03-02T23:56:33Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM!",
          "createdAt": "2023-03-03T09:33:50Z",
          "updatedAt": "2023-03-03T09:33:50Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by PR #49",
          "createdAt": "2023-03-03T23:19:11Z",
          "updatedAt": "2023-03-03T23:19:11Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOH6-tI85czEnG",
      "title": "CoBOM Registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/45",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati",
        "henkbirkholz"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "Carve out registry for BOM ",
      "createdAt": "2023-01-25T16:01:19Z",
      "updatedAt": "2024-08-21T14:13:40Z",
      "closedAt": "2024-08-21T14:13:40Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue should coordinate with #15",
          "createdAt": "2023-01-25T16:13:10Z",
          "updatedAt": "2023-01-25T16:13:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Update: We expect multiple Endorsers could produce RIMS with a CoBOM tag where the RIM triples describe parts of the same Attester. Since the configuration of the Attester (device) may change depending on where it is in the supply chain, there isn't a central authority that determines which CoBOM is \"correct\". \r\n\r\nThe Verifier needs to select a CoBOM that it believes is the correct one. This likely is done by interacting with a Relying Party.\r\n\r\nOtherwise, the CoBOM activation semantics don't seem to hold universally. \r\n",
          "createdAt": "2023-09-01T22:03:18Z",
          "updatedAt": "2023-09-01T22:03:18Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOH6-tI85czNuL",
      "title": "Get CBOR tag allocation for CoRIM",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/46",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "The TCG Endorsement Architecture spec can be used to justify the need for a block allocation from #6.500 to #6.599 from IANA CBOR tag registry.",
      "createdAt": "2023-01-25T16:24:07Z",
      "updatedAt": "2024-05-07T09:20:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The request was made for each tag defined within the TCG Endorsement Arch spec. There was push back regarding allocation of a range of tags (not found in a public spec), but the experts would somehow document the intention to avoid allocating from within the requested range if it wasn't corim related.",
          "createdAt": "2023-02-01T16:55:40Z",
          "updatedAt": "2023-02-01T16:55:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Reached out to IANA experts a third time 2023-02-27.",
          "createdAt": "2023-02-27T19:21:20Z",
          "updatedAt": "2023-02-27T19:21:20Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOH6-tI85c__8f",
      "title": "Need indication whether a piece of evidence is class, instance or dynamic",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/47",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "Some attestation evidence collectors take DICE and SPDM measurements and put them into other formats, for example all class measurements might be used to extend a PCR.\r\n\r\nDefinitions:\r\n- Class measurement = two devices configured with the same firmware, fuse values etc will have the same value for the measurement\r\n- Instance measurement = two devices configured with the same firmware etc might have different values for the measurement, but the value does not change over time (if not reconfigured)\r\n- Dynamic measurement = a single device may report different values for the measurement over time\r\nAn example use for a dynamic measurement is a counter indicating how many times the device has been rebooted\r\n\r\nMixing different types of measurement in the same PCR causes problems. A class PCR provides information that the device is in a particular state while an instance PCR provides proof that the device is the same as last time.\r\n\r\nDo we need a way for the evidence collector to determine the locality of a measurement without having to understand the difference between types of measurement? \r\n\r\nCurrently some instance measurement can be identified because their environment-map includes an instance field, but there are instance measurements which do not include instance in environment-map.\r\n\r\nOne way to fix this would be to add a field to environment-map, perhaps something like:\r\n`? &(scope: 3) => &(class-scope: 0) / &(instance-scope: 1) / &(dynamic-scope: 2)`\r\n\r\nThis is primarily for use in evidence, but CoRIM reference values will need to match what the device reports",
      "createdAt": "2023-01-27T19:15:43Z",
      "updatedAt": "2024-05-07T09:08:53Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Given a use case where the Endorser knows about measurements with dynamic scope, the measurement values that are produced in evidence are not known at the time the reference values or endorsed values are authored. However, it is reasonable that the Endorser would know about the capability of the device to produce dynamic measurements. \r\n\r\nIf the Endorser wished to represent this knowledge using CoRIM they would need to populate the dynamic-scope environment-map which instructs the Verifier to match dynamic scoped Evidence. But the reference values would be null. This suggests the measurement-values-map could be empty. Currently, it is marked as <not empty>.  It would seem to be appropriate to mandate an empty measurement-values-map for Reference Values while expecting non-empty for Evidence. ",
          "createdAt": "2023-01-27T19:24:10Z",
          "updatedAt": "2023-01-27T19:24:10Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I was expecting the information about measurement scope to be in evidence/endorsements rather than in reference values.\r\nWe need to decide whether to special case scope when documenting the environment-map matching rules. My preference would be not to special case it, so the endorser would need to know the scope before building reference values.\r\nWould it be better to put scope into evidence-map?",
          "createdAt": "2023-02-06T15:31:44Z",
          "updatedAt": "2023-02-06T15:31:44Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Would it be better to put scope into evidence-map\r\n\r\nThere isn't an `evidence-map`, do you mean `measurement-map` or `measurement-values-map`?\r\nthere are three possible approaches:\r\na) remove `non-empty<{...}>` from `measurement-values-map`. This will allow RIMs to supply reference values with null reference-values-map. Evidence could contain any defined measurement (but not `any`).\r\nb) define nil RHS variants for each `measurement-values-map` LHS-RHS statements; where LHS is the code point and RHS is the measurement value.\r\nc) option (a) + define `any` as a possible `measurement-values-map` statement. \r\nOption (a) means the Endorser/RVP asserts the Attester has the ability to produce dynamic values but doesn't specify which values are dynamic.\r\nOption (b) means dynamic values must be defined in the schema, but when the reference contains the `nil` representation, the verifier accepts whatever value is supplied in the non-nil representation in Evidence. \r\nOption (c) means the reference can contain expressions for dynamic data with nil values and evidence can contain dynamic data with non-nil values, but the schema is outside the scope of corim. A profile might define the schema.\r\n\r\nMy preference is (b) because it maintains schema integrity, but doesn't presume all measurements are non-dynamic, but any could be dynamic. \r\n",
          "createdAt": "2023-02-06T16:38:13Z",
          "updatedAt": "2023-02-06T16:58:43Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "As per my understanding, this issue has been addressed. @andrew-draper Please check and close this!",
          "createdAt": "2024-05-07T09:08:52Z",
          "updatedAt": "2024-05-07T09:08:52Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "I_kwDOH6-tI85dX9nP",
      "title": "managing code point number space for extensible maps in CoRIM",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/48",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "It is likely that, for at least the `measurement-values-map` structure, the code point space could be large. There is competition for smaller code points (<2 bytes). Measurement-values-map contains both class and instance measurements which could grow over time as new forms of measurements are identified. Additionally, there could be profile-specific code points that have not, for whatever reason, been defined by a standard. \r\n\r\nThe corim specification should describe conventions for managing the limited resource code points (<2 bytes). For example, maps that are likely to be extended by profiles might do something like the following:\r\n\r\n0 - 29: defined in the base CORIM for measurement-values-map\r\n30 - 69: reserved for standards\r\n70 - 99: reserved, for prototyping\r\n100 - 255: available for profile specific use\r\n\u00a0\r\nMaybe it doesn't make sense to put \"prototyping\" in the <2byte range, but this is just an example.\r\n\r\nIn a perfect world, profile specific code points would be candidates for inclusion in a standard, if there is code point partitioning, that would require reassignment of a code points to the proper partition, which will break implementations, but maybe that is good?\r\n\r\n",
      "createdAt": "2023-02-01T18:01:45Z",
      "updatedAt": "2024-05-07T09:13:52Z",
      "closedAt": null,
      "comments": [
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If we limit ourselves to unsigned integers, we have the following encoding sizes:\r\n\r\n* 1+0: 0..23\r\n* 1+1: 24..255\r\n* 1+2: 256..65535\r\n* 1+4: 65536..2^32-1\r\n* 1+8: 2^32..2^64-1\r\n\r\nI would use a relatively strong filter for 1+0; that would normally be Standards Action in the IETF (see Section 4.9 of RFC 8126)\r\nSimilarly for 24..255; this could be a weaker RFC required (4.7), or possibly Specification Required (4.6) with some frugality criteria for the designated expert.\r\n1+2 is already big enough for pretty lenient allocation; for CBOR tags we have split this range into 256 to 32767 (Specification Required) and 32768 to 18446744073709551615 (FCFS); I think that would work well here as well.\r\n\r\nCompare [Section 9.2 of RFC 8949](https://www.rfc-editor.org/rfc/rfc8949#name-cbor-tags-registry).\r\n\r\nDo not reserve a range for prototyping, see RFC 6648 for reasons why (or keep it in a penalty box like 1+8).",
          "createdAt": "2023-02-02T11:17:40Z",
          "updatedAt": "2023-02-02T11:20:02Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> 1+2 is already big enough for pretty lenient allocation; for CBOR tags we have split this range into 256 to 32767\r\n\r\nTo be clear, this thread is about code point number space for `measurement-values-map` and not for CBOR tags.\r\nEach extensible map in corim has it's own code point number space. The code point space for `measurement-values-map` is likely to be extended more than the others IMHO. It probably isn't necessary that the entire code point space be reserved for standards and the smaller code points are valued for profiles that contain extensions that are not (yet?) in a standard. If we decide to partition code point space using signed integers, then negative numbers are available for profile use and positive integers are available for standards use. Profile use means the CoRIM profile defines what follows the code point.",
          "createdAt": "2023-02-02T17:50:10Z",
          "updatedAt": "2023-02-02T18:03:39Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > 1+2 is already big enough for pretty lenient allocation; for CBOR tags we have split this range into 256 to 32767\r\n> \r\n> To be clear, this thread is about code point number space for `measurement-values-map` and not for CBOR tags. \r\n\r\nSure, but CBOR tags are just another code point number space, with the difference that CBOR tags are global for all uses of CBOR and you can do localized number spaces.\r\n\r\n> Each extensible map in corim has it's own code point number space. The code point space for `measurement-values-map` is likely to be extended more than the others IMHO. It probably isn't necessary that the entire code point space be reserved for standards and the smaller code points are valued for profiles\r\n\r\nI'm sorry, I don't know what profiles are.  Clearly, you can allocate some subspace to identified other allocation mechanisms.  This assumes that profiles are mutually exclusive, which they typically don't stay for more than a microsecond.\r\n\r\n> that contain extensions that are not (yet?) in a standard. If we decide to partition code point space using signed integers, then negative numbers are available for profile use and positive integers are available for standards use. Profile use means the CoRIM profile defines what follows the code point.\r\n\r\nClearly, using negative integers is a nice way to partition the space in two.  (The antonym for negative is \"unsigned\" for most applications of CBOR; zero is typically in the same space in which positive numbers are as well.)\r\n",
          "createdAt": "2023-02-02T19:46:42Z",
          "updatedAt": "2023-02-02T19:46:42Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposal would be that CoRIM has a convention that reserves non-negative numbers and zero for use by standards and allows negative numbers for non-standards use. This permits 23 single 0 byte code points for non-standards use and so forth for 1, 2, 4 and 8 byte code points as well. \r\n\r\nMany of the extension points defined may never need additional code points, others may, including `measurement-values-map`. CoRIM should have a convention for which code points are safe to use outside of standards. ",
          "createdAt": "2023-02-03T00:36:50Z",
          "updatedAt": "2023-02-03T00:36:50Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we do this with something like this in the definition of `measurement-values-map`?\r\n\r\n`? -1 ... -65536 => any ; data type optionally indicated by tag, value meaning is for private use`",
          "createdAt": "2023-02-03T19:14:47Z",
          "updatedAt": "2023-02-03T19:14:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "If a profile extends `measurement-values-map` with a negative code point will parsers be confused by the `? -1 ... -65536 => any` statement which seems to have used the code point already for `any`, while simultaneously defining a more constrained schema in the profile?",
          "createdAt": "2023-02-07T23:33:45Z",
          "updatedAt": "2023-02-07T23:34:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "https://www.rfc-editor.org/rfc/internet-drafts/draft-bormann-cbor-draft-numbers-00.html\r\n",
          "createdAt": "2023-02-27T17:26:02Z",
          "updatedAt": "2023-02-27T17:26:02Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "https://datatracker.ietf.org/doc/html/draft-bormann-cbor-draft-numbers \r\n\r\nReference was updated. \r\n\r\nCan this issue be closed since CoRIM will follow draft-bormann-cbor-draft-numbers ?",
          "createdAt": "2023-06-02T16:15:07Z",
          "updatedAt": "2023-06-02T16:15:07Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "I_kwDOH6-tI85fETTU",
      "title": "allow key thumbprints as `authorized-by`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/51",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We currently allow raw keys, certified keys and cert chains as `authorized-by` types.\r\n\r\nAnother form of `authorized-by` could be a key thumbprint (e.g., PSA signer ID).",
      "createdAt": "2023-02-22T11:46:48Z",
      "updatedAt": "2023-02-28T21:11:45Z",
      "closedAt": "2023-02-28T21:11:45Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "agree.",
          "createdAt": "2023-02-22T23:24:46Z",
          "updatedAt": "2023-02-22T23:24:46Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, what about:\r\n\r\n```cddl\r\n$crypto-key-type-choice /= tagged-thumbprint-type\r\n\r\ntagged-thumbprint-type = #6.557(hash-entry)\r\n```\r\nwhere `hash-entry` is the usual alg-id & value compound.\r\n\r\nWith the understanding that the receiver either:\r\n* knows what is the hashed object is (and can therefore reconstruct it and match), or\r\n* uses `hash-entry.hash-value` as an opaque lookup handler\r\n\r\n",
          "createdAt": "2023-02-23T13:45:37Z",
          "updatedAt": "2023-02-23T13:45:37Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Per the thread on reducing dependency on coswid / hash-entry. Should this PR be updated to use `COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]` ?\r\n",
          "createdAt": "2023-02-23T19:48:05Z",
          "updatedAt": "2023-02-23T19:48:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Per the thread on reducing dependency on coswid / hash-entry. Should this PR be updated to use `COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]` ?\r\n\r\nI sense some browser tab mismatch here :-) This is an issue, not a PR.\r\n\r\nBut if I understand your intent correctly, I prefer to keep PRs separate (and scoped to their issue), i.e., if we agree on the `COSE_CertHash` approach I will file another PR for that.",
          "createdAt": "2023-02-24T09:32:21Z",
          "updatedAt": "2023-02-24T09:32:46Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "I_kwDOH6-tI85fNhez",
      "title": "use `COSE_CertHash`-style digest description in lieu of `hash-entry`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/54",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We currently import `hash-entry` from CoSWID:\r\n\r\n```cddl\r\nhash-entry = [\r\n  hash-alg-id: int\r\n  hash-value: bytes\r\n]\r\n```\r\nwhich forces hash algorithm identifiers to be integer codes from IANA's [named-information](https://www.iana.org/assignments/named-information/named-information.xhtml) registry.\r\n\r\nThat's great, but imposes a dependency on yet another registry.\r\n\r\nWe could take instead the more merciful approach taken by RFC9360:\r\n\r\n```cddl\r\nCOSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]\r\n```\r\n\r\nwhich allows, for alg-ids, strings as an alternative to code points.\r\n\r\n",
      "createdAt": "2023-02-23T19:03:06Z",
      "updatedAt": "2023-02-24T15:45:12Z",
      "closedAt": "2023-02-24T15:45:12Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not passionate about it either way. ",
          "createdAt": "2023-02-23T19:09:11Z",
          "updatedAt": "2023-02-23T19:09:11Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOH6-tI85fQ7OY",
      "title": "Numbers",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/55",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "@cabo has made a proposal for [managing CBOR numbers in Internet-Drafts](https://datatracker.ietf.org/doc/html/draft-bormann-cbor-draft-numbers-00), which we should consider.",
      "createdAt": "2023-02-24T09:41:58Z",
      "updatedAt": "2023-03-01T15:58:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This implies changing code point names from:\r\n &(mylabel: 0) => ... \r\nto:\r\n&(mylabel-CPA: -1) => ...\r\n\r\nuntil the draft reaches RFC status then the labels would be changed to:\r\n &(mylabel: 0) => ...; or whatever is the right code point to be assigned. \r\n\r\nI'm not sure it makes sense to do this for most of the base CoRIM structures as it is the prerogative of the base specification to use whatever code points it chooses. Additionally, there is a public TCG spec `Endorsement Architecture for Devices` that assigns code points to base spec map structures. \r\n\r\nThe Cabo proposal only makes sense for extensions to a base spec where the extensions intend to become part of a new base spec and therefore require positive integer code point values. ",
          "createdAt": "2023-02-27T22:03:31Z",
          "updatedAt": "2023-02-27T22:03:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "One additional note regarding extensibility within the `measurement-values-map` structure. Here the use of code points is qualified by the environment-map where the entity that specifies the environment-map determines which measurement-values-map measurements are appropriate. Hence, if a vendor-A defines code-point values (-1, ..., -10) as pertaining to structures A - J, vendor-B could define code-point values (-1, ..., -10) as pertaining to structures Q - Z.  Since the verifier knows that environments from a Vendor-A environment-map are different from a Vendor-B declared environment. The measurement code point assignments will be vendor-specific. Since the verifier relies on the vendor (Endorser/RVP) to supply it with correct RIMs, the CDDL for the measurement-values-map is assumed to be correct for the specified environment-maps. ",
          "createdAt": "2023-02-27T22:12:30Z",
          "updatedAt": "2023-02-27T22:12:30Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The Cabo proposal only makes sense for extensions to a base spec where the extensions intend to become part of a new base spec and therefore require positive integer code point values.\r\n\r\nI think it is a bit wider than that.  ISTM that the intent is to cover for the time span until the registration is made by IANA, so the proposal applies to all the code-points that will eventually be registered -- either into a new or an existing registry.\r\n\r\nIt is also true that for CoRIM the backing TCG spec provides some level of stability that other protocols don't necessarily enjoy, and therefore it's less critical for us.\r\n\r\nSo, the conclusion seems to be: wontfix.  Right?\r\n",
          "createdAt": "2023-02-28T09:36:09Z",
          "updatedAt": "2023-02-28T09:36:09Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't understand the negative number discussion (thanks for clarifying this), but I think if we get through with the \"earmarking\" you'll have a level of control over the number assignment within the earmark, so you don't need this (but you still need to coordinate within IETF, DICE, etc.).\r\n\r\nI did ask for a change in the document in a separate message, though.",
          "createdAt": "2023-02-28T10:11:04Z",
          "updatedAt": "2023-02-28T10:11:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "We want the CoRIM spec to set the expectation that a negative code point. Add to IANA considerations section.",
          "createdAt": "2023-03-01T15:58:58Z",
          "updatedAt": "2023-03-01T15:58:58Z"
        }
      ]
    },
    {
      "number": 59,
      "id": "I_kwDOH6-tI85ff6cd",
      "title": "coswid examples needed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/59",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "CoRIM allows tags of type coswid. We should have examples that exercise this option.",
      "createdAt": "2023-02-28T01:07:17Z",
      "updatedAt": "2024-05-07T09:04:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree.\r\n\r\nAlso noting that this will push us to elaborate on the matching rules when CoSWIDs are involved, which are rather nebulous (at least in my head).",
          "createdAt": "2023-02-28T09:38:29Z",
          "updatedAt": "2023-02-28T09:38:29Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOH6-tI85fkklG",
      "title": "digest format compatibility - relates to PR #56 ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/60",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "PR #56 replaced `hash-entry` with `digest` which added a text algorithm identifier. Hash entry used an integer algorithm identifier and has a dependency on coswid. \r\n\r\nThe goal was to allow COSE digest algorithm types. \r\n\r\nThe digest type should support a tagged digest type so that the exact semantics of which algorithm namespace and digest format can be specified. ",
      "createdAt": "2023-02-28T16:46:15Z",
      "updatedAt": "2023-03-02T07:43:12Z",
      "closedAt": "2023-03-02T07:43:12Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe I'm not understanding correctly your point, but the intention with `digest` was to be a superset of `hash-entry`: if the hash algorithm is of type int, then it's interpreted as a numeric [COSE digest algorithm](https://www.iana.org/assignments/cose/cose.xhtml#algorithms), otherwise it's a free-form string that has no global meaning.",
          "createdAt": "2023-02-28T16:52:36Z",
          "updatedAt": "2023-02-28T16:52:36Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "the goal is to enable a base verifier convention that recognizes how to compare the digest in reference with digest in evidence. If evidence uses the text option while reference uses the int option then verifier needs to know both in order to determine that the size of the digest value is correct. If this is tagged then the various permutations of the digest entry can be enumerated by different tags. Given TCG Edorsement spec uses hash-entry, this definition is an extension that implies a different matching convention that can be mismatched with what is in evidence.",
          "createdAt": "2023-02-28T17:05:05Z",
          "updatedAt": "2023-02-28T17:05:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "From #56:\r\n> A digest represents the value of a hashing operation together with the hash\r\nalgorithm used.\r\n\r\nThe explanation above:\r\n> if the hash algorithm is of type int, then it's interpreted as a numeric [COSE digest algorithm](https://www.iana.org/assignments/cose/cose.xhtml#algorithms), otherwise it's a free-form string\r\n\r\nisn't the same as what is included by #56. The latter is better. But the rules for text-based algorithm identifiers (which are not used by coswid) and a free-form string that has no global meaning seems arbitrary. Rather, coswid expects the algorithm identifers (expressed as int) are agreed upon by the community of coswid implementers. But these are presumably different from https://www.iana.org/assignments/cose/cose.xhtml#algorithms identifiers. \r\n\r\nA tagged-digest would capture the existing coswid semantics (#6.<coswid>)(hash-entry) vs. the COSE digest semantics (#6.<COSE-digest>)(digest). Both have the same form of [ int, bytes ] if you ignore the possibility of [ text, bytes] which doesn't seem to be useful in a COSE context - afaik. ",
          "createdAt": "2023-02-28T21:24:48Z",
          "updatedAt": "2023-02-28T21:26:10Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOH6-tI85f6ydb",
      "title": "avoid redundancy in \"frags\" files",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/62",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Since `cddl/corim-frags.mk` reuses all the `COMID_FRAGS` defined in `cddl/comid-frags.mk`, we should just initialise `CORIM_FRAGS` from `COMID_FRAGS`.",
      "createdAt": "2023-03-03T21:03:45Z",
      "updatedAt": "2023-03-08T15:27:27Z",
      "closedAt": "2023-03-08T15:27:26Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Also concise-mid-tag.cddl is defined twice in COMID_FRAGS.  COMID_FRAGS uses forward error correction :)\r\n",
          "createdAt": "2023-03-03T21:08:17Z",
          "updatedAt": "2023-03-03T21:08:17Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOH6-tI85f6-D5",
      "title": "flags-map extensions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/63",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A TCG specification extends the flags-map as follows:\r\n```\r\n;\r\n; Flags map extensions\r\n;\r\n$$flags-map-extension //= (\r\n  ? &(runtime-meas: 6) => bool\r\n  ? &(immutable-meas: 7) => bool\r\n  ? &(tcb-meas: 8) => bool\r\n)\r\n```\r\n\r\nShould CoRIM incorporate this extension into the base (as several of the other extension have already been incorporated such as `domain-dependency-triples`)?",
      "createdAt": "2023-03-03T21:50:15Z",
      "updatedAt": "2023-06-02T16:10:05Z",
      "closedAt": "2023-06-02T16:10:05Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #94 ",
          "createdAt": "2023-06-02T16:10:05Z",
          "updatedAt": "2023-06-02T16:10:05Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "I_kwDOH6-tI85gSuIH",
      "title": "multi-valued measurements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/67",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "see https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Multiple--vs-Single-measurements-Environments",
      "createdAt": "2023-03-08T16:01:19Z",
      "updatedAt": "2024-03-07T17:19:04Z",
      "closedAt": "2024-03-07T13:01:13Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that the CDDL in [1] is not an acccurate depiction of DiceTcbInfoSeq as the DiceTcbInfo contains both the 'name fields' (aka `environment-map`) and the 'values fields' (aka `measurement-values-map`). The CDDL in [2] more accurately depicts DiceTcbInfoSeq. \r\n\r\nThe CDDL in [1] is similar to an as yet unpublished variation of DiceTcbInfoSeq that compresses common fields where the name fields are common. But this variation instructs the Verifier to uncompress them resulting in a DiceTcbInfoSeq. \r\n\r\n[1] ; ENV --1:m--> MEAS\r\n`[ environment-map, [ + measurement-map ] ]`\r\n\r\n[2]\r\n`[ + (environment-map, measurement-map) ]`",
          "createdAt": "2023-03-08T18:08:42Z",
          "updatedAt": "2023-03-08T18:14:55Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note also that (ENV --1:m--> MEAS) can be achieved by `[ environment-map, measurement-map ]` if `measurement-values-map` contains multiple measurements that have different code points. The only case where (ENV --1:1--> MEAS) is true is when a singleton code point is used in `measurement-values-map`.\r\n\r\nThe interesting case for (ENV --1:m--> MEAS) and [1] above is when there are multiple instances of measurements that have the same code point. In such a scenario, the only way to disambiguate 'm1' from 'm2' is by array position. However, this seems dubious as tooling might swap entries and more importantly, array position doesn't add semantic context for which component in the system was the original source of the measurement. Using `environment-map.class-map.index` easily disambiguates them, which is an expression of [2] above.",
          "createdAt": "2023-03-08T18:21:24Z",
          "updatedAt": "2023-03-08T18:28:18Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Note that the CDDL in [1] is not an acccurate depiction of DiceTcbInfoSeq as the DiceTcbInfo contains both the 'name fields' (aka `environment-map`) and the 'values fields' (aka `measurement-values-map`). The CDDL in [2] more accurately depicts DiceTcbInfoSeq.\r\n\r\nThanks for the clarification, wiki page updated.\r\n",
          "createdAt": "2023-03-08T19:19:16Z",
          "updatedAt": "2023-03-08T19:19:16Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The interesting case for (ENV --1:m--> MEAS) and [1] above is when there are multiple instances of measurements that have the same code point.\r\n\r\nyes, that's the case that we want to support natively.\r\n\r\n> In such a scenario, the only way to disambiguate 'm1' from 'm2' is by array position. However, this seems dubious as tooling might swap entries and more importantly, array position doesn't add semantic context for which component in the system was the original source of the measurement.\r\n\r\nyes, let's not do that.\r\n\r\n> Using environment-map.class-map.index easily disambiguates them, which is an expression of [2] above.\r\n\r\nInteresting idea, I hadn't thought about using class's `index`.\r\nIt looks ok semantically, though less compact.",
          "createdAt": "2023-03-08T19:44:05Z",
          "updatedAt": "2023-03-08T19:44:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "[ environment-map, measurement-map ] should also be listed as a form of ENV --1:m--> MEAS",
          "createdAt": "2023-03-08T19:45:21Z",
          "updatedAt": "2023-03-08T19:45:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [ environment-map, measurement-map ] should also be listed as a form of ENV --1:m--> MEAS\r\n\r\nyou mean in case the measurement values are different, right?\r\n\r\n(I reckon a more precise headline for my musing is \"multi-valued same-type measurements\".)",
          "createdAt": "2023-03-08T19:49:58Z",
          "updatedAt": "2023-03-08T19:50:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> It looks ok semantically, though less compact.\r\n\r\nIf we are expecting to rely on CBOR compaction [3], then CDDL that aims to only optimize for size can result in semantic expressiveness gaps. \r\n\r\n[3] https://datatracker.ietf.org/doc/html/draft-ietf-cbor-packed\r\n",
          "createdAt": "2023-03-08T19:52:20Z",
          "updatedAt": "2023-03-08T19:52:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> (I reckon a more precise headline for my musing is \"multi-valued same-type measurements\".)\r\n\r\nYes, if 'same-type' means same code point.",
          "createdAt": "2023-03-08T19:53:13Z",
          "updatedAt": "2023-03-08T19:53:13Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "ok, so I'm reading the description of `index` in the editor's copy:\r\n\r\n* index (index 4): Is used when there are clones (i.e., multiple instances) of the same class of environment. Each clone is given a different index value to disambiguate it from the other clones. For example, given a chassis with several network interface controllers (NIC), each NIC can be given a different index value.\r\n\r\nand I am a bit concerned that the idea of \"clone\" doesn't really fit the use case I'm trying to model.  Those multiple measurements associated with the PSA \"mutable\" RoT (PRoT) are not \"clones\" of the PRoT, they are measurements of PRoT sub-components.  It's partitioning rather than cloning.",
          "createdAt": "2023-03-08T20:00:32Z",
          "updatedAt": "2023-03-08T20:00:32Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> the idea of \"clone\" doesn't really fit\r\n\r\nThis was the use case justification that we were aware of at the time. If there is additional justification then it seems OK to add that also. The question is what will a Verifier do with the information? We've defined `class-map` matching to mean every field in `class-map` that appears in Reference Values needs to have corresponding fields in Evidence. Otherwise, the Attester fails appraisal. \r\n\r\nHowever, if they match, then each field in `class-map` is also a Claim that goes into the set of accepted claims. A match that uses only `class-id` in the environment and (hypothetically) has an `index` claim in Evidence or Endorsements, results in the same accepted claims set as one that includes `index` in the environment. \r\n\r\nThe verifier may not care if `index` describes a clone or something else unless there is an appraisal policy that affixes the use case semantics of 'clone' or 'PRoT sub-component'. There is a lot of flexibility in `class-map` to name things (which is why DiceTcbInfo specs refer to them as 'name' fields). For example, an OID arc (47) for 'PRoT' could use sub-arcs (47.1, 47.2,..._ to refer to the sub-components. The Verifier can just as easily perform matching. However, the appraisal policy that has use case specific semantics would need to know that sub-arcs (and not index) refers to sub-components and not clones.  \r\n\r\nCoMID expects the module designer will make these decisions as part of tag creation. \r\n\r\n",
          "createdAt": "2023-03-08T20:33:52Z",
          "updatedAt": "2023-03-08T20:35:35Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We've defined class-map matching to mean every field in class-map that appears in Reference Values needs to have corresponding fields in Evidence. Otherwise, the Attester fails appraisal.\r\n\r\nHmm, right.  If `index` has global meaning and it's not just a placeholder to allow local disambiguation then it won't work.\r\n",
          "createdAt": "2023-03-08T21:45:14Z",
          "updatedAt": "2023-03-08T21:45:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> then it won't work\r\n\r\nCan you say more about what doesn't work?",
          "createdAt": "2023-03-08T22:04:28Z",
          "updatedAt": "2023-03-08T22:04:28Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The [PSA software components](https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token-11#section-4.4.1) claim is an unordered set of measurements:\r\n\r\n```cddl\r\npsa-software-components = (\r\n    psa-software-components-key => [ + psa-software-component ]\r\n)\r\n```\r\n\r\nThere is no defined order that could be associated with an `index` in a consistent way. \r\n\r\nTherefore, if `index` has to have a meaningful mapping with evidence and it's not just a trick to disambiguate then it does not fit.\r\n\r\nBasically, the primitive I need for matching is an \"equality among unordered sets\".\r\n",
          "createdAt": "2023-03-08T22:32:19Z",
          "updatedAt": "2023-03-08T22:32:19Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">  Basically, the primitive I need for matching is an \"equality among unordered sets\".\r\n\r\nThis seems to have similar semantics as `coswid-triple-record`.  Aside from `psa-software-component` possibly being different than a `concise-swid-tag-id` and having a corresponding coswid tag in the RIM (i.e., `&(tags: 1) => [ + $concise-tag-type-choice ]`), there seems to be equity among the unordered set of `concise-swid-tag-id`. \r\n\r\n```\r\ncoswid-triple-record = [\r\n  environment-map\r\n  [ + concise-swid-tag-id ]\r\n]\r\n```\r\nAre the matching semantics that all instances of `psa-software-component` must be present in Evidence or appraisal fails? I believe those are the semantics for `concise-swid-tag-id`. ",
          "createdAt": "2023-03-08T22:44:45Z",
          "updatedAt": "2023-03-08T22:52:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are the matching semantics that all instances of psa-software-component must be present in Evidence or appraisal fails?\r\n\r\nyes.",
          "createdAt": "2023-03-08T22:57:49Z",
          "updatedAt": "2023-03-08T22:57:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this issue resolved? Maybe as \"do not fix\"?",
          "createdAt": "2023-09-01T21:55:58Z",
          "updatedAt": "2023-09-01T21:55:58Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @thomas-fossati I want to resurrect the discussion on \r\n (ENV --1:m--> MEAS)\r\n\r\nThere are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n\r\nCurrently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n\r\nWe do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant.\r\nIn our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n\r\nAs far as concern about Evidence Matching Policy, we can make a careful assessment of the situation as:\r\nIf None of the Measurements (for the Environment) matches : Then Verifier fails the appraisal.\r\nif a partial match happens (the result can be a complete failure ) OR a Partial Failure based on the Verifier Appraisal Policy .\r\n\r\nA Verifier matches all the Measurements belonging to the Environment with the set of Reference Values.",
          "createdAt": "2023-12-12T19:05:44Z",
          "updatedAt": "2023-12-12T19:07:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I was looking for text (both in I-D.corim and TCG Endorsement arch) that clarifies whether an array of reference triples mean OR or AND matching logic. That is to say, given an array of reference triples in the same tag / same triples-map statement. Do all of the EMT statements have to match (aka AND logic) or is it OR logic where if any triples in the array match, then the evidence matches? The examples seem to suggest OR logic, but the prose sections don't seem very clear to me. E.g.: given a reference-triple array as follows:\r\n```\r\n[\r\n   (env=ENV1, meas=MEAS1),\r\n   (env=ENV2, meas=MEAS2),\r\n   (env=ENV3, meas=MEAS3)\r\n]\r\n```\r\nand given Evidence as:\r\n```\r\n(env=ENV2, meas=MEAS2),\r\n```\r\nIs there a match on (ENV2, MEAS2) because (ENV2, MEAS2) appears in the list of RV triples or is it not a match because all of the RV triples are not matched? \r\nThe examples suggest the former. Hence, there doesn't appear to be a way to represent AND matching logic with the current schema except for Example 3 below.\r\n\r\nAND logic therefore uses inner arrays. There are several examples that follow. \r\nExample 1:\r\n```\r\n[\r\n   [ (env=ENV1, meas=MEAS1) ],\r\n   [ (env=ENV2, meas=MEAS2) ],\r\n   [ (env=ENV3, meas=MEAS3) ]\r\n]\r\n```\r\nIf evidence matching algorithms allow for: ~[ (env=ENV2, meas=MEAS2) ] matching. Then evidence can omit the inner array brackets: (ENV2, MEAS2).\r\n\r\nIf the reference values expression was:\r\n```\r\n[\r\n   [ (env=ENV1, meas=MEAS1) ],\r\n   [ (env=ENV2, meas=MEAS2), (env=ENV4, meas=MEAS4) ],\r\n   [ (env=ENV3, meas=MEAS3) ]\r\n]\r\n```\r\n\r\nAND matching logic implies:  `[ (env=ENV2, meas=MEAS2), (env=ENV4, meas=MEAS4) ]` would not match given evidence only included `(env=ENV2, meas=MEAS2)` and not `(env=ENV4, meas=MEAS4)`.\r\n\r\nYogesh may be suggesting AND logic where only the measurement component of an EMT has multiplicity. \r\nExample 2:\r\n```\r\n[\r\n   (env=ENV1, [ meas=MEAS1] ),\r\n   (env=ENV2, [ meas=MEAS2, meas=MEAS4] ),\r\n   (env=ENV3, [ meas=MEAS3] )\r\n]\r\n```\r\n\r\nThe current schema supports measurement multiplicity by defining code points that have values expressed as arrays. \r\nExample 3:\r\n```\r\n[\r\n   (env=ENV1, meas=MEAS1 ),\r\n   (env=ENV2, meas-x=[MEAS2, MEAS4] ),\r\n   (env=ENV3, meas=MEAS3)\r\n]\r\n```\r\n",
          "createdAt": "2023-12-12T21:55:47Z",
          "updatedAt": "2023-12-12T22:48:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">There are other use cases apart from PSA\r\n\r\nNote the TCG Endorsement arch spec suggests there are use cases for multi-valued measurement sets for a given environment and it implies AND matching logic:\r\n\"measurement-map : Contains one or more reference measurements.\u00a0 Attester Evidence MUST match all measurements in measurement-map.\"\r\n\r\nIf we allow an arbitrary set of measurement values with the same key (Example 2 above), I think that presents ambiguity as it isn't clear if value2 appearing at array position 0 is different from value2 appearing at array position 1.",
          "createdAt": "2023-12-12T22:13:52Z",
          "updatedAt": "2023-12-12T22:51:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> @nedmsmith @thomas-fossati I want to resurrect the discussion on (ENV --1:m--> MEAS)\r\n> \r\n> There are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n> \r\n> Currently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n> \r\n> We do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant. In our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n\r\nIf matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution.  We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n",
          "createdAt": "2023-12-12T22:17:19Z",
          "updatedAt": "2023-12-12T22:21:02Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this issue is tied to the environment scoping issue #176 because scope may determine whether a collection of measurements is grouped by EMT structure or by the scope of the chosen EMT name. ",
          "createdAt": "2023-12-12T23:01:12Z",
          "updatedAt": "2023-12-12T23:01:12Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> If matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution. We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n\r\nThis is Example 3 above.",
          "createdAt": "2023-12-12T23:02:59Z",
          "updatedAt": "2023-12-12T23:02:59Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I think, we are over-complicating the discussion here: \r\n\r\nFor Example 1: (stated by Ned above)\r\nThe Device composition is clearly identified by a set of Environments => If  the reported Evidence is ONLY expected to report Env2: (with an expected set of Measurements, which in this example is (env=ENV2, meas=MEAS2, the MEAS2 should be matched to complete the Appraisal. \r\n\r\nExample 2: Ned got the use case right, the ENV has Multiple Measurements:\r\nWe can make the condition tight for now, if the Environment(ENV) in Evidence matches the one in the Reference Values (inside Verifier), then ALL the measurements reported in the Evidence for the ENV MUST match the corresponding one found in Reference Values (inside Verifier), else Verifier Fails appraisal.\r\n\r\n@nedmsmith To your point: _If we allow an arbitrary set of measurement values with the same key (Example 2 above), I think that presents ambiguity as it isn't clear if value2 appearing at array position 0 is different from value2 appearing at array position 1._\r\n\r\nWe have sufficient semantics in the schema today to define what each Measurement at a specific position (say 0 or 1) implies, that should be clarified by the Supply Chain, when provisioning reference values. The Verifier will match the corresponding one received in the Evidence.\r\n\r\nExample 3: \r\nTo your point:\r\n_The current schema supports measurement multiplicity by defining code points that have values expressed as arrays._\r\n \r\nMy view point:\r\na. I propose we handle the use case natively in the core spec rather than relying on the extension points.\r\n\r\nb. The extension point does not exist at the correct place to express the multiplicity I am referring to\r\n\r\n\r\n",
          "createdAt": "2023-12-13T09:17:22Z",
          "updatedAt": "2023-12-13T09:17:22Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > @nedmsmith @thomas-fossati I want to resurrect the discussion on (ENV --1:m--> MEAS)\r\n> > There are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n> > Currently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n> > We do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant. In our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n> \r\n> If matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution. We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n\r\n@thomas-fossati : `measurement-map` is NOT extensible, however, `measurement-values-map` is extensible.\r\nI would avoid extending just  the  `measurement-values-map` to fit the use case, I have in mind.\r\n",
          "createdAt": "2023-12-13T09:20:19Z",
          "updatedAt": "2023-12-13T09:20:19Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > @nedmsmith @thomas-fossati I want to resurrect the discussion on (ENV --1:m--> MEAS)\r\n> > > There are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n> > > Currently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n> > > We do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant. In our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n> > \r\n> > \r\n> > If matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution. We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n> \r\n> @thomas-fossati : `measurement-map` is NOT extensible, however, `measurement-values-map` is extensible.\r\n\r\nThat's what I meant.\r\n\r\n\r\n> I would avoid extending just the `measurement-values-map` to fit the use case, I have in mind.\r\n\r\nwhy not, extensibility is a feature not a bug ;-)",
          "createdAt": "2023-12-13T09:38:02Z",
          "updatedAt": "2023-12-13T09:38:02Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > @nedmsmith @thomas-fossati I want to resurrect the discussion on (ENV --1:m--> MEAS)\r\n> > > > There are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n> > > > Currently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n> > > > We do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant. In our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n> > > \r\n> > > \r\n> > > If matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution. We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n> > \r\n> > \r\n> > @thomas-fossati : `measurement-map` is NOT extensible, however, `measurement-values-map` is extensible.\r\n> \r\n> That's what I meant.\r\n> \r\n> > I would avoid extending just the `measurement-values-map` to fit the use case, I have in mind.\r\n> \r\n> why not, extensibility is a feature not a bug ;-)\r\n\r\nI meant the `use case` requirement is that we extend the `measurement-map` instead of just `measurement-values-map`.\r\n\r\nHence the proposal!",
          "createdAt": "2023-12-13T09:40:30Z",
          "updatedAt": "2023-12-13T09:40:30Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > > @nedmsmith @thomas-fossati I want to resurrect the discussion on (ENV --1:m--> MEAS)\r\n> > > > > There are other use cases apart from PSA, where we have a set of Measurements (Digests to be precise). The set belongs to an Environment.\r\n> > > > > Currently we do not have an adequate and elegant `way` to express this using CoRIM Reference Value Triple!\r\n> > > > > We do not want Supply chain to use `m` triples with the same `Environment` (in the subject) and then put each MEAS of (`m`) in the object. This is not elegant. In our use case, all the Measurements for the `Environment` appears in the Evidence, hence we need matching all.\r\n> > > > \r\n> > > > \r\n> > > > If matching multiple different digests in one go is the goal, defining a multi-digest measurement is an \"elegant\" (and more compact) solution. We made the measurement map extensible to allow use cases that do not fit the DICE model.\r\n> > > \r\n> > > \r\n> > > @thomas-fossati : `measurement-map` is NOT extensible, however, `measurement-values-map` is extensible.\r\n> > \r\n> > \r\n> > That's what I meant.\r\n> > > I would avoid extending just the `measurement-values-map` to fit the use case, I have in mind.\r\n> > \r\n> > \r\n> > why not, extensibility is a feature not a bug ;-)\r\n> \r\n> I meant the `use case` requirement is that we extend the `measurement-map` instead of just `measurement-values-map`.\r\n> \r\n> Hence the proposal, to avoid extension but make it a first class change in the specification!\r\n\r\n",
          "createdAt": "2023-12-13T09:41:01Z",
          "updatedAt": "2023-12-13T09:41:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Now I am confused.  I understood this was about changing ref-val and end-val triples to allow 1 or more `measurement-map`s, not about extending `measurement-map`.",
          "createdAt": "2023-12-13T09:47:42Z",
          "updatedAt": "2023-12-13T09:47:42Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Now I am confused. I understood this was about changing ref-val and end-val triples to allow 1 or more `measurement-map`s, not about extending `measurement-map`.\r\n\r\nYes I do NOT propose extending the map. You are correct!\r\n\r\nI propose we add multiplicity! ",
          "createdAt": "2023-12-13T09:49:55Z",
          "updatedAt": "2023-12-13T09:49:55Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Example 4:\r\n```\r\n[\r\n   (env=ENV1, [ meas=MEAS1] ),\r\n   (env=ENV2, [ (mkey=x, meas=MEAS2), (mkey=y, meas=MEAS4)] ),\r\n   (env=ENV3, [ meas=MEAS3] )\r\n]\r\n```",
          "createdAt": "2023-12-13T16:16:23Z",
          "updatedAt": "2023-12-13T16:16:23Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I am all for Example 4: \r\nSince We have all the required bits already: We just need to do the following: ==> To Achieve Example 4:\r\nreference-triple-record = [\r\n  environment-map\r\n  [measurement-map]\r\n]",
          "createdAt": "2023-12-13T16:24:10Z",
          "updatedAt": "2023-12-13T16:24:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">We just need to do the following: ==>\r\n\r\n... and document the verifier behavior for matching reference values to evidence / ACS and for conditional endorsement condition matching.",
          "createdAt": "2023-12-13T16:29:25Z",
          "updatedAt": "2023-12-13T16:29:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We just need to do the following: ==>\r\n> \r\n> ... and document the verifier behavior for matching reference values to evidence / ACS and for conditional endorsement condition matching.\r\n\r\n100% Agree!",
          "createdAt": "2023-12-13T16:30:33Z",
          "updatedAt": "2023-12-13T16:30:33Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We just need to do the following: ==>\r\n> \r\n> ... and document the verifier behavior for matching reference values to evidence / ACS and for conditional endorsement condition matching.\r\n\r\n... and make sure that this all works with existing conditional triples using _naked_ `measurement-values-map`s",
          "createdAt": "2023-12-13T17:44:18Z",
          "updatedAt": "2023-12-13T17:44:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">... and make sure that this all works with existing conditional triples using naked measurement-values-maps\r\n\r\n...and not forgetting the ability to include authority as part of the condition.",
          "createdAt": "2023-12-13T17:48:52Z",
          "updatedAt": "2023-12-13T17:48:52Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I have started a Draft [WIP] PR.\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/181\r\n\r\nI admit I will need your help in completing this neatly \ud83e\udd47 \r\n\r\nI will update examples, once we limit and evaluate the impact!",
          "createdAt": "2023-12-13T19:00:11Z",
          "updatedAt": "2023-12-13T19:00:11Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we close this?  Yogesh's PR #181 was closed with reason: _\"we have an alternative called integrity registers\"_.",
          "createdAt": "2024-03-07T12:58:47Z",
          "updatedAt": "2024-03-07T12:58:47Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure let's close this!",
          "createdAt": "2024-03-07T13:01:13Z",
          "updatedAt": "2024-03-07T13:01:13Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "+1",
          "createdAt": "2024-03-07T17:19:03Z",
          "updatedAt": "2024-03-07T17:19:03Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOH6-tI85g4agu",
      "title": "Measurement structure",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/69",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "I'd like to confirm that the following example reference value formats are both valid structures. Are they?\r\n\r\nEach of these is designed to match against an attester providing evidence in the same format. The semantics of the two formats is intended to be the same (both convey two raw value measurements).\r\n\r\nOIDs have been made up.\r\n\r\nSeparate environments:\r\n```\r\n  / comid.reference-triples / 0 : [\r\n    [\r\n      / environment-map / {\r\n        / comid.class / 0 : {\r\n          / comid.class-id / 0 : / 2.16.840.1.42.1 / 111(h'608648012A01') \r\n        }\r\n      },\r\n      [\r\n        / measurement-map / {\r\n          / comid.mval / 1 : {\r\n            / comid.raw-value / 4 : h'12121212',\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    [\r\n      / environment-map / {\r\n        / comid.class / 0 : {\r\n          / comid.class-id / 0 : / 2.16.840.1.42.2 / 111(h'608648012A02') \r\n        }\r\n      },\r\n      [\r\n        / measurement-map / {\r\n          / comid.mval / 1 : {\r\n            / comid.raw-value / 4 : h'5A5A5A5A',\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n  ]\r\n```\r\n\r\nCombined environments:\r\n```\r\n  / comid.reference-triples / 0 : [\r\n    [\r\n      / environment-map / {\r\n        / comid.class / 0 : {\r\n          / comid.class-id / 0 : / 2.16.840.1.42.1 / 111(h'608648012A01') \r\n        }\r\n      },\r\n      [\r\n        / measurement-map / {\r\n          / comid.mval / 1 : {\r\n            / comid.raw-value / 4 : h'12121212',\r\n            / private value / -1 : h'5A5A5A5A',\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n  ]\r\n```\r\n",
      "createdAt": "2023-03-15T12:08:21Z",
      "updatedAt": "2024-05-07T09:14:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I haven't checked with the tooling, I just run the (very imperfect) CDDL parser embedded in my glasses against the current CoRIM CDDL.\r\n\r\nThe result is: failed because of the array around the `measurement-map`, which (incidentally) is what I'd like to reintroduce as described in [this wiki page](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Multiple--vs-Single-measurements-Environments)",
          "createdAt": "2023-03-15T12:45:13Z",
          "updatedAt": "2023-03-15T12:45:13Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think the array around measurement-map was the focus of the question. I think it is whether a private code point `-1` can be used to contain a raw-value-group.\r\n\r\nI believe this works.",
          "createdAt": "2023-09-01T21:52:47Z",
          "updatedAt": "2023-09-01T21:52:47Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @andrew-draper I think, this needs a closure as multiple measurements pertaining to an `environment` can be modelled using Integrity Registers?",
          "createdAt": "2024-03-18T18:22:12Z",
          "updatedAt": "2024-03-18T18:22:12Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOH6-tI85hGzut",
      "title": "Matching a CoMID against a single attester or multiple attesters",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/70",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "## Verifier matching measurements from a single set of attestation environments\r\n\r\nThis issue uses the term Attestation Transport to describe the transport over which evidence was passed to the Verifier. A SPDM connection is an example of an Attestation Transport, it carries measurements from the SPDM Attestation Environment and from related DICE Attestation Environments within the same entity.\r\n\r\nThe simple use case for a Verifier is where it has received a set of measurements through a single Attestation Transport and it needs to match these against a CoMID tag containing reference values.\r\n\r\nIMHO we should make the simple case easy to encode. I suggest that when matching a Reference Value Triple containing only `environment-map` and `measurement-values-map`, the Verifier must ensure that match them against evidence received from the same Attestation Transport. In some cases there may be multiple Attestation Environment groups which match against the same Reference Value Triple, if this happens then each group would receive an identical Endorsement.\r\n\r\nFor example, a CoMID tag encoding the semantics \"If this device has a measurement identified by OID 1.2.3.4 and SHA-384 hash 0x5678 then the device is an Acme Ethernet Card version 1.0\"\r\n\r\n## Verifier matching measurements from multiple attesters\r\n\r\nHigher level Verifiers, or rather the CoRIMs controlling higher level Verifiers, will want to match against more complicated sets of evidence. For example, a CoRIM might want to encode the semantics _Match against a type A PCIe card in slot 0, with firmware hash B, and against a second identical PCIe card in slot 1_.\r\n\r\nDo we need a way for a CoRIM to indicate that it must match against a set of evidence from one source (eg one Attestation Transport) and a potentially different set of evidence from a different source?\r\n\r\n## An example encoding of reference-values when matching against multiple Attestation Transports\r\n\r\nI suggest that we use the `mkey` field to identify the attestor to be chosen.\r\n\r\nFor example, the following encoding encodes the two PCIe cards case above:\r\nSolution 1:\r\n```\r\n- Reference Value Triples\r\n  - (first card)\r\n    - Environment Map A\r\n    - Measurement Map\r\n      - mkey = K1\r\n      - mvalue = B\r\n  - (second card)\r\n    - Environment Map A\r\n    - Measurement Map\r\n      - mkey = K2\r\n      - mvalue = B\r\n\r\n```\r\nThis would be associated with an Endorsement triple or similar providing more information about the combined system.\r\n\r\nThe exact values of K1 and K2 are not important, what is important is that all measurements with the same `mkey` value must come over the same Attestation Transport. Using the integer encoding of `mkey` normally produces the smallest encoding.\r\n\r\nWe might need a profile to enable this behavior.\r\n\r\nI think this can be extended to multiple levels of compound devices, but wanted to get a sense of whether this is going in the right direction first.\r\n\r\n## Question\r\n\r\n**Is it going in the right direction?**\r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2023-03-17T11:48:02Z",
      "updatedAt": "2024-07-31T14:57:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Attestation Transport - Is there a reason not to use RATS Arch term 'conveyance'? Conceptually they appear to be the same.  Conveyance is not a formal term. Does it need to be?\r\nThe RAT Arch also defines 'Target Environment' to refer to the various components that are measured and 'Attesting Environment' for the capability that collects these measurements. 'Attestation Environments' isn't defined by RATS Arch and it is upper case implying it needs formal definition. Would it be possible to describe the use case using these terms?\r\nI find the third paragraph difficult to follow since the reference values triple `reference-value-triple-record` is a tuple consisting of an `environment-map` and a `measurement-map`. Are you suggesting a change to the schema or commenting on how the matching algorithm is applied?\r\nThe last sentence in the 3rd paragraph is confusing since this seems to be describing matching behavior for RVs and Evidence, but then segues into Endorsements without naming the triple(s) for which the matching behavior applies.\r\n\r\nRegarding the \"multiple attesters\" topic. Use of `mkey` to disambiguate multiple instances of Target Environments that have the same measurements seems reasonable. However, if the mkey type is used for some other purpose, then overloading semantics on the same value could become problematic. For example `$measured-element-type-choice /= uint` is not CBOR tagged. If a Verifier implies that it is used to disambiguate Target Environments, and a different Verifier uses it for some other purpose then there isn't a way for the 2 verifiers to be combined into a generalized verifier. A profile could be used to select between the conflated behaviors, but a better approach might be to require CBOR tagging for `$measured-element-type-choice` definitions and require new use cases to define a new tag.\r\n",
          "createdAt": "2023-03-17T16:55:31Z",
          "updatedAt": "2023-03-17T16:55:31Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Is mkey assigned by the evidence reflection through the conveyance or the CoRIM issuer? I'm confused about the phase at which the mkey value is assigned. I've opened an issue about it here too https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/230",
          "createdAt": "2024-05-03T18:44:11Z",
          "updatedAt": "2024-05-03T18:44:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "An alternative approach is for the AE to add distinguishing values to the evidence set (i.e., add a (first card)/(second card) measurement to the set of claims-value-map (was: measurement-values-map). \r\n\r\nThis approach fits easily into the ECT (was: EMT) abstraction. The verifier can detect they are values from different component instances (and therefore can avoid conflating them as some sort of erroneous duplication). The reference values matching algorithm only cares about the subset of the evidence claims. Therefore, the (first card)/(second card) information is accepted under the authority of the AE but not under the authority of the RVP. \r\n\r\nAssuming this approach makes sense, the representation of (first card)/(second card) etc... using class-values-map or an extension to it is needed next.",
          "createdAt": "2024-05-07T19:03:05Z",
          "updatedAt": "2024-05-07T19:03:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "How do you represent the evidence of same transport? It would seem that the transport itself becomes the \"lead attester\", and thus you need an authority to associate with it, no?",
          "createdAt": "2024-07-17T15:27:09Z",
          "updatedAt": "2024-07-17T15:27:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Another option is to assign an instance ID to each instance of a card in RVs and/or in Evidence. Environments can have both a class ID (e.g., A) and an instance ID (K1, K2). This eliminates the need for mkey. If cards are hot plugged, then RV Env only populates class-id and Evidence populates both Class-id and Instance-id.\r\nOption 2:\r\n\r\n- Reference Value Triples\r\n  - (first card)\r\n    - Environment Map Class-ID=A, Instance-ID=K1\r\n    - Measurement Map\r\n      - mvalue = B\r\n  - (second card)\r\n    - Environment Map Class-ID=A, Instance-ID=K2\r\n    - Measurement Map\r\n      - mvalue = B",
          "createdAt": "2024-07-17T16:12:27Z",
          "updatedAt": "2024-07-17T16:12:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> How do you represent the evidence of same transport? It would seem that the transport itself becomes the \"lead attester\", and thus you need an authority to associate with it, no?\r\n\r\nTracking authority seems orthogonal to this issue. If Evidence isn't signed independently of the conveyance protocol, then the authority of the conveyance protocol is assumed (this is documented in RFC9334). ",
          "createdAt": "2024-07-17T16:14:22Z",
          "updatedAt": "2024-07-17T16:14:22Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> Another option is to assign an instance ID to each instance of a card in RVs and/or in Evidence. Environments can have both a class ID (e.g., A) and an instance ID (K1, K2). This eliminates the need for mkey. If cards are hot plugged, then RV Env only populates class-id and Evidence populates both Class-id and Instance-id. Option 2:\r\n> \r\n\r\nThe same conveyance seems to mean a particular attestation session with these instances. I understand Andy's ask as referring to an abstract \"same\" session without having to name it. @andrew-draper Is that right? If so, I would recommend adding a $measured-element-type-choice alternative that is a session id unification variable. Every attestation verification request leads to a fresh mapping for unification variables. Once it matches, the variable always stands for the value it's bound to. (Think [algorithm W](https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system))",
          "createdAt": "2024-07-17T21:36:27Z",
          "updatedAt": "2024-07-17T21:36:27Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The ECT `ns` field is pretty much unused in the draft, so that could be set to the session identifier when adding evidence to the ACS to act as an already assigned unification variable.",
          "createdAt": "2024-07-31T14:57:38Z",
          "updatedAt": "2024-07-31T14:57:38Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "I_kwDOH6-tI85hHUm1",
      "title": "Need full description of the matching rules in the document",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/71",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "I plan to add full descriptions of different types of matching rules and provide them in a future pull request.\r\n\r\nI hope this is not controvertial (for example, integers should be compared as integers) but we need to make sure all edge cases are addressed.\r\n\r\nIf you are interested, the draft I will rewrite to fill in these sections is in the [andrew-draper-verifier-processing](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/tree/andrew-draper-verifier-processing) branch",
      "createdAt": "2023-03-17T13:21:21Z",
      "updatedAt": "2024-05-07T09:15:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by commit #107 48bdd67559ef7dbdee9f561981659f4bcfb8d715",
          "createdAt": "2023-09-08T10:37:27Z",
          "updatedAt": "2023-09-08T10:37:27Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Reopening since the raw value text still references this issue and the proposed resolution in PR#167 is not merged.",
          "createdAt": "2024-05-04T03:59:08Z",
          "updatedAt": "2024-05-04T03:59:08Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDOH6-tI85hyVHJ",
      "title": "provide description of `authorized-by`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/72",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We added the `authorized-by` field to the `measurement-map` but forgot to document it in the [Measuerments](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-3.1.4.1.5) section.",
      "createdAt": "2023-03-25T16:53:59Z",
      "updatedAt": "2023-09-01T21:48:57Z",
      "closedAt": "2023-09-01T21:48:12Z",
      "comments": []
    },
    {
      "number": 73,
      "id": "I_kwDOH6-tI85iFqUg",
      "title": "should locator map allow referencing CoRIM by `corim-map.id`?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/73",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "preferable first release"
      ],
      "body": "At present locator allows reference by URLs.  Should we allow reference by `corim-map.id` implying that the links are local to the verifier?",
      "createdAt": "2023-03-29T11:56:51Z",
      "updatedAt": "2024-05-07T09:26:47Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "wouldn't the uri include the corim.id? \r\ne.g., https://my.domain.com/corims/<corim.id>",
          "createdAt": "2023-03-29T15:58:05Z",
          "updatedAt": "2023-03-29T15:58:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "It could, but that's a deployment / implementation choice.  What I'm looking for is a way to *directly* use CoRIM IDs, without making them relative URLs (to which base URL?) or defining a URL convention (which seems to go counter [BCP190](https://www.rfc-editor.org/rfc/rfc7320.html)).",
          "createdAt": "2023-03-29T17:42:40Z",
          "updatedAt": "2023-03-29T17:42:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> It could, but that's a deployment / implementation choice. What I'm looking for is a way to _directly_ use CoRIM IDs, without making them relative URLs (to which base URL?) or defining a URL convention (which seems to go counter [BCP190](https://www.rfc-editor.org/rfc/rfc7320.html)).\r\n\r\nWhat is the use case for direct references? Is there a structure that contains multiple CoRIMs?",
          "createdAt": "2023-03-29T17:45:34Z",
          "updatedAt": "2023-03-29T17:45:34Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is there a structure that contains multiple CoRIMs?\r\n\r\nYes, something like a batch submission using a `multipart/mixed`",
          "createdAt": "2023-03-29T20:34:59Z",
          "updatedAt": "2023-03-29T20:34:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Seems reasonable. ",
          "createdAt": "2023-03-29T20:36:47Z",
          "updatedAt": "2023-03-29T20:36:47Z"
        }
      ]
    },
    {
      "number": 74,
      "id": "I_kwDOH6-tI85iOROt",
      "title": "tagged-concise-mid-tag and other tagged type definitions needed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/74",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "There should be tagged `tagged-` definitions for the various types of tags that can be included in a corim.\r\nfor example a corim can contain these CBOR tagged structures:\r\n```\r\n$concise-tag-type-choice /= #6.505(bytes .cbor concise-swid-tag)\r\n$concise-tag-type-choice /= #6.506(bytes .cbor concise-mid-tag)\r\n$concise-tag-type-choice /= #6.508(bytes .cbor concise-bom-tag)\r\n```\r\nbut we don't have a way to refer to each as a CBOR tagged statement, such as:\r\n```\r\ntagged-concise-swid-tag = #6.505(bytes .cbor concise-swid-tag)\r\ntagged-concise-mid-tag = #6.506(bytes .cbor concise-mid-tag)\r\ntagged-concise-bom-tag = #6.508(bytes .cbor concise-bom-tag)\r\n```\r\nThe $concise-tag-type-choice definitions could become:\r\n```\r\n$concise-tag-type-choice /= tagged-concise-swid-tag\r\n$concise-tag-type-choice /= tagged-concise-mid-tag\r\n$concise-tag-type-choice /= tagged-concise-bom-tag\r\n```",
      "createdAt": "2023-03-30T16:04:07Z",
      "updatedAt": "2023-05-11T17:51:14Z",
      "closedAt": "2023-05-11T17:51:14Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "WFM\r\n\r\nDo you plan to use the tagged payloads outside the CoRIM context?",
          "createdAt": "2023-03-31T08:19:41Z",
          "updatedAt": "2023-03-31T08:19:41Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes. There is a use case for attestation results that copies Verifier input into attestation results and a use case that borrows from conditional-endorsed-triple-record. Otherwise, it is motivated generally by consistent naming convention. ",
          "createdAt": "2023-03-31T15:51:32Z",
          "updatedAt": "2023-03-31T15:51:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "ok, thanks for providing extra context.",
          "createdAt": "2023-03-31T16:05:21Z",
          "updatedAt": "2023-03-31T16:05:21Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "I_kwDOH6-tI85i40DF",
      "title": "profile-type-choice is not a type-choice",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/77",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "Note that `profile-type-choice = uri / tagged-oid-type` isn't an extensible type.\r\nGiven EAT profiles are defined differently: `general-uri / general-oid` and it makes sense to have profiles in other attestation messages such as AR and potentially appraisal policies.\r\nIt makes sense to define an extensible profile type.\r\n\r\nIdeally:\r\n```\r\n$profile-type-choice /= uri\r\n$profile-type-choice /= tagged-oid-type\r\n$profile-type-choice /= general-uri\r\n$profile-type-choice /= general-oid\r\n```\r\nand then\r\n```\r\ncorim-map = {\r\n...\r\n  ? &(profile: 3) => $profile-type-choice\r\n...\r\n}\r\n```",
      "createdAt": "2023-04-07T18:12:02Z",
      "updatedAt": "2023-05-11T17:57:53Z",
      "closedAt": "2023-05-11T17:57:53Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "not sure what is the advantage of having essentially duplicated semantics?",
          "createdAt": "2023-05-11T16:19:54Z",
          "updatedAt": "2023-05-11T16:19:54Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati Can you please clarify what do you mean by duplicated semantics?\r\nWhere is the duplication? Do you mean between eat profile versus corim profile or something else?",
          "createdAt": "2023-05-11T16:25:48Z",
          "updatedAt": "2023-05-11T16:25:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> @thomas-fossati Can you please clarify what do you mean by duplicated semantics?\r\n> Where is the duplication? Do you mean between eat profile versus corim profile or something else?\r\n\r\nI mean between `general-uri` and `uri` on one side and `tagged-oid-type` and `general-oid` on the other.",
          "createdAt": "2023-05-11T16:49:45Z",
          "updatedAt": "2023-05-11T16:50:00Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "We started with uri and oid. I am just making a small change to correct the syntax.\r\n\r\nIf you want to extend it to eat profile semantics, then please raise a separate github issue",
          "createdAt": "2023-05-11T17:07:28Z",
          "updatedAt": "2023-05-11T17:07:28Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We started with uri and oid. I am just making a small change to correct the syntax.\r\n\r\nMy comment is on the issue, not on the PR.\r\n\r\n",
          "createdAt": "2023-05-11T17:34:30Z",
          "updatedAt": "2023-05-11T17:34:30Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the text description of the issue is a bit mis-leading!\r\n\r\nIt should be profile-type-choice is not expressed in the CDDL as an extensible type choice",
          "createdAt": "2023-05-11T17:36:53Z",
          "updatedAt": "2023-05-11T17:36:53Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "The core issue, if I am not mistaken is that EAT started with `eat profile` as uri or oid\r\n\r\nlater when spec  progressed they changed (in latest version) to be general-uri or a general-oid.\r\n\r\nWe should raise a new issue to have a discussion regarding the `type` harmonization between `eat profile` and `corim profile`",
          "createdAt": "2023-05-11T17:50:31Z",
          "updatedAt": "2023-05-11T17:50:31Z"
        }
      ]
    },
    {
      "number": 78,
      "id": "I_kwDOH6-tI85jelBl",
      "title": "domain-type-choice should support OIDs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/78",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "$domain-type-choice currently is:\r\n```\r\n$domain-type-choice /= uint\r\n$domain-type-choice /= text\r\n$domain-type-choice /= tagged-uuid-type\r\n```\r\nIt is reasonable that an Environment identifier doubles as a domain for example a top level \"device\" environment may have endorsed values that apply to the entire device such as 'device-X is common criteria certified'. Device X would be a described by an endorsed-values-triple-record containing an environment-map and class-id in the form of a `$class-id-type-choice` .\r\n```\r\n$class-id-type-choice /= tagged-oid-type\r\n$class-id-type-choice /= tagged-uuid-type\r\n$class-id-type-choice /= tagged-int-type\r\n```\r\nThere is existing overlap for `tagged-uuid-type` and the `tagged-int-type` and `uint` types could be easily mapped to achieve the use case goal. The `tagged-uuid-type` to domain id mapping could be achieved using `text` that contains an ascii OID representation, but that seems problematic. It is safer to add `tagged-oid-type` to `$domain-type-choice`.\r\n",
      "createdAt": "2023-04-14T21:14:45Z",
      "updatedAt": "2023-05-03T14:28:52Z",
      "closedAt": "2023-05-03T14:28:51Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as already fixed by PR #79",
          "createdAt": "2023-05-03T14:28:51Z",
          "updatedAt": "2023-05-03T14:28:51Z"
        }
      ]
    },
    {
      "number": 80,
      "id": "I_kwDOH6-tI85j0QRE",
      "title": "Need description of matching rules for conditional endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/80",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Conditional endorsements have been added to the spec, the matching rules section needs to be enhanced to describe them",
      "createdAt": "2023-04-19T10:40:33Z",
      "updatedAt": "2024-01-18T16:08:18Z",
      "closedAt": "2024-01-18T16:08:18Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #193",
          "createdAt": "2024-01-18T16:08:18Z",
          "updatedAt": "2024-01-18T16:08:18Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "I_kwDOH6-tI85j-4WY",
      "title": "$crypto-key-type-choice for COSE_Key",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/82",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The current list of $crypto-key-type-choice definitions doesn't include COSE_Key. In an implementation that doesn't depend on X.509, the COSE_Key format is already supported given CORIM tooling. Support for COSE_Key means the implementation doesn't have to include other libraries given the Evidence is signed with a COSE key.\r\nThe fix is to add the following:\r\n```\r\n$crypto-key-type-choice /= tagged-cose-key-type\r\ntagged-cose-key-type = #6.558(COSE_key)\r\n```",
      "createdAt": "2023-04-20T21:03:33Z",
      "updatedAt": "2023-05-22T22:34:37Z",
      "closedAt": "2023-05-22T22:34:37Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #85 ",
          "createdAt": "2023-05-22T22:34:37Z",
          "updatedAt": "2023-05-22T22:34:37Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "I_kwDOH6-tI85kc90O",
      "title": "Verifier behavior for tagged-thumbprint-type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/84",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The `tagged-thumbprint-type` is used by `$crypto-key-type-choice` which is used in the `identity-triple-record`, `attest-key-triple-record` and `authorized-by` code point in various other structures. The verifier behavior for `tagged-thumbprint-type` could be interpreted different ways that are not documented. Both the identity and attest-key triples' descriptions indicate use of the key is a prerequisite. A key digest can't be used directly to verify private key usage. The verifier needs the public key. There could be two cases where the key is verified, (a) verified directly by the verifier who must use the digest to find the key, (b) verified by split verifiers where a first verifier does a signature check and a second verifier completes the signature check by checking CRLs and does certificate path validation. For (b), the first verifier may use `tagged-thumbprint-type` to identify the partially verified key such that the second verifier completes the process. It's assumed that the second verifier has a way to trust the first verifier.\r\n\r\nThe `tagged-thumbprint-type` definition says the digest could be of a raw key or a certificate. This implies the verifier maintains a lookup table for both or that there is enough context in the triple for the verifier to know which type of lookup is appropriate. Possibly, it makes sense to define a new thumbprint type for certificate and constrain the current thumbprint type to keys only to avoid verifier having to have additional context?\r\n\r\n`tagged-thumbprint-type = #6.557(digest)` is described as a key thumbprint\r\n`tagged-cert-thumbprint-type = #6.559(digest)` is described as a certificate thumbprint\r\n\r\nLanguage for tagged thumbprints should describe the split verifier scenario where the first verifier performs the signature check and the second verifier performs CRL / cert status and path validation checks. \r\n",
      "createdAt": "2023-04-26T16:05:10Z",
      "updatedAt": "2023-05-22T22:34:18Z",
      "closedAt": "2023-05-22T22:34:17Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Please also refer to : https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/82\r\n",
          "createdAt": "2023-05-03T14:25:17Z",
          "updatedAt": "2023-05-03T14:25:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #85 ",
          "createdAt": "2023-05-22T22:34:17Z",
          "updatedAt": "2023-05-22T22:34:17Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "I_kwDOH6-tI85ls93I",
      "title": "Does the CoRIM Profile type should be identical to EAT profile type?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/90",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "Issue is inherited from the parent Issue #77 : where profile extensibility is discussed.\r\n\r\nHowever the profile type choice for CoRIM differs from EAT Profile Type though the intent of the profile is the same!\r\n\r\nShould we consider harmonization of EAT profile type and CoRIM profile type?",
      "createdAt": "2023-05-11T17:56:51Z",
      "updatedAt": "2024-07-31T15:27:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "CoRIM can handle an EAT profile type now that #77 is resolved. \r\nIt would be helpful if EAT profile could support a CoRIM profile type too.\r\nBut this seems like an issue with EAT rather than CoRIM.\r\nShould this issue be \"won't fix\"?",
          "createdAt": "2023-05-11T18:21:24Z",
          "updatedAt": "2023-09-01T20:32:19Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I vote close. I think we've decided this belongs to the evidence -> internal representation transformation specification, which is separate from the CoRIM profile for values that can match the internal representation.",
          "createdAt": "2024-07-31T15:27:29Z",
          "updatedAt": "2024-07-31T15:27:29Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOH6-tI85lvVaj",
      "title": "Stateless conditional endorsement series use cases",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/92",
      "state": "OPEN",
      "author": "shnwc",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Currently, the CDDL definition of `triples-map` supports `conditional-endorsement-series-triples`. In each `conditional-endorsement-series-triple-record`, the subject is a `stateful-environment-record`, where there must be at least one field in its `measurement-values-map`.\r\n\r\nIn the new use case, the environment is stateless, without any measurement value field. A new triple record such as the `stateless-conditional-endorsement-series-triple-record` defined below will be able to support this use case.\r\n```\r\nstateless-conditional-endorsement-series-triple-record = [\r\n  environment-map\r\n  ; order matters: the first matching record wins and halts matching\r\n  [ + conditional-series-record ]\r\n  ? authorized-by: [ + $crypto-key-type-choice ]\r\n]\r\n```\r\nIn this triple record, the optional `authorized-by` field lists the authorities for all the `measurement-values-map` structures  in the series.\r\n\r\nSince there is no ambiguity between `conditional-endorsement-series-triple-record` (with its first entry as an record) and `stateless-conditional-endorsement-series-triple-record` (with its first entry as a map), the `triples-map` entry:\r\n```\r\n  ? &(conditional-endorsement-series-triples: 8) =>\r\n    [ + conditional-endorsement-series-triple-record ]\r\n```\r\ncan be updated to add `stateless-conditional-endorsement-series-triple-record` as an option:\r\n```\r\n  ? &(conditional-endorsement-series-triples: 8) =>\r\n    [ + conditional-endorsement-series-triple-record /  stateless-conditional-endorsement-series-triple-record ]\r\n```\r\n",
      "createdAt": "2023-05-12T04:30:46Z",
      "updatedAt": "2024-10-14T17:01:41Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "For `conditional-endorsement-series-triple-record`, the `stateful-environment-map` contained a `measurement-map` which contains `authorized-by`. A stateless alternative omits the `measurement-map` thereby eliminating the `authorized-by` also. \r\n\r\nI think it's a reasonable consideration to put `authorized-by` in the triple record directly (as an object property or attribute) that provides object context (rather than being the object directly). \r\n\r\nNote that other triples that define measurements that are not defined in terms of measurement-map don't have authorized-by which seems like an oversight. For example, `identity-triple-record` and `attest-key-triple-record`.",
          "createdAt": "2023-05-15T20:40:56Z",
          "updatedAt": "2023-05-22T22:30:58Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "To consolidate the existing `conditional-endorsement-series-triples` and `conditional-endorsement-triples` definition in `triples-map`, and the above `stateless-conditional-endorsement-series-triple-record`, we can have a single streamlined / unified CDDL definition to cover all the use cases.\r\n```\r\nconditional-endorsements-triple-record = [\r\n  subject-record\r\n  object-record\r\n  ? authorizied-by: [ + $crypto-key-type-choice ]\r\n]\r\n\r\nsubject-record = [\r\n  environment-map\r\n  ? common-reference: measurement-values-map\r\n]\r\n\r\nobject-record = non-empty{[\r\n  ? common-endorsement: measurement-values-map\r\n  ? series: [ + conditional-series-record ]\r\n]}\r\n\r\n; Note: this is existing definition\r\nconditional-series-record = [\r\n  refv: measurement-values-map\r\n  endv: measurement-values-map\r\n]\r\n\r\n```\r\n\r\nThe `triples-map` is updated to include this `conditional-endorsements-triple-record`:\r\n```\r\n  ? &(conditional-endorsements-triple: 10) =>\r\n    [ + conditional-endorsements-triple-record ]\r\n```\r\nIn the  above `conditional-endorsements-triple-record` definition, the `subject-record` is the same as `stateful-environment-record` when the optional `common-reference` entry is present, otherwise it contains the `environment-map` in the `stateless-conditional-endorsement-series-triple-record`.\r\n\r\nThe `object-record` has two optional entries, and at least one of them need to be present. If only `common-endorsement` is present, it supports the case cases for `conditional-endorsement-triples`. If only `series` is present, it supports the use cases for `conditional-endorsement-series-triples`. If both entries are present, each `conditional-series-record` in `series` contains record-specific reference and endorsement claims, while `common-reference`  and `common-endorsement` contain reference and endorsement claims common across all `conditional-series-record`s.",
          "createdAt": "2023-06-08T17:09:12Z",
          "updatedAt": "2023-06-08T17:09:12Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this not achieved now by `MEC Triples` which is added recently. I think, this issue needs to be closed!",
          "createdAt": "2024-03-18T18:18:20Z",
          "updatedAt": "2024-03-18T18:18:20Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper to check if all concerns are addressed and close it subsequently!",
          "createdAt": "2024-03-27T15:50:47Z",
          "updatedAt": "2024-03-27T15:50:47Z"
        }
      ]
    },
    {
      "number": 95,
      "id": "I_kwDOH6-tI85msbg3",
      "title": "allowing domains to be domain members",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/95",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Current domain triples don't allow device composition using domain namespaces and current tag semantics only imply device composition. CoBOM describes tag activation, meaning the set of tags containing information that is related to a device can be specified, but it doesn't define hierarchical relationships between tags. Some tags, such as ta-stores, do not imply device composition. Comid and coswid tags have linked-tags relationships that help manage tag lifecycles, but tag-ids are not long lived. Hence, they are not ideal for representing device composition.\r\n\r\nDomain namespaces have long lived identifiers, but the current `domain-membership-triple-record` only allows multiple `environment-map` entities to be members of a domain namespace. The `domain-dependency-triple-record` has semantics that traces trust dependencies which shouldn't be overloaded with domain membership semantics. \r\n\r\nThis issue proposes extending `domain-membership-triple-record` to include `$domain-type-choice` objects. This will allow it to be used to construct a device composition hierarchy using long lived identifiers. \r\n\r\nA comid tag could be defined to implicitly contain a domain namespace that is unnamed. A domain membership triple that uses the same domain name for the subject and the object could be used to assign a long lived domain name to a comid tag. \r\n\r\nE.g.,:\r\nTag-1 contains:\r\n```\r\n/ domain-membership-triples / 5 : [\r\n       [  \r\n         subj: \"X\",\r\n         obj: [ \"X\" ]\r\n      ]\r\n]\r\n```\r\nMultiple domains could exist within a tag if a second domain name appears within the same triple object as the triple subject. \r\nE.g.,\r\n```\r\n/ domain-membership-triples / 5 : [\r\n       [  \r\n         subj: \"X\",\r\n         obj: [ \"X\",  \"Y\" ]\r\n      ]\r\n]\r\n```\r\nMultiple tags can be related by composition using membership triple where both have self-asserted namespace names and a membership triple links them together.\r\ne.g.,\r\nTag-2 contains:\r\n```\r\n/ domain-membership-triples / 5 : [\r\n       [  \r\n         subj: \"Z\",\r\n         obj: [ \"Z\" ]\r\n      ]\r\n]\r\n```\r\nAnd tag-1 contains:\r\n```\r\n/ domain-membership-triples / 5 : [\r\n       [  \r\n         subj: \"X\",\r\n         obj: [  \"X\",  \"Z\" ]\r\n      ]\r\n]\r\n```\r\nThe cddl would be something like:\r\n```\r\ndomain-membership-triple-record = [\r\n  $domain-type-choice\r\n  [ + $domain-member-type-choice  ]\r\n]\r\n$domain-member-type-choice /= environment-map\r\n$domain-member-type-choice /= $domain-type-choice\r\n```\r\n",
      "createdAt": "2023-05-23T23:16:29Z",
      "updatedAt": "2024-05-07T09:12:54Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @nedmsmith, see [this musing](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Composition-musings) on composition which has a few overlaps. ",
          "createdAt": "2023-05-24T10:30:15Z",
          "updatedAt": "2023-05-24T10:30:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Hi @nedmsmith, see [this musing](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Composition-musings) on composition which has a few overlaps.\r\n\r\nThe semantics of `domain-membership-triple-record` seem close to the musing gap2:\r\n```\r\ndomain = [\r\n    AEs: [ + environment-map ]\r\n    ? name: environment-map\r\n]\r\n```\r\nexcept the domain name is required and isn't currently described as an environment-map. Domain names as environment-map could be easily adjusted by:\r\n`$domain-id-type-choice /= environment-map`\r\n\r\nThe context in which a `domain` record exists isn't mentioned in musings. Possibly, it is added to `concise-mid-tag`?\r\nAlternatively, a comid tag is by default an unnamed domain and the environment-map statements for any triple implies domain membership. But to apply hierarchical relationships, a domain ID is needed. Possibly, comid should be extended to allow name declaration:\r\n```\r\nconcise-mid-tag = {\r\n  ? &(domain-id: x) => $domain-id-type-choice\r\n}\r\n```\r\n",
          "createdAt": "2023-05-24T15:55:53Z",
          "updatedAt": "2023-05-24T15:57:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing gap 1.\r\nThe `domain-dependency-triple-record` captures AE --> TE dependencies. The assumption is that a trust dependency across domains exists when domain membership consisting of TEs depends on a domain membership consisting of AEs. \r\n```\r\nattester = {\r\n    AE: environment-map\r\n    TEs: [ + environment-map ]\r\n}\r\n```\r\nmakes clear which TEs depend on which AE, but the dependency could involve multiple AEs (for example a multi-core CPU that hosts a workload that can be scheduled on any of the CPUs).  Possibly, the relationship is many-many?\r\n\r\nIf a domain membership is constructed around AE vs TE groups, the domain-dependency triples would be sufficient.",
          "createdAt": "2023-05-24T16:10:49Z",
          "updatedAt": "2023-05-24T16:10:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Regarding:\r\n```mermaid\r\nerDiagram\r\n    \"domain A\" ||--|{ AE : \"attesting environments\"\r\n    AE ||--|{ AK : \"Attest keys\"\r\n```\r\nIt is possible that a domain only contains target environments. The attesting environment crosses a domain boundary.  Domain B could have multiple TEs associated.\r\n```mermaid\r\nerDiagram\r\n    \"domain B\" ||--|{ TE1 : \"target environments\"\r\n    \"domain B\" ||--|{ TE2 : \"target environments\"\r\n```\r\nDomain B trust depends on Domain A\r\n```mermaid\r\nflowchart LR\r\n    domA[\"Domain A\"]\r\n    domB[\"Domain B\"]\r\n    domA --> domB\r\n```\r\nThe environments with attestation keys `attest-key-triple-record` and possibly `identity-triple-record` identify which environments are Attesting Environments. The evidence signed by the attestation key determines the scope of the AE-->TE dependency. In concise-evidence, virtually any triple could be signed. If the evidence target is logically an anonymous domain then it is seems reasonable to model dependency using domains. The triples within the domains determines the precise AE:TE mappings. \r\n\r\nFor an endorsement structure to model the evidence signing behavior, there needs to be a structure that describes which key signs which evidence or which AE (that has a key) signs which evidence domain. \r\n```mermaid\r\nflowchart LR\r\n    domA[\"Domain A\"]\r\n    domB[\"Domain B\"]\r\n    domA -- signs or attests --> domB\r\n```\r\nA domain may have multiple AEs and an AE may have multiple AKs.\r\n```mermaid\r\nerDiagram\r\n    \"domain A\" ||--|| AE1 : \"attesting env 1\"\r\n    \"domain A\" ||--|| AE2 : \"attesting env 2\"\r\n    AE1 ||--|| AK1 : \"Attest key 1\"\r\n    AE2 ||--|| AK2 : \"Attest key 2\"\r\n    AE2 ||--|| AK3 : \"Attest key 3\"\r\n```\r\nHence, the domain containing AEs may need to model the key / keys that are expected to sign evidence.\r\nDomain A may contain an `attestations-triple` that explicitly defines the expected attested information.\r\n```\r\nattestation-triples = [\r\n   AKs: [ AK2, AK3 ]\r\n   TEs: [ \"Domain B\" ]\r\n]\r\n```\r\nIf any key associated with an AE can sign, then the AE can be used. If any key in the domain can sign, then the domain name can be used. \r\n```\r\nattestation-triples = [\r\n   AKs: [ \"Domain A\" ]\r\n   TEs: [ \"Domain B\" ]\r\n]\r\n```\r\nOr:\r\n```\r\nattestation-triples = [\r\n   AKs: [ AE1, AK3 ]\r\n   TEs: [ \"Domain B\" ]\r\n]\r\n```\r\nIf different keys are to be used to attest different parts of the target domain. Then the TEs list may be something other than a domain name.\r\n```\r\nattestation-triples = [\r\n   AKs: [ AK1 ]\r\n   TEs: [ TE1 ]\r\n]\r\n```\r\nOr:\r\n```\r\nattestation-triples = [\r\n   AKs: [ AK3 ]\r\n   TEs: [ TE2 ]\r\n]\r\n```\r\nThe current `domain-dependency-triple-record` implies this:\r\n```\r\nattestation-triples = [\r\n   AKs: [ \"Domain A\" ]\r\n   TEs: [ \"Domain B\" ]\r\n]\r\n```\r\nUsing a domain name or environment name instead of key identifier is helpful if the key is derived dynamically (as in DICE). The verifier is checking that the dynamic key belongs to an expected AE / attesting domain.",
          "createdAt": "2023-05-24T20:39:22Z",
          "updatedAt": "2023-05-24T20:39:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The semantics of `domain-membership-triple-record` seem close to the musing gap2:\r\n> \r\n> ```\r\n> domain = [\r\n>     AEs: [ + environment-map ]\r\n>     ? name: environment-map\r\n> ]\r\n> ```\r\n> \r\n> except the domain name is required and isn't currently described as an environment-map. Domain names as environment-map could be easily adjusted by: `$domain-id-type-choice /= environment-map`\r\n\r\nYes, any similarity between the two wasn't purely coincidental :-)\r\n \r\n> The context in which a `domain` record exists isn't mentioned in musings.\r\n\r\nCan you elaborate a bit on the exactly what does a _context_ represent?\r\n",
          "createdAt": "2023-05-25T08:59:48Z",
          "updatedAt": "2023-05-25T08:59:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Closing gap 1. The `domain-dependency-triple-record` captures AE --> TE dependencies. The assumption is that a trust dependency across domains exists when domain membership consisting of TEs depends on a domain membership consisting of AEs.\r\n> \r\n> ```\r\n> attester = {\r\n>     AE: environment-map\r\n>     TEs: [ + environment-map ]\r\n> }\r\n> ```\r\n> \r\n> makes clear which TEs depend on which AE, but the dependency could involve multiple AEs (for example a multi-core CPU that hosts a workload that can be scheduled on any of the CPUs). Possibly, the relationship is many-many?\r\n\r\nIdeally, I'd like to keep this as simple as possible -- i.e., in a tree rather than a full-blown graph.  In the multi-core CPU / workload example you mention, the AE could be modelled as:\r\n\r\n```mermaid\r\nerDiagram\r\n    \"AE (CPU class)\" ||--|{ \"AE (CPU instance)\" : has\r\n```\r\n\r\nwhich would allow us to keep the simple hierarchical structure:\r\n\r\n```mermaid\r\nerDiagram\r\n    \"AE (CPU class)\" ||--|{ workload : contains\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n> If a domain membership is constructed around AE vs TE groups, the domain-dependency triples would be sufficient.\r\n\r\nThat may indeed be the case.\r\n",
          "createdAt": "2023-05-25T09:45:19Z",
          "updatedAt": "2023-05-25T09:46:02Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Are attesting environments (AE) important after they have performed their function?\r\n\r\nI've been thinking of an AE as something which provides non-faked measurements of a Target Environment (TE). Once the TE has been proved non-faked then the AE is not required - it can be replaced with a token that summarizes it (for example by one of the keys which authorizes the keychain which signs TE measurements).\r\n\r\nMy take on composition is that there are two types of composition:\r\n1. Layered composition, where the trustworthyness of an AE depends on the correctness of a TE\r\n2. Grouping, where one TE makes statements about the relationships between other TEs\r\n\r\nFor Layering, we need a way for the rim to indicate that another TE must have been validated before this TE can be considered validated.\r\n\r\nFor Grouping, I don't have a proposal for how to encode this or which RIM it should go into",
          "createdAt": "2023-06-09T17:03:01Z",
          "updatedAt": "2023-06-09T17:03:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "AEs start out as TEs, but become AEs if they play a role in deciding which sets of measurements belong to which TEs. It seems incorrect to say that TE's may statements about other TEs unless the TE making the statement contains an AE.\r\n\r\nThe \"grouping\" concept is achieved by the AE algorithm that \"collects\" measurements and gives them a name or names (aka environment).\r\n\r\nIf an TE contains an AE, the dependent AE that collects its measurements determines if the AE subset has its own name or if it is named by the bounding TE name. For example, an AE might be composed of AE code and a DPE or TPM module. The combination of the code and the DPE/TPM allows the AE to perform attester tasks that include (a) measurement collection, (b) measurement reporting (signing), and maybe (c) measurement storage. A verifier might care about the security properties of the AE because they are security critical, so it may not be easily absorbed into the bounding TE, especially if the bounding TE has code that is less security relevant (and therefore has a different level of trust / trust policy). It makes sense for the TE to be modeled in terms of its component parts (e.g., bounding TE code, AE code, AE module).  No TE (or AE inside a TE) speaks for itself. There is a lower layer AE (key) that speaks for its trustworthiness properties. In that sense, the lower layer AE creates the 'token' that summarizes it. \r\n\r\nBased on this understanding of AE/TE dynamics, I'd say the correctness of a TE is observed by another AE. Since an AE is also a TE, there is correctness of an AE is observed by another AE until a root AE is reached.\r\n\r\nThe bounding TE is just a namespace that is common to all of its members. If an AE key generates a token that summarizes it, the summary offers information hiding abstraction, but not information elimination, as the AE inside the bounding TE may have trust differential from the non-AE components. \r\n\r\nI agree there are two types of composition, but they are related by AE behavior (implementation) that decides the grouping of the next layer.",
          "createdAt": "2023-06-09T19:55:04Z",
          "updatedAt": "2023-06-09T19:55:04Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOH6-tI85mxQOo",
      "title": "What does the verifier do if there are multiple CoBOMs available?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/96",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-24T14:52:18Z",
      "updatedAt": "2024-02-12T16:00:22Z",
      "closedAt": "2024-02-12T16:00:22Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "This was addressed by PR #153",
          "createdAt": "2024-02-12T16:00:22Z",
          "updatedAt": "2024-02-12T16:00:22Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "I_kwDOH6-tI85mxQ5t",
      "title": "Move CDDL to a separate file",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/97",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-24T14:53:22Z",
      "updatedAt": "2023-08-09T14:08:14Z",
      "closedAt": "2023-08-09T14:08:14Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Moved to a new file:\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/main/cddl/accepted-claims-set.cddl\r\n\r\nHence closing the issue",
          "createdAt": "2023-08-09T14:08:13Z",
          "updatedAt": "2023-08-09T14:08:13Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDOH6-tI85mxRi5",
      "title": "Add references to DICE and SPDM",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/98",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "andrew-draper"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-24T14:54:14Z",
      "updatedAt": "2023-09-01T20:28:56Z",
      "closedAt": "2023-09-01T20:28:55Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Already addressed, it seems.\r\n\r\n@andrew-draper to check and close this...",
          "createdAt": "2023-08-09T14:37:41Z",
          "updatedAt": "2023-08-09T14:37:41Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Pull request on branch andrew-draper-98-references",
          "createdAt": "2023-08-16T13:12:51Z",
          "updatedAt": "2023-08-16T13:12:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #104 ",
          "createdAt": "2023-09-01T20:28:55Z",
          "updatedAt": "2023-09-01T20:28:55Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "I_kwDOH6-tI85myxpM",
      "title": "Should flags-map values be prepended with 'is-'",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/100",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "flags-map is a map of boolean values. Should the code-point name be changed to 'is-<code point>' for readability?\r\n\r\nNote: the code-point name is removed by CBOR translation.  CoRIM doesn't have a JSON binding.",
      "createdAt": "2023-05-24T19:08:37Z",
      "updatedAt": "2023-06-02T16:09:25Z",
      "closedAt": "2023-06-02T16:09:25Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #94 ",
          "createdAt": "2023-06-02T16:09:25Z",
          "updatedAt": "2023-06-02T16:09:25Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDOH6-tI85mzqaU",
      "title": "Add 'is-confidentiality-protected' flags-map value",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/101",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add new flag `is-confidentiality-protected`.\r\n\r\nMore context is needed that defines flag semantics for confidentiality protection. Presumably, it should describe \"observability in memory\" properties, but could also describe \"encryption during supply / distribution\", such as encrypted SW updates.",
      "createdAt": "2023-05-24T22:29:46Z",
      "updatedAt": "2023-09-01T20:23:28Z",
      "closedAt": "2023-09-01T20:23:27Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith to come up with a better name for the flag,  and create a PR.\r\n\r\n",
          "createdAt": "2023-08-09T14:36:32Z",
          "updatedAt": "2023-08-09T14:36:32Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The PR should add a flag to `flags-map` e.g.:\r\n```\r\nflags-map = {\r\n     ...\r\n? &(is-confidentiality-protected: 9) => bool\r\n}\r\n```\r\nThe description should be something like:\r\n* is-confidentiality-protected (index 9): If the flag is true, the measured environment is confidentiality protected. For example, if the Target Environment contains memory, sensitive information in memory is obfuscated in some way, such as encryption. If the precise confidentiality mechanism is required, a vendors-specific, or profile-specific extension can be applied. Alternatively, the model information can be used to manually obtain these details.",
          "createdAt": "2023-08-09T21:51:41Z",
          "updatedAt": "2023-08-10T16:20:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #116",
          "createdAt": "2023-09-01T20:23:27Z",
          "updatedAt": "2023-09-01T20:23:27Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "I_kwDOH6-tI85rn4yG",
      "title": "Insight on verifier processing of conditional endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/110",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith",
        "andrew-draper"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "Conditional endorsement triples contain a `stateful-environment-record` that identifies the state of the target environment before the triple object (i.e., `measurement-values-map`) measurements can be applied (a.k.a., accepted into the ACCEPTED-CLAIMS). \r\n\r\nIt is currently unclear whether the `stateful-environment-record` is matched to Evidence or to ACCEPTED-CLAIMS.\r\n\r\nCorrect behavior should be that it is matched to ACCEPTED-CLAIMS where the subset of ACCEPTED-CLAIMS that matches the `stateful-environment-record` are used. \r\n\r\nThis is subtly different from matching against Reference Values where all claims in reference values must be matched before any values are accepted. \r\n\r\nIt also implies that if Evidence contains claims that do not have corresponding Reference Values, these claims would be copied into ACCEPTED-CLAIMS. Consequently, it is possible for `stateful-environment-record` in conditional endorsement triples to contain claims that are also matched by Reference Value claims. Failure to match `stateful-environment-record` claims in a conditional endorsement doesn't imply that the attestation fails, only that the endorsed values in the conditional endorsement triple object are not copied into ACCEPTED-CLAIMS.",
      "createdAt": "2023-07-14T21:42:15Z",
      "updatedAt": "2024-10-14T17:00:46Z",
      "closedAt": "2024-10-14T17:00:18Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Add proposed text for Verifier processing of Conditional Endorsements. @nedmsmith and @andrew-draper to work on this.",
          "createdAt": "2023-08-09T14:16:15Z",
          "updatedAt": "2023-08-09T14:16:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: there is an implied context for 'matching'. The context in which the reference values matching happened is the same context for matching conditional endorsements. \r\n\r\nNote: conditional endorsement currently applies to measurement-values-map measurements. Is there a reason why they shouldn't apply to all measurements (e.g., including `identity-triples` and `attest-key-triples`?  If a key is asserted as a claim, its reasonable for a conditional endorsement to be asserted where the key claim is the stateful environment to which other endorsed values conditionally apply. \r\n\r\nThe following CDDL captures this case:\r\n```\r\nstateful-environment-record = [\r\n   environment-map,\r\n   measurement-map / [ + $crypto-key-type-choice ]\r\n]\r\n```\r\nNote the addition of `/ [ + $crypto-key-type-choice ]`\r\n\r\nIs it reasonable for identity / attest-key claims to be conditionally asserted given a particular stateful environment? For example, given an environment that possesses secure key storage capability, is it reasonable that a particular key can be conditionally asserted?\r\n\r\nThe CDDL for this might be:\r\n```\r\nconditional-endorsement-triple-record = [\r\n  stateful-environment-record,\r\n  ; endorsed values\r\n  measurement-values-map / [+ $crypto-key-type-choice ]\r\n]\r\n```\r\nNote the addition of `/ [ + $crypto-key-type-choice ]`\r\nAlso, it isn't nonsensical to express that key-B can exist if key-A exists. \r\nDICE layering may be a reasonable example if key-A is at a lower layer than key-B. \r\nAs endorsements, it also asserts that layers A and B are not dynamic (at least not without cooperation from the Endorser).  Such cooperation is reasonable for environments with tight change control management such as microcode update and certain firmware update.",
          "createdAt": "2023-08-10T21:14:29Z",
          "updatedAt": "2023-08-10T21:22:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by refactoring.",
          "createdAt": "2024-10-14T17:00:44Z",
          "updatedAt": "2024-10-14T17:00:44Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOH6-tI85rn86Q",
      "title": "Insight on domain dependency behavior by Verifier",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/111",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "The `domain-dependency-triple-record` lists target environments and the other environments, usually attesting environments, the target depends on for trust establishment. \r\n\r\nIt may be unclear what behavior the Verifier should take if a target environment appears in Evidence, but does not have a corresponding dependency triple. \r\n\r\nA concern is that if an env is compromised (after its measurement / evidence is collected), the compromised env could measure an additional (attack) env, with evidence, that the Verifier will accept. \r\n\r\nNote: There may be other ways to detect this attack. The compromised env could have been issued a DICE certificate that excludes the `ECA` key purpose OID. The compromised env could have been issued an X.509 certificate with a pathlen value=0.\r\nGiven there may be multiple evidence formats that don't have these mitigations, the dependency triple may be an additional form of mitigation.\r\n\r\nHowever, to mitigate this attack, there needs to be conventions for its use. If the dependency triples are a closed set. Then only attack environments will not show up in dependency triples. Can CoRIM assert this requirement?\r\n\r\nVerifier behavior should be clear whether it detects this attack. \r\n\r\nIf the verifier should detect the attack using RIMs, then RIM authors MUST specify dependency triples. \r\n\r\nDetection requires an all-or-nothing approach. All the target envs MUST be included in RIMs, or the verifier is not expected to detect the attack. Otherwise, the possibility of unnamed, but trusted environments could exist. The Verifier is undecided as to which is legitimate. \r\n\r\nDo we think CoBOM plays a role toward identifying tags that contain dependency triples?\r\n\r\n",
      "createdAt": "2023-07-14T21:57:40Z",
      "updatedAt": "2024-09-27T04:58:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith to add the more realistic use case.",
          "createdAt": "2023-08-09T14:14:39Z",
          "updatedAt": "2023-08-09T14:14:39Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Edited description to make the attack scenario more clear and included alternative ways to  detect the attack. ",
          "createdAt": "2023-08-10T17:39:45Z",
          "updatedAt": "2023-08-10T17:39:45Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that dependency triples being a closed set is a SHOULD situation to avoid a downgrade attack, but real deployments may have to fudge things and it'll be down to verifier policy which to trust. You could improve the situation with CoBOM maybe, but those are optional.\r\n\r\nI'm still unclear what the verifier's expected processing of these triples is supposed to be. Is it that if you find that for an appraisal session that when you convert evidence into ACS entries, you create subgoals that must be discharged to first establish trust in the domains it depends on? When that's the case, I would think that an appraisal session would need all the evidence for the environments of the sum total of dependent domains that are active among the domain membership triples.\r\n\r\nWhen the domains are not cryptographically bound together in a chain of measurements, I don't know what the hope is for these triples. When the binding is there, the attestation scheme requires verifying the whole chain. Taking a step back, what is the use case scenario for this DAG structure (is it required to be a DAG? I really hope it's required to be a DAG. It's not spec'd to be a DAG)?\r\n\r\n---\r\nSpeculation:\r\n\r\nI can see maybe implicit in certain layers of access to a system, you might not get to see the whole measurement history. For example, a container's attestation shouldn't get to know about the attestation of other containers that have run on that pod: only the policy of the launcher that launched the container. The launcher signs its own attestations for workloads launched, and the certificate for that launcher is known to be issue by a CA that only issues certificates to launchers that prove they're in an approved environment themself. The kernel may even protect the key to do the signing only for a process that had a specific measurement that the CA knew...\r\n\r\nSo for that system, you say the container is in the domain of the launcher, and the launcher is in the domain of the node, and the node is in the domain of both the measurement technology and the CSP that signs certificates that the chip id in the measurement corresponds to their property that's running in a certain locality. These are all aspects I would think to understand as part of an appraisal policy of what in a complete measurement to see as salient. I understand domains more as the certificates for keys that sign the claims that I depend on, and that I have policy that certain claims should only be signed by certain authorities. Yeah, still missing the point :(",
          "createdAt": "2024-09-27T04:58:22Z",
          "updatedAt": "2024-09-27T04:58:22Z"
        }
      ]
    },
    {
      "number": 124,
      "id": "I_kwDOH6-tI85ueILS",
      "title": "Allow untagged raw-value types in evidence and endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/124",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "The current CDDL does not permit raw-value to contain an untagged bstr. This syntax is required in evidence/endorsements\r\nThis syntax may be required in reference-values which use the mask and match format",
      "createdAt": "2023-08-16T14:43:02Z",
      "updatedAt": "2024-05-07T09:25:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "cf issue 9",
          "createdAt": "2023-08-16T14:43:15Z",
          "updatedAt": "2023-08-16T14:43:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The markdown contains this text which should be tracked as an issue rather than in markdown.\r\n\r\n> I think this comparison method only works if the entry is at key 4 (because\r\nthere needs to be a mask at key 5). Should we have a Reference Value of this\r\nwhich stores [expect-raw-value raw-value-mask] in an array?",
          "createdAt": "2023-09-27T21:16:08Z",
          "updatedAt": "2023-09-27T21:16:08Z"
        }
      ]
    },
    {
      "number": 126,
      "id": "I_kwDOH6-tI85u2td7",
      "title": "Key measurements that don't have prescribed semantics",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/126",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "For-next-release"
      ],
      "body": "The `identity-triple-record` and `attest-key-triple-record` have encoded key usage semantics into the triple predicate. \r\n\r\nThere are vendor specific or otherwise additional possible key usages that differ. \r\n\r\nOne way to overload the above triples with different key usage semantics is to allow the `environment-map` to carry vendor-specific key usage semantics. For example, a `class-id` OID might define an arc for software update (.111.0) and enumerate keys from the arc (.111.1, .111.2, ..., .111.n) etc.\r\n\r\nAlternatively, the $crypto-key-type-choice could be included in `measurement-values-map` with the semantics of \"this key belongs to this environment\". Omitting key usage semantics.\r\n\r\nThe option to encode key usage semantics into the `environment-map` is still available. \r\n\r\nIf, for example, there is a SW update use case tied to attestation, the SW update Relying Party code will recognize the use case context and as needed check the environment context or identify an alternative form (such as a certificate) that contains additional key usage context.\r\n\r\nThe minimal attestation statement is \"this key belongs to this environment\". \r\n\r\n`measurement-values-map` becomes:\r\n```\r\nmeasurement-values-map = non-empty<{\r\n  ? &(version: 0) => version-map\r\n  ? &(svn: 1) => svn-type-choice\r\n  ? &(digests: 2) => [ + digest ]\r\n  ? &(flags: 3) => flags-map\r\n  ? (\r\n      &(raw-value: 4) => $raw-value-type-choice,\r\n      ? &(raw-value-mask: 5) => raw-value-mask-type\r\n    )\r\n  ? &(mac-addr: 6) => mac-addr-type-choice\r\n  ? &(ip-addr: 7) =>  ip-addr-type-choice\r\n  ? &(serial-number: 8) => text\r\n  ? &(ueid: 9) => ueid-type\r\n  ? &(uuid: 10) => uuid-type\r\n  ? &(name: 11) => text\r\n  ? &(keyid: 12) => $crypto-key-type-choice\r\n  * $$measurement-values-map-extension\r\n}>\r\n```\r\nIdentity and attest key triples can remain in `triples-map` since the triple predicate as additional semantics over what is proposed.\r\n```\r\n...\r\n  ? &(identity-triples: 2) =>\r\n    [ + identity-triple-record ]\r\n  ? &(attest-key-triples: 3) =>\r\n    [ + attest-key-triple-record ]\r\n...\r\n```\r\n",
      "createdAt": "2023-08-21T17:34:43Z",
      "updatedAt": "2024-07-08T16:39:31Z",
      "closedAt": "2024-07-08T16:39:30Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "`identity-triples` and `attest-key-triples` should be updated with text that describes the verifier behavior when these triples are asserted as Endorsed Values and as Evidence/Reference Values.",
          "createdAt": "2023-09-01T19:52:06Z",
          "updatedAt": "2023-09-01T19:52:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #127",
          "createdAt": "2023-09-01T21:44:56Z",
          "updatedAt": "2023-09-14T22:03:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The previous CoRIM meeting solicited use case context for this issue and PR #127 \r\n\r\nA target environment could be a module that contains / protects crypto keys such as a wallet, password manager / credential manager, secure storage device. The AE may have a trustworthy way to determine which keys are protected by the TE.\r\n\r\nThe keys may be used at a later (e.g., to protect a digital wallet transition or to close the lock on a browser TLS session), after attestation completes. The attestation results nevertheless includes the key (key-id) that the TE protects and therefore the key protection properties can be obtained from the TE attestation results. The subsequent transaction that uses the key wants to prove that the transaction key is protected with the properties found in the TE attestation results. Hence, the need for the attestation results to include the key (key-id) as part of the accepted claims set.\r\n\r\nThe identity and attest-key triples ascribe additional Verifier behavior that would be inappropriate for these use cases.",
          "createdAt": "2023-09-14T22:14:39Z",
          "updatedAt": "2023-09-14T22:19:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There may be an alternative to PR #135 that achieves the objective while building on PR #127 where `? &(cryptokeys: 12) => [ + $crypto-key-type-choice ]` is augmented to include explicit Verifier directives for checking crypto keys.\r\nFor example:\r\n```\r\n? &(cryptokeys: 12) => [ + crypto-key-map ]\r\ncrypto-key-map = {\r\n   &(key: 0) => $crypto-key-type-choice\r\n   ? &(key-check: 1) => [ + $crypto-key-checks-type-choice ]\r\n}\r\n$crypto-key-checks-type-choice /= &(offline-check: 0) ; do an offline check of cert path\r\n$crypto-key-checks-type-choice /= &(pop-check: 1) ; do a proof-of-possession check\r\n```\r\nIn the context of attestation results, population of `key-check` means the Verifier successfully performed these checks.\r\n\r\nIt doesn't make sense to populate `key-check` in Evidence.\r\n\r\nThis approach would nullify the need for disparate triples for identity key and attest key. Key check semantics that are specific to identity / attest keys could be defined under `$crypto-key-checks-type-choice`.",
          "createdAt": "2023-10-04T00:05:31Z",
          "updatedAt": "2023-10-04T00:08:41Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "I_kwDOH6-tI85vMm7Y",
      "title": "Accepted Claims Set Initialization wording",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/128",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> The Accepted Claims Set is initialised with cryptographically verified Evidence\r\n> from the Attestation Environments.\r\nSuggested change:\r\nThe Accepted Claims Set is initialized by copying Evidence claims from the authenticated Attester's Target Environments into the Verifier's Accepted Claims Set. By default, all Attester claims are allowed, unless disallowed by Reference Claims that do not satisfy appraisal checks.\r\n\r\n> {{sec-dice-spdm}} provides information on how evidence collected using\r\n> DICE and SPDM is added to the Accepted Claims Map.\r\nSuggested change:\r\n{{sec-dice-spdm}} provides information on how DICE and SPDM Evidence is reformatted into CoMID schema compliant expressions before being added to the Accepted Claims Set.",
      "createdAt": "2023-08-24T17:16:36Z",
      "updatedAt": "2023-09-01T19:50:06Z",
      "closedAt": "2023-09-01T19:50:05Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #129 ",
          "createdAt": "2023-09-01T19:50:05Z",
          "updatedAt": "2023-09-01T19:50:05Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "I_kwDOH6-tI85vMwVJ",
      "title": "American or British english",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/130",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Different authors may use American or British english word choice. Should the draft be consistently one or the other?",
      "createdAt": "2023-08-24T17:43:55Z",
      "updatedAt": "2023-09-01T19:47:21Z",
      "closedAt": "2023-09-01T19:47:20Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The core team agreed to use American english conventions.",
          "createdAt": "2023-09-01T19:47:20Z",
          "updatedAt": "2023-09-01T19:47:20Z"
        }
      ]
    },
    {
      "number": 131,
      "id": "I_kwDOH6-tI85vTEZh",
      "title": "cose-label-and-value.cddl included twice",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/131",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The corim-frags.mk includes cose-label-and-value.cddl twice resulting in a warning.",
      "createdAt": "2023-08-25T15:40:49Z",
      "updatedAt": "2024-05-07T09:23:28Z",
      "closedAt": "2024-05-07T09:23:28Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed via #134, hence closing this issue!",
          "createdAt": "2024-05-07T09:23:28Z",
          "updatedAt": "2024-05-07T09:23:28Z"
        }
      ]
    },
    {
      "number": 132,
      "id": "I_kwDOH6-tI85vxkYS",
      "title": "Collision for CBOR tag 560",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/132",
      "state": "CLOSED",
      "author": "setrofim",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "CBOR tag `#6.560` is used for both `tagged-cert-path-thumbprint-type` and `tagged-bytes` types (See: https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#name-raw-values-types and https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#name-crypto-keys).",
      "createdAt": "2023-08-31T10:43:31Z",
      "updatedAt": "2023-09-04T16:49:40Z",
      "closedAt": "2023-09-04T16:49:39Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There are earmarks for specific CBOR tags for xcorim (525-527) and concise-evidence (570-571). Should these be included in the table in the .md file? Should the repo maintain a local registry? ",
          "createdAt": "2023-09-01T16:03:17Z",
          "updatedAt": "2023-09-01T16:03:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "fixed by PR #133 ",
          "createdAt": "2023-09-04T16:49:39Z",
          "updatedAt": "2023-09-04T16:49:39Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "I_kwDOH6-tI85wTZ3S",
      "title": "Need definition of what is a group for the purpose of reference value matching",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/136",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The text uses the placeholder term \"group\" to describe reference values and endorsed values which are processed together.\r\nThere are different ways proposed to encode the group concept in the CoRIM file\r\nWe need to agree how the \"group\" is encoded, and probably rewrite the document to replace the term \"group\" with new text",
      "createdAt": "2023-09-06T14:26:04Z",
      "updatedAt": "2024-05-01T14:17:56Z",
      "closedAt": "2024-05-01T14:17:47Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "(context: Lines 1468-1469 in PR #107) The grouping construct should apply to all forms of claims (Endorsements, Evidence, RVs). The grouping construct isn't itself a conceptual message type. This language treats it like a CM which can be misleading.",
          "createdAt": "2023-09-06T19:01:28Z",
          "updatedAt": "2023-09-06T19:01:28Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "In the current text, the term \"group\" is a placeholder for a set of Reference Values and Endorsed Values which define a Conditional Endorsement. Ned brings up an important point, which is that we should think about extensibility.\r\n\r\nI think the high level question we need to address first is: **Do we have an expectation that triples in the same CoMID tag are expected to interact with each other more than triples in different CoMID tags?**\r\n\r\nThe answer to this question will inform the direction in which we proceed.\r\n\r\nAnother way to ask this question is to ask whether all triples must stand alone, or whether triples can be connected?\r\n\r\nThe more direct question is about how we should represent the general case of Conditional Endorsements in a CoMID?\r\n\r\nThe current text contains two triples which represent special cases of Conditional Endorsement: Conditional Endorsement Series Triple and Conditional Endorsement Triple. Each of these triples defines a group of Reference Values and Endorsed Values which if processed together define a group.\r\n\r\nThese triples are only able to describe a group where all reference values and endorsements have the same environment-map.\r\n\r\nWe need a way to describe groups where the reference values and/or endorsements are in multiple environments.\r\n\r\nI have seen three approaches proposed:\r\n1. The group is composed of all reference values and endorsements in the same CoMID tag\r\n2. The group is composed of all reference values and endorsements in the same CoMID tag with the same class-id\r\n3. The group is explicitly described by a triple\r\n  a. This implies that we should deprecate reference-value-triple and endorsed-value-triple\r\n  b. For support of legacy CoMID tags we might want to provide a load time rewrite which converts a tag containing reference-value-triple and endorsed-value-triples into one containing a single grouping triple\r\n  c. If we take this approach then this means that Device Identity Triple and Attestation Keys triple can't be used as part of matching\r\n\r\nBoth PR #169 and PR #168 take approach 3.\r\n\r\nIf we take approach 3 then I think we are explicitly saying that tag boundaries do not matter, and that we cannot, in future, define triples which interact with each other because they are in the same tag.\r\n\r\nIf we take approach 1 or 2 then this limits what we can do with editing the contents of a CoMID tag (which may or may not be a bad thing).",
          "createdAt": "2023-10-20T08:57:35Z",
          "updatedAt": "2023-10-20T09:11:39Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure the 3a conclusion make sense. There is a lot of work and working code behind these triples. \r\nSince we have concluded that there are at least three or four types of grouping semantics, it is somewhat ambiguous what we mean by \"the group\".  \r\nThe notion that a triple that captures grouping semantics somehow causes reference and endorsed triples to be deprecated isn't obvious.\r\n\r\n",
          "createdAt": "2023-10-20T16:13:25Z",
          "updatedAt": "2023-10-20T16:13:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not convinced the grouping discussion is closed. We should get broader consensus before closing this issue.",
          "createdAt": "2024-01-18T16:13:05Z",
          "updatedAt": "2024-01-18T16:13:05Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I closed this issue (which I filed) because the text referring to group was deleted by PR #193, it has been replaced by multi-conditional-endorsement and other triples.\r\nIn our discussions others have used the word \"group\" to mean something else, there might be more discussions to be had on that.\r\nI think it is probably better to use new issues to discuss those meanings.",
          "createdAt": "2024-01-19T14:33:07Z",
          "updatedAt": "2024-01-19T14:33:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in agreement with ANdy and Ned",
          "createdAt": "2024-05-01T14:17:55Z",
          "updatedAt": "2024-05-01T14:17:55Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOH6-tI85wUADQ",
      "title": "Verification Flow needs to consider both profile in CoRIM and Evidence",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/137",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "The section of Verification does cover a reference to profile for performing appraisal procedure.\r\n\r\nHowever the sections only addresses `profiles` in terms of CoRIM Profiles. However, \r\n\r\n1. There are actually two profiles, one in Endorsements (Reference Values and Endorsed Values) and the other in Evidence.\r\n2. Evidence profile is associated to Endorsement profile and there is a linkage between the two ( there could be 1:N relationship between them) and they are not identical.\r\n4. Also not all Evidence are carried out as CoRIM as well.\r\n\r\nConsidering all the above aspects the Verification sections which describes profile based Verification needs to clearly set the context in which profiles are referred.\r\n\r\nOne suggestion is to use another term: known as \"Attestation Format\" OR \"Attestation Scheme\" which maps to a unique scheme for Appraisal considering CoRIM Endorsement + Evidence Profile into consideration!\r\n\r\n",
      "createdAt": "2023-09-06T15:43:10Z",
      "updatedAt": "2024-05-07T09:12:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I am not convinced we need profile in Evidence.\r\nThe profile applies to a CoRIM file, and my assumption is that the profile is a short-cut way for a CoRIM author to tell a Verifier either:\r\n- If you don't understand feature F then you won't be able to process this file\r\n- There are two ways to process feature G, I want you to process the feature using G1",
          "createdAt": "2023-10-15T10:38:14Z",
          "updatedAt": "2023-10-15T10:38:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I see the relationship between profile between evidence and reference in a more fundamental way. In order for the Verifier to parse evidence it needs to know if it is capable of parsing the rest of the evidence. This is Andy's bullet number 1, but applied to parsing not just processing. The SPDM table of contents header, in the TCG Concise Evidence binding for SPDM spec, is there to ensure the parser knows which profile was used to construct the evidence found in the `consise-evidence` field. This allows the Verifier to find a suitable parser before trying and failing to parse something that is specific to a profile. \r\nThat spec sets the precedent that the conceptual message wrapper containing `concise-evidence` will define the profile if one is needed. Anything that is based on the default behavior (e.g., DICE layering) doesn't require a profile.\r\n\r\nI'm not certain there is (should be) a 1:N relationship between profiles for Evidence and Reference Values. (BTW: 9334 separates Endorsers from RVPs - the terminology in Yogesh's bullet 2 seems to combine them).  The reasoning why there is a 1:1 relationship between evidence and reference value profile is that it will be difficult to ensure combinatorics of supporting multiple profiles doesn't result in a security error. This was the reason we dialed back the multiplicity of profile in the current comid schema to be a singleton. There is an assumption that the CoMID profile id/name should be the same as the evidence profile id/name. Maybe this should be clarified in prose?\r\n\r\nIn cases such as DICE X.509 certificates as Evidence and for SPDM indirect cases. There is a pre-step assumed that maps the DiceTcbInfo format into a `concise-evidence` format. Since DICE is the default profile no explicit profile name is needed.\r\n\r\nThere is also a profile in EAR / Concise Attestation Results schemas. There are similar dependencies on parsing as well as processing. If the AR profile differs from the comid profile, there is an assumption that the AR profile includes semantics for selecting an appropriate comid profile. This could be expressed as prose in the profile. Ideally, they are the same profile id/name to avoid combinatoric disconnect. ",
          "createdAt": "2023-10-16T23:15:31Z",
          "updatedAt": "2023-10-16T23:23:24Z"
        }
      ]
    },
    {
      "number": 138,
      "id": "I_kwDOH6-tI85wUv6S",
      "title": "Verifier behavior for DiceTcbInfo `type` field",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/138",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "The TcbInfo `TYPE` is an OCTET STRING that can contain whatever form that `class-id` can take. It supports tagged UUID `#6.37(uuid-type)` and tagged int `#6.551(int)` in addition to tagged OID `#6.111(oid)`. \r\nThe Verifier reads the RV manifest to know how to translate the Evidence OCTET STRING. This poses a problem for Verifiers that copy the Evidence into ACS without knowing the RV context. \r\nPossibly, they need a \"dirty bit\" that signals when the schema translation has been applied?",
      "createdAt": "2023-09-06T17:49:32Z",
      "updatedAt": "2024-05-07T08:58:55Z",
      "closedAt": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "This is only a problem if the Evidence Collection phase has added an ACS entry with a type entry that does not include a tag.\r\n\r\nI think the definition of how to add Evidence to the ACS should note that adding tags to the type field is important.",
          "createdAt": "2024-02-12T15:57:50Z",
          "updatedAt": "2024-02-12T15:57:50Z"
        }
      ]
    },
    {
      "number": 139,
      "id": "I_kwDOH6-tI85wU0q6",
      "title": "CBOR tag for `digests` in `measurement-values-map`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/139",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "PR #107, line 1555, suggests the need for a CBOR tag for `digests` measurement, but doesn't include motivation / rationale.\r\n\r\nThe current documented semantics are that it is an array of `digest` over the same object. The motivation is algorithm agility.\r\n\r\nA different use case might seek to encode digests of different objects. There are multiple options for defining a measurement with different semantics that `digests`. E.g.: define a new code point, define a different `environment-map`, create a profile that defines a new code point, define a CBOR tagged `digests` that encodes semantics in the CBOR tag. Each approach has trade-offs and may have verifier behavior that should be documented. \r\n\r\nThis issue is intended to capture the trade-offs discussion.",
      "createdAt": "2023-09-06T18:04:50Z",
      "updatedAt": "2024-05-07T09:25:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 140,
      "id": "I_kwDOH6-tI85wU5Jp",
      "title": "Verifier processing of `authorized-by`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/140",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #107 line 1528, presumes there is no authority context without use of `authorized-by` statements. However, given all RVs are signed / authenticated, all RVs have an authorized-by context. The same is true for Evidence / ACS. All Evidence is signed / authenticated, hence has an authorized-by context. I don't think the conditional wording is needed, but rather to explain better the authorized-by context.\r\n\r\nNamely, that all claims are entered into the ACS with authority context (either by assigning the corim signer `corim-signer-map`, or by `authorized-by` in `measurement-map`.\r\n\r\nNote: `coswid-triples`, `identity-triples` and `attest-key-triples` need to be updated to include `authorized-by` since they don't use `measurement-map`. ",
      "createdAt": "2023-09-06T18:18:12Z",
      "updatedAt": "2023-10-02T12:30:10Z",
      "closedAt": "2023-10-02T12:30:10Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree this should be done, and we need to define authorized by better.\r\nOne thing to note is that we need description of use cases for this header, and to describe how authorized by is filled in when evidence/endorsements are added to the ACS",
          "createdAt": "2023-09-08T18:02:06Z",
          "updatedAt": "2023-09-08T18:02:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "A partial solution to this issue involves augmenting `identity-triples` and `attest-key-triples` with `authorized-by`. The solution proposed here builds on PR #127 which adds ` ? &(cryptokeys: 12) => [ + $crypto-key-type-choice ]` measurement to `measurement-values-map`. \r\nThe current `identity-triples` uses:\r\n```\r\nidentity-triple-record = [ \r\n     environment-map, \r\n     [ + $crypto-key-type-choice ] \r\n]\r\n```\r\nwhich doesn't include `authorized-by`.\r\n```\r\ntriples-map = {\r\n...\r\n  ? &(identity-triples: 2) =>\r\n    [ + identity-triple-record ]\r\n  ? &(attest-key-triples: 3) =>\r\n    [ + attest-key-triple-record ]\r\n...\r\n}\r\n```\r\nInstead, identity-triple-record is expanded:\r\n```\r\nidentity-triple-record = [ \r\n     environment-map, \r\n     [ + $crypto-key-type-choice ] / measurement-map\r\n]\r\n```\r\nand\r\n```\r\nattest-key-triple-record = [ \r\n     environment-map, \r\n     [ + $crypto-key-type-choice ] / measurement-map\r\n]\r\n```\r\nSince, measurement-values-map contains `[ + $crypto-key-type-choice ]` the same key information can be described in the measurement value, but since measurement-map is included, the `authorized-by` context can be supplied.\r\n\r\nRetaining the current definition prevent breaking backward compatibility.",
          "createdAt": "2023-09-11T21:30:19Z",
          "updatedAt": "2023-09-11T21:30:19Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The coswid triple could be instrumented with `authroized-by` similarly:\r\n```\r\ncoswid-triple-record = [\r\n  environment-map\r\n  [ + concise-swid-tag-id ]\r\n]\r\n\r\nconcise-swid-tag-id = text / bstr .size 16\r\n```\r\nbecomes:\r\n```\r\ncoswid-triple-record = [\r\n  environment-map\r\n  [ + concise-swid-tag-id ] / measurement-map\r\n]\r\n\r\nmeasurement-values-map = {\r\n...\r\n? &(coswids: 13) =>  [ + concise-swid-tag-id ]\r\n...\r\n}\r\n```\r\n\r\nAlternatively, the `coswid-triples` triple could be deprecated (assuming no backward compatibility implications exist) and only define:\r\n```\r\nmeasurement-values-map = {\r\n...\r\n? &(coswids: 13) =>  [ + concise-swid-tag-id ]\r\n...\r\n}\r\n```",
          "createdAt": "2023-09-11T21:46:36Z",
          "updatedAt": "2023-09-11T21:54:06Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "As I understand it, the processing rules for `attest-key-triple-record` are that one of the keys listed in the triple must be used to authenticate part of the evidence. If I'm correct there then this triple is really an expansion of authorized-by, but perhaps it can be replaced by an authorized-by on the reference-value being matched (doesn't work for conditional series triple etc).\r\n\r\nIf I understand `identity-triple-record` correctly then it could be deprecated and replaced by a $crypto-key-type-choice as discussed in issue #126",
          "createdAt": "2023-09-14T09:05:49Z",
          "updatedAt": "2023-09-14T09:06:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> As I understand it, the processing rules for `attest-key-triple-record` are that one of the keys listed in the triple must be used to authenticate part of the evidence. If I'm correct there then this triple is really an expansion of authorized-by, but perhaps it can be replaced by an authorized-by on the reference-value being matched (doesn't work for conditional series triple etc).\r\n> \r\n> If I understand `identity-triple-record` correctly then it could be deprecated and replaced by a $crypto-key-type-choice as discussed in issue #126\r\n\r\nAuthorized-by is an alternative way of declaring authority (of a claim). Use of a key (to sign the claim) is the other (normal?) way to do it. \r\n\r\nA measurement asserted via [ref | end | evidence]-triples implies appraisal through byte-wise comparison.\r\n\r\nA measurement asserted via [identity | attest-key]-triples implies appraisal through some sort of key verification operation. PR #135 and issue #126 are addressing exact semantics.\r\n\r\nI don't think there is agreement that authority for a claim is the same as a claim that is a key.\r\n\r\nIt may be that both require key verification of some kind, but that doesn't mean they are equivalent.",
          "createdAt": "2023-09-14T20:19:45Z",
          "updatedAt": "2023-09-14T20:19:45Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #148 submitted which fixes this issue.\r\n\r\n",
          "createdAt": "2023-10-02T12:28:55Z",
          "updatedAt": "2023-10-02T12:28:55Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm going to close this issue and continue discussing the key triples in #135 and #126",
          "createdAt": "2023-10-02T12:30:10Z",
          "updatedAt": "2023-10-02T12:30:10Z"
        }
      ]
    },
    {
      "number": 141,
      "id": "I_kwDOH6-tI85wU7-z",
      "title": "Verifier behavior for extensions to base corim schema",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/141",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "PR #107 lines 1523 - 1526, describe verifier behavior for extensions to the base schema. This topic should be handled by a section dedicated for that purpose (not as a reader note). \r\n\r\nThis new section should consider the multiple ways for key-value Claims to be introduced into the schema and/or for new semantics to be ascribed to key-value Claims. \r\n\r\nThe current text biases the discussion toward CBOR tagged values.",
      "createdAt": "2023-09-06T18:26:51Z",
      "updatedAt": "2024-05-07T08:57:39Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 142,
      "id": "I_kwDOH6-tI85wU_wY",
      "title": "Verifier terminology for internal representations of claims",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/142",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #107 makes heavy use of terminology that assumes CBOR encoded internal representations. However, it isn't the intention of this draft to mandate a particular internal representation. The terminology should reflect this non-goal. \r\n\r\nLine 1520 is an example as it uses \"CBOR encoded values\" to refer to measurements in an internal representation that are in big-endian word order (which is prescribed by CBOR encoders). \r\n\r\nIf an implementation discards CBOR encoding artifacts as part of a mapping to an internal representation. The language describing Verifier behavior should be sensitive to this possibility. For example, line 1520 could change from: \"using binary comparison of their CBOR encoded values.\" to \"using an internal representation that supports binary comparison of keys and values.\"",
      "createdAt": "2023-09-06T18:37:49Z",
      "updatedAt": "2024-05-03T16:54:08Z",
      "closedAt": "2024-05-03T16:54:08Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "The intention of that text is to say that the environment-map comparison compares the objects for equality. Comparing this using binary comparison of the CBOC encoding is the simplest and fastest way to do this. The CoRIM author knows what the encoding of the evidence is and can adjust the encoding of the Reference Value to exactly match this.\r\nIf there is a better way to describe this then please send amended text.",
          "createdAt": "2023-09-07T12:05:24Z",
          "updatedAt": "2023-09-07T12:05:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "\"The `environment-map` comparison compares the objects for equality. The Verifier may translate an encoded form of the `environment-map` to an internal representation to facilitate binary compatible comparisons. The internal representation may be an encoding format, such as CBOR. The internal representation MUST ensure byte order, ASCII representation, array representation etc... are consistent across Evidence, Reference Values, and Endorsements regardless of origin encodings.\" ",
          "createdAt": "2023-09-07T15:55:41Z",
          "updatedAt": "2023-09-07T15:55:58Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Existing text explains that internal representation is exemplary. This is sufficient to close this issue.",
          "createdAt": "2024-05-03T16:54:08Z",
          "updatedAt": "2024-05-03T16:54:08Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "I_kwDOH6-tI85wVJTe",
      "title": "Verifier behavior for matching RVs to ACS containing Evidence Claims",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/143",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #107 lines 1458-1466, describe RV matching of Evidence in ACS, but instead focuses on matching Endorsements / Endorsed Value Claims. It is unclear if matching Endorsements is applied before/after RV matching. I believe EV matching happens after RV matching.\r\n\r\nIt would help if terminology was more pedantic in terms of identifying the type of claim contained in the ACS. I.e., \"If any Reference Value Claim in a group does not match an Evidence Claim in the ACS then ...\"",
      "createdAt": "2023-09-06T19:05:46Z",
      "updatedAt": "2024-05-03T16:51:06Z",
      "closedAt": "2024-05-03T16:51:06Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "The text commented on by this issue has been changes as part of PR #193.\r\n\r\nIs it OK to close this issue?",
          "createdAt": "2024-02-12T15:52:08Z",
          "updatedAt": "2024-02-12T15:52:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it OK to close this issue?\r\n\r\nOK by me.",
          "createdAt": "2024-02-12T17:04:04Z",
          "updatedAt": "2024-02-12T17:04:04Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "I_kwDOH6-tI85wbZK1",
      "title": "PR 107 Confusing text",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/144",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "in Pull Request:\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/107\r\n\r\nThe following text is ambigous\r\n\r\nA Reference Value consists of an `environment-map` plus a `measurement-map`. In the\r\n`reference-values-triple-record` these are packaged together. In other triples multiple\r\nReference Values are represented more compactly by letting one `environment-map`\r\napply to multiple `measurement-map`s.\r\n\r\nNeed to re-write the same.",
      "createdAt": "2023-09-07T16:35:57Z",
      "updatedAt": "2024-03-27T15:48:27Z",
      "closedAt": "2024-03-27T15:48:26Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Can the issue description point out the exact ambiguity we want to address?  I guess in a couple of weeks all the cached context which now looks evident will be lost and we'll be left wondering what we meant and what needs doing...",
          "createdAt": "2023-09-07T16:41:27Z",
          "updatedAt": "2023-09-07T16:41:27Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "The issue is the text above intends to describe how Verifier internally should collect all the measurements pertaining to the same `environment`   coming from a sea of triples  from multiple CoRIMs.\r\n\r\nHowever the text above indicates the opposite!",
          "createdAt": "2023-09-07T16:45:53Z",
          "updatedAt": "2023-09-07T16:46:36Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Within the grouping context, the Verifier uses the environment fields in the ACS to locate relevant RVs. The environment fields in RVs must exactly match the environment fields in the ACS.\r\n\r\nThe measurement fields in matching RVs, within the grouping context, are matched with measurement fields in the ACS. All RV measurement fields MUST match an ACS measurement field. Otherwise, matching (within the grouping context) fails.\r\n\r\nNote: when grouping context is resolved, this text can be updated.",
          "createdAt": "2023-09-07T16:58:21Z",
          "updatedAt": "2023-09-07T16:58:21Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "The text mentioned at the start of this issue has been replaced as part of PR #193.\r\n\r\nIs it ok to close this issue?",
          "createdAt": "2024-02-12T15:51:09Z",
          "updatedAt": "2024-02-12T15:51:09Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as Andy has addressed this using PR #193 ",
          "createdAt": "2024-03-27T15:48:27Z",
          "updatedAt": "2024-03-27T15:48:27Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "I_kwDOH6-tI85w3QA1",
      "title": "crypto-key as instance environment identifier",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/146",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`environment-map` supports class, instance and group identifiers. Instance identifiers can be UUID or UEID. \r\n\r\nA PRoT use case can use key-id to identify components by their key. \r\nA PRoT may dynamically discover \"platform\" devices (either via hot-plug or by rebooting). The PRoT can perform local security checks (or not) and report discover of the device(s) to a remote Verifier. \r\n\r\nThe CoMID schema can represent information about the device by identifying it using its key. For example, it may have a DICE device or alias key. \r\n\r\nHowever, the current definition of `instance` in `environment-map` doesn't allow keys as identifiers. This can be fixed by:\r\n```\r\n$instance-id-type-choice /= $crypto-key-type-choice\r\n```\r\n`$crypto-key-type-choice` is already a CBOR tagged value.",
      "createdAt": "2023-09-13T00:36:55Z",
      "updatedAt": "2024-03-27T15:47:01Z",
      "closedAt": "2024-03-27T15:47:00Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "PRoT: Platform Root of Trust",
          "createdAt": "2023-09-27T11:21:23Z",
          "updatedAt": "2023-09-27T11:21:23Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Key material unique to an environment can of course be used to identify the environment. Both an external kid as well as a pub key in cases of pub/priv key pairs can be used to identify an environment, correspondingly. As long as the security considerations are clear and identification via key material does not come with unwanted side effects, that should be okay?\r\n",
          "createdAt": "2023-09-27T11:25:06Z",
          "updatedAt": "2023-09-27T11:25:06Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Are \"platform\" devices simply (modular) device components, such as a NIC?",
          "createdAt": "2023-09-27T11:26:00Z",
          "updatedAt": "2023-09-27T11:26:00Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are \"platform\" devices simply (modular) device components, such as a NIC?\r\n\r\nCould be, the lead Attester determines which components of the platform are grouped together as part of a session with a Verifier. The lead Attester authenticates with a \"Device ID\" key.",
          "createdAt": "2023-09-28T21:02:29Z",
          "updatedAt": "2023-09-28T21:03:04Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing the issue as PR #151 has been merged!",
          "createdAt": "2024-03-27T15:47:00Z",
          "updatedAt": "2024-03-27T15:47:00Z"
        }
      ]
    },
    {
      "number": 147,
      "id": "I_kwDOH6-tI85w7qYr",
      "title": "Allow scope for 0, 1 to N CoBOM's based on policy",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/147",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also need to talk of relevance of Product when talking about CoBOM",
      "createdAt": "2023-09-13T14:42:02Z",
      "updatedAt": "2023-10-05T14:30:37Z",
      "closedAt": "2023-10-05T14:30:37Z",
      "comments": []
    },
    {
      "number": 149,
      "id": "I_kwDOH6-tI85xFqfE",
      "title": "environment-measurement tuple terminology and semantics",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/149",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "We need abstract terminology that refers to the combination consisting of environment value(s) with measurement value(s). The DICE Endorsement Architecture for Devices spec uses \"Claims\" and \"Claims triple\" as the abstract term. The I-D doesn't need to reuse this terminology, but it could rather than define a synonym. \r\n\r\nAs a place holder name EMT could be used (environment measurement tuple / triple). \r\n\r\nThe semantics of an EMT should be defined as part of this issue.\r\n\r\nCoRIM doesn't currently address a corner case of EMTs where the values asserted via the environment can be accepted into the ACS. For example, if 'model' is asserted via the environment, does it show up as an entry in the ACS? A justification for why it should show up is that if the value successfully matches (e.g., evidence and reference) then all the values in both environment and measurement are accurate representations of the Attester's actual state.\r\n\r\nTo express this logically, any environment value that matches automatically becomes a valid measurement value. Consequently, it isn't wrong if a EMT contains only environment values (because the measurement value are implicitly populated from the environment). The triple logic is still satisfied.\r\n\r\nHowever, from a data definition view, the measurement portion can be optional.  I.e.:\r\n```\r\nendorsed-triple-record = [\r\n   environment-map,\r\n   ? measurement-map\r\n]\r\n```\r\nor\r\n```\r\nendorsed-triple-record = [\r\n   environment-map,\r\n   measurement-map\r\n]\r\nmeasurement-values-map = { ; minus the non-empty constraint\r\n  ? ...\r\n}\r\n```\r\nare also valid expressions of an EMT.\r\n\r\nThe value of recognizing that environment values are also measurement values, is the data doesn't have to redundantly include the same value in two places (environment and measurement). \r\n\r\nThis also means a value defined for environment-map is also valid for measurement-values-map. However, the current CDDL restricts use cases where a valid environment that uses a subset of possible values, cannot assert a value as a measurement. E.g., Env: `class-id`=777, Meas: `model`=\"foo\" is not possible with the current schema. But EMP semantics doesn't expect this restriction.\r\n",
      "createdAt": "2023-09-14T21:08:28Z",
      "updatedAt": "2024-05-03T16:50:37Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "partially addressed by PR #152 ",
          "createdAt": "2023-09-20T20:10:30Z",
          "updatedAt": "2023-09-20T20:10:30Z"
        }
      ]
    },
    {
      "number": 150,
      "id": "I_kwDOH6-tI85xFs7q",
      "title": "crypto-key-type-choice rewording",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/150",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix",
        "shouldfix"
      ],
      "body": "Issue #126  and PRs #127 and #135 are related.\r\n\r\nThe scope of PR #127 is limited to identity | attest-key triples. This issue focuses on `$crypto-key-type-choice` wording. It acknowledge the various contexts that crypto keys may be used, including:\r\n- authorized-by\r\n- measurement-values-map (see PR #127)\r\n- environment-map (see issue #146)\r\n- attest-key and identity triples (see PR #135)\r\n\r\nThe explanation of `$crypto-key-type-choice` should consider the conceptual message perspectives that may include: evidence, endorsement, and reference.",
      "createdAt": "2023-09-14T21:17:57Z",
      "updatedAt": "2024-05-07T08:56:49Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 154,
      "id": "I_kwDOH6-tI85yLZFK",
      "title": "Assign CBOR tag for digest processing rules",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/154",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "The digest processing rules refer to tag #6.TBD\r\nThe tag should be defined",
      "createdAt": "2023-09-27T13:26:39Z",
      "updatedAt": "2024-05-07T08:56:26Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The issue should include the use case. It seems the PR #203 points to this issue for context, but none is provided.",
          "createdAt": "2024-05-01T17:49:02Z",
          "updatedAt": "2024-05-01T17:49:02Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "I_kwDOH6-tI85yL5Ef",
      "title": "Enhance matching rules to allow both instance rims and class rims to match an instance measurement",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/155",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "",
      "createdAt": "2023-09-27T14:29:20Z",
      "updatedAt": "2024-01-09T11:15:36Z",
      "closedAt": "2024-01-09T11:15:36Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Duplicate of #172 ",
          "createdAt": "2024-01-09T11:15:36Z",
          "updatedAt": "2024-01-09T11:15:36Z"
        }
      ]
    },
    {
      "number": 156,
      "id": "I_kwDOH6-tI85yL7rU",
      "title": "Security Considerations on using key material (or kid) to identify environments",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/156",
      "state": "OPEN",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "At least a notion to the effect of \"reusing evidence generating key material to identify an attesting environment is fine\" is required as part of the SecConSec.",
      "createdAt": "2023-09-27T14:34:47Z",
      "updatedAt": "2024-05-07T09:26:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "this issue is rooted in the merged PR #151 ",
          "createdAt": "2023-09-27T14:35:09Z",
          "updatedAt": "2023-09-27T14:35:09Z"
        }
      ]
    },
    {
      "number": 157,
      "id": "I_kwDOH6-tI85yMD5X",
      "title": "Describe hierarchical matching of RIMs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/157",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "Describe the process where RIMs add endorsements and later RIMs match against those",
      "createdAt": "2023-09-27T14:50:56Z",
      "updatedAt": "2024-05-07T08:54:40Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 158,
      "id": "I_kwDOH6-tI85yZmSl",
      "title": "Need to define how Endorsements can appear in the Accepted Claims set",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/158",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The RATS Architecture defines Endorsements as the entity the Verifier may  use after the \r\nEvidence Claims Matches the Reference Values,\r\n\r\nThe Accepted Claims Set (ACS) is a Data Structure Set containing Claims which have been marked as \r\n`Ready for Appraisal` \r\n\r\nNow if the Appraisal has not been done, how ACS contains Endorsed Values/ Endorsements needs to be clearly described when this can happen.",
      "createdAt": "2023-09-29T13:51:53Z",
      "updatedAt": "2024-03-27T15:45:00Z",
      "closedAt": "2024-03-27T15:44:59Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "If we're using the ACS definition in section 5.1: \"Accepted Claims Set (ACS): A structure that holds EMT Claims that have been vetted following the appraisal process. The ACS describes the actual state of an Attester that has been vetted by Appraisal Policy. The ACS also keeps track of a Claim's authority.\"\r\n\r\nThen it isn't clear that ACS contains claims that are \"ready for appraisal\". \r\n\r\nCan you cite where this text appears?",
          "createdAt": "2023-09-29T17:07:39Z",
          "updatedAt": "2023-09-29T17:07:39Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith It is quite clear right at the start of section:[5.3.2. ](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-5.3.2)[The Accepted Claims Set](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#name-the-accepted-claims-set)\r\n\r\n_At the end of the Evidence collection process Evidence has been converted into a format suitable for appraisal. To this end, this document describes an accepted-claims-set format and the algorithms used to compare it against CoMID Reference Values._\r\n",
          "createdAt": "2023-09-29T17:36:37Z",
          "updatedAt": "2023-09-29T17:36:37Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> @nedmsmith It is quite clear right at the start of section:[5.3.2. ](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-5.3.2)[The Accepted Claims Set](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#name-the-accepted-claims-set)\r\n> \r\n> _At the end of the Evidence collection process Evidence has been converted into a format suitable for appraisal. To this end, this document describes an accepted-claims-set format and the algorithms used to compare it against CoMID Reference Values._\r\n\r\nI don't think the idea of an internal representation that is initialized (as a first appraisal stage) with Evidence claims runs counter to the idea that the initialized ACS isn't still ready for subsequent appraisal stages. \r\n\r\nIt isn't clear if your point is that an empty / uninitialized ACS is the only time when an ACS is \"ready for appraisal\". A different view could be that the ACS is always ready for appraisal until appraisal has completed.\r\n\r\nVerifier logic that accepts claims asserted under the authority of the Attester key is valid. \r\nVerifier logic that accepts claims asserted by a RVP as Ref Vals is valid iff there are matching Attester asserted claims. For those claims that match, an EMT is formed that contains the matching claims that are jointly asserted under the both the RVP and the Attester authority.  Any claims asserted by the Attester that didn't match Ref Vals are still valid under the authority of the Attester. These may be represented by a different EMT than those asserted by the RVP. But no claims need to be thrown away, they are just not asserted by the RVP.\r\n\r\nEven if no RVP claims are \"matched\" the Verifier can produce a valid result consisting only of Attester asserted claims. This result might not be interesting to a RP (based on RP policy) but it is still a valid result.",
          "createdAt": "2023-09-29T18:55:30Z",
          "updatedAt": "2023-09-29T18:55:30Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith Seems to me that I have not made my point clear to you.\r\n\r\nMy point was about Endorsements, while you seem to be pointing to Reference Values supplied by RVP.\r\n\r\nI am more pointing to the fact that we can have a two stage population of ACS, where:\r\n\r\nStage 1: ACS Claims are matched against Ref Values from RVP\r\n\r\nStage 2: Then some Endorsements (known as Conditional Endorsements) are populated inside ACS, based on satisfying the matching criterion above.\r\n\r\nWe need to highlight Staged Evidence Matching to clarify, how Endorsements can be added to ACS, (if driven by an Appraisal Policy)\r\n",
          "createdAt": "2023-10-02T09:49:43Z",
          "updatedAt": "2023-10-02T09:49:43Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Matching Endorsements to ACS works the same way as matching RVPs to ACS in that the claims contained in the ACS at the time the endorsements are \"matched\" matters. It assumes the ACS contains accepted claims that are the result of having applied all applicable RV claims already. \r\n\r\nThe terminology \"ACS is ready for appraisal\" assumes this context (that is, the next stage can begin with the previous stage ACS \"is ready\").\r\n\r\nContinuing on the staging discussion, processing conditional endorsements also is stage dependent. This stage is separate from the endorsements stage. There should be discussion on when the ACS is ready for appraisal of condition endorsements. I believe it should follow processing of Endorsements.\r\n\r\nThere is still a question around how to stage multiple conditional endorsement triples because it is possible to get different results if different conditional endorsements are staged differently. One possible way to constrain staging to guarantee consistency is to require the condition (in conditional endorsement) to be applied to the previous (endorsements) stage results, rather than allowing each conditional endorsement triple being applied to the ACS state following application of a previously processed conditional endorsement.\r\n\r\nTo summarize stages for a given group context:\r\n- stage 1 : process evidence claims into ACS (under the authority of the Attester)\r\n- stage 2 : process RVs\r\n- stage 3 : process endorsement claims\r\n- stage 4 : process conditional endorsements (against stage 3 state)\r\n- stage 5 : process appraisal policies\r\n\r\nNote: It might make sense to treat conditional endorsements and conditional series endorsements in separate stages. The motivation is to allow flexibility in allowing series endorsements to take advantage of state changes applied by conditional endorsements. My choice of staging series endorsements after stage 3 is arbitrary. It is a way to ensure consistency.\r\n\r\nNote: There is potential for inconsistent results based on when coswid triples are processed.  The cowsid tag can contain values that this spec would describe as endorsed values (or conditional endorsed values based on acceptance of the reference values contained in the coswid payload). All of the coswid content above the payload are conditionally endorsed. Options: (a)Process coswids as a separate stage. (b) define coswid as a measurement type that extends measurement-values-map (fits into existing stages). \r\n\r\nRevised stages for a given group context:\r\n- stage 1 : process evidence claims into ACS (under the authority of the Attester)\r\n- stage 2 : process RVs\r\n- stage 3 : process endorsement claims\r\n- stage 4 : process coswid triples (assuming option (a) above)\r\n- stage 5 : process conditional endorsements (against stage 4 state)\r\n- stage 6 : process conditional series endorsements (against stage 5 state)\r\n- stage 7 : process appraisal policies\r\n\r\n",
          "createdAt": "2023-10-02T15:46:52Z",
          "updatedAt": "2023-10-02T15:46:52Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as this is no longer an issue!",
          "createdAt": "2024-03-27T15:44:59Z",
          "updatedAt": "2024-03-27T15:44:59Z"
        }
      ]
    },
    {
      "number": 159,
      "id": "I_kwDOH6-tI85yZowB",
      "title": "Need to consider exactly how authorized-by matching works",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/159",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Ned writes:\r\n> \"authorities\" is ambiguous given a cert chain has multiple CAs and given multiple Endorsers/RVPs could have asserted the same claim (each potentially having a their specific cert chains)\r\n\r\nCurrently the algorithm for authorized-by requires that the key in a reference value authorized-by must match the root key in the certificate chain associated with the Evidence or Endorsement.\r\n\r\nDo we want to allow a reference value authorized-by to match against a key lower down in the chain?",
      "createdAt": "2023-09-29T13:58:07Z",
      "updatedAt": "2024-05-07T09:24:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">Do we want to allow a reference value authorized-by to match against a key lower down in the chain?\r\n\r\nMaybe \"matching\" is the wrong way to think about it. If we separate application of policy from claims appraisal, (maybe policy processing is a subsequent stage), then authorized-by is simply there to keep track of who said what. \r\n\r\nSince cryptographic keys are the mechanism for \"speaking\", the key (that generated the signature over the claim) is often tied to a chain of authority such as PKI cert path. The \"speaker\" is actually all the keys in the path, as each is contributing something different to the conversation. For example, a root keys says that a sub-CA has a name  and can issue certs for product line X. The product line tester CA can say \"this is a device ID\" for an instance of product X. A Device ID can say \"this is an attestation key and can assert claims about Target Environment Y\". Since any claim could be asserted under the authority of one or more keys (which is under the authority of the next key in the key path etc), the Verifier should treat authority as a set of fully qualified keys / \"key paths\".  As in: `[ + key-path ]`\r\n\r\nThe signer of a conceptual message (Evidence, RIM) signs using a fully qualified key. The \"matching\" happens when a policy expresses authority in terms of a trust anchor, a \"pinned\" cert (which points to an intermediate key in the key path), or a raw key. None of these keys are assumed to be fully qualified by the policy.\r\n\r\nDuring the claims appraisal stage, no policy \"matching\" needs to be applied. For example, if there are no policies, the Verifier can still produce a valid result. \r\n\r\nThe result should include an accurate picture of who said what (using fully qualified authority). This implies the Verifier should attempt path construction for any key that was used to assert authority.\r\n\r\nIf claim C1 is signed by RVP R1. The verifier should add the fully qualified key path for R1. If the  EMT contains `authorized-by` that references RVP R2. Then R1 is saying R2 is also authorized to say C1. The Verifier should add the key path for R2 to C1's authority. This will allow policies expressed in terms of R2 to be applied (later on) during the policy matching stage.\r\n\r\nAdditionally, R2 could be a sub-CA within R1's oversight. R2 might be responsible for Product line X products and wants to separate authority from an R3 which is responsible for product line Y. Both R2 and R3 may be under the authority of R1, but for different claims sets. `authorized-by` can be used in Reference Values to capture constraints on authority such as this.",
          "createdAt": "2023-09-29T16:37:57Z",
          "updatedAt": "2023-09-29T16:46:35Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I am hoping that we can write something definitive in the document describing which key the CoRIM author should put in the `authorized-by` field.\r\n\r\nThe question I was asking is whether a stateful environment which requires authorization by key A will match against an ACS entry which is authorized by key B, if a certificate chain exists where A authorizes key B. There are also questions about what the properties of the certificate chain should be (for example what must be in the extKeyUsage field of the certificates).",
          "createdAt": "2024-01-09T11:06:45Z",
          "updatedAt": "2024-01-09T11:14:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am hoping that we can write something definitive in the document describing which key the CoRIM author should put in the `authorized-by` field.\r\n> \r\n> The question I was asking is whether a stateful environment which requires authorization by key A will match against an ACS entry which is authorized by key B, if a certificate chain exists where A authorizes key B. There are also questions about what the properties of the certificate chain should be (for example what must be in the extKeyUsage field of the certificates).\r\n\r\nIn the context of an endorsement condition (aka `stateful-environment-map`), inclusion of authority in the condition means the condition doesn't match unless the claims were asserted by the right entity. If the authority is identified by a cert chain, then there is some flexibility in specifying the entity scope (in terms of CA hierarchy - which could include embedded CA use cases). The matching rules are similar to path validation where the authority used (signer of claims in the stateful env) could match if the condition authority is at same path location or higher (where root CA is at the top). \r\n\r\nIn the context of a reference value containing authority (other than the authority that signed the claim), this means the first authority delegates to a second authority. Possibly, one company acquired another company and centralized RVP RIMs under one company's key such that newer RVs for the device are now issued under the other key hierarchy (and there isn't a new common root and the TA policies across the ecosystem haven't yet been updated to reflect the merger). Alternatively, supplier-A wants to delegate to supplier-B the claims that were originally supplied by supplier-A but were modified by supplier-B (and subsequently signed by supplier-B).\r\n\r\nNevertheless, these variations apply to Reference Value State (RVS) which is fodder for doing overlap matching involving ACS claims (aka actual state).  The overlap matching algorithm might be adjusted (given the suppler-A/B use case as follows:\r\n- The claim X in ACS is found RVS in two places, one under supplier-A and another under supplier-B. However, the claim value doesn't match supplier-A but does match supplier-B.\r\n- The appraisal policy expects claim X authority to be supplier-A. But given the supplier-A RVS includes an authorized-by that names supplier-B, the verifier accepts claim X into ACS.\r\n\r\nSince acceptance of claim X was according to 'delegate' processing semantics it isn't correct to represent the authority as either supplier-A or supplier-B. Rather, the authority for claim X should be a representation of the delegation from A to B. (I think `accepted-claims-set` CDDL is insufficient currently to represent this form of authority.\r\n\r\nThe happy path, otherwise, doesn't require use of authorized-by for Reference Values. ",
          "createdAt": "2024-01-09T21:53:49Z",
          "updatedAt": "2024-01-09T21:53:49Z"
        }
      ]
    },
    {
      "number": 161,
      "id": "I_kwDOH6-tI85ymkh4",
      "title": "Extensible RIM freshness",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/161",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "CoRIM defines a freshness mechanism as:\r\n```\r\n? &(rim-validity: 4) => validity-map\r\nvalidity-map = {\r\n  ? &(not-before: 0) => time\r\n  &(not-after: 1) => time\r\n}\r\n```\r\nHowever, `validity-map` is not extensible. Hence, alternative freshness mechanisms such as those described by RFC9334 including epoch markers, can't be used with CoRIM.\r\n\r\nIf `validity-map` was extensible, then support for alternatives could be added by a profile or later by the base schema.\r\n\r\nThis issue proposes the following change to base schema:\r\n```\r\nvalidity-map = {\r\n  ? &(not-before: 0) => time\r\n  &(not-after: 1) => time\r\n  * $$validity-map-extension\r\n}\r\n```\r\n",
      "createdAt": "2023-10-02T21:05:40Z",
      "updatedAt": "2024-05-03T16:48:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think this is the right place where to add extensibility.\r\n\r\nThe reason why `validity-map` has very scoped semantics is because it is reused in different contexts (`corim-map`, `corim-meta-map` and `concise-bom-tag`).  Allowing extensibility there makes it hard to track all the subtle semantics differences it may assume when embedded in one or the other context.\r\n\r\nIf the use case is Concise Evidence / Concise AR, a freshness indicator can already be added via the `$$corim-map-extension`.",
          "createdAt": "2023-10-13T04:03:51Z",
          "updatedAt": "2023-10-13T07:39:54Z"
        }
      ]
    },
    {
      "number": 162,
      "id": "I_kwDOH6-tI85yyKSs",
      "title": "Need text pointing out that RIM locator map contains hints",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/162",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "The RIM locator map contains hint URLs which might be useful to the verifier. Need to note that the CoRIM does not endorse the contents of these hint URLs, and the Verifier is not required to follow them.",
      "createdAt": "2023-10-04T09:09:52Z",
      "updatedAt": "2024-05-07T08:52:59Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 163,
      "id": "I_kwDOH6-tI85yy7e1",
      "title": "CoRIM needs to support counter signatures",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/163",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement",
        "preferable first release"
      ],
      "body": "The base CoRIM specification refers to signer and signer details via signer-map.\r\n\r\nHowever use cases coming from real world indicates that CoRIM should support multiple signers.\r\n\r\nOne such use case is the case of counter signatures, especially when CoRIM is blessed by a `trusted auditor`.\r\n\r\nSpecification should be enhanced to add the required text highlighting multiple signature support + CDDL needs to be revisited for any changes to support this enhancement",
      "createdAt": "2023-10-04T10:58:33Z",
      "updatedAt": "2024-07-31T15:48:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "is it more complex than adding support for COSE_Sign? \r\ne.g.: \r\n```\r\nsigned-corim = #6.18(COSE-Sign1-corim)\r\n```\r\nbecomes:\r\n```\r\nsigned-corim = #6.18(COSE-Sign1-corim) / #6.19(COSE_Countersignature)\r\n```",
          "createdAt": "2023-10-04T15:31:56Z",
          "updatedAt": "2023-10-04T15:31:56Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I am not sure there's anything to do here:  RFC9338 countersignatures can already be added to the COSE_Sign1 message that wraps the CoRIM tag",
          "createdAt": "2023-10-04T15:41:13Z",
          "updatedAt": "2023-10-04T15:56:10Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed with @thomas-fossati that this should be closed.",
          "createdAt": "2024-07-31T15:48:48Z",
          "updatedAt": "2024-07-31T15:48:48Z"
        }
      ]
    },
    {
      "number": 165,
      "id": "I_kwDOH6-tI85zkAoX",
      "title": "coswid appraisal conventions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/165",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "shouldfix"
      ],
      "body": "Coswid triple is separate from reference / endorsement triples. Coswid triple can describe evidence state natively using `evidence-entry`.  Reference values are contained in `payload-entry`. The remaining values in the coswid tag can be treated as endorsed values. That is, the rest of the coswid tag values (not in `payoad-entry`) are accepted on the condition that the `payload-entry` values match `evidence-entry` values. \r\n\r\nOnce processed (via appraisal), these claims are added to the ACS. They can be added to the ACS logically under the `measurement-values-map` by extension. However, if the external representation of ACS follows the `measurement-values-map` structure, there needs to be code points that don't conflict with other `measurement-values-map` code points.\r\n\r\nThis suggests the need to identify a code point range for `measurement-values-map` that is dedicated to coswid claims. Alternatively, the ACS models ARs using the coswid triple and Relying Parties map the AR format to an internal format.\r\n\r\nThe coswid-triple-record doesn't include and `authorized-by` field. Given the current default authority is the RIM signer, and that satisfies known use cases, then the `authorized-by` field in the ACS schema can be used to track authorization. \r\n\r\nHowever, if the default authority is insufficient. There are a couple of possible ways to model authority.\r\n1) update `coswid-triple-record` to include 'authorized-by'\r\n2) allow signed coswids in the corim schema\r\n\r\nOption 2 is reasonable since RFC9393 defines `signed-coswid` which could be a `$concise-tag-type-choice`. If so, a signed coswid tag could provide authority that differs (or is in addition to) the RIM signer authority.\r\n\r\nAuthority delegation may not be achieved using option 2 unless the counter-signature from the RIM signature over the `signed-coswid` signature is interpreted as delegation.\r\n",
      "createdAt": "2023-10-11T22:13:14Z",
      "updatedAt": "2024-05-03T16:47:39Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 171,
      "id": "I_kwDOH6-tI851jaOS",
      "title": "Modelling Supply Chain Updates to existing Reference Values or Endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/171",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "# Lifecycle of Triples\r\n\r\nCoRIM design is based on how fundamentally a Statement from Supply Chain is modelled using Triples\r\n\r\n* Reference Value Triples model Reference Values pertaining to Target Environment \r\n\r\n* Endorsed Value Triple model Endorsed Values pertaining to a Target Environment\r\n\r\n* There are Identity and AE Triples which link `keys` that are associated to the Device Identity or the Attesting Environment\r\n\r\n* Endorsed Values can also be pertaining to a `Stateful Environment` which is essentially an Environment with a known state\r\n[example,  Firmware Component Environment running a specific revision of Firmware]\r\n\r\n* Conditional Endorsements are fundamentally a `series of Endorsements` that are applicable when a `series of stateful environments` match received from Evidence against the Verifier Data (Received from Supply Chain)\r\n\r\n* A Supply Chain may want to make an authoritative statement with a series of stateful environments (this is essentially a product revision) to which a set of Endorsements may be applicable.\r\n\r\n\r\nOne can distil the Subject of Triples to be one of the following:\r\n\r\n1. A Target Environment\r\n2. An Attesting Environment\r\n3. An Array of Environments ==> Note one can model this using a Domain Membership/Dependency as a subject or \r\n3. A Stateful Target Environment\r\n4. A Series/Array of Stateful Target Environments\r\n\r\n#  Update story\r\nWhen modelling an Update story, The Sea of Triples pertaining to a specific subject (identified here as `sub` can be updated,\r\nmeaning new statements about the same subject `sub` can be issued to a Verifier. The New Statement can have two effects in a Verifier:\r\n\r\n1. It replaces the existing statement (previously issued), i.e. New Statement B overwrites Statement A issued previously.\r\n\r\nIf the Supply Chain wants to retain the old predicates/objects (issued via A) in a Verifier, it re-issues the same predicates/objects in Statement - B\r\n\r\nOR\r\n\r\n2. The new Statement updates (adds) to the existing statement (previously issued).\r\nSupply Chain just issues an incremental change in the object pertaining to the subject identified by `subj`\r\n\r\ni.e. Now the Verifier has a two valid statements A and B and both are applicable during Evidence Appraisal\r\n\r\nWhile both 1. and 2. are valid and acceptable ways of modelling an Update Story, the CoRIM specification should NOT mandate only\r\none method.\r\n\r\nThe reason been:\r\n\r\n1. Existing Supply Chain methods, will NOT be able to move to CoRIM, if they do not find the specification \"fit for purpose\"\r\n\r\n2. Specification should be flexible to allow Supply Chain Actors to Model Update story based on their specific use case requirements\r\n\r\nTaking the above facts into consideration, the Pull Request (https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/170) Models a flexible method of \r\n\"Modelling an Update story\", which encompasses both the requirements from 1. and 2. above.\r\n \r\n \r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2023-11-01T11:46:29Z",
      "updatedAt": "2024-05-07T09:22:35Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @henkbirkholz @thomas-fossati @andrew-draper \r\n\r\nLets brainstorm the Issue and associated PR during IETF 118 Hackathon",
          "createdAt": "2023-11-01T11:52:57Z",
          "updatedAt": "2023-11-01T11:52:57Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The staging of when an x-triple is applied can be resolved IMHO without knowing the specific details of the x-triple. Consider x-corim as a form of update (where to-be-updated triples are in a previously issued corim and their replacement triples are in a new corim). Processing of the x-corim happens as part of a corim selection stage (before appraisal stages). Can we agree that x-triple processing should apply before appraisal stages? \r\n\r\nNote: It is reasonable to consider an update story applied at the tag level. I'll use `x-tag` to refer to this idea for the purposes of this discussion. An x-tag might contain triples that are to be discarded and a new tag containing replacement triples. Since this approach is applied at the tag level, it likely occurs after CoBOM extraction and before Evidence Collection. \r\n\r\nGiven the most current expression of reference values and endorsed values should be available at the time Evidence Collection happens, it seems reasonable that x-triples (as well as x-tags and x-corims) should be processed before Evidence Collection (or just after, at the latest).",
          "createdAt": "2023-11-02T20:09:24Z",
          "updatedAt": "2023-11-02T20:57:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Continuing the x-triples options thread from #170.\r\nEndorsed Value we have two options:\r\n(option-a) Specify what is to be updated by specifying selection criteria as a type value - e.g.; RefVal/EndVal/CondEnd as the Subject of a triple.\r\n(option-b) Specify what is to be updated by re-issuing the triple (like RefVal Triple) OR an EndVal Triple with different triples expressions. \r\nNote: In both cases, there can be two forms of \"update\", ADD or a REPLACE semantics.\r\n\r\nI suggest we discuss ADD and REPLACE semantics separately first, then consider if it makes sense to combine them. In all 3 forms (x-corim, x-tag, x-triple), ADD semantics augments existing triples. All 3 forms require context that ensures the added triples are added to the right grouping. In x-corim, the to-be-replaced corim sets the context. The new corim should have the same tags and groups as the to-be-augmented corim. In x-tag, the to-be-replaced tag sets the context. The new tag should have the same triples and groups as the to-be-augmented tag. The new triples are added based on matching contexts. In x-triple, the to-be-replaced triple needs to include grouping context, otherwise, the augmentation could be misapplied (for example, when there are multiple instances of the same triple given multiple components). \r\n\r\nI don't think Option-a and Option-b are significantly different. Option-a includes matching criteria (much like conditional endorsement triples) in a triple subject that is applied to existing triples and the triple object (augmented triples) are appended to the grouping. Option-b doesn't include matching criteria as a triple subject. Rather the grouping context is used to identify and remove existing triples that are replaced by the new triples containing both the old and augmentation triples. In effect, the selection criteria is: \"if the to-be-augmented triples are a subset of the new triples then replace all triples with the new triples\". Option-a seems to allow finer granularity selection criteria where only a subset of the to-be-augmented triples need match. To make option-b have equivalent semantics it would require tweaking that somehow adds this granularity. \r\n\r\nIn all cases, x-corim, x-tag, x-triple-option-a, x-triple-option-b; the end result is the same. The substantive differences impact suppliers' authoring tools (which likely obfuscate the differences). and the verifier community, which needs to support the various approaches. (or rely on profiles to trim the various approaches).\r\n\r\nREPLACE semantics means the new triples modify the existing triples. For x-corim and x-tag, REPLACE works identically as for ADD. The difference is there are no augmentation triples in the set of new triples. For x-triple, option-a, the selection criteria (triple subject) contain the to-be-replaced triples (including grouping context) and the object contains the new triples (with identical grouping context). For option-b, the grouping context identifies which triples to replace, and the new triples overwrite the old triples (that have the same grouping context).\r\n\r\nGiven tooling for REPLACE, ADD can be implemented by including the triples that don't change into the replacement image.\r\n\r\nGiven x-corim or x-tag, the grouping context is the same for both x- and non-x statements. The overlapping context serves as the selection criteria. The new corim / tag contains the REPLACED/ADDED triples. ",
          "createdAt": "2023-11-02T20:56:57Z",
          "updatedAt": "2023-11-02T21:24:00Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "My view on this is that we need to define what is the unit of processing, ie which group of triples are processed together to perform an action.\r\nWe need to provide CoRIM authors with a way to replace the whole unit of processing.\r\n\r\nFor some triples this is obvious, Conditional Endorsement Triple can be replaced on its own. If the replacement is applied then \r\n\r\nBut there are some places where the verifier must process multiple triples together. In those cases replacing one triple could leave the verifier open to attack if the attacker controls which CoRIM files the verifier is allowed to see.\r\n\r\nFinally, I don't think we have agreed on the sea of triples approach to the Attestation Context yet, IMHO we should work on that before looking at x- triples",
          "createdAt": "2023-11-07T13:13:56Z",
          "updatedAt": "2023-11-07T13:13:56Z"
        }
      ]
    },
    {
      "number": 172,
      "id": "I_kwDOH6-tI852GT2M",
      "title": "Should we allow class Conditional Endorsements to match instance measurements?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/172",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If an attester includes an instance identifier in the evidence it provides then the current matching rules will prevent a triples in a class CoMID from matching against that measurement.\r\n\r\nFor example, a measurement might have the following value:\r\n\r\n```cbor-diag\r\n  [\r\n    / environment-map / {\r\n      / comid.class / 0 : {\r\n        / comid.class-id / 0 : / 2.16.1.2.3.4 / 111(h'6001020304'),\r\n        / comid.vendor / 1 : \"example.com\"\r\n      }\r\n      / comid.instance / 1 : #6.558 / COSE_Key / [ / TODO-insert-key-here / ]\r\n    },\r\n    / measurement-map / {\r\n      / comid.mval / 1 : {\r\n        / comid.digests / 2 : [\r\n          [\r\n            / sha-384 / 7,\r\n            h'15E77D6F133252F1DB7044901313884F2977D2109B33C79F33E079BFC78865255C0FB733C240FDDA544B8215D7B8F815'\r\n          ]\r\n        ]\r\n      }\r\n    }\r\n  ], \r\n```\r\nThe current matching rules do not let this match against the following reference value (for example in a Conditional Endorsement Triple, or in other forms of conditional endorsement).\r\n```cbor-diag\r\n  [\r\n    / environment-map / {\r\n      / comid.class / 0 : {\r\n        / comid.class-id / 0 : / 2.16.1.2.3.4 / 111(h'6001020304'),\r\n        / comid.vendor / 1 : \"example.com\"\r\n      }\r\n    },\r\n    / measurement-map / {\r\n      / comid.mval / 1 : {\r\n        / comid.digests / 2 : [\r\n          [\r\n            / sha-384 / 7,\r\n            h'15E77D6F133252F1DB7044901313884F2977D2109B33C79F33E079BFC78865255C0FB733C240FDDA544B8215D7B8F815'\r\n          ]\r\n        ]\r\n      }\r\n    }\r\n  ], \r\n```\r\nThe missing instance value prevents the triple from matching.\r\n\r\nAdding instance identifiers to the reported evidence is useful as it lets the verifier handle cases where it is evaluating the a state which contains multiple TEs of the same type (which may be in the same state or in slightly different states).\r\n\r\nClass Conditional Endorsements are a key part of the semantics of CoMID files. We need a way to apply a class conditional endorsement to evidence or endorsements which include instance  identifiers.\r\n\r\nI think this can be done with a few small changes to the text, and I will make a proposal if nobody objects to the idea.",
      "createdAt": "2023-11-07T13:28:12Z",
      "updatedAt": "2024-01-18T16:09:33Z",
      "closedAt": "2024-01-18T16:09:33Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "When we defined environment-map, there was an expectation that one of the 3 forms of measurement-map identifiers would be used. It was more of an artifact of CDDL that permitted multiple forms could be used simultaneously (at least that is how I remembered it).\r\nHowever, using multiple forms could enable interesting use cases such as the one Andy describes (i.e. AE dynamically discovers / reports a composition of components that didn't exist at time of manufacture). The instance-id is a convenient way for the AE to disambiguate component multiplicity in evidence.\r\n\r\nThere is a more general conversation around what it might mean to populate multiple forms of environment-map in ref vals / endorsements. For example, if an environment is identified by instance-id, but there are relevant class attributes (e.g., vendor, model). Would it make sense to allow this? If so, would it make sense to match evidence using both instance-id and class-map, or should matching on instance-id only be permitted (and treat the class-map attributes as measurements)?",
          "createdAt": "2023-11-07T13:51:28Z",
          "updatedAt": "2023-11-07T13:52:28Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #193",
          "createdAt": "2024-01-18T16:09:33Z",
          "updatedAt": "2024-01-18T16:09:33Z"
        }
      ]
    },
    {
      "number": 173,
      "id": "I_kwDOH6-tI8535omD",
      "title": "Representing multiple attesters, of the same or different types",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/173",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CoRIM needs a way to represent an expected state which includes results from different attesters.\r\n\r\nThis in turn means that the Accepted Claims Set abstraction needs a way to model evidence and endorsements relating to different target environments.\r\n\r\nAs an example, please consider this example system, which contains two identical sub-components, each of which contains two Target Environments.\r\n\r\n```mermaid\r\ngraph TD\r\n    Verifier[\"Verifier\"]\r\n\r\n    subgraph Compound[\"Compound system\"]\r\n\r\n    subgraph DICE1[\"DICE Component #1\"]\r\n        TE1z[\"SPDM TEs\"]\r\n        TE1y[\"DICE L1 TE (SPDM AE)\"]\r\n        TE1x[\"DICE L0 TE (L1 AE)\"]\r\n    end\r\n    TE1z ==> TE1y\r\n    TE1y ==> TE1x\r\n\r\n    subgraph DICE2[\"DICE Component #2\"]\r\n        TE2x[\"DICE L0 TE (L1 AE)\"]\r\n        TE2y[\"DICE L1 TE (SPDM AE)\"]\r\n        TE2z[\"SPDM TEs\"]\r\n    end\r\n    TE2z ==> TE2y\r\n    TE2y ==> TE2x\r\n\r\n    end\r\n\r\n    style Compound fill:#CCC,stroke:#CCC\r\n\r\n    Verifier -...-> TE1y\r\n    Verifier -...-> TE2y\r\n```\r\nThough components \\#1 and \\#2 are the same, they may be running different firmware. For example, component \\#1 might be running the 1.0 firmware, while component \\#2 has been updated to run the 2.0 firmware. If both firmware versions are acceptable to the verifier owner and relying party then the attestation result should be positive.\r\n\r\nTo provide hierarchy, I expect that the expected state for this system will be described by multiple CoRIM files. One CoRIM file describes the expected state for component \\#1, another for component \\#2 and a third describes the state of the system containing both components.\r\n\r\n## What information is in these CoRIM files?\r\n\r\nI expect that the component CoRIM files are class RIMs, issued by the firmware author and either trusted or re-issued by the verifier owner and/or relying party. These RIMs apply to any device of the appropriate type.\r\n\r\nThe system RIM may contain instance measurements, for example, in addition to specifying the type of component \\#1 it may specify which instance of that component (by including the serial number of the component, a cryptographic key or similar instance measurement). This RIM might have been generated by scanning the state of the system and converting that to CoRIM format.\r\n\r\n## What does the ACS which matches against these RIMs look like?\r\n\r\nI think the system RIM adds a constraint to the ACS format: **Measurements from all sub-components must be in the same ACS so they can match against a single RIM.**\r\n\r\nThe existence of two components of the same type adds a second constraint: **It must be possible to keep all evidence and endorsements relating to sub-component \\#1 separate from those relating to sub-component \\#2.**\r\n\r\n## What is a possible way to implement this?\r\n\r\nMy thoughts on how this could be implemented start by solving the problem of keeping ACS entries separate from each other.\r\n\r\nAs currently specified in the draft, a DICE/SPDM verifier provides evidence whose `environment-map` only contains the `class` field. The protocol also provides a public key known as the hardware identity, whose value does not change during normal device state changes.\r\n\r\nIf we change the draft to say that for DICE/SPDM generated evidence, the `environment-map`/`instance` field SHOULD be set to the hardware identity for the SPDM AE, then evidence loaded into the ACS for component \\#1 and component \\#2 will be separate. This means that both can be stored into the ACS without conflict.\r\n\r\nFor the component RIMs to match an ACS which contains an `instance` field described like this, we would need to change the matching rules for conditional endorsements slightly. The change is that if none of the reference value `environment-map`s within a conditional endorsement include an `instance` field, then the first `environment-map` will match against an ACS entry with the same `class` field as the reference value and any (or no) `instance` field. The second `environment-map` will match against an ACS entry with the same `class` field and the same `instance` field as the first ACS entry.\r\n\r\nFor `conditional-endorsement-triple` and `conditional-endorsement-series-triple` there is only one `environment-map`, so this simplifies to \"If the environment-map does not contain an `instance` field then it will match against any `environment-map` with the same `class` field\". The endorsement is added to the same `environment-map`.\r\n\r\nIssue #172 is asking whether there are any problems with this approach.\r\n\r\nOf course, if there are multiple identical components, each configured in the same way, then the triple will match each of them and add an endorsement to each. This is what I would expect to happen.\r\n\r\nFor the conditional endorsement triple with multiple `environment-map`s, it is a bit more complex. In particular, if any of the endorsements is added to a different environment-map from the reference values then the CoRIM needs to describe whether or not to copy the `instance` value from the reference value or use a new one.\r\n\r\nI think that problem can be easily solved as part of defining the new conditional endorsement triple.\r\n\r\nIs there another way to solve the same problems?",
      "createdAt": "2023-11-27T06:43:11Z",
      "updatedAt": "2024-01-18T16:06:49Z",
      "closedAt": "2024-01-18T16:06:49Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">As currently specified in the draft, a DICE/SPDM verifier provides evidence whose environment-map only contains the class field.\r\n\r\nNote: the current corim spec defines `environment-map` to mean: \"An environment is named after a class, instance or group identifier (or a combination thereof).\" The above text seems to be misaligned. The verifier should not assume the `environment-map` only contains the class field.",
          "createdAt": "2023-12-05T21:58:05Z",
          "updatedAt": "2023-12-05T21:58:56Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I think the system RIM adds a constraint to the ACS format: Measurements from all sub-components must be in the same ACS so they can match against a single RIM.\r\n\r\nMy reading of section 2 (CoRIM) doesn't place constraints on the internal representation that a verifier might use. I don't think it should either. The RIM is simply a signed envelope. It can refer to other RIMs (i.e., `corim-locator-map`) but doesn't include rich semantics. Given multiple RIMs may be needed for a solution, there is no way to represent rich semantics involving multiple RIMs using the enveloping context. Rich semantics need to be represented deeper.\r\n>so they can match against a single RIM\r\n\r\nMatching ACS statements against a \"RIM\" is ambiguous as the RIM contents determines whether matching is meaningful.\r\n>Measurements from all sub-components must be in the same ACS\r\n\r\nStatements in the ACS rely on the Verifier-Attester connection context to determine what is in the ACS. A verifier could have multiple connections and therefore multiple ACSs. If a verifier has multiple connections to the same attester device, the verifier may not know it is the same device (and may not care). For example, VM-guests on the same device need not be combined into a common ACS. Tenant isolation requirements might forbid it as well. \r\nThat doesn't mean it is impossible for a verifier to learn about a larger device context through endorsements. But the overlap means the respective ACSs have common attributes (claims) but not that the ACSs are merged. \r\nIf a use case requires merging of multiple attesters, the right approach is to use a lead attester.\r\n\r\n",
          "createdAt": "2023-12-05T22:28:25Z",
          "updatedAt": "2023-12-05T22:28:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">The change is that if none of the reference value environment-maps within a conditional endorsement\r\n\r\nThe structure of a conditional endorsement is: a condition followed by an endorsed value claimset. If the condition describes a state that exists in the ACS, then add the claimset to the ACS. \r\n\r\nThe structure of a reference value is: a claimset that is asserted by a RVP iff the same claimset is also asserted by an Attester.\r\n\r\nPossibly there are use cases for asserting a claimset by a supplier iff the same claimset is also asserted by another supplier. If that use case exists, it is different from the above two use cases even though it may reuse some of the same primitives.",
          "createdAt": "2023-12-05T22:43:18Z",
          "updatedAt": "2023-12-05T22:43:18Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #193",
          "createdAt": "2024-01-18T16:06:49Z",
          "updatedAt": "2024-01-18T16:06:49Z"
        }
      ]
    },
    {
      "number": 176,
      "id": "I_kwDOH6-tI8547XUn",
      "title": "Need to define the namespace scoping for Environment",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/176",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith",
        "thomas-fossati",
        "henkbirkholz",
        "yogeshbdeshpande",
        "andrew-draper"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "An Attester can be from multiple vendors though, the Elements of Class Identifier are Optional Elements like\r\nVendor, Model, Class-ID etc.\r\n\r\nThis leaves the scope for a user to only add a Model, which could collide with other Vendor Models.\r\n\r\nNeed to define the usage of Class Identifier that should be unique across Multiple Vendors and Multiple Attesters belonging to the same Vendor. Specification needs some clarification about usage on Class Identifier, been how to mint it as a Unique Identifier!",
      "createdAt": "2023-12-06T15:36:52Z",
      "updatedAt": "2024-05-07T18:10:19Z",
      "closedAt": "2024-05-07T18:10:19Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "My assumption is that the attester and/or the evidence collection protocol defines the `environment-map`. During ACS initialization the evidence entries with this environment map are added to the ACS.\r\nCoMID triples intending to interact with this evidence should use the same `environment-map` as appears in evidence.\r\nCoMID triples can add Endorsements with a new `environment-map` and can select a unique value for the `vendor` field if they want a new namespace.\r\nWe have added a free-format `instance` field which can be used to identify different device instances, is any more work needed to close this issue? ",
          "createdAt": "2024-01-09T10:44:35Z",
          "updatedAt": "2024-01-09T10:44:35Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> My assumption is that the attester and/or the evidence collection protocol defines the `environment-map`.\r\n\r\nDo you mean \"the attester and/or the evidence collection protocol *developer* defines the `environment-map` scope?\r\n\r\nThe consideration is that these values have to be defined at manufacturing time so that Ref Vals use the same environment identifiers. If the identifiers are not globally unique values, there is potential for collision from an unrelated supplier which could confuse verifiers (unless there is some other scoping context). \r\n\r\nThe other issues having to do with groups potentially are impacted because an `environment-map` within a group could have non-globally-unique identifiers due to the grouping context (which can be used to safely limit scope). \r\n\r\n>is any more work needed to close this issue?\r\n\r\nRequiring use of `instance-id` where an RVP is only prepared to use `class-map` seems onerous. Even if a device asserts an instance name, the matching rules allow subset matching. RVP-A using `class-map` (without instance-id/group-id) could be confused by an RVP-B that uses the same `class-map` value. If RVP-B is authorized based on a Verifier trust anchor, the Verifier still doesn't know which set of RVs to apply. \r\n\r\nIf the schema constrains the `environment-map` values to be globally unique (in some fashion) then the possibility of `environment-map` collision goes away. ",
          "createdAt": "2024-01-09T22:10:41Z",
          "updatedAt": "2024-01-09T22:12:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Environment includes both `environment-map` and `stateful-environment-record` as various triples may use both to identify Target Environments (TE). \r\n\r\nThe existing prose for `environment-map` doesn't explicitly state namespace scope expectations. In the case of `instance-id` the types of instance values suggest global namespace scope (as a `$crypto-key-type-choice` implies cryptographic identifiers have global uniqueness. `class-id` forms include `uuid` and `oid` which also imply global scope. However, it also supports `int` and `bytes` variants that don't necessarily imply global scope. Additionally, use of `class-id` is optional leaving various combinations of 'vendor', 'model', 'layer', 'index' that have no implied scoping. \r\n\r\nIf Environments are required to have global scope, then it is impossible (absent malicious intent) for environment-A to be confused with environment-B due to name collision. If it is impractical to expect environments will have global scope, the rules for local scoping need to be defined. \r\n\r\nAt one point, there was wording in a PR that suggested namespace scope could be localized by placing an environment inside a grouping construct such as a 'domain' or 'bundle'. This may be a reasonable approach to support locally scoped namespaces, but is there a use case that motivates it?\r\n\r\nIf the spec mandates environments to have global scope, and there happen to be namespace collisions (e.g.: vendor-X and vendor-Y choose the same vendor string \"Solutions-R-us\" then Verifiers may give incorrect results unknowingly (as there is not test that can be applied to determine if a combination of attributes is indeed globally unique and I presume CoRIM doesn't intended to require use of a registry that guarantees global uniqueness.\r\n\r\nIf environments are presumed globally unique, then grouping for the purpose of making something become globally unique doesn't make sense. This may simplify the grouping context discussions.",
          "createdAt": "2024-01-19T22:48:12Z",
          "updatedAt": "2024-01-19T22:48:12Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "part of the requirement addressed via currently open https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/227",
          "createdAt": "2024-05-07T08:50:59Z",
          "updatedAt": "2024-05-07T08:50:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "fixed by #227 ",
          "createdAt": "2024-05-07T18:10:19Z",
          "updatedAt": "2024-05-07T18:10:19Z"
        }
      ]
    },
    {
      "number": 177,
      "id": "I_kwDOH6-tI8547mXl",
      "title": "Group Membership, a proposal",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/177",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "see https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Composite-device-description-using-domain-membership-triples",
      "createdAt": "2023-12-06T16:01:29Z",
      "updatedAt": "2024-05-07T08:52:32Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue #136 has some context regarding grouping concepts",
          "createdAt": "2024-01-19T17:33:16Z",
          "updatedAt": "2024-01-19T17:33:16Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">It is not possible to limit the acceptable combinations: all possible cross-products are acceptable.\r\nSuppose TF-M goes through a similar update cycle as BL. Using the semantics above it is not possible to express things like: BL \"1.0.0\" is acceptable only with TF-M \"1.0.0\" and not with TF-M \"1.0.1\".\r\n\r\nTypically, updates are applied in the context of an update package that contains dependency semantics (see SUIT). If there are unacceptable combinations the update manifest will sus them out. If there is a trustworthiness relevant combinatoric that a RATS Verifier should process, the RVP can create a new BL version \"1.0.1\" that excludes the revoked T-FM image. \r\n\r\nAlternatively, the RVP could create a domain context that includes `stateful-environment-record`s that names only valid versions of T-FM. (Although allowing `stateful-environment-record` as a posible domain name wasn't part of the original proposal).\r\n",
          "createdAt": "2024-01-19T17:54:04Z",
          "updatedAt": "2024-01-19T17:54:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Grouping semantics apply to Evidence as well as RV/Endorsements. A DICE alias certificate / EAT token implies a grouping of evidence claims due to the signature over the claims. The Attester implies the grouping context because it chose to bundle a set of claims before signing them. \r\n\r\nA TPM PCR is also an implied grouping context. TCG specs specify the type of measurements that belong to a specific PCR. The intent is that a Verifier can check the integrity of individual PCRs and return a pass/fail result for each PCR. If some pass and some fail, the final result is neither pass or fail. Hence, there isn't a presumption that appraisal necessarily must produce a binary result.\r\n\r\nSimilarly, the RVs should be grouped such that only the RVs that are apply to the Evidence grouping semantic should be applied for a given grouping.",
          "createdAt": "2024-01-19T18:02:39Z",
          "updatedAt": "2024-01-19T18:05:03Z"
        }
      ]
    },
    {
      "number": 178,
      "id": "I_kwDOH6-tI8549LsE",
      "title": "Cleanup Section 5.4.2. Matching Evidence against Reference Values ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/178",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 5.4.2 \"Matching Evidence against Reference Values\" uses endorsement and reference values incorrectly. This section should not describe endorsement processing since its focus is on reference values processing. \r\n\r\nSuggested replacement text:\r\n\"A Reference Value Provider (RVP) may publish Reference Values, which are reviewed to determine if they are contained in the Accepted Claims Set (ACS). This section describes the process performed by the Verifier to determine which Reference Values should be compared to the Evidence claims contained in the ACS.\r\n\r\nThe verifier compares Reference Values claims with ACS claims. If they match, the RVP authority that asserted the claims is added to the ACS (for each claim that matched).\r\n\r\nThe following subsections describe how Reference Values are grouped ([Section 5.4.2.1](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#sec-grouping-ref-vals)) and how a Verifier matches Reference Values against the ACS ([Section 5.4.2.2](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#sec-match-all-ref-vals)).\"\r\n\r\nNotes:\r\n - CoMID references were removed since reference claims can occur in other tag types (e.g., coswid) and is somewhat unnecessary.\r\n - The signature over the RIM / COSWID is the authority that asserts claims (Not the authorized-by field). The authorized-by field describes authority matching constraints. Section 5.3.2.2 also needs wordsmithing.\r\n - Reference Values claims aren't 'added' to the ACS, as they are already in the ACS but under the authority of the Attester rather than the RVP. Hence, the only action needed is for the RVP authority to be added to existing claims. \r\n\r\n\r\n",
      "createdAt": "2023-12-06T20:10:02Z",
      "updatedAt": "2024-01-18T16:08:57Z",
      "closedAt": "2024-01-18T16:08:57Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I found the concept of \"matching\" to be too vague. The document mentions that triples are \"subject, object, predicate\", but the representation is just subject and object. The predicate appears to be implicit in the selection of profile. To me that should be explicit if that's the intention. For example the in-toto attestation format explicitly represents predicates and names them through a URI to the schema definition. Predicates can be applied at individual value scales rather than profiles on entire CoRIM document scales, thus explicit representation to me is valuable for concision and reuse.\r\n\r\nIf \"predicate\" is meant to be implicitly raw equality with the intention of allowing later extensions by profiles, I'd like to see that third element of a triple called out as `$$`[whatever]`-triple-predicate-type-choice`. For instance, the Intel Profile for CoRIM defines generic expressions for numerical and set matching that would be nice to use across profiles. I don't really know how to distinguish predicate in a measurement map triple from a conditional endorsement, given that conditions can be defined as predicates apart from the quality of \"stateful\". Still the \"or\" semantics of matching a set of acceptable values is conditional without statefulness. The type definition is clear about intent for matching stateful environments, but can be abused for disjunctive stateless predicates, albeit with significant bloat.\r\n\r\nI interpret then that conditional-endorsement-series-triples to be the entry point for endorsements, and statelessness is an empty `refv` that trivially applies. Emptiness is disallowed with the `non-empty` requirement for `measurement-values-map`, but what is the semantics of \"matching\" a singular `/ name: / 11 => \"\"` key against Evidence? It seems to be purely diagnostic for reporting match failures of other keys in the map.\r\n\r\nThe `endorsed-triples` memberkey then is a shorthand to avoid bloated representation. If that is the case, it would help my conceptual understanding to see the presentation of triples-map use group notation to discuss the three triples as describing the general concept of endorsement. \r\n\r\n```\r\ntriples-map = non-empty<{\r\n  ? &(reference-triples: 0) =>\r\n    [ + reference-triple-record ]\r\n  // * &endorsement-triple-group-choice //\r\n  ? &(identity-triples: 2) =>\r\n    [ + identity-triple-record ]\r\n  ? &(attest-key-triples: 3) =>\r\n    [ + attest-key-triple-record ]\r\n  ? &(dependency-triples: 4) =>\r\n    [ + domain-dependency-triple-record ]\r\n  ? &(membership-triples: 5) =>\r\n    [ + domain-membership-triple-record ]\r\n  ? &(coswid-triples: 6) =>\r\n    [ + coswid-triple-record ]\r\n  * $$triples-map-extension\r\n}>\r\n\r\n&endorsement-triple-group-choice //= &(\r\n  ? &(endorsed-triples: 1) =>\r\n    [ + endorsed-triple-record ]\r\n  ? &(conditional-endorsement-series-triples: 8) =>\r\n    [ + conditional-endorsement-series-triple-record ])\r\n  ? &(conditional-endorsement-triples: 9) =>\r\n    [ + conditional-endorsement-triple-record ])\r\n)\r\n```",
          "createdAt": "2023-12-17T21:14:17Z",
          "updatedAt": "2023-12-17T21:14:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Reference value predicate means all the claims in the reference value triple have to have corresponding evidence claims or the RVP asserted claims cannot be assserted as attester actual state.\r\n\r\nEndorsement predicate means if the attester is in a particular actual state, the endorsed claims can be appended to the attester's actual state.\r\n\r\nnon-equivalence matching has more to do with the behavior of the matching operator than the semantics of reference or endorsement.",
          "createdAt": "2023-12-17T23:57:20Z",
          "updatedAt": "2023-12-17T23:57:20Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think the document does it wrong, it does it using a different meaning of reference values and endorsements from the one you have Ned. We've discussed this and agreed to create a Multi-Conditional-Endorsement triple, which takes over the alternative meaning. As part of the change to section 5 I will try and use your text to describe your meaning of what Reference Value Triple means.",
          "createdAt": "2023-12-20T13:10:25Z",
          "updatedAt": "2023-12-20T13:10:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't think the document does it wrong, it does it using a different meaning of reference values and endorsements from the one you have Ned. \r\n\r\nCoRIM needs to be faithful to the terminology conventions in 9334 and the endorsements draft. There is no need to redefine reference values for the purposes of defining a multi-conditional-endorsement triple.",
          "createdAt": "2023-12-20T18:54:56Z",
          "updatedAt": "2023-12-20T18:54:56Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #193",
          "createdAt": "2024-01-18T16:08:57Z",
          "updatedAt": "2024-01-18T16:08:57Z"
        }
      ]
    },
    {
      "number": 179,
      "id": "I_kwDOH6-tI8549yKF",
      "title": "Cleanup Section 5.4.3. Adding CoMID Endorsed Values to the Accepted Claims Set",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/179",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 5.4.3 \"Adding CoMID Endorsed Values to the Accepted Claims Set\" hasn't been authored yet. It seems relevant to work on this text since there is on-going work to define and refine endorsement triples.\r\n\r\nSuggested text:\r\n\"An Endorser may publish Endorsements, which add new claims to the Accepted Claims Set (ACS) if specified conditions of the ACS are met. This section describes the process performed by the Verifier to determine if the ACS status satisfies the Endorsement condition and where to add the Endorsement claims.\r\n\r\nThe verifier compares the condition specified by endorsement triples to the ACS. Endorsement conditions may describe environments, or combinations of environment-measurement pairings, specific measurement values, and the authority that asserted the claims.\r\n\r\nIf the condition matches, the Endorsement claims, including the Endorser's authority, are added to the ACS. The new Endorsed claims are added to the part of the ACS as described by Endorsement triples (see {{sec-comid-triple-endval}}, {{sec-comid-triple-cond-series}}, {{sec-comid-triple-cond-end}}, {{sec-comid-triple-mec-endorsement}}).\"\r\n\r\n",
      "createdAt": "2023-12-06T22:04:39Z",
      "updatedAt": "2024-10-14T17:04:25Z",
      "closedAt": "2024-10-14T17:04:19Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't understand the wontfix, since I don't understand endorsed triples from the text as written.\r\n\r\n> An Endorsed Values triple declares additional claims that are valid when a Target Environment has been verified against reference measurements.\r\n\r\nThere is no separation of the measurement-values-map contents into evidence property or endorsement property, so I'm not sure what the actual condition is that you're checking. If \"A says X only if B says X about environment E\", then are we supposed to track that X came from reference triples instead of endorsement triples, so that to process an endorsement \"A says Y only if C says Y about environment E\", we check that E had a reference triple already accepted by A (A is the CoRIM issuer)? And the properties in question are irrelevant? Are all reference triples required preconditions or is does just one need to be accepted?\r\n\r\nI don't see similar conditions on reference values for the conditional endorsements triples, so it seems only this triple has a triple-type processing order requirement. Is the order across CoMID processing, within fixed point, or only locally to the single CoMID in a single step?",
          "createdAt": "2024-06-22T17:26:23Z",
          "updatedAt": "2024-06-22T17:26:23Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed through refactoring.",
          "createdAt": "2024-10-14T17:04:24Z",
          "updatedAt": "2024-10-14T17:04:24Z"
        }
      ]
    },
    {
      "number": 180,
      "id": "I_kwDOH6-tI855ZrmV",
      "title": "RFC9090 defines `oid`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/180",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "RFC9090 defines: \r\noid=#6.111(bstr) \r\n\r\nCoRIM defines:\r\noid-type = bytes\r\ntagged-oid-type = #6.111(oid-type)\r\n\r\nTo be more closely aligned with RFC9090 instances of `tagged-oid-type` can be replaced with `oid`.\r\n",
      "createdAt": "2023-12-12T00:45:15Z",
      "updatedAt": "2024-05-03T16:44:43Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "CDDL2 supports namespaced definitions such that an rfc9090 definition of oid could be used as follows:\r\n`tagged-oid-type = rfc9090.oid`",
          "createdAt": "2024-01-19T23:28:04Z",
          "updatedAt": "2024-01-19T23:28:04Z"
        }
      ]
    },
    {
      "number": 182,
      "id": "I_kwDOH6-tI8556Jlz",
      "title": "Dionna's review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/182",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@deeglaze on the [RATS mailing list](https://mailarchive.ietf.org/arch/msg/rats/7fKjloBwrv4NbYHQtlWCIbGmWi0/):\r\n\r\n> Minor technical bits about the document:\r\n> 1. https://datatracker.ietf.org/doc/html/draft-ietf-rats-corim-03#name-protected-header-map specifies alg-id as an integer whereas RFC9052 specifies its name as alg. They both have field number 1, so I suppose it's irrelevant to the encoding, but I thought I'd ask if that's something you want to amend.\r\n> 1. Additionally issuer-key-id is confusing terminology given that a Certificate Authority is an Issuer of Subject keys. For CoRIM, the signature would come from a digitalSignature KeyUsage key, which is rare to mix with a keyCertSign KeyUsage. I'd amend this to reference the COSE RFC's comment on value 4 being a \"key identifier\" with just \"key-id\".\r\n> 1. '3.1.4.1.7. Domain Types\" says 3 types are defined, but it defines 4. I suspect the OID should be classified as global scope.\r\n",
      "createdAt": "2023-12-17T16:39:24Z",
      "updatedAt": "2024-05-01T14:05:55Z",
      "closedAt": "2024-05-01T14:05:55Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been addressed.",
          "createdAt": "2024-05-01T14:05:55Z",
          "updatedAt": "2024-05-01T14:05:55Z"
        }
      ]
    },
    {
      "number": 183,
      "id": "I_kwDOH6-tI8556kd4",
      "title": "Modeling finer grain binary provenance: endorsement? CoSWID entity-entry extension?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/183",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "The concept of endorsement vs just signing a CoRIM with reference values is still a point of confusion for me, so apologies if I get the terminology wrong. I'm particularly perplexed about the notion of endorsement.\r\n\r\nAt Google we're working on an open standard for binary integrity in terms of linking source + trusted builder with the set of binary artifacts. This is called [SLSA](https://slsa.dev), and it's not so much an entity that created software dependencies like an SBOM would describe, but more of a holistic \"all that source\" => \"all these binaries\" integrity claim. I don't particularly know what the expectation is for CoSWID tag creation when you're building a patched version of on open source project.\r\n\r\nEven so, our builders don't produce CoRIMs and I don't expect them to for a while. If I want to combine SLSA with CoRIM with a profile definition, I'm not sure where to begin. I think my CoRIM signer would be recertifying the SLSA document's claims by linking to the original SLSA document and additionally signing the CoSWID representation that includes binary digests. Is that what y'all would recommend?\r\n\r\nOr, by signing the CoSWID without a SLSA link as an entity-entry extension, we can state an inference. The SLSA document is not part of the CoSWID but is instead a supporting endorsement?\r\n\r\nEndorsement according to CoRIM:\r\n\"Additional measurements that are valid when a Target Environment has been verified against reference measurements.\"\r\n\r\nWe would then define a SLSA Profile for CoRIM that extends measurement-values-map with some linking representation that the CoSWID tag has extra integrity when verified against the SLSA provenance? We could furthermore have counter-signers that independently verify the build and endorse those links? I don't know. Counter-signing by a third party seems to be yet another modeling difficulty I'm unsure how to handle.\r\n",
      "createdAt": "2023-12-17T22:13:36Z",
      "updatedAt": "2024-05-07T08:52:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Signing the corim means the signer (aka a principal in the supply chain) asserts the claims contained in the corim. The principal is the authority that is speaking. Some principals may be more qualified to assert a statement than other principals. E.g., the manufacturer / designer of a widget may be more qualified to say how the widget was created than say a retail store that sells the widget. Any of these principals could assert the same claim. But one might be the most qualified. An appraisal policy might want to specify which principal is most qualified to assert claim X. \r\n\r\nAnything a principal says about an Attester is an endorsement. \r\n\r\nReference Values are (in a way) a special case of endorsement except that reference values describe claims that are corroborated by evidence. The attester is also a principal that asserts claims (aka Evidence). The limitation on attesters is they can only assert claims that are reasonable for hardware or software to make. For example, they can read FLASH / ROM and report what they read. They can't tell however what version of software was used to populate the FLASH / ROM (unless read from somewhere else). They can't tell if a particular test or qa process was followed as part of writing the contents to the FLASH / ROM. These are examples of endorsement claims. \r\n\r\nFIPS 140 calls for self-tests that run as part of the bringup process in a FIPS certified chip. It is reasonable for an Attesting Environment (AE) to be able to detect if the FIPS self-tests ran. This can be reported as evidence. But the quality of the self-tests may rely on engineering practice and other quality control procedures that the AE can't monitor and report. Hence, these are endorsements. ",
          "createdAt": "2023-12-17T23:34:57Z",
          "updatedAt": "2023-12-17T23:34:57Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">We could furthermore have counter-signers that independently verify the build and endorse those links?\r\n\r\nI don't think counter-signing is necessary for basic attestation. The semantics of counter signing has to be understood in the context of what processing the signing principal is performing before adding their signature. Normally, the Verifier processes the various attestation inputs and produces an attestation results. The signed result asserts the verifier processed the inputs an realized a certain result. The Verifier is (in a way) counter signing the claims made by the other principals (even though it doesn't fit the technical definition of cryptographic counter-signature). \r\n\r\nIf you removed all the claims, and just counter-signed a signature, what would the counter-signing principal be asserting? It seems like an existential statement about the signature that has esoteric value.\r\n\r\nIf a second supply chain entity wanted to assert build properties, then it could do so by simply signing the same claims as were signed by the first supplier. \r\n\r\nThe Verifier would have two principals asserting the same claim about the Attester. Does that mean two principals are more believable than one? Well, that depends on what policy is being applied. If a policy says two principals have to agree, then that is something the Verifier can enforce. But if the policy says only one principal (e.g., the entity that stamped the widget on the assembly line is the most authoritative), then adding a second principal wouldn't carry additional credibility. ",
          "createdAt": "2023-12-17T23:44:52Z",
          "updatedAt": "2023-12-17T23:50:09Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "\"Anything a principle says about an Attester is an endorsement\"\r\n\r\nYes, so a key certificate is an endorsement conceptually but isn't necessarily going in the endorsed-triple.\r\nAs I conceptualize this for provisioning certificates for AMD SEV-SNP or Intel TDX, I'm unsure what this means. \r\nAMD says the attestation key is authentic for a given CHIP_ID, TCB_VERSION, and model stepping name. The AMD key distribution service binds those claims in bespoke x.509 certificate extensions. If AMD or Intel were to embrace CoRIM over x.509 extensions / TLS-protected responses from the PCS respectively, how would it do so for a TEE on particular firmware? Is the firmware security version(s) an endorsed-triple for the same environment-map of the attest-key-triple that includes the VCEK or PCK certificate?\r\n\r\nThe environment-map piece has an instance representation that we'd need to extend to allow CHIP_ID (AMD 64 bytes), PlatformManifest (Intel, yikes), or encrypted ppid (Intel, 384 bytes) in the case of chip-specific environments, but there are group keys as well. AMD has a VLEK that is certified for a whole cloud service provider ID that itself needs a group representation somehow.\r\n\r\nNow if I'm essentially rewrapping that information as interpretations from the provisioning services, then I'm endorsing an Attester, but for the VCEK certificate I can provide some evidence. For the Intel PCK certificate, I can't really give evidence about the TCB versions since those were just in a protected response by the TLS session.\r\n\r\nI guess I have to ask if it's even worth using the attest-key-triple to model these certificates that are produced outside the CoRIM model, and instead just define some special profile to link the actual data to some expectation from the ATTESTATION_REPORT or TDQUOTE evidence.",
          "createdAt": "2023-12-18T00:31:17Z",
          "updatedAt": "2023-12-18T00:31:17Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We could furthermore have counter-signers that independently verify the build and endorse those links? I don't know. Counter-signing by a third party seems to be yet another modeling difficulty I'm unsure how to handle.\r\n\r\nFrom a purely technical standpoint, [RFC9338](https://datatracker.ietf.org/doc/rfc9338/) provides the COSE building block for counter signatures.  You compute it and stash it in an unprotected header of the original Sign1.  An example [here](https://www.rfc-editor.org/rfc/rfc9338.html#appendix-A.2.1).\r\n\r\nBTW, countersignatures are implemented in [go-cose](https://github.com/veraison/go-cose#countersigning).\r\n",
          "createdAt": "2023-12-18T11:20:25Z",
          "updatedAt": "2023-12-18T11:20:25Z"
        }
      ]
    },
    {
      "number": 184,
      "id": "I_kwDOH6-tI855_sS5",
      "title": "Tagged bytes as instance and class identifiers",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/184",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Recently, there has been a discussion on the RATS mailing list about using [SEV-SNP CHIP_ID](https://mailarchive.ietf.org/arch/msg/rats/NdvOUhPp8t4dG8fI0YKNK-H_M1w/) as an AE instance identifier. This same requirement had previously arisen in a SEV-SNP integration with Veraison.\r\nAdditionally, there are internal discussions at Arm regarding CCA workload identification, which cannot use the currently defined type choice.\r\n\r\nExtending the class and instance identifier types with an opaque byte array whose exact semantics would be defined by the CoRIM profile could address both cases, among others.\r\n\r\n```cddl\r\n$tagged-bytes-type = #6.TBD(bytes)\r\n\r\n$instance-id-type-choice /= $tagged-bytes-type\r\n$class-id-type-choice /= $tagged-bytes-type\r\n```",
      "createdAt": "2023-12-18T14:04:50Z",
      "updatedAt": "2024-01-08T16:30:34Z",
      "closedAt": "2024-01-08T16:30:33Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @deeglaze @yogeshbdeshpande ",
          "createdAt": "2023-12-18T14:05:41Z",
          "updatedAt": "2023-12-18T14:05:41Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, we discussed this internally and felt that this is very much required for individual vendors to have the flexibility of defining the required semantics of free expression of Identities.",
          "createdAt": "2023-12-18T15:03:16Z",
          "updatedAt": "2023-12-18T15:03:16Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Tagged bytes composed with an AMD SEV-SNP profile identifier seems adequate to interpret this as CHIP_ID. LGTM.",
          "createdAt": "2024-01-04T23:17:21Z",
          "updatedAt": "2024-01-04T23:17:21Z"
        }
      ]
    },
    {
      "number": 185,
      "id": "I_kwDOH6-tI855_ynT",
      "title": "PCR bank measurement type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/185",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Some environments (e.g., Arm CCA realms, TPMs) have a bunch of measurements bundled in PCR banks rather than single digests.\r\n\r\nInstead of having each technology provide their own custom PCR-bank measurement type, we should define it as a basic, reusable CoMID type.\r\n\r\nFor example - modelled on the `digest` type:\r\n\r\n```cddl\r\n; design A\r\n\r\npcrs = [\r\n  alg:  (int / text)\r\n  slots: [ + bytes / nil ]\r\n]\r\n```\r\n\r\nThe `nil` alternative is for when the PCR slot is not populated or match is to be skipped.\r\n\r\nCoRIM profiles will have to define the exact shape of the bank, i.e., the number of elements in the `slots` array.",
      "createdAt": "2023-12-18T14:16:45Z",
      "updatedAt": "2024-02-02T17:03:20Z",
      "closedAt": "2024-02-02T17:03:20Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "In my view if we provide per digest slot as below to express it like this:\r\n\r\n```\r\n; design B\r\n\r\npcrs = [\r\n  alg:  (int / text)\r\n  slots: [ + [ slot_index: uint, value: bytes ] ]\r\n]\r\n```",
          "createdAt": "2023-12-18T15:13:47Z",
          "updatedAt": "2023-12-18T16:48:16Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The difference is that in design A the slot index is implicit, while in design B it's explicit.\r\n\r\nSo, a PCR bank with 4 slots, where only 0, 2 and 3 are populated, would be encoded as:\r\n\r\n* design A:\r\n \r\n```cbor-diag\r\n[\r\n  / alg /   \"my-hash-algorithm\",\r\n  / slots / [ h'00', nil, h'22', h'33' ]\r\n]\r\n```\r\n\r\n* design B:\r\n\r\n```cbor-diag\r\n[\r\n  / alg /   \"my-hash-algorithm\",\r\n  / slots / [ [ 0, h'00' ], [ 2, h'22' ], [ 3, h'33' ] ]\r\n]\r\n```\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2023-12-18T16:31:21Z",
          "updatedAt": "2023-12-18T16:31:21Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Other roots of trust can make use of an integrity register (aka PCR) structure. Allowing the \"slot\" to have a text name as well as a numeric value provides better flexibility for non-TPM IR designs. This (int / text) is not unlike the cmw collection approach.",
          "createdAt": "2023-12-18T19:14:41Z",
          "updatedAt": "2023-12-18T19:14:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Other roots of trust can make use of an integrity register (aka PCR) structure.\r\n\r\nCan you provide examples?  All the cases we are factoring in (i.e., TPMs / vTPMs, CCA Realm REMs) have the standard TPM structure (`slot[i] => bytes`).\r\n\r\n> Allowing the \"slot\" to have a text name as well as a numeric value provides better flexibility for non-TPM IR designs.\r\n\r\nYou mean:\r\n\r\n```cddl\r\npcrs = [\r\n  alg:  (int / text)\r\n  slots: {\r\n    + (int / text) => bytes\r\n  }\r\n]\r\n```\r\n\r\nor\r\n\r\n```\r\npcrs = [\r\n  alg:  (int / text)\r\n  slots: [ + [ index: uint, value: bytes, ? name: text ] ])\r\n]\r\n```",
          "createdAt": "2023-12-18T19:29:12Z",
          "updatedAt": "2023-12-18T19:32:26Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I was thinking:\r\n```\r\npcrs = [ + pcr ]\r\npcr = [\r\n  alg:  (int / text)\r\n  slot: { (int / text) => bytes }\r\n]\r\n```\r\nNote: I think it is a single pcr per slot.",
          "createdAt": "2023-12-18T20:16:41Z",
          "updatedAt": "2023-12-18T20:19:26Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> This is what I was thinking:\r\n> \r\n> ```\r\n> pcrs = [\r\n>   alg:  (int / text)\r\n>   slot: {\r\n>     + (int / text) => bytes\r\n>   }\r\n> ]\r\n> ```\r\n\r\nOK.  However, I'd like to see at least one example that justifies using the text label.\r\n\r\n> Note: I think it is a singleton slot.\r\n\r\nHmm. if it's defined as:\r\n\r\n```\r\n{ + (int / text) => bytes }\r\n```\r\n\r\ni.e. a map of one or more elements, the plural seems warranted, no?",
          "createdAt": "2023-12-18T20:22:45Z",
          "updatedAt": "2023-12-18T20:22:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Besides, in general, are `text` and `int` keys allowed within the same map?  Or is that profile-specific?\r\n\r\n(PS: `int` should be `uint`, I guess?)",
          "createdAt": "2023-12-18T20:27:16Z",
          "updatedAt": "2023-12-18T20:27:16Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "+1 uint\nA tpm profile would be uint only.\nOther profiles could mix and match.\n\nTpm2 uses multiple algorithms and digests per PCR similar semantics as CoRIM digests measurement.\n\nTPM PCRs have only one digest per algorithm id.",
          "createdAt": "2023-12-18T20:32:59Z",
          "updatedAt": "2023-12-18T20:38:36Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Where do you plan on this pcr measurement type being? `$$measurement-values-map-extension //= &(&(pcrs: 13) => pcr-bank-map)`?\r\n\r\nI'm rather perplexed at the contended global number space for measurement-values-map as opposed to `&(uri-profiles: ??) => uri-measurement-values-map` for niche environments to provide their profile and extensions through a URI they control bound to a map of values of any kind they want. This is generally more extensible in the way in-toto allows folks to use URIs for predicates and for assigning evaluators.\r\n\r\nPCRs and their behavior in CoRIM are best specified by the TCG in their own referenced URI for the TPM 2.0 profile, rather than tunneled through CoRIM standards folks as its own first class model, no?",
          "createdAt": "2023-12-18T23:12:24Z",
          "updatedAt": "2023-12-18T23:12:24Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Tpm2 uses multiple algorithms and digests per PCR similar semantics as CoRIM digests measurement.\r\n\r\nQuestion: in TPM2 once an algorithm is set it's used for all PCRs?  Or could one have PCR[i] with alg X and PCR[j] with alg Y simultaneously?\r\n\r\n",
          "createdAt": "2023-12-19T07:06:45Z",
          "updatedAt": "2023-12-19T07:06:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Where do you plan on this pcr measurement type being? `$$measurement-values-map-extension //= &(&(pcrs: 13) => pcr-bank-map)`?\r\n\r\nYep\r\n\r\n> I'm rather perplexed at the contended global number space for measurement-values-map as opposed to `&(uri-profiles: ??) => uri-measurement-values-map` for niche environments to provide their profile and extensions through a URI they control bound to a map of values of any kind they want. This is generally more extensible in the way in-toto allows folks to use URIs for predicates and for assigning evaluators.\r\n> \r\n> PCRs and their behavior in CoRIM are best specified by the TCG in their own referenced URI for the TPM 2.0 profile, rather than tunneled through CoRIM standards folks as its own first class model, no?\r\n\r\nI quite agree.\r\n\r\nAt the same time, for types that are shared across different use cases, it makes sense to have them represented as first-class CoRIM types that different profiles can reuse.\r\n\r\nIn any case, the two approaches are not mutually exclusive.",
          "createdAt": "2023-12-19T07:12:07Z",
          "updatedAt": "2023-12-19T07:13:38Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Maybe a minor detail:\r\n\r\nIs everybody aware that a PCR `bank` allows for various algs used? You can request different digests using different alg-ids representing the same measured (\"extended\") operational state. As a point of reference, I scraped some old CDDL excerpts for the TPM TSS (based on ; TCG TPM Structures, Family 2.0, Level 00, Rev 01.38, Sep 29, 2016):\r\n\r\n```\r\n; Hash/Digest Structures (10.3)\r\nTPMT_HA = { TPMU_HA-hashAlg,\r\n            TPMU_HA-digest,\r\n          }\r\n\r\nTPMU_HA-hashAlg = (hashAlg: TPMI_ALG_HASH)\r\nTPMU_HA-digest = (digest: TPMU_HA)\r\nTPML_DIGEST_VALUES-digests = (digests: [*TPMT_HA])\r\n```\r\nTPMI_ALG_HASH is the subsets of hash-ids from the TCG Algorithm Registry.",
          "createdAt": "2023-12-19T08:34:04Z",
          "updatedAt": "2023-12-19T08:34:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Taking Ned's input about TPM2 into account, and after a chat with Henk about that, this looks like a sensible design:\r\n\r\n```\r\npcr-id = uint\r\n\r\npcrs = {\r\n  + pcr-id => [ + digest ]\r\n}\r\n\r\n; digest is already defined in CoRIM as:\r\ndigest = [\r\n  alg: (int / text),\r\n  val: bytes\r\n]\r\n```\r\n\r\nE.g.:\r\n\r\n```cbor-diag\r\n{\r\n  / pcr[0] / 0: [\r\n     [\"sha-256\", h'19..'],\r\n     [\"sha-512\", h'f3..']\r\n  ],\r\n  / pcr[1] / 1: [\r\n     [\"sha-256\", h'a1..'],\r\n     [\"sha-512\", h'45..']\r\n  ]\r\n  ; ...\r\n}\r\n```",
          "createdAt": "2023-12-19T09:40:54Z",
          "updatedAt": "2023-12-19T09:46:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati As I was suggesting the design to be on the similar lines that what Ned stated;\r\n`Allowing the \"slot\" to have a text name`\r\n\r\nIf I see the suggested last proposed changes from you, that aspect is missing.\r\n\r\nDid you mean :\r\npcr-id = uint /text?",
          "createdAt": "2023-12-19T09:57:40Z",
          "updatedAt": "2023-12-19T09:58:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Allowing the \"slot\" to have a text name\r\n\r\nMaybe.  I still haven't gotten an answer from Ned regarding:\r\n\r\n> Can you provide examples? All the cases we are factoring in (i.e., TPMs / vTPMs, CCA Realm REMs) have the standard TPM structure (slot[i] => bytes).",
          "createdAt": "2023-12-19T10:08:33Z",
          "updatedAt": "2023-12-19T10:08:33Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Also, I suggest two improvements:\r\n\r\nWe should not call it PCR (as in some cases, it may not be strictly Platform Configuration Registers, like the case of ARM CCA, where they are Workload Measurement Set) \r\nAlso PCR is a term `heavily` only used and directed to TPM Measurements.\r\n\r\nI suggest we call it as:\r\nenv_digests\r\nOR\r\ndigest_bank\r\n",
          "createdAt": "2023-12-19T10:19:31Z",
          "updatedAt": "2023-12-19T10:19:31Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Also, I suggest two improvements:\r\n> \r\n> We should not call it PCR (as in some cases, it may not be strictly Platform Configuration Registers, like the case of ARM CCA, where they are Workload Measurement Set) Also PCR is a term `heavily` only used and directed to TPM Measurements.\r\n> \r\n> I suggest we call it as: env_digests OR digest_bank\r\n\r\nPCR semantics (i.e., set of registers which are _\"extended\"_) is well understood and is applicable beyond the TPM scope.  I don't think the names you propose would be an improvement.",
          "createdAt": "2023-12-19T10:25:01Z",
          "updatedAt": "2023-12-19T10:25:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "PCR name itself expands to `Platform Configuration Registers` which restricts it only to Platforms.",
          "createdAt": "2023-12-19T10:26:54Z",
          "updatedAt": "2023-12-19T10:26:54Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "To be super clear, I want to confirm, what is our overall proposal:\r\n\r\n\r\n1. ` measurement-values-map = non-empty<{\r\n ? &(digest-bank: 14) => [+env-digests]\r\n}\r\n\r\nenv-digests = {\r\n  digest-id => [+digest]\r\n}` \r\n\r\nOR\r\n\r\n2. I suppose we meant the below:\r\n\r\n` measurement-values-map = non-empty<{\r\n?  &(digest-bank: 14) => env-digests\r\n}\r\n\r\nenv-digests = [\r\n  +{ digest-id => [+digest] }\r\n] `\r\n",
          "createdAt": "2023-12-19T10:56:08Z",
          "updatedAt": "2023-12-19T10:56:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [...] what is our overall proposal:\r\n\r\n```\r\nintegrity-register-id = uint / text\r\n\r\nintegrity-registers = {\r\n  + integrity-register-id => [ + digest ]\r\n}\r\n\r\n; digest is already defined in CoRIM as:\r\ndigest = [\r\n  alg: (int / text),\r\n  val: bytes\r\n]\r\n\r\n$$measurement-values-map-extension //= (\r\n  &(integrity-registers: TBD) => integrity-registers\r\n)\r\n```\r\n\r\nUpdated as per https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/185#issuecomment-1863205954",
          "createdAt": "2023-12-19T11:27:26Z",
          "updatedAt": "2023-12-19T17:44:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Allowing the \"slot\" to have a text name\r\n> \r\n> Maybe. I still haven't gotten an answer from Ned regarding:\r\n> \r\n> > Can you provide examples? All the cases we are factoring in (i.e., TPMs / vTPMs, CCA Realm REMs) have the standard TPM structure (slot[i] => bytes).\r\n\r\nThere are non-TPM cases that use \"Integrity Registers\" such as Intel AMT. The AMT subsystem updates an IR that is read by system SW. It is simply the \"AMT IR\" rather than IR[0]. \r\n\r\nThe TPM NV can be used as a PCR. The NV location is its name. \r\n\r\nTCG DPE (DICE Protection Environment) can maintain a set of TCI values that are known by their name rather than an array of TCI values. I'm aware of one DPE implementation that treats the TCI as an IR / \"extend\" register. \r\n\r\nThe `pcr` naming is biased toward TPM PCR use cases. \r\n\r\nIn CoRIM, the `pcr` measurement type is only one part of a triple. The triple environment may provide additional context for disambiguating the measurement. For example, a class-map could use `index` to describe an array of TPM PCR locations and `digests` could be used directly without additional qualification.\r\n\r\nA different `class-id` could model TPM NV and `index` models offsets within TPM NV that are used for integrity registers.\r\n\r\nIf `pcrs` is aimed exclusively at TPM PCRs, then should corim also define `tpm-nv-irs`, `dice-tcis`, and `iamt-ir` variants? \r\n\r\nAlternatively, `digests` could be modified to include an optional tag (int/text) that allows `digests` to model TPM PCRs for a given environment-map that describes a TPM.\r\n",
          "createdAt": "2023-12-19T17:32:03Z",
          "updatedAt": "2023-12-19T17:40:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, thanks @nedmsmith.  I like \"Integrity Registers\" better than PCR.  I will update the example CDDL above accordingly.",
          "createdAt": "2023-12-19T17:42:54Z",
          "updatedAt": "2023-12-20T01:01:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati \r\n\r\nI think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n\r\nshould be:\r\n\r\n```\r\nintegrity-register-id = uint / text\r\n\r\nintegrity-registers = [\r\n  + integrity-register-id => [ + digest ]\r\n]\r\n\r\n; digest is already defined in CoRIM as:\r\ndigest = [\r\n  alg: (int / text),\r\n  val: bytes\r\n]\r\n\r\n$$measurement-values-map-extension //= (\r\n  &(integrity-registers: TBD) => integrity-registers\r\n)\r\n\r\n```",
          "createdAt": "2023-12-20T10:01:32Z",
          "updatedAt": "2023-12-20T10:01:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n\r\n@yogeshbdeshpande: nope.  We want a map, not a record.\r\n",
          "createdAt": "2023-12-20T10:38:32Z",
          "updatedAt": "2023-12-20T10:38:32Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n> \r\n> @yogeshbdeshpande: nope. We want a map, not a record.\r\n\r\nThen where is the `multiplicity` of Per slot index?",
          "createdAt": "2023-12-20T10:40:08Z",
          "updatedAt": "2023-12-20T10:40:08Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n> > \r\n> > \r\n> > @yogeshbdeshpande: nope. We want a map, not a record.\r\n> \r\n> Then where is the `multiplicity` of Per slot index?\r\n\r\nIIUC your question, it's here:\r\n```\r\n [ + digest ]\r\n```",
          "createdAt": "2023-12-20T10:42:46Z",
          "updatedAt": "2023-12-20T10:42:46Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n> > > \r\n> > > \r\n> > > @yogeshbdeshpande: nope. We want a map, not a record.\r\n> > \r\n> > \r\n> > Then where is the `multiplicity` of Per slot index?\r\n> \r\n> IIUC your question, it's here:\r\n> \r\n> ```\r\n>  [ + digest ]\r\n> ```\r\n\r\nNo that is per slot digest, so If I have PCR index 0, then I will put integrity-register-id = 0 and Digest for `0` around that.\r\n\r\nBut I want to make this for other PCR Indexes also, where is that array expression, which is required ?",
          "createdAt": "2023-12-20T10:45:50Z",
          "updatedAt": "2023-12-20T10:45:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > > I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n> > > > \r\n> > > > \r\n> > > > @yogeshbdeshpande: nope. We want a map, not a record.\r\n> > > \r\n> > > \r\n> > > Then where is the `multiplicity` of Per slot index?\r\n> > \r\n> > \r\n> > IIUC your question, it's here:\r\n> > ```\r\n> >  [ + digest ]\r\n> > ```\r\n> \r\n> No that is per slot digest, so If I have PCR index 0, then I will put integrity-register-id = 0 and Digest for `0` around that.\r\n> \r\n> But I want to make this for other PCR Indexes also, where is that array expression, which is required ?\r\n\r\nhere:\r\n```\r\n+ integrity-register-id => ...\r\n```",
          "createdAt": "2023-12-20T10:54:17Z",
          "updatedAt": "2023-12-20T10:54:17Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > > > I think the correct CDDL as per https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.1\r\n> > > > > \r\n> > > > > \r\n> > > > > @yogeshbdeshpande: nope. We want a map, not a record.\r\n> > > > \r\n> > > > \r\n> > > > Then where is the `multiplicity` of Per slot index?\r\n> > > \r\n> > > \r\n> > > IIUC your question, it's here:\r\n> > > ```\r\n> > >  [ + digest ]\r\n> > > ```\r\n> > \r\n> > \r\n> > No that is per slot digest, so If I have PCR index 0, then I will put integrity-register-id = 0 and Digest for `0` around that.\r\n> > But I want to make this for other PCR Indexes also, where is that array expression, which is required ?\r\n> \r\n> here:\r\n> \r\n> ```\r\n> + integrity-register-id => ...\r\n> ```\r\n\r\nMy question is : Can we do this in a `map` + expression ? I thought this is for `arrays` ?",
          "createdAt": "2023-12-20T10:55:53Z",
          "updatedAt": "2023-12-20T10:55:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> My question is : Can we do this in a `map` + expression ?\r\n\r\nyes",
          "createdAt": "2023-12-20T11:05:10Z",
          "updatedAt": "2023-12-20T11:05:10Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks. Just wanted to confirm, then is the positional order in the multiplicity always is preserved in this or not?",
          "createdAt": "2023-12-20T11:21:41Z",
          "updatedAt": "2023-12-20T11:21:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [...] is the positional order in the multiplicity always is preserved in this or not?\r\n\r\nwhy would it be relevant?",
          "createdAt": "2023-12-20T12:06:15Z",
          "updatedAt": "2023-12-20T12:06:15Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Given that the conversation about extensibility is to prefer cleaner separation into namespaces apart from what is already stuck for DICE, I think we should revisit refactoring this into a type that's associated with a trustedcomputinggroup.org url base for the type. Similarly I don't think PCR banks are the whole story, given that folks may want to have more inspection on the event log entries instead, and just keep the PCR bank as a final integrity test for evidence appraisal.",
          "createdAt": "2024-01-22T19:10:57Z",
          "updatedAt": "2024-01-22T19:10:57Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Do you have a specific suggestion for what should change (as this has been merged already i think)?",
          "createdAt": "2024-01-22T19:38:58Z",
          "updatedAt": "2024-01-22T19:38:58Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "measurement-values-map has the possibility of extensions that are protected by this standards body, and everything that already exists is there for DICE's benefit.\r\nI don't think that anything else should be added other than a namespaced entry with payload schema entirely determined by the namespace.\r\n\r\n```\r\n  ? &(named-extensions: 14) => [ + $named-extension ]\r\n\r\n$named-extension = [\r\n  $profile-type-choice\r\n  bytes\r\n]\r\n```\r\n\r\nThe TCG should use its own OID for TPM 2.0, say, to allow the bytes to be interpreted as an CBOR encoding of a map that includes something with the same schema as the proposed integrity-registers CDDL.",
          "createdAt": "2024-01-22T21:25:56Z",
          "updatedAt": "2024-01-22T21:26:17Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "hi @deeglaze, the scope of this is larger than PCRs.  It's an attempt at creating a CoRIM base type that covers TPMs, vTPMs as well as other types of \"integrity registers\" - for example, Arm CCA Realm's REMs.",
          "createdAt": "2024-01-25T09:10:13Z",
          "updatedAt": "2024-01-25T09:10:13Z"
        }
      ]
    },
    {
      "number": 186,
      "id": "I_kwDOH6-tI856Br3J",
      "title": "measurement-values-map code point 12 already in use",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/186",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The concise-evidence schema defined in TCG DICE Concise Evidence Binding for SPDM already assigns code point 12 to spdm-indirect. \r\n\r\n  ? &(cryptokeys: 12) => [ + $crypto-key-type-choice ] should move to 13.\r\n```\r\n  ? &(cryptokeys: 13) => [ + $crypto-key-type-choice ]\r\n```",
      "createdAt": "2023-12-18T18:58:38Z",
      "updatedAt": "2024-01-19T23:24:08Z",
      "closedAt": "2024-01-19T23:20:46Z",
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "This change has been made. Is it ok to close the issue?",
          "createdAt": "2024-01-09T10:34:00Z",
          "updatedAt": "2024-01-09T10:34:00Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "yes.\r\n",
          "createdAt": "2024-01-09T22:13:24Z",
          "updatedAt": "2024-01-09T22:13:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in main.",
          "createdAt": "2024-01-19T23:24:08Z",
          "updatedAt": "2024-01-19T23:24:08Z"
        }
      ]
    },
    {
      "number": 190,
      "id": "I_kwDOH6-tI857MQ-1",
      "title": "ev-coswid-triple-record undefined in CoRIM draft?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/190",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "The accepted claims set type description uses the variable `ev-coswid-triple-record` without definition. I noticed this is also used in the Intel Profile for CoRIM, but there it references the TCG specification for concise evidence for DICE (https://trustedcomputinggroup.org/wp-content/uploads/TCG-DICE-Concise-Evidence-Binding-for-SPDM-Version-1.0-Revision-53_1August2023.pdf). Given the specificity to DICE, this seems overly specific for the CoRIM specification given that evidence is expected to be profile-specific, so I wonder what this hanging reference is meant to mean.",
      "createdAt": "2024-01-05T06:39:47Z",
      "updatedAt": "2024-05-07T08:43:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "`accepted-claims-set` technically is mythical as it intends to describe the Verifier's \"internal representation\" which is out of scope for this specification.  We discussed whether or not using CDDL to describe an internal representation would be confusing. We also defined abstract terminology for the verifier in section 5.1 which is used to describe an \"internal representation\". \r\n\r\nThere are times when the prose needs to be specific about certain compare operations where having `accepted-claims-set` CDDL is a helpful abstraction. Other prose seems appropriate for more conceptual explanations. \r\n\r\nI'm not convinced the `accepted-claims-set` CDDL is entirely correct, I think we're in a mode of working through use cases and identifying gaps in `accepted-claims-set`. \r\n\r\nOne challenge with using the same CDDL as is used to describe Verifier inputs, to describe Verifier outputs (or nearly Verifier outputs) is it assumes the Verifier's other inputs such as Appraisal Policy for Evidence and RP context isn't additive. \r\n\r\nSpecifically, the case of coswid, the coswid tags are additional inputs beyond the core comid schema. As such, you might expect these inputs should affect Verifier output. ev-coswid-triple-record is an example. Nevertheless, it models a Verifier output using an Evidence schema input. \r\n\r\nSince it is a non-goal of CoRIM to define an Attestation Result format, it seems using CDDL to define `accepted-claims-set` implies an alternative to other drafts that do this.  Technically, it isn't part of the CoRIM schema. \r\n\r\nIf there is a way to document the \"internal representation\" with as much precision as CDDL, but without using CDDL (or something similar) then that would be interesting prose to read.",
          "createdAt": "2024-01-06T00:13:15Z",
          "updatedAt": "2024-01-06T00:13:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The TCG has published [https://trustedcomputinggroup.org/wp-content/uploads/TCG-DICE-Concise-Evidence-Binding-for-SPDM-Version-1.0-Revision-54_pub.pdf] which is the most recent publication of `concise-evidence`. The CoRIM spec, Section 5.5, contains subsections that describe mapping of evidence formats to an internal representation (aka ACS). Possibly, it makes sense to include a sub-section for `concise-evidence` that details the mapping semantics?",
          "createdAt": "2024-01-19T23:20:10Z",
          "updatedAt": "2024-01-19T23:20:10Z"
        }
      ]
    },
    {
      "number": 191,
      "id": "I_kwDOH6-tI85766TP",
      "title": "Need to say that ACS is initialized from Evidence",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/191",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Note from Ned in a review:\r\n\r\n> Note: The Appraisal Context initialization and Evidence Collection sections don't adequately describe that Evidence updates the ACS. This should be explained before the sections describing ACS augmentation.",
      "createdAt": "2024-01-12T14:59:34Z",
      "updatedAt": "2024-05-07T08:48:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think a conceptual introduction with proposed standard formats would really help. Say for example, a Verifier receives a CMW of evidence and collateral from a Relying Party (Background check model) or a Target Environment (Passport model).\r\n\r\nA Verifier's role is to perform Evidence Appraisal and produce an Attestation Result. A CMW's encapsulated evidence is must be interpreted by its associated Profile, and may trust the provided collateral to do so, and the culminating result should be either rejection or a pair of initialized Accepted Claims Set, and Candidate Claims Set.\r\n\r\nThe initial Accepted Claims Set represents statements that are trusted unconditionally, whereas a the Candidate Claims Set represents possible additions to the Accepted Claims Set provided certain evaluation criterial hold of the Accepted Claims Set.\r\n\r\n\r\nWhat I don't know is if this is meant to be treated as forward chaining task like in a datalog evaluation engine's fixpoint calculation. Do you process the Candidate Claims Set repeatedly until you are unable to expand the Accepted Claims Set?",
          "createdAt": "2024-01-14T17:31:39Z",
          "updatedAt": "2024-01-14T17:31:39Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I will also note here that it's confusing that the only example of appraising evidence is the DICE translation to a matchable state, and that the representation used an endorsed-value-triple without a specified authorized-by. I would assume at least the attest key would be the authorizer?\r\n\r\nWhat's more, the section \"Processing Endorsed Value Triple\" is empty without a linked issue to fill it out. Is the presumption that and endorsed triple is simply added to the ACS? There's the expectation, at least for DICE, that equal environment-maps must lead to merged measurement maps, and that conflicting values need to lead to rejecting the evidence.\r\n\r\nThere is no discussion how conflicts may arise. If an endorsement says \"value X is okay\" and the actual state is Y, and X != Y, then this isn't well discussed about the virtual representation of knowledge with the CDDL of accepted claims set doesn't necessarily catch this nuance. Or, is this kind of endorsed statement not the intended use case, and instead an endorsed triple means a fiat declaration of concrete state?",
          "createdAt": "2024-01-20T00:16:33Z",
          "updatedAt": "2024-01-20T00:16:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue #194 tries to clean up some the document structure loose ends.",
          "createdAt": "2024-01-20T00:28:53Z",
          "updatedAt": "2024-01-20T00:28:53Z"
        }
      ]
    },
    {
      "number": 194,
      "id": "I_kwDOH6-tI858pjtd",
      "title": "Revisit doc structure and headings",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/194",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Taking a step back, the document structure may need some tweaking:\r\n- Section 5 heading should be \"CoRIM-based Appraisal\" or something similar since it isn't exclusive to Evidence.\r\n    -  Section 5.4.5 Adding CoMID Endorsed values to ACS : should be removed or integrated with Section 5.4.3 Processing Endorsed Value Triple since these appear to be synonymous.\r\n    -   There should be a section between Section 5.4.1 and 5.4.2 that describes \"Adding Evidence to ACS\".\r\n    - There should be a section (5.4.5?) that describes processing of CoSWID tags and `coswid-triples` that also closes issue #165.\r\n\r\n- Section 5.5 should be \"Transforming Evidence\" or something similar since other sections in 5 (see previous bullets) describe initialization and population of ACS with Evidence and 5.5 focuses on schema mapping issues.\r\n     - There should be a section 5.5.3 \"Transforming EAT Evidence\" (and the other similarly named subsections can be shortened so the heading is less wordy. (e.g.: \"Transforming DICE Evidence\", and \"Transforming SPDM Evidence\",...)\r\n     - Similarly, Section 5.5.4 \"Transforming Concise Evidence\" for https://trustedcomputinggroup.org/wp-content/uploads/TCG-DICE-Concise-Evidence-Binding-for-SPDM-Version-1.0-Revision-54_pub.pdf\r\n\r\n- There should be a new Section 6 that focuses on processing updates e.g., \"Update Processing\". The resolution to PR #170 should be documented here. Subsections might be:\r\n    - Section 6.1 Updates Can Take Multiple Forms : This section describes the various possible ways the ecosystem might update RIMs (e.g.: x-triples, x-corims, refreshed corims, x-tags?...)\r\n    - Section 6.2 Staging Updates : This section describes a staging area for applying updates and results in an internal representation of RVPs and Endorsements suitable for use by appraisal (section 5). \r\n    - If there is a need to describe in more detail a particular update mechanism (e.g. x-triple) then subsections here can describe semantics and CDDL expressions.",
      "createdAt": "2024-01-19T19:50:41Z",
      "updatedAt": "2024-05-07T08:48:07Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 195,
      "id": "I_kwDOH6-tI859OFYu",
      "title": "Hannes's comments",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/195",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Here are few points raised by Hannes, which are listed in sequence below, so that they are not lost and feedback incorporated.\r\n\r\n1. **Document Readability** : Overall, the document is hard to read. As a reader one is lost in details and there is no big picture. The introduction is 2 paragraphs long to be followed by lots of CDDL definitions in the terminology section. \r\n2. **Document Purpose** Need to clearly define the `Goal` of the document.\r\n3. Need a clear and consistent definition of a `CoMID`. \r\n4. Define the concept of \"module composition\" in context of CoRIM document\r\n5. Needs consistency in terminology: Example some places, `language` is referred as `lang`.\r\n6. Need to clearly highlight that JSON is also supported as encoding format for `Triples` and one should provide Examples as to how JSON Encoding will look like?",
      "createdAt": "2024-01-25T17:19:10Z",
      "updatedAt": "2024-05-07T18:30:28Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> 6. Need to clearly highlight that JSON is also supported as encoding format for `Triples` and one should provide Examples as to how JSON Encoding will look like?\r\n\r\nJSON is not in scope.\r\n",
          "createdAt": "2024-01-25T17:37:52Z",
          "updatedAt": "2024-01-25T17:37:52Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "If we are to be in `sync` with TCG Version, it clearly states about `Support for JSON` ",
          "createdAt": "2024-01-25T17:40:01Z",
          "updatedAt": "2024-01-25T17:40:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "TCG DICE Endorsement Architecture is an information model. The data model is not normative (provided in an appendix). I-D.corim makes the data model normative.\r\n",
          "createdAt": "2024-01-25T18:11:36Z",
          "updatedAt": "2024-01-25T18:11:36Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Too confusing Ned: Throughout the TCG document It mentions, support for JSON and CBOR\r\nIf I see March 2022 Revision of TCG DICE Endorsement Architecture: Section 5.2 is Information model\r\nand \r\nSection 5.5 is the Data Model.\r\n\r\nWhat has changed since then?",
          "createdAt": "2024-01-25T18:17:24Z",
          "updatedAt": "2024-01-25T18:17:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">Section 5.5 is the Data Model\r\n\r\nI meant to say data definition (i.e., CDDL representation) is in the appendix. Appendicies are non-normative in TCG specs. The references to JSON and CBOR are in gray background text blocks which are another form of informative. Effectively, the 'wire format' is not normative. CDDL, technically isn't a wire format (so it can be described as a data modelling language). But it maps to cbor readily, so it makes a reasonable substitute for a wire-format expression. CDDL can be tweaked to allow it to describe JSON as a wire format. ",
          "createdAt": "2024-01-25T18:29:51Z",
          "updatedAt": "2024-01-25T18:29:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that expression in CDDL can be manifested in either `CBOR` or `JSON` \r\n\r\nTo this fact the specification is very clear in Section 4.4:\r\n\r\n_The CoRIM schema, expressed in CDDL, is used to generate the CoRIM file that typically is rendered in CBOR [18]\r\nor JSON [19] format. This is illustrated in Figure 2._",
          "createdAt": "2024-01-25T18:36:57Z",
          "updatedAt": "2024-01-25T18:36:57Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I think, this is a `sensible` statement and this is how it should be: Wherever `CoRIM` is expressed, be it in `TCG` Specification or `IETF` Specification. We should not force either way in any of the specification.",
          "createdAt": "2024-01-25T18:39:16Z",
          "updatedAt": "2024-01-25T18:39:16Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I am _strongly_ against specifying a JSON serialisation in the IETF document.\r\n\r\nThe only serialisation we should describe is CBOR.",
          "createdAt": "2024-01-25T19:48:36Z",
          "updatedAt": "2024-01-25T19:48:36Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am _strongly_ against specifying a JSON serialisation in the IETF document.\r\n> \r\n> The only serialisation we should describe is CBOR.\r\n\r\nPlease specify your reason for the `strong` statement above.",
          "createdAt": "2024-01-26T08:50:50Z",
          "updatedAt": "2024-01-26T08:51:07Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I am _strongly_ against specifying a JSON serialisation in the IETF document.\r\n> > The only serialisation we should describe is CBOR.\r\n> \r\n> Please specify your reason for the `strong` statement above.\r\n\r\nscope creep",
          "createdAt": "2024-01-26T09:21:15Z",
          "updatedAt": "2024-01-26T09:21:15Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Lets discuss this in our CoRIM Weekly:\r\n\r\nWe need to scope out the amount of effort before concluding that it is indeed a\r\nscope creep, which cannot be handled OR it is a Scope Creep which can be managed:\r\n\r\nThe Benefits/PROS of including JSON is:\r\n\r\n1) Gives Flexibility and entails a Wider Adoption of CoRIM..\r\n\r\n2) The specification becomes aligned with other RATS specifications (example EAT)\r\n\r\n2) Makes more logical sense to handle JSON Schema (agreeing with Hannes assessment), given that:\r\n(a) CoRIM operates on a REST Interface (As per RATS Architecture)\r\n(b) JSON is more user friendly and so ease of use is better\r\n(c) Inter-working with SBOM Community and other types of Endorsements (like In-toto)\r\n\r\n3) Brings the specification in-line with TCG Specification\r\n\r\n\r\nThe CONS/Disadvantages are:\r\n\r\n1) Scope Creep: Yes this requires a change of direction a bit\r\n\r\n2) Need more work to do: Define new JWT Claim Names, registration and more. \r\n\r\nGiven that we are re-jigging Verifier Algorithm and also. the spec is \r\nfar down the line for becoming an RFC we should give this change a \r\nserious thought before dropping this completely.\r\n\r\n",
          "createdAt": "2024-01-29T09:52:20Z",
          "updatedAt": "2024-01-29T09:52:20Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "In the Abstract we state:\r\n\r\n> _\"[T]his document specifies the information elements for representing Endorsements and Reference Values in CBOR format.\"_\r\n\r\nIn the Introduction we re-state:\r\n\r\n> _\"[T]his document specifies Concise Reference Integrity Manifests (CoRIM) a CBOR-based data model [...]\"_\r\n\r\nwhich is the reason why we named it _Co_-RIM in the first place.\r\n\r\nIf there are good reasons for providing a JSON serialisation, I am sure someone will come up with a JoRIM or JRIM, or something like that at some point in the future.\r\n\r\nAt present, I see no reason to add a _big_ chunk of extra work to ourselves: I'd rather spend our precious cycles finishing the document as is.\r\n",
          "createdAt": "2024-01-29T17:57:31Z",
          "updatedAt": "2024-01-29T17:57:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> In the Abstract we state:\r\n> \r\n> > _\"[T]his document specifies the information elements for representing Endorsements and Reference Values in CBOR format.\"_\r\n> \r\n> In the Introduction we re-state:\r\n> \r\n> > _\"[T]his document specifies Concise Reference Integrity Manifests (CoRIM) a CBOR-based data model [...]\"_\r\n> \r\n> which is the reason why we named it _Co_-RIM in the first place.\r\n> \r\n> If there are good reasons for providing a JSON serialisation, I am sure someone will come up with a JoRIM or JRIM, or something like that at some point in the future.\r\n> \r\n> At present, I see no reason to add a _big_ chunk of extra work to ourselves: I'd rather spend our precious cycles finishing the document as is.\r\n\r\n+1",
          "createdAt": "2024-01-29T18:26:25Z",
          "updatedAt": "2024-01-29T18:26:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure I understand the resistance to change. However given the fact about `Endorsements` which can be quite a descriptive type of information, just supporting `CBOR` can be a pain at some point. May be another IETF Draft down the line: Similar to `CoTS` draft may be the best way to compromise scope screep and requirements.",
          "createdAt": "2024-01-30T18:01:23Z",
          "updatedAt": "2024-01-30T18:01:23Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">just supporting CBOR can be a pain\r\n\r\nThe question is who feels the pain? There is pain on the side of the verifier who now has another format to parse and map to an internal representation. If the pain point is on rim authors, the Veraison approach seems to address this by allowing authors to use JSON while the wire format is CBOR.",
          "createdAt": "2024-01-30T18:07:07Z",
          "updatedAt": "2024-01-30T18:07:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, Veraison approach certainly helps to some extent. However Specific use cases have `custom` Endorsements, which Veraison cannot be aware of and so the Individual CoRIM Authors will have to natively encode them in `CBOR` before preparing an Endorsment CoRIM",
          "createdAt": "2024-01-30T18:23:36Z",
          "updatedAt": "2024-01-30T18:23:36Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Yes, Veraison approach certainly helps to some extent. However Specific use cases have `custom` Endorsements, which Veraison cannot be aware of and so the Individual CoRIM Authors will have to natively encode them in `CBOR` before preparing an Endorsment CoRIM\r\n\r\n`veraison/corim`'s extension mechanism should allow JSON encoding of the extension data items.",
          "createdAt": "2024-01-30T18:57:23Z",
          "updatedAt": "2024-01-30T18:57:23Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree, extensions can be encoded in JSON!",
          "createdAt": "2024-01-30T18:58:56Z",
          "updatedAt": "2024-01-30T18:58:56Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I agree, extensions can be encoded in JSON!\r\n\r\nSo, the Veraison approach is sufficient, isn't it?",
          "createdAt": "2024-01-30T19:12:36Z",
          "updatedAt": "2024-01-30T19:12:36Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I agree, `Veraison` approach can let encode a user a CoRIM in JSON format and then Once the JSON blob is output, then `Veraison` can help the user re-translate the same CoRIM in CBOR, does avoiding the pain, which I earlier commented.\r\n",
          "createdAt": "2024-01-30T19:15:39Z",
          "updatedAt": "2024-01-30T19:15:39Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we are talking past each other.  In https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/195#issuecomment-1917638475 you seemed to say that Veraison's approach was lacking in the case of custom user extensions.",
          "createdAt": "2024-01-30T19:18:07Z",
          "updatedAt": "2024-01-30T19:18:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I stand corrected, I just checked and comment on https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/195#issuecomment-1917638475 no longer holds `true`",
          "createdAt": "2024-01-30T19:20:01Z",
          "updatedAt": "2024-01-30T19:20:01Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Amongst other things, the point of CoRIM is:\r\n* strong typing, including fool-proof semantic type extensibility\r\n* scalability down to IoT device and up to housing center scopes\r\n* the option to optimize on redundant strings without obfuscating content with compression\r\n* one standardized signature checking method\r\n\r\nI could go on and on, but there is no point to force scope creep into the message representation. An exposition of JSON encoded data can easily happen (and is de-facto already happening) on the application layer. There is no reason to pull that down to the CoRIM structure.",
          "createdAt": "2024-01-31T12:22:13Z",
          "updatedAt": "2024-01-31T12:22:13Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> Yes, Veraison approach certainly helps to some extent. However Specific use cases have `custom` Endorsements, which Veraison cannot be aware of and so the Individual CoRIM Authors will have to natively encode them in `CBOR` before preparing an Endorsment CoRIM\r\n\r\nIf that is actually a problem for a given real-world entity, I would feel quite uneasy trusting  that entity to issue an endorsement in the first place, tbh.",
          "createdAt": "2024-01-31T12:25:25Z",
          "updatedAt": "2024-01-31T12:25:45Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> Sure I understand the resistance to change.\r\n\r\nI'd also like to comment on that particular statement: As a contributor, I do not think that there is generic 'resistance to change' (see, for example, Thomas' proposal to simplify the core spec on a fundamental level). I do think there is valid resistance to your proposal, though.",
          "createdAt": "2024-01-31T12:29:03Z",
          "updatedAt": "2024-01-31T12:29:03Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Clarity and other aspects raised in the issue are required for the first release of the specification!",
          "createdAt": "2024-05-07T08:41:48Z",
          "updatedAt": "2024-05-07T08:41:48Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Recapping:\r\n1. Document Readability : Overall, the document is hard to read. As a reader one is lost in details and there is no big picture. The introduction is 2 paragraphs long to be followed by lots of CDDL definitions in the terminology section. (There are two requests here, one is readability - do the sentences make sense? The other is document structure. Readability is an ongoing thing. Document structure could be revisited. Should it read like a BNF grammar - which is top down, or like a reference document which defines all the parts in some sort of lexicon structure - sort of bottom up? The current structure is more the latter, but I don't think either is \"right\" or \"wrong\". Just different, different readers will have different opinions. I want to avoid rework simply due to someone's opinion because someone else will have a different opinion and you don't make progress.\r\n2. Document Purpose Need to clearly define the Goal of the document. (needs an owner)\r\n3. Need a clear and consistent definition of a CoMID. (needs an owner)\r\n4. Define the concept of \"module composition\" in context of CoRIM document (I find this ambiguous as the RATS Arch describes composition already and the schema is all about composition).\r\n5. Needs consistency in terminology: Example some places, language is referred as lang. (needs an owner)\r\n6. Need to clearly highlight that JSON is also supported as encoding format for Triples and one should provide Examples as to how JSON Encoding will look like? (Focus on CBOR only to avoid scope creep and move more quickly to WGLC)\r\n\r\n2, 3, and 5 seem actionable. \r\n\r\nMaybe the next step is to create separate issues for each and someone volunteers to do the work?",
          "createdAt": "2024-05-07T18:30:28Z",
          "updatedAt": "2024-05-07T18:30:28Z"
        }
      ]
    },
    {
      "number": 197,
      "id": "I_kwDOH6-tI859zhnM",
      "title": "CoRIM simplification structure",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/197",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix",
        "For-next-release"
      ],
      "body": "We discussed in today's meeting that next time we will go over a PR or slides about simplification to CoRIM as a standard to a Core and some other bits.\r\n\r\nHere's what I think ought to be addressed:\r\n\r\n1. CoRIM is a closed CDDL without extension points.\r\n2. All extensibility of representation and interpretation is relegated to the CoRIM profile.\r\n3. Profiles for standard attestation technologies may choose to go through IETF standardization to allocate CBOR tags through IANA, but this is not required for profiles.\r\n4. The CoRIM working group may define reference value types with \"matching\" semantics that can be reused by other profile definitions. This should help extend the composability of the initially standardized notions of reference values. The policy should be, but still at the WG's discretion, that reference values are not given privileged CBOR representation through tag allocation without being applicable to at least 2 standard profiles. The applicability of the generalization must be concrete to give clear motivation behind the representation and semantics.\r\n5. The ACS discussion should not use CDDL because it confuses the conceptual with the serializable. It should use an ABNF to describe an algebra of claims and sets of claims. All reference value and endorsement types must have a defined operation to reflect into the algebra. Claims can be partially ordered in order to define simplification through subsumption. A set of claims must therefore contain pairwise incomparable claims. By defining this algebra, the standard may give a clear definition to word \"match\" for composition and reuse, but it does not limit what profiles are definable\u2013it is merely scaffolding. The algebraic notion of Claim is extensible by any profile, but each type of Claim is defined and owned by the standard/profile that defines it.\r\n6. A CoRIM either fails to \"match\" an accepted claim set, or it augments individual claims in the ACS with \"authorized-by\" tags.\r\n7. Evidence Appraisal should be defined explicitly as an operation to translate an octet string into a claim set.\r\n\r\nFor all of this, we've boiled the representation down to profile * profile-defined octet string. The algebra is a communication tool for specifying the semantics for composable standardized profile components.\r\n\r\nAll of the schema that is specified in the current document can be interpreted as, \"if your profile's representation structurally matches profiles defined in RFCs, then it must semantically mean the same\". You can keep TPM, PSA, and DICE following the same schema if you'd like as a way to provide a baseline for expected expressiveness.\r\n\r\nBut by doing this, you need to have reserved indices for the standard to grow and safe regions that custom profiles are allowed to define themselves. For example, `* $$corim-map-extension` allows for anyone to define index 6 or higher, but that is not desirable unless this type really should be considered \"closed\" from the standards body's perspective. If it's open, then say 0-1000 and [2^31, 2^32) are reserved for the specification to allow for custom profiles to use small indices without giving up a value space for the standard.\r\n\r\nThe reserved indices should be assigned by IANA for each following RFC, but the core CoRIM spec defines the value space for standard extension.\r\n\r\nDo folks find this reasonable? ",
      "createdAt": "2024-01-31T17:55:01Z",
      "updatedAt": "2024-10-14T17:20:46Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n[Verifier Theory of Operation v3.pdf](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/files/14145164/Verifier.Theory.of.Operation.v3.pdf)\r\n describes a theory of operation that applies to the currently documented (in corim and other I-Ds or industry specs) conceptual messages that could be mapped to a Verifier internal representation. The theory of operation isn't exclusive to the objective of \"simplifying\" the CoRIM structure, but may inform that objective.\r\n",
          "createdAt": "2024-01-31T19:56:53Z",
          "updatedAt": "2024-02-02T20:40:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">you need to have reserved indices for the standard to grow and safe regions that custom profiles are allowed to define themselves\r\n\r\nThe corim design team as discussed (if not documented) the convention that code points in the positive integer range are reserved for specification defined allocation. Code points in the negative integer range are for profile specific use.",
          "createdAt": "2024-01-31T20:02:24Z",
          "updatedAt": "2024-01-31T20:02:24Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The description in the slides says that different verifiers can share partial ACSes, which makes me wonder if the CDDL that's used for explanation purposes only might actually be specifying an interchange format between verifiers? Can we say that's not the intention?",
          "createdAt": "2024-01-31T20:43:46Z",
          "updatedAt": "2024-01-31T20:43:46Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> the CDDL that's used for explanation purposes only might actually be specifying an interchange format between verifiers? Can we say that's not the intention?\r\n\r\nThe I-D already tries to say that there is an internal representation and that if we use CDDL to describe the internal representation, that it isn't for the purpose of defining an interchange format.\r\n\r\nThere has been a thread in the CCC related to conceptual message types and attestation results formats which focuses on interchange formats. The theory of operations mentions the concept so that it is understood that for a distributed Verifier architecture the verifiers need to agree on a common internal representation.",
          "createdAt": "2024-01-31T21:53:16Z",
          "updatedAt": "2024-01-31T21:53:16Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 1. CoRIM is a closed CDDL without extension points.\r\n> 2. All extensibility of representation and interpretation is relegated to the CoRIM profile.\r\n\r\nI am trying to align these two requirements and this seems to break with any CDDL convention introduced in IETF specification text introduced  in the recent past.\r\n\r\nIn order to enable profiles to the \"core CoRIM spec\" we will add CDDL extension points to the base CoRIM spec. How would you integrate IANA registrations for well-known extensions and create standardized global interoperability otherwise? It seems to me that I am missing a vital piece of concept here. What am I missing?",
          "createdAt": "2024-02-01T11:05:11Z",
          "updatedAt": "2024-02-01T11:05:11Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 3. Profiles for standard attestation technologies may choose to go through IETF standardization to allocate CBOR tags through IANA, but this is not required for profiles.\r\n\r\nYou can always chose the way of custom extensions as long as they do not collide with IANA registered extensions. Okay",
          "createdAt": "2024-02-01T11:06:25Z",
          "updatedAt": "2024-02-01T11:06:25Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 4. The CoRIM working group may define reference value types with \"matching\" semantics that can be reused by other profile definitions. This should help extend the composability of the initially standardized notions of reference values. The policy should be, but still at the WG's discretion, that reference values are not given privileged CBOR representation through tag allocation without being applicable to at least 2 standard profiles. The applicability of the generalization must be concrete to give clear motivation behind the representation and semantics.\r\n\r\nI can follow `define reference value types with \"matching\" semantics that can be reused by other profile definitions. This should help extend the composability of the initially standardized notions of reference values.` Okay\r\n\r\nCBOR tags are there to help and not to constrain. If you choose not to use CBOR tags, you must provide coherent CDDL or might fall back to very comprehensive and fool-proof English text (which I am not sure of that that is a thing). But CBOR tags should not be the only way to deal with CDDL defined CBOR structures. If that is what you mean, okay. I would not block CBOR tag allocation by forcing at least two profiles to use said tags. That seem to be violating POLS/POLA and I would strongly advise not to do that.",
          "createdAt": "2024-02-01T11:12:50Z",
          "updatedAt": "2024-02-01T11:12:50Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 5. The ACS discussion should not use CDDL because it confuses the conceptual with the serializable. It should use an ABNF to describe an algebra of claims and sets of claims. All reference value and endorsement types must have a defined operation to reflect into the algebra. Claims can be partially ordered in order to define simplification through subsumption. A set of claims must therefore contain pairwise incomparable claims. By defining this algebra, the standard may give a clear definition to word \"match\" for composition and reuse, but it does not limit what profiles are definable\u2013it is merely scaffolding. The algebraic notion of Claim is extensible by any profile, but each type of Claim is defined and owned by the standard/profile that defines it.\r\n\r\n`The ACS discussion should not use CDDL because it confuses the conceptual with the serializable` is an interesting point. I think it is done so it is intuitive to the reader on the one hand. OTOH, it seem way off to suddenly use ABNF here. I do not know what the middle ground should look like. How about we stick with CDDL with for now (although it is not necessarily serialized in CBOR internally) and go to the CBOR WG with that questions after we agreed on the more pressing issue about the \"core CoRIM spec\" itself?",
          "createdAt": "2024-02-01T11:16:45Z",
          "updatedAt": "2024-02-01T11:16:45Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 6. A CoRIM either fails to \"match\" an accepted claim set, or it augments individual claims in the ACS with \"authorized-by\" tags.\r\n\r\nI think I might need more input for this, as an ACS (also a name we should revisit maybe, but that is not important now) is build based on the input of one or more CoRIMs, for examples via a CoMID's measurement-map acting as a condition to also add endorsed values. So, what does \"CoRIM fails to match an ACS\" mean?",
          "createdAt": "2024-02-01T11:20:42Z",
          "updatedAt": "2024-02-01T11:20:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 7. Evidence Appraisal should be defined explicitly as an operation to translate an octet string into a claim set.\r\n\r\nI think I might need more context to grasp what means. It could mean: `Evidence Appraisal requires policy to compare bytes to create Attestation Result Claims.` Does that match your thinking?",
          "createdAt": "2024-02-01T11:23:23Z",
          "updatedAt": "2024-02-01T11:23:23Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> The description in the slides says that different verifiers can share partial ACSes, which makes me wonder if the CDDL that's used for explanation purposes only might actually be specifying an interchange format between verifiers? Can we say that's not the intention?\r\n\r\nThat is a really cool summary. It is yet more content, but I strongly suggest that we do not loose track of @deeglaze suggestion here.",
          "createdAt": "2024-02-01T13:24:38Z",
          "updatedAt": "2024-02-01T13:24:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> different verifiers can share partial ACSes\r\n\r\nThis implies the different verifiers must agree on a common representation of internal structures such as the ACS.",
          "createdAt": "2024-02-01T17:38:29Z",
          "updatedAt": "2024-02-01T17:38:29Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> > 1. CoRIM is a closed CDDL without extension points.\r\n> > 2. All extensibility of representation and interpretation is relegated to the CoRIM profile.\r\n> \r\n> I am trying to align these two requirements and this seems to break with any CDDL convention introduced in IETF specification text introduced in the recent past.\r\n> \r\n\r\nWhich text would that be? I'm saying that CoRIM is an envelope for providing information to a Verifier, where information is interpreted according to the profile. This allows for maximum flexibility for the profile definer to use the envelope format. I should clarify that I still intend for the pair of profile and payload to be within a COSE_Sign1 envelope. With that, you have the absolute bare minimum for authentication, semantic interpretation, and information.\r\n\r\n> In order to enable profiles to the \"core CoRIM spec\" we will add CDDL extension points to the base CoRIM spec. How would you integrate IANA registrations for well-known extensions and create standardized global interoperability otherwise? It seems to me that I am missing a vital piece of concept here. What am I missing?\r\n\r\nWith the more open envelope type structure, the rest of the document could then start to stand as it currently is, but I have an issue with its presentation. I think every addition on the envelope should be justified with standard profiles that illustrate the concept, if not completely relegated to the profile spec that introduces the concept. The culmination of all the specs can be a supplemental appendix with references to the RFCs that define a concept.\r\n\r\nIf there are no uses, they should be relegated to an extension RFC for when they are used. Examples then become case studies. I'm not saying any specific piece of the spec is contrived, I'm saying a lot feels unjustified as generalizations over an unknown set of profiles.\r\n\r\nWhen the spec says \"base schema\" it's talking about core profile elements that ought to be easily adopted by a Verifier's implementation of a profile that follows the core. The points about extensibility should be higher up in the document and stand out more typographically. I didn't now about the negative integer map extension convention, and I felt it was buried in section 3.2.1.\r\n\r\nI find it hard to determine why some pieces are extensible while others aren't. That's maps and type choices. Why are some type choices are so spoiled for choice when the type is extensible for other profiles? Why use a closed map when you can use a struct?\r\n\r\nFor specific presentational choices, I'd recommend to\r\n\r\n* move all the optional keys in an extensible map out of the initial CDDL and into their own sections as extensions of the $$MAP-NAME-extensions code point. This allows every addition to get specifically justified with prose to explain what concept it embodies, and how it solves a particular problem.\r\n* pick _one_ preferred alternative to present in the introduction of any $NAME-type-choice. Move the others to a Standard Extensions Library section.\r\n* Even with the typographical convention of $ or $$ prefix, do say in prose that a particular type is extensible or not.\r\n\r\nThis keeps the spec more digestible and lets me know that this schema is more of a menu than a requirement. When there are large selections of optional representations, you're making life harder both for the Verifier implementors and the profile authors that don't know what representation to pick.\r\n\r\nClosed types that don't make sense to me to stay closed:\r\n\r\n* corim-locator-map: A uri is one way to reference something, but as I noted in another issue, we may want to reference specific UEFI variables like in the TCG PFP Rev 1.06 for the SP800-155 event's rimLocatorType.\r\n* svn-type-choice: X or >=X aren't the only conditions an endorser may want to express.\r\n* role-type-choice: Not actually closed, but a variable in a CDDL generic that is typographically confusing given the NAME-type-choice, $NAME-type-choice notational convention called out at the beginning of the document. Since no instantiation in the document uses a closed type, please change to the $NAME-type-choice naming for the generic variable.\r\n* class-map: The class-id is allowed to be a tagged-bytes to encode something as its own notion of extension to class, so I'd say allow this map to be extensible. Again the vendor/model/layer/index options should be in their own section to introduce the concept they represent (clearly a DICE thing).\r\n\r\nRequired map keys that aren't justified as to why they're required:\r\n\r\n* corim-map's id and tags keys are the only required pieces, but the type is extensible. What is the \"tag\" concept that makes it a requirement? Why does a RIM /require/ a document identity? Can the CoSWID and CoBOM type choices be left to a separate document or much farther down?\r\n* entity-map's role\r\n\r\nThe spec should explain why any closed type is closed.\r\n* ip-addr-type-choice: Supports ipv4 and ipv6. No other IP address standards exist today, and it's not vendor-extensible concept.\r\n* mac-addr-type-choice: Similar to ip-addr.\r\n* tagged-concise-rim-type-choice: Sort of obvious that an open type allows a corim to mean absolutely anything, but given the call to justify all types, this still should be explained.\r\n* environment-map: This needs hard justification to stick to just the class/instance/group breakdown, since you severely limit what concepts express what environments you're describing. Every value is an extensible type (except class-map, which should be extensible), so just like class-map, why keep it closed? You could still recommend sticking to the existing concepts by giving ample examples of their use in the standard extension library sections.\r\n\r\nThen there are types that aren't named -type-choice but are also required representational choice in a concept (actually I only see the one)\r\n\r\n* tag-version-type: The optional version as the only other component and only as a uint makes different kinds of versioning schemes unusable. What is the property you need on the version type for its semantic interpretation? Can we spec a type choice required property like \"has a partial order\" or \"has a total order\"?\r\n* version-map's version value is text only, but has an extensible scheme type? \r\n* entity-map's reg-id uri type: so many extensible identity types elsewhere, but this is only a URI?\r\n\r\nTypes that I just don't understand the implied concept for\r\n\r\n* tag-identity-map: Probably I'm just missing the concept explanation for this. $tag-id-type-choice is extensible but the text says it's a universally unique identifier. An extensible choice doesn't just mean different ways of representing a UUID. If you don't mean a UUID, then say an identifier type that should be universally unique.  What is the purpose? The linked-tag-map concept is not well-justified.\r\n\r\nI'll leave it at that for now.",
          "createdAt": "2024-02-01T21:45:03Z",
          "updatedAt": "2024-02-01T21:45:03Z"
        }
      ]
    },
    {
      "number": 199,
      "id": "I_kwDOH6-tI85-CwiC",
      "title": "Address Integrity Register Comparison comments from Ned",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/199",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "              ```suggestion\r\nWhen asserted as Evidence, the Verifier accepts each Integrity Register entry into the ACS.\r\nWhen asserted as Reference Values, all of the Integrity Register entries of the matching EMT MUST have a corresponding Integrity Register entry in the ACS Evidence.\r\nAdditionally, the Verifier will use the associated Integrity Register label (i.e.,`integrity-register-id-type-choice`) to match the label in a corresponding Integrity Register entry in the ACS.\r\nThe Verifier compares the labels which MUST exactly match.\r\nIf the labels match, then the Integrity Register digest arrays are compared (see {{sec-comid-integrity-registers}} and {{sec-comparison-for-digests-entries}}).\r\n```\r\nNote: {#sec-comparison-for-digets-entries} needs to be added.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189#discussion_r1473577658_\r\n            ",
      "createdAt": "2024-02-02T10:55:06Z",
      "updatedAt": "2024-03-04T16:53:12Z",
      "closedAt": "2024-03-04T16:53:12Z",
      "comments": []
    },
    {
      "number": 202,
      "id": "I_kwDOH6-tI85-kclP",
      "title": "authorized-by: change type to [ + $authorized-by-type-choice ]",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/202",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "Hey y'all, I discussed this in the Veraison meeting, but I'll make it an issue here.\r\n\r\nFirst off, let's not change anything yet, just add a code point.\r\n```\r\n$authorized-by-type-choice /= $crypto-key-type-choice\r\n```\r\n\r\nThe reason I'm asking for this change is for the Qemu OVMF profile for SEV-SNP to model composite authorizers. The SEV_HASH_TABLE in OVMF allows for different initial measurements of the boot chain to get locked into the initial launch measurement. The firmware itself that allocates space for this table can be created by a different entity. This effectively squashes multiple events with individual authorizers into a single event that is captured by the hardware attestation report's launch measurement.\r\n\r\nIf the profile has the ability to represent a composite authorized-by representation, then we can compose disparate claims about the components of the initial measurement into a profile-defined X+Y+Z = Reference-value operation that means the reference value is authorized by all of X, Y, and Z's endorsers.",
      "createdAt": "2024-02-07T17:01:43Z",
      "updatedAt": "2024-07-11T16:46:41Z",
      "closedAt": "2024-07-11T16:46:41Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "What are the X, Y, and Z objects?",
          "createdAt": "2024-02-07T17:15:58Z",
          "updatedAt": "2024-02-07T17:15:58Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "X, Y, and Z are all CoRIMs with different signers, but all for the OVMF-for-SEV-SNP profile. They each have reference values for different components of the OVMF measurement and SEV hashes. Say X has the ovmf.fd measurement and GUID table data that's needed to interpret the other components of the measurement, Y has the SEV_KERNEL_HASH, SEV_CMDLINE_HASH and Z has the BSP and AP VMSAs.\r\n\r\nThe combination of all of them reconstructs the MEASUREMENT field of the attestation because the different memory sections described by the OvmfSevMetadata section and SEV-ES Reset Block all change how the measurement is constructed.",
          "createdAt": "2024-02-07T17:27:36Z",
          "updatedAt": "2024-02-07T17:27:36Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">just add a code point. `$authorized-by-type-choice /= $crypto-key-type-choice`\r\n\r\nI'm confused by this as AFIK there isn't an `$authorized-by-type-choice` in the schema that can be extended. The current authorized-by measurement is already a `$crypto-key-type-choice`.",
          "createdAt": "2024-02-07T17:36:14Z",
          "updatedAt": "2024-02-07T17:36:14Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Crypto key type choice is used other places that a composite authorization wouldn\u2019t make sense, which is why I suggested a new code point",
          "createdAt": "2024-02-07T18:34:49Z",
          "updatedAt": "2024-02-07T18:34:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "If the X entity wants to recognize Y and Z as peer (equivalent) authorities for the X claims, it can include an `authorized-by` statement in `measurement-values-map` that includes $crypto-key-type-choice for Y and Z. Each of X and Y entities do the same for (X, Z) and (X, Y) respectively.\r\n\r\nVerifier will produce ACS entries for each RIM's triples resulting in three ACS entries:\r\nX claims with authority (X, Y, Z) - since X signed the rim and added `authorized-by` of (Y, Z).\r\nY claims with authority (X, Y, Z) - since Y signed the rim and added `authorized-by` of (X, Z).\r\nZ claims with authority (X, Y, Z) - since Z signed the rim and added `authorized-by` of (X, Y).\r\n\r\nThis use case seems solvable using the current schema. \r\nI don't see why the transitivity of `$authorizied-by-type-choice` /= `$crypto-key-type-choice` /= `tagged-...` (pick the best representation) is different from `$crypto-key-type-choice` /= `tagged-...` except that `$authorizied-by-type-choice` can be extended to some other form for authority. \r\n\r\nBut it seems the use case can be implemented with current schema, so I'm not seeing why the extensibility variation using `$authorized-by-type-choice` is needed aside from stylistic preference (which I kind of like personally).",
          "createdAt": "2024-02-07T19:00:05Z",
          "updatedAt": "2024-02-07T19:00:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The beginning assumption \r\n\r\n> If the X entity wants to recognize Y and Z as peer (equivalent) authorities for the X claims\r\n\r\nWe (Google) don't. \r\n\r\nThere is a single piece of evidence that can be authorized, and that evidence is a collection of parties' reference values for inputs to a specified reference value computation function. That function is defined by a profile that specifies a complex image construction operation. We're effectively squashing multiple EventLog entries into one before the initial measurement.\r\n\r\nGoogle provides a firmware image and only wants to claim authority for that artifact. Canonical provides a kernel binary and only wants to claim authority for that artifact. Service operator Z provides the kernel commandline and only wants to claim authority for that artifact. The relying party includes Google, Canonical, and Z in their trust anchor to approve attestation results that include this profile's composite measurement authorization.\r\n",
          "createdAt": "2024-02-08T18:17:26Z",
          "updatedAt": "2024-02-08T18:17:26Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Let me try to model the use case to see if I understand it. Evidence is a combination of 3 artifacts G.a1, C.a2, and Z.a3 which is asserted by the Attester: `[G.a1, C.a2, Z.a3] : Attester_key`\r\n\r\nGoogle creates a manifest containing the G.a1 as a reference value: `[G.a1] : Google_key`. \r\nCanonical creates a manifest containing the C.a2 as a reference value: `[C.a2] : Canonical_key`. \r\nZ creates a manifest containing the Z.a3 as a reference value: `[Z.a3] : Z_key`. \r\n\r\nThese result in entries in an ACS as:\r\n```\r\nEV : [combined.a0] : A_key\r\nRV : [G.a1] : G_key\r\nRV : [C.a2] : C_key\r\nRV : [Z.a3] : Z_key\r\n```\r\nThe Relying Party has a policy that says the a1 artifact should be asserted by Google, the a2 artifact asserted by Canonical and the a3 artifact asserted by Z.\r\n\r\nSince the three RV entries in ACS are present, the policy can be met.\r\n\r\n",
          "createdAt": "2024-02-08T21:47:42Z",
          "updatedAt": "2024-02-08T23:22:38Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Apart from [G.a1, C.a2, Z.a3] appearing split out, yes. All the values of those three components are combined through an OVMF and SEV-SNP-specific computation that results in a single digest that is present as evidence in the AMD-signed attestation report. It's the AMD measurement that is evidence, so it's the only element that would get an authorized-by entry for the combined RVs.",
          "createdAt": "2024-02-08T23:10:50Z",
          "updatedAt": "2024-02-08T23:10:50Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">All the values of those three components are combined \r\n\r\nI updated my example to better represent the use case. Instead of evidence being three digests (a1, a2, a3) it is a combined digest a0. \r\n\r\nThe interesting condition may be that neither G, C, or Z are the providers of the RV for a0. Instead, the Verifier needs to know to compute the combined digest - i.e. `f-hash(a1, a2, a3) = a0` - is this a more accurate representation of the use case?",
          "createdAt": "2024-02-08T23:27:00Z",
          "updatedAt": "2024-02-08T23:27:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes",
          "createdAt": "2024-02-08T23:27:48Z",
          "updatedAt": "2024-02-08T23:27:48Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There's two options for collecting a0 as a reference value. Either the vendor that implements the algorithm that produces a0 needs to validate that given inputs a1, a2, and a3; a0 is indeed the output. Or the vendor that combined a1, a2, and a3 into a product can generate a0 using the algorithm implemented by the attester vendor. \r\n\r\nIs there a reason either of these two options are unworkable?\r\n\r\nThe alternative is a standard has to define an algorithm for combining a1 - a3. This seems like a slippery slope.",
          "createdAt": "2024-02-09T16:28:05Z",
          "updatedAt": "2024-02-09T16:28:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Neither of those are workable. The a0 here is AMD SEV-SNP's measurement, and the VM operator that can populate a2 and a3 cannot get a1 ahead of time from us to sign the combination.\r\n\r\nAMD's design for SEV-SNP pushed the problem of runtime measurements down the road too far and we've ended up with a feature that might not die for a while that mixes multiple artifacts into one measurement. I don't think many would follow down this slippery slope given the difficulty to even determine a1, a2, and a3 ahead of time to even derive a0.",
          "createdAt": "2024-02-09T17:21:50Z",
          "updatedAt": "2024-02-09T17:21:50Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "This seems similar to a case I've been thinking about, which is how to handle evidence which comes into the verifier as a PCR value plus an event log in a generalized way.\r\n\r\nMy thoughts were that the _Evidence Collection_ phase should use the PCR value to verify that the event log is correct, and then add the event log measurements to the Accepted Claims Set as individual measurements. The `environment-map` for each measurement would be set to something which represents what is being measured.\r\n\r\nThe CoRIM can then use the standard matching rules to match against the individual measurements it cares about.\r\n\r\nI think the Evidence Collection phase would also need to include a measurement which describes the order of measurements in the log, without this it might be possible for an attacker to add fake measurements to the PCR after the real measurements.\r\n\r\nDionne, could something like this help with your use case?",
          "createdAt": "2024-02-12T15:47:44Z",
          "updatedAt": "2024-02-12T15:47:44Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "What is to be done with the hardware attestation report, then? It doesn't seem appropriate for a virtual firmware profile to override the profile for the measuring technology. When you interpret the evidence of a hardware attestation report, you get the measurement as an accepted claim, which that needs to be (collectively) authorized. Now every use of SEV-SNP that has multiple entities represented in the measurement need to specify that their profile should be used instead of AMD's for interpreting the hardware attestation report. Admittedly they could say, \"we use AMD's profile for everything except we don't admit the sevsnpvm-measurement as an accepted claim.\r\n\r\nThe SEV-SNP attestation report measurement must be computed from \"ovmf-sevsnp-base-measurement, ovmf-seves-rip, ovmf-seves-csbase\" as the baseline from the OVMF binary provider, then \"ovmf-sevhash-kernel, ovmf-sevhash-cmdline, ovmf-sevhash-initrd\" from the VM operator, then \"ovmf-seves-bspvmsa, ovmf-seves-apvmsa\" (with the seves-rip and seves-csbase plugged in appropriately) from the VMM operator.\r\n\r\nI suppose for this use case I could live with this awkward this, though I wonder how to collect all these values as evidence in the first place. Maybe /sys/firmware/qemu_fw_cfg, but that would need additional changes to qemu.\r\n",
          "createdAt": "2024-02-12T16:58:17Z",
          "updatedAt": "2024-02-12T16:58:17Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue is I think based on my flawed understanding of authorized-by at the time. See also https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/244.\r\n\r\nI think I've accounted for what this issue is getting at adequately with my response to Jag for \"computed measurements\", which is basically me finally understanding Ned's response above https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/202#issuecomment-1936226881.\r\n\r\nThe multiple principals involved in one measurement need to be represented as individual events that _lead to_ the one measurement. The events become the evidence that is admitted to the ACS only if they combine to the measurement signed by the Attester. The ECT `[ + $authorized-by-type-choice ]` tracks all authorities that agree on the same properties. The `measurement-map`/`authorized-by` should not be where the complexity gets shifted.",
          "createdAt": "2024-07-11T16:46:41Z",
          "updatedAt": "2024-07-11T16:46:41Z"
        }
      ]
    },
    {
      "number": 207,
      "id": "I_kwDOH6-tI85_-SnC",
      "title": "Reword  \"standard CoRIM type\" definition",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/207",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "       In context of PR #206: Redefine meaning of standard CoRIM       types and clarify a para on use of Extensions.",
      "createdAt": "2024-02-21T15:25:42Z",
      "updatedAt": "2024-06-12T14:18:21Z",
      "closedAt": "2024-06-12T14:18:21Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as we have clarified standard CoRIM types!",
          "createdAt": "2024-06-12T14:18:21Z",
          "updatedAt": "2024-06-12T14:18:21Z"
        }
      ]
    },
    {
      "number": 208,
      "id": "I_kwDOH6-tI85_-Wwm",
      "title": "Remove \"schema\" and replace with CDDL",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/208",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "An ask from Henk",
      "createdAt": "2024-02-21T15:32:34Z",
      "updatedAt": "2024-08-21T15:01:21Z",
      "closedAt": "2024-08-21T15:01:21Z",
      "comments": []
    },
    {
      "number": 211,
      "id": "I_kwDOH6-tI86BcuPC",
      "title": "Representing ACS entries with multiple measurements, and extension point for new matching algorithms",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/211",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "The contents of environment-map are chosen by the attesting environment (AE) making measurements, but it is constrained by the protocol used to collect the evidence.\r\n\r\nIf an target environment (TE) being measured has multiple measurements of the same type, for example multiple digest measurements or multiple raw value entries, then one option is for the AE to store each measurement under a different environment-map. This is not always the natural way to store the data.\r\n\r\nI suggest that a solution to this is to store the first measurement of a particular type under the standard measurement-map entry (eg 2 for digest or 4 for raw value) and to store the other measurements of this type using negative codepoints within `measurement-values-map`.\r\n\r\nThe verifier needs to know which comparison algorithm to use for measurements at negative codepoints.\r\n\r\nI suggest that, for measurements at negative codepoints, the verifier should use the CBOR tag at the start of the reference value to select the comparison algorithm. Some types, for example svn(1) and raw-value(4), already have tags defined.\r\n\r\nIf we choose this mechanism then we need to change the CDDL to add optional tags to relevant `measurement-values-map` values so that `stateful-environment`s can indicate which comparison algorithm should be used for negative types.\r\n\r\nIf we do not use the CBOR tag of the `stateful-environment` to select the comparison algorithm for a negative codepoint then we need to define a different way to do this. Using profiles to do this will mean either additional code in every verifier or the need for a profile definition language to indicate that _environment E with codepoint -X must use comparison algorithm A_.\r\n\r\nA related problem occurs when the data format requires extended comparison algorithms which differ from those described in the base specification. The specification of an extended comparison algorithm should define a CBOR tag which tells the verifier to use that algorithm, and the stateful-environment which provides the expected value should be tagged with that tag.\r\n\r\nPR #203 requests adding a tag for digests.",
      "createdAt": "2024-03-06T15:31:39Z",
      "updatedAt": "2024-07-17T01:08:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think \"a TE with multiple measurements of the same type\" is a category error, no? It is a family of target environments. Your claim \"This is not always the natural way to store the data.\" may be valid intuitively, but it breaks the model I understand.\r\n\r\nI don't know how you you store multiple measurements in the same environment of the same type when appraising evidence. Can you go into more detail about that?\r\n\r\n---\r\n\r\nOutside of that, assigning meaning to values in negative codepoints I think is already specified but just not clearly enough.\r\n\r\nA CBOR tag's comparison semantics must be global since the tag is IANA-registered. Since there was confusion about this in the meeting, we need new text in the definition of a profile to clarify the \"syntax and semantics of a standard CoRIM type\" wording to include the meaning of tagged values in extensions. We can point to the following existing wording to solidify the point:\r\n\r\n\"If the stateful environment measurement-values-map value is tagged with a CBOR tag [[STD94](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#STD94)] then the Verifier MUST use the comparison algorithm associated with that tag.\"\r\n\r\nSo, your proposal to have a tagged digest satisfies using the right algorithm, but it doesn't give extra meaning like an ACS with digests in /2/ can have reference values in /-8/ match and give \"authorized-by\" tags in /2/.",
          "createdAt": "2024-03-06T16:46:51Z",
          "updatedAt": "2024-03-06T16:46:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper Can we close this, as we think, this has been addressed!",
          "createdAt": "2024-06-12T14:16:29Z",
          "updatedAt": "2024-06-12T14:16:29Z"
        },
        {
          "author": "fdamato",
          "authorAssociation": "NONE",
          "body": "One usage case for an Attester to report more than a single digest (computed with the same algorithm) for a given environment-map is the Impactless Update.\r\nIn this specific case, it is recommended for the Attester to report both current and the cumulative measurement, allowing the Verifier to assert whether a potential vulnerable firmware has executed since cold boot.\r\nIt would not be practical for an Attester to report those 2 in separate environment-map, oversizing the overall evidence-triple array",
          "createdAt": "2024-07-16T20:29:47Z",
          "updatedAt": "2024-07-16T20:29:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> One usage case for an Attester to report more than a single digest (computed with the same algorithm) for a given environment-map is the Impactless Update. In this specific case, it is recommended for the Attester to report both current and the cumulative measurement, allowing the Verifier to assert whether a potential vulnerable firmware has executed since cold boot. It would not be practical for an Attester to report those 2 in separate environment-map, oversizing the overall evidence-triple array\r\n\r\nThis seems like a good use case for `integrity-registers` measurement type. Each digest can be labeled for disambiguation (string / numeric). As long as the reference value uses the same labels, the verifier can keep things straight. \r\n\r\nIf you expect to have cases where one, or the other, or both `integrity-registers` measurements could be produced by the AE (and that isn't an error condition), the reference values list should include the various permutations of `integrity-registers`. Each permutation is fully an environment-map:measurement-map pair (aka triple structure), where the environment-map is the same for each permutation.",
          "createdAt": "2024-07-17T00:45:15Z",
          "updatedAt": "2024-07-17T00:49:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that `integrity-registers` is a multi-valued analog to `digests` which describes a singleton. \r\nThis approach suggests that every singleton should have a multi-valued analog for there to be a general solution. This approach differs from what Andy suggested above where a block of code points becomes the method for realizing multi-valued measurements for any given singleton. I suppose the CDDL could have defined both the singleton and multi-valued representations behind the same code point by:\r\n```\r\nmeasurement-values-map = {\r\n  ? &(digests: 2) => digests-type / integrity-registers\r\n}\r\n```\r\nAs a BCP for defining singleton/multi-valued representations it could be contrasted with other approaches.",
          "createdAt": "2024-07-17T01:05:57Z",
          "updatedAt": "2024-07-17T01:08:57Z"
        }
      ]
    },
    {
      "number": 212,
      "id": "I_kwDOH6-tI86Bcxkg",
      "title": "\"Profiles allow to fit a specific Attester\" ?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/212",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We currently say that _\"Profiles allow the CDDL schema to fit a specific Attester\"_.\r\n\r\n@nedmsmith commented this looks odd.",
      "createdAt": "2024-03-06T15:35:42Z",
      "updatedAt": "2024-05-07T08:38:25Z",
      "closedAt": "2024-05-07T08:38:25Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issues, as CoRIM profile definition has now been re-worded!",
          "createdAt": "2024-05-07T08:38:25Z",
          "updatedAt": "2024-05-07T08:38:25Z"
        }
      ]
    },
    {
      "number": 214,
      "id": "I_kwDOH6-tI86BkgGA",
      "title": "Clarify the semantic of `[ + digest ]`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/214",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently, `digests` and `integrity-registers` allow one or more digest values:\r\n```\r\nmeasurement-values-map = non-empty<{\r\n  ; ...\r\n  ? &(digests: 2) => [ + digest ]\r\n  ; ...\r\n}>\r\n\r\nintegrity-registers = {\r\n  + integrity-register-id-type-choice => [ + digest ]\r\n}\r\n```\r\n\r\nIn both cases, the intended semantics is that each digest in the array represents one possible value for the measured object (i.e., the array encodes \"OR\" semantics).\r\n\r\nUnfortunately, this is never clearly stated ([\u00a73.1.4.1.7](https://www.ietf.org/archive/id/draft-ietf-rats-corim-04.html#section-3.1.4.1.7) and [\u00a73.1.4.1.5.2](https://www.ietf.org/archive/id/draft-ietf-rats-corim-04.html#section-3.1.4.1.5.2) are the relevant sections) and a reader could instead interpret it to represent a multi-measurements object (i.e., using \"AND\" semantics).",
      "createdAt": "2024-03-07T13:09:34Z",
      "updatedAt": "2024-04-03T14:18:21Z",
      "closedAt": "2024-04-03T14:18:21Z",
      "comments": []
    },
    {
      "number": 218,
      "id": "I_kwDOH6-tI86BvZmy",
      "title": "Use of \"stateful environment\" terminology",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/218",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix",
        "shouldfix"
      ],
      "body": "The term \"stateful environment\" is being used, generally, to refer to the matching condition contained in an EMT. The definition of EMT uses the term \"Target Environment\" to refer to the expression in the ACS to which EMT Claims will be added. It might be better to use more consistent terminology throughout the document when referring to a matching condition. Such as \"TE matching condition\". \r\n\r\nWe may want to tweak the EMT definition to better explain that \"there is a TE matching condition within the EMT that is used to locate target environments within an ACS to which the EMTs Claims may be added. A TE matching condition may be stateful, meaning both environment and measurement Claims can be part of a TE matching condition\".",
      "createdAt": "2024-03-08T19:58:54Z",
      "updatedAt": "2024-05-07T08:32:22Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 222,
      "id": "I_kwDOH6-tI86Egtf8",
      "title": "Delegate \"validity\" to signing key certificates",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/222",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "We should remove `validity-map` entirely. The validity of a signature is the purview of the PKI only. Validity without a signature is irrelevant.",
      "createdAt": "2024-04-03T14:57:43Z",
      "updatedAt": "2024-05-23T15:16:08Z",
      "closedAt": "2024-05-23T15:16:08Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Absent a way to revoke a certain CoRIM, we must have a mechanism to timebomb it.\r\n\r\nThat mechanism is the validity-map.\r\n\r\n(Even if an explicit revocation mechanism existed, the timebomb is still a useful defense.)\r\n",
          "createdAt": "2024-04-03T15:15:54Z",
          "updatedAt": "2024-04-03T15:16:12Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Clarifying question: Is the proposal to require the supply chain to mint a one-shot, short-term certificate for every CoRIM?\r\n",
          "createdAt": "2024-04-03T15:20:16Z",
          "updatedAt": "2024-04-03T15:20:16Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Not necessarily every CoRIM, but perhaps with every CoRIM bundle created for a release, yes. This is common practice for code signing.",
          "createdAt": "2024-04-03T15:28:16Z",
          "updatedAt": "2024-04-03T15:28:16Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Alternatively, whatever notion of validity a profile wants can be added later. There really should be a core and extended form of CoRIM for all these bells and whistles.",
          "createdAt": "2024-04-03T15:39:33Z",
          "updatedAt": "2024-04-03T15:39:33Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Alternatively, whatever notion of validity a profile wants can be added later. There really should be a core and extended form of CoRIM for all these bells and whistles.\r\n\r\nI think that the lifetime of the information asserted in a CoRIM is a basic feature and should be provided (at least in some crude form) by the base spec.",
          "createdAt": "2024-04-03T15:48:05Z",
          "updatedAt": "2024-04-03T15:48:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Okay, can we say this issue is to move validity-map and uses to a Lifetime management section to discuss its use? It seems there is no removing anything at this point, but we can at least give interpretations as meant by the default (DICE) profile.",
          "createdAt": "2024-04-24T15:21:58Z",
          "updatedAt": "2024-04-24T15:21:58Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm going to close this as a dupe for https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/236 given the change in direction.",
          "createdAt": "2024-05-23T15:16:08Z",
          "updatedAt": "2024-05-23T15:16:08Z"
        }
      ]
    },
    {
      "number": 223,
      "id": "I_kwDOH6-tI86EhYTP",
      "title": "Organize the presentation of the CDDL into skeleton and standard extension tables",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/223",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "This issue is getting at the heart of my call for simplification to really whittle down the presentation to separate form from function. It's very easy to get lost in the details otherwise.\r\n\r\nThis will separate out minimum necessary to express reference values from minimum for shared value of the authors of this spec. Endorsements are an extension that are not necessary to verify evidence from an attester, specifically because they are defined as a claim without evidence.\r\n\r\nWe've discussed but have not implemented the convention that every $$ extension should have its own IANA table to assign meaning to extensible maps. We should specify all extensible maps just as their repeated extension points and provide descriptions of the initial table definitions in a later section.\r\n\r\nExtensible type choices are left indeterminate or as a very opinionated minimum selection since they could be parsed as anything. We can provide in a later section some common recommended choices that profile writers could be reasonably confident that their profile could be easily adopted by verifier implementations.",
      "createdAt": "2024-04-03T16:09:02Z",
      "updatedAt": "2024-05-07T09:22:13Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 225,
      "id": "I_kwDOH6-tI86E6zGf",
      "title": "measurement-map misnomer? (measurement/claim/assertion/property/proposition...?)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/225",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "The measurement-map type is used for non-measurement claims, such as attesting environment topology and endorsements. Shall we rename measurement-map to claims-map, and measurement-values-map to claim-values-map ?",
      "createdAt": "2024-04-07T23:26:29Z",
      "updatedAt": "2024-09-04T17:05:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's determine in this issue which term we want to use for the logical propositions that are used by endorsements, reference values, and abstract verifier state.",
          "createdAt": "2024-06-05T14:37:00Z",
          "updatedAt": "2024-06-05T14:37:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "To recap the discussion,\r\n\r\n*   \"Measurement\" is not particularly helpful given that endorsements can be about unmeasured properties, such as a certifying body's assignment of a \"security level\".\r\n*  \"Claim\" is not appropriate because while analogous to the JWT/CWT term, the general definition of key/value pair is in fact too general.\r\n*  \"Assertion\" is a candidate. It has precedent in the Asylo attestation terminology of assertions and their dual, conditions. It does have the unfortunate connotation of a program-crashing check.\r\n*  \"Statement\" is a candidate, but doesn't carry the logical connotation we want to convey.\r\n*  \"Proposition\" is a candidate, but might have too absolute of a connotation.\r\n* \"Property\" is a candidate, but is overloaded with the JavaScript notion of \"property\". The distance from CoRIM->CWT->JWT->JavaScript might be too short to keep the terms from being too confusing during discussion.\r\n\r\nHowever way we slice it there will be tradeoffs. I think the least offensive to folks' sensibilities given text proposed by everyone at some point is \"Assertion\". Let's make a final decision though.",
          "createdAt": "2024-06-05T15:26:47Z",
          "updatedAt": "2024-06-05T15:26:47Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I wouldn't rule out Claims: I see its generality as a feature rather than a bug.  This would still be my preference.\r\n\r\nAmong the other proposals, I can live with Property or Assertion.",
          "createdAt": "2024-06-05T16:26:53Z",
          "updatedAt": "2024-06-05T16:26:53Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The challenge is that we want to use a common CDDL structure to represent information that has multiple contexts / domains of interpretation. Namely, Evidence, Reference, Endorsement. We've found it helpful to describe Reference and Endorsement as \"values\" while Evidence seems appropriate to use \"measurement\". Those of us with a TCG bias seem happy to use 'measurement' for all three cases since that has been a convention in the TCG for a long time.\r\nA pragmatic consideration when writing prose is we typically provide qualifying wording such as \"reference values\" or \"endorsement values\", and could easily follow a convention such as \"evidence values\". This suggests that an unqualified \"values\" could be used in CDDL where the CDDL applies to all three contexts. Note that the triple itself already provides \"reference\" and \"endorsement\" context, (and in the `concise-evidence` context); so regardless of what wording is used deeper in the CDDL, the reader is able to disambiguate.\r\n\r\nWhat is wrong with using \"Value\" or \"Values\" as the value part of a named-value pairing that involves a collection of Environment claims (aka the name) and a collection of Value claims (aka the value)? \r\n\r\nThe upper level CDDL still supplies context for Reference, Endorsement, or Evidence - as before - so using generalized wording still doesn't make the structure any less descriptive.\r\n\r\n\"Assertion\" is also reasonable though 9334 uses \"assert\", \"asserted\", and \"asserted information\" frequently to describe in more general terms \"Claim\" and other hand-wavey concepts. Nevertheless, it doesn't specifically use \"assertion\".\r\n\r\nNevertheless, I'm not passionate about any particular alternative, nor am I passionate about changing what's already there as I believe the CDDL supplies the needed disambiguation context. Hence, it doesn't feel like a problem that needs fixing IMHO.",
          "createdAt": "2024-09-04T17:05:21Z",
          "updatedAt": "2024-09-04T17:05:21Z"
        }
      ]
    },
    {
      "number": 229,
      "id": "I_kwDOH6-tI86G0X89",
      "title": "IANA issue related to tagged integer request",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/229",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "IANA experts did not believe it makes sense to create a CBOR tag for an integer value. The context in which it is used in CoRIM is as an alternative form of a `class-map` name. In a scenario where it makes sense to use a class-map value that isn't globally unique, the tagged-bytes value can be used instead.",
      "createdAt": "2024-04-24T18:00:58Z",
      "updatedAt": "2024-06-12T14:14:59Z",
      "closedAt": "2024-06-12T14:14:59Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by PR #228 and #227 ",
          "createdAt": "2024-05-03T16:40:03Z",
          "updatedAt": "2024-05-03T16:40:03Z"
        }
      ]
    },
    {
      "number": 230,
      "id": "I_kwDOH6-tI86HyV4a",
      "title": "What is an mkey really?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/230",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "preferable first release"
      ],
      "body": "I'm confused what mkey is supposed to mean. Why isn't the mkey an element of the environment itself? What is a sub-environment if not just a more specific environment? It seems like it was added to help represent accepted claims and not as a way to represent a reference integrity manifest.\r\n\r\nThe ACS reusing the CoRIM CDDL seems to have had ill effects.",
      "createdAt": "2024-05-03T17:25:30Z",
      "updatedAt": "2024-08-14T17:23:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "As far as I know Intel isn't using mkey. I agree that the 'sub-environment' philosophical context doesn't make a lot of sense, but it has been used to provide some additional context in terms of providing hints for identifying the entity that is responsible for the environment-map name space. But as an extensible value, it could be used for other things too. I don't think it is absolutely necessary to try to resolve the philosophy / justification right now, but it may be worth some text that discourages its use? ",
          "createdAt": "2024-05-03T17:55:18Z",
          "updatedAt": "2024-05-03T17:55:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">The ACS reusing the CoRIM CDDL seems to have had ill effects.\r\n\r\nThis statement seems like a non-sequitur. Does it belong in a different issue?",
          "createdAt": "2024-05-03T17:56:07Z",
          "updatedAt": "2024-05-03T17:56:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">Is mkey assigned by the evidence reflection through the conveyance or the CoRIM issuer? I'm confused about the phase at which the mkey value is assigned. \r\n\r\nThis is quoted from #70 which points to #230 as the discussion thread for this question.",
          "createdAt": "2024-05-03T19:25:11Z",
          "updatedAt": "2024-05-03T19:25:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe the original intent was for mkey values to be created as part of manifest authoring.\r\nHowever, since mkey is extensible, it's possible that an extension defines different semantics.",
          "createdAt": "2024-05-03T19:26:22Z",
          "updatedAt": "2024-05-03T19:28:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "When you say manifest authoring, are you talking about reference manifests or manifests that are reflected from evidence at the time of verification? The latter is the part I'm confused about. I don't know how you identify an ephemeral SPDM channel ahead of time for reference values.",
          "createdAt": "2024-05-03T21:40:55Z",
          "updatedAt": "2024-05-03T21:40:55Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">When you say manifest authoring, are you talking about reference manifests\r\n\r\nReference/Endorsement Manifests\r\n>manifests that are reflected from evidence at the time of verification?\r\n\r\nConsider a hot-plug use case (or other similar use case) where a component is discovered to be in the system but a Reference / Endorsement Manifest didn't predict its discovery. Lets say it was a second NIC card. Upon insertion a system bus starts reporting activity on the endpoint. An Attesting Environment might collect claims and include additional evidence. If only the class-map environment is used, both NICs would have the same measurements, but there would be two instances of evidence. How should a Verifier disambiguate the two? Possibly there was a glitch that reported the same evidence block twice? Or it was a hot-plug event that shows two NICs when there used to only be one. If the Attesting Env had a way to disambiguate each NIC, that might help the Verifier. One possible approach is to leverage mkey to encode bus endpoint identifiers (but an alternative is to define a new measurement/claim type and add it to the other measurements in the evidence block) - I don't think this is resolved yet. In terms of handling reference values, it is possible that an endorsement manifest reports the existence of the system bus. But it can't know if the endpoint is populated (until the hot plug event).  The ephemeral SPDM channel use case seems to have similar dynamics. The challenge with SPDM and the way it reports evidence is there isn't the logical equivalent of `environment-map` only measurements. If you argue that the SPDM session key / transcript is equal to an `instance-id` this also doesn't work because the transcript is dynamically generated (kind of like a hot-plug event). So there needs to be a way for Attesting Environments to assert new context but where Verifiers don't expect to find corresponding reference values. I think an elegant approach is to let Attesting Envs assert additional claims in Evidence. Normally, the verifier just accepts these assertions anyway - it just records the authority by which they're asserted. It's up to RPs / policy to determine its relevance to trustworthiness. It's a matter of using the measurement-values-map extension mechanisms to satisfy the particular use case be it hot-plug or something similar.",
          "createdAt": "2024-05-03T23:05:25Z",
          "updatedAt": "2024-05-03T23:34:51Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Attesters report evidence though, not reference values and endorsements. There's a phase distinction between provisioning and runtime here. I don't think that attesters should be reusing CoRIM as a representation of evidence, here adding in some kind of mkey metadata.",
          "createdAt": "2024-05-04T15:01:14Z",
          "updatedAt": "2024-05-04T15:01:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I don't think that attesters should be reusing CoRIM as a representation of evidence\r\n\r\nEvidence needs to follow the schema of the reference values (or vice versa), otherwise, there needs to be a schema translation layer built into the tooling. The RATS Arch and Endorsement I-D point to the complexity issues associated with both schema translation and format translation. There are existing specs in TCG that are aligned with CoMID at the ECT level of abstraction. One defines CBOR encoding while the other an BER encoding. Both align with the CoRIM schema's ECT structures. \r\n\r\nThe use of mkey to solve a real problem is only one possible approach. I'm not advocating necessarily for this approach. ",
          "createdAt": "2024-05-07T18:47:49Z",
          "updatedAt": "2024-05-07T18:47:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">added the [preferable first release](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/labels/preferable%20first%20release) label\r\n\r\nThis issue, #230, is referenced from issue #70. A resolution to #70 is needed which may resolve the #230 thread as well?\r\n\r\nIt isn't clear to me that there is an issue here. The thread seems to be soliciting clarification and context. Hence, I think its premature to prioritize it as something to be fixed.\r\n\r\nIssue #248 also has an `mkey` thread (and my feedback there is to resolve #70 first as well)",
          "createdAt": "2024-05-07T18:49:26Z",
          "updatedAt": "2024-07-15T23:38:29Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I can appreciate that the translation step can be a burden, but you have a very real problem here for phase distinction. Can we have a shared base CDDL that both evidence and CoRIM use to avoid problems in representations?\r\n\r\nThere's already a problem with measurement-map's authorized-by leaking from stateful-environment-map's conditions on authorizers to reference values' ability to misattribute authorization of reference values to a principal other than the CoRIM issuer.\r\n\r\nMake illegal states unrepresentable. While it may lead to code points that seem largely the same, the phase of when the data is generated is important to distinguish with a hard line.",
          "createdAt": "2024-05-07T19:11:46Z",
          "updatedAt": "2024-05-07T19:11:46Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> problem with measurement-map's authorized-by\r\n\r\nSeems like we need an issue detailing the concern with `authorized-by`.  \r\nThis doesn't seem related to `mkey` however.",
          "createdAt": "2024-05-07T20:08:52Z",
          "updatedAt": "2024-05-07T20:08:52Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Okay, might I suggest that we change this issue to deprecate mkey in favor of something like $$environment-map-extensions? I'm finding it particularly difficult to model SEV-SNP attestations to account for CHIP_ID as instance of the host, and REPORT_ID as instance of the guest on the host, and REPORT_ID_MA as instance of the guest across migrations. @thomas-fossati have you thought more about Realms CCA ephemeral instance ids?",
          "createdAt": "2024-07-15T23:06:49Z",
          "updatedAt": "2024-07-15T23:06:49Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "It probably doesn't make sense for environment-map to be extensible by profile since you need to be able to name specific instances across profiles. But that also makes mkey difficult to account for as profile-extensible, since that is also naming the subject :-/",
          "createdAt": "2024-07-15T23:27:31Z",
          "updatedAt": "2024-07-15T23:27:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">It probably doesn't make sense for environment-map to be extensible by profile\r\n>But that also makes mkey difficult\r\n\r\nRemoving `mkey` would force data models to consider using an environment identifier instead. \r\n\r\nNevertheless, all three forms are extensible using $class-id-type-choice, $group-id-type-choice, or $instance-id-type-choice. But given tagged-bytes is common to all of them (`tagged-bytes = #6.560(bytes)`). There's little / no reason for a profile to need to extend the identifier since `bytes` can contain any value opaquely. It just has to be globally unique.\r\n\r\nSome have positioned that `mkey` has value in that it could use a small (number/string) value as an environment (or object or component or measurement or ...) identifier that is locally scoped to more efficiently build RIMs. This idea is explained in more detail in #248\r\n",
          "createdAt": "2024-07-16T00:02:40Z",
          "updatedAt": "2024-07-16T00:02:40Z"
        },
        {
          "author": "savithahh",
          "authorAssociation": "NONE",
          "body": "- reference-triple-record definition  in https://trustedcomputinggroup.org/wp-content/uploads/TCG-Endorsement-Architecture-for-Devices-V1-R38_pub.pdf:\r\n\r\nreference-triple-record = [\r\n environment-map ; target environment\r\n **[ + measurement-map ]** ; reference measurements\r\n]\r\nIn this case can the mkey be used identify the subcomponent in each measurement-map within the same environment?\r\n\r\n- This differs from the definition in https://www.ietf.org/archive/id/draft-ietf-rats-corim-05.html#:\r\n\r\nreference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n] \r\nClarification will help. Thank you!",
          "createdAt": "2024-07-25T16:58:58Z",
          "updatedAt": "2024-07-25T16:58:58Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> * reference-triple-record definition  in https://trustedcomputinggroup.org/wp-content/uploads/TCG-Endorsement-Architecture-for-Devices-V1-R38_pub.pdf:\r\n> \r\n> reference-triple-record = [ environment-map ; target environment **[ + measurement-map ]** ; reference measurements ] In this case can the mkey be used identify the subcomponent in each measurement-map within the same environment?\r\n> \r\n> * This differs from the definition in https://www.ietf.org/archive/id/draft-ietf-rats-corim-05.html#:\r\n> \r\n> reference-triple-record = [ environment-map measurement-map ] Clarification will help. Thank you!\r\n\r\nThe IETF corim design team, at one point, thought the multiplicity of measurement-maps wasn't desirable since it requires disambiguation in terms of which environment it belongs in. mkey could be used for that purpose, but it also could be used to provide other information such as identifying an originator of the measurement. It also seems to be a less elegant way to model parent-child relationships.\r\n\r\nSince then, the scope of environment-map was clarified to be global. But the namespace scope for mkey, if used, has some value as a locally scoped identifier (which seems to reduce the verbosity of the overall expression). \r\n",
          "createdAt": "2024-07-25T21:01:24Z",
          "updatedAt": "2024-07-25T21:01:24Z"
        },
        {
          "author": "savithahh",
          "authorAssociation": "NONE",
          "body": "> The IETF corim design team, at one point, thought the multiplicity of measurement-maps wasn't desirable since it requires disambiguation in terms of which environment it belongs in. mkey could be used for that purpose, but it also could be used to provide other information such as identifying an originator of the measurement. It also seems to be a less elegant way to model parent-child relationships.\r\n> \r\n> Since then, the scope of environment-map was clarified to be global. But the namespace scope for mkey, if used, has some value as a locally scoped identifier (which seems to reduce the verbosity of the overall expression).\r\n\r\nThank you for the info!\r\n\r\n- What are the other options available to model parent-child relationships?\r\n\r\n-  Will the definition of reference-triple-record be considered for an update with [ + measurement-map ], to be uniform across specifications?",
          "createdAt": "2024-07-26T08:20:35Z",
          "updatedAt": "2024-07-26T08:20:35Z"
        },
        {
          "author": "savithahh",
          "authorAssociation": "NONE",
          "body": "> > The IETF corim design team, at one point, thought the multiplicity of measurement-maps wasn't desirable since it requires disambiguation in terms of which environment it belongs in. mkey could be used for that purpose, but it also could be used to provide other information such as identifying an originator of the measurement. It also seems to be a less elegant way to model parent-child relationships.\r\n> > Since then, the scope of environment-map was clarified to be global. But the namespace scope for mkey, if used, has some value as a locally scoped identifier (which seems to reduce the verbosity of the overall expression).\r\n> \r\n> Thank you for the info!\r\n> \r\n> * What are the other options available to model parent-child relationships?\r\n> * Will the definition of reference-triple-record be considered for an update with [ + measurement-map ], to be uniform across specifications?\r\n\r\nThis will help to have the evidence and the reference triple records aligned per \"TCG DICE Concise Evidence Binding for SPDM\". Should this be opened as a separate topic? Appreciate your comments.",
          "createdAt": "2024-08-06T19:01:11Z",
          "updatedAt": "2024-08-06T19:01:11Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I also agree that mkey is really part of the `environment-map`/`class`. My products are not dependent on mkey but I am ok with the field existing in the correct place in the syntax.\r\n\r\nOne significant issue will be backwards compatibility with DICE/SPDM import of manifests which include mkey. That process has moved to a new draft `draft-smith-rats-evidence-trans` - I think that document needs to provide backwards compatibility with manifests published by existing attesters.\r\n\r\nIf we decide that we have to keep mkey then IMHO it should move to `environment-map`/`class`",
          "createdAt": "2024-08-07T15:01:06Z",
          "updatedAt": "2024-08-07T15:01:06Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> If we decide that we have to keep mkey then IMHO it should move to environment-map/class\r\n\r\n\ud83d\udc4d",
          "createdAt": "2024-08-09T17:16:15Z",
          "updatedAt": "2024-08-09T17:16:15Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I've dug a little into the corim repo and see an example for PSA tokens that mkey is used to distinguish the bootloader and PRoT as separately measured components.\r\n\r\nGiven that the corim repo represents a value triple with an evironment and an array of measurements and the draft has no such array, there is no added benefit of mkey given the \"merge\" semantics, unless the idea is that\r\n\r\n```\r\nTriple[E, [M, ...]]\r\n```\r\nshould be interpreted as duplicating `E`, and `mkey` is still allowed to keep `measurement-values-map` from getting merged together.\r\n\r\n```\r\n[Triple[E, M], ...]\r\n```\r\n\r\nNow I wonder, given this example, if `mkey` is expected to be the name of \"one of the things the attester measured\", and not simply a distinguishing name for otherwise identical components. The BL/PRoT example suggests that the constraint of \"identical\" wasn't intended.\r\nIt certainly makes more sense to me to allow an attestation report with multiple fields to use mkey as a field name and mval as a representation of the value kind, instead of having a profile add duplicate value kinds to account for the many fields (see [my draft profile for SEV-SNP](https://deeglaze.github.io/draft-deeglaze-amd-sev-snp-corim-profile/draft-deeglaze-amd-sev-snp-corim-profile.html))\r\n\r\nWith this interpretation of mkey, it makes verifiers less burdensome to write. There's little reason for me to use the values map extension. I can use `svn-type` for all the different TCB values, all given a different `mkey`. I can use `version` for the build/major/minor tuples.",
          "createdAt": "2024-08-09T17:48:24Z",
          "updatedAt": "2024-08-09T17:48:24Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "For PSA, we could (re)use EAT measured components, e.g.:\r\n\r\n```\r\n[\r\n  / env / {\r\n    / class / 1 : {\r\n      / class-id / 1 : 1234(h'0123456789')\r\n    }\r\n  },\r\n  / measurement / {\r\n    / EAT measured components / 5678 : [\r\n      [\r\n        / id / [\r\n          / name / \"PRoT\",\r\n          / version / [ \"3.2.1\" ]\r\n        ],\r\n        / measurement / [\r\n          / alg / \"sha-256\",\r\n          / val / h'3996003d486fb91ffb056f7d03f2b2992b215b31dbe7af4b373431fc7d319da3'\r\n        ],\r\n        / signers / [ h'4277bb97ba7b51577a0d38151d3e08b40bdf946753f5b5bdeb814d6ff57a8a5e' ]\r\n      ],\r\n      [\r\n        / id / [\r\n          / name / \"BL\",\r\n          / version / [ \"1.2.3\" ]\r\n        ],\r\n        / measurement / [\r\n          / alg / \"sha-256\",\r\n          / val / h'ffaf003d486fb91ffb056f7d03f2b2992b215b31dbe7af4b373431fc7d319da3'\r\n        ],\r\n        / signers / [ h'4277bb97ba7b51577a0d38151d3e08b40bdf946753f5b5bdeb814d6ff57a8a5e' ]\r\n      ]\r\n    ]\r\n  }\r\n]\r\n```",
          "createdAt": "2024-08-09T19:29:34Z",
          "updatedAt": "2024-08-09T19:29:34Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze would something like the above work for you if we added SVNs to EAT measured components?\r\n\r\nI.e.:\r\n\r\n```\r\n[\r\n  / env / {\r\n    / class / 1 : {\r\n      / class-id / 1 : ...\r\n    }\r\n  },\r\n  / measurement / {\r\n    / EAT measured components / 5678 : [\r\n      [\r\n        / id / [\r\n          / name / \"host microcode\"\r\n        ],\r\n        / SVN / 1\r\n      ],\r\n      [\r\n        / id / [\r\n          / name / \"host firmware\"\r\n        ],\r\n        / SVN / 3\r\n      ],\r\n      [\r\n        / id / [\r\n          / name / \"guest firmware\"\r\n        ],\r\n        / SVN / 24\r\n      ],\r\n      / etc. /\r\n    ]\r\n  }\r\n]\r\n```",
          "createdAt": "2024-08-14T16:01:11Z",
          "updatedAt": "2024-08-14T16:04:24Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "SVN was an example of many things we account for in TDX and SEV-SNP quotes. I don't know why 5678 would be a valid place to replicate the mkey/mval meaning when there are already standard measurement value types.",
          "createdAt": "2024-08-14T17:23:47Z",
          "updatedAt": "2024-08-14T17:23:47Z"
        }
      ]
    },
    {
      "number": 231,
      "id": "I_kwDOH6-tI86IQCSa",
      "title": "Minimal interface to \"ACS\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/231",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We talked today about reference values and endorsements expressed in the same manner of conditions and assertions. I'd like to say I like the direction this is going. I think that the expression of condition is still coarse and can be specified in simpler language.\r\n\r\nWe say \"match\" and \"assert\" a lot, and I want to get to the heart of their meaning. I mentioned that a meet-semilattice seems like an appropriate abstraction, but I'll break down the bare bones requirements here. A meet-semilattice is not required.\r\n\r\nWe have individual claims that have their own theory behind their interpretation, either by standard or by profile. A claim is now an atomic proposition `c` interpreted in theory `T_p` (theory of the profile) asserted by `A`. The theory of the profile gets to determine if the conjunction of claims `(and c ...)` is consistent or not, and whether `(and c ...) => c'`, a collection of claims `c ...` implies another claim `c'`.\r\n\r\nAssert becomes the addition of `(c, p, A)` into the context, or \"ACS\". The `T_p` decides if appraisal has failed with this new assertion.\r\n\r\nThe interface we have now for `match` is \"do I know if `(c,p,a)` is implied by the ACS?\" An expression language that allows complex conditionals is left to the language design, say an array of ECTs meaning an `and` of the orthogonal claims represented by each ECT.\r\n\r\nSo here we have it: implication and conjunction. The expression language for the standard can be limited but not prescriptive of all manners of expressing combinations of assert and match. We do not allow asserting complex combinations of atoms like `(and c0 (or c1 (not c2)))` to maintain reasonable complexity, but a theory may decide that its atoms get to be interpreted as more complex expressions\u2013it is then responsible for any further interpretation of the atoms it contains. Combining theories modularly is not easy, and is the topic of many papers in the realm of satisfiability modulo theories.\r\n\r\nGiven this limited interface, we know first that `c => c`, or exact matching. The rest of the semantics of matching comes from how we interpret other measured values.\r\n\r\n`svn(x) and minsvn(y)` is consistent only if `y <= x`.\r\n`digests(alg_i => digest_i ...) and digests(alg_j => digest_j ...)` only if the same algorithms map to the same digests. Expressing each map as a finite function, you can say the condition for consistency is `let d = dom(d_0) intersect dom(d_1). d_0|d = d_1|d` (where `f|d` is the notation of a function `f` restricted to a domain `d`).\r\n\r\nThe implication decision procedure follows similarly, but now it behooves us to express \"combination\" for easier description of implication. This is the augmentation process. How do you combine digests? Provided they don't collide, you can say `Digests(d_0) meet Digests(d_1) = Digests(lambda alg. if alg in dom(d_0). d_0(alg) else d_1(alg))` since if the algorithm is in both, the result is the same.\r\n\r\nYou can further lift the meet operation over integrity registers pointwise, or allow for textual and integer names to compare according to the IANA table before performing the meet of the values under the names.\r\n\r\nIf folks agree with this, we can start describing the condition language as first reflecting an ECT into a set of claims `(c, p, A) ...` and then performing some logical combination querying them before continuing to an assert. ",
      "createdAt": "2024-05-08T15:41:57Z",
      "updatedAt": "2024-05-10T21:21:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">Assert becomes the addition of (c, p, A) into the context, or \"ACS\". The T_p decides if appraisal has failed with this new assertion.\r\n\r\nThis may be giving profile too much authority. Profiles don't undo what's in the spec. It would be more correct to say that a profile extends the spec. If p = corim base spec, then the above representation seems correct. ",
          "createdAt": "2024-05-10T18:19:03Z",
          "updatedAt": "2024-05-10T18:19:03Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah yes, an unwritten assumption was that the meaning of claim c is defined by p, so you can\u2019t pair a claim from profile \u2018a\u2019 with profile \u2018b\u2019 when a!=b",
          "createdAt": "2024-05-10T21:21:12Z",
          "updatedAt": "2024-05-10T21:21:12Z"
        }
      ]
    },
    {
      "number": 233,
      "id": "I_kwDOH6-tI86JtUcy",
      "title": "N/A in Conceptual Message Representation Requirements table",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/233",
      "state": "OPEN",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Is that policy (the \"yet undefined RATS Conceptual Message\")? `Verifier_ECTs` seem to be an indirect way to say either policy or \"RVP or Endorser that is co-located with Verifier Owner\". The N/A seems weirdly undefined to me - and i think it must be possible to map it to existing CMs, right?",
      "createdAt": "2024-05-22T12:03:58Z",
      "updatedAt": "2024-05-23T17:48:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Do you have a reference to the text you're talking about? I'm not quite able to follow what this issue is discussing.",
          "createdAt": "2024-05-23T15:18:34Z",
          "updatedAt": "2024-05-23T15:18:34Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Since ECT isn't defined until later in the document, it didn't make sense to use terms that assume the reader understands it. I took a stab at rewording using common language. \r\n\r\nI also replaced n/a with Verifier:\r\n| Verifier | List of expected actual state claims, List of Verifier generated claims | If the list of expected claims are in the ACS, then add the list of Verifier generated claims to the ACS with Verifier authority |\r\n\r\nThe goal is to provide a concise description of verifier objectives.\r\n\r\n> i think it must be possible to map it to existing CMs, right?\r\n\r\nYes. There is an unwritten section for Phase 5 where this should be documented. There are two use cases from existing comid that logically fit into phase 5. The `triples-map` defines:\r\n```\r\n  ? &(identity-triples: 2) =>  [ + identity-triple-record ]\r\n  ? &(attest-key-triples: 3) => [ + attest-key-triple-record ]\r\n  ? &(dependency-triples: 4) => [ + domain-dependency-triple-record ]\r\n```\r\nThe identity and attest-key triples are essentially asking the Verifier to perform key validation checks. If validity checking isn't desired, the key object can be supplied as a measurement-values-map entry. If the keys are valid, the keys are added to the ACS with Verifier authority.\r\nThe dependency triple is asking the Verifier to check the graph of which AEs attested which TEs based on an expected graph. If the graph checks out, the Verifier adds the environments that check out under the Verifier authority.\r\nWe have not yet pulled in the internal representations for these use cases.\r\n\r\nPhase 6 describes policy additions. This could also be a use case for Verifier making assertions if the policy is Appraisal Policy for Evidence where the Verifier Owner authors the policy. If the policy is satisfied, the new claims asserted are asserted with the policy owner authority. Given the policy owner and verifier are the same entity, this would be a case where the new claims are added under Verifier authority. This case is probably best described in phase 6 though. ",
          "createdAt": "2024-05-23T15:41:31Z",
          "updatedAt": "2024-05-23T17:48:14Z"
        }
      ]
    },
    {
      "number": 234,
      "id": "I_kwDOH6-tI86Jtaw2",
      "title": "The use of `context` might be overloaded in PR #232 (but also previously)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/234",
      "state": "OPEN",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "* `context` is now (preliminary) part of ECT\r\n* Verifier Reconciliation provides `context`\r\n* Claims in ECT somehow rely on `context`\r\n* Attester_ECT provide a `context`\r\n* A Verifier establishes `context` for interacting with an Attester\r\n* a `context` is the scope of application of a certain language used in tstr\r\n* the semantics of the environment-map or measurement-values-map depend on the `context` they are used in\r\n* a domain is a `context` for bundling a collection of related environments and their measurements\r\n* a condition must must describe the expected `context`\r\n\r\nThere are more instances of examples, but I think the examples above already convey the point I am trying to make.\r\n\r\nWhenever `context` means not the exact same thing in the document, we must reshuffle the use of the term, significantly (and probably introduce or reuse other terms).",
      "createdAt": "2024-05-22T12:16:33Z",
      "updatedAt": "2024-05-22T12:16:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 235,
      "id": "I_kwDOH6-tI86Jvmzq",
      "title": "Profile-defined claim scope extrusion flaw",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/235",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Writing up what I've brought up before so we can discuss it more thoroughly.\r\n\r\nIn programming languages, when a variable name manages to flow to a reference point where the name is not bound, or it's bound to a different value and shouldn't be reinterpreted, we call that semantic flaw \"scope extrusion\". The reason Lisps of old didn't allow returning functions that refer to local variables  (\"upwards funargs\") is because they hadn't invented closures yet. Functional programming language compilers will perform \"escape analysis\" to determine if a local function value will flow to a call site outside the lexical scope of the variables it refers to in order to avoid allocating a closure.\r\n\r\nIn analogy to the CoRIM spec, consider negative keys in claim-values-map as variables that are bound by the profile name in the CoRIM document. The claims have meaning within an individual document.\r\n\r\nWhen we go to the abstract verifier discussion, we can have evidence and reference values from multiple profiles within the same ACS, but there are no longer any profile names as binding sites. We have a scope extrusion problem. I think each ECT needs to include the profile from whence the claims came. This is the analogous \"closure\".\r\n\r\nWhen processing a condition on a profile-defined claim, we have to match against the ACS. The ACS could have an ECT with the same environment and claim-values-map key value, but be meant to be interpreted in a different profile. We thus cannot correctly match conditions.\r\n\r\n---\r\n\r\nSimilarly, and this is more of an expressive limitation than a flaw per-say, a condition in one profile may wish to name claims that were added from evidence that is governed by a different profile. For instance, suppose there is a profile for transforming the AMD SEV-SNP attestation report into a collection of claims that correspond to the components of the report. The authority for the claims is the AMD SEV root key. The claim key values can be some negative integer.\r\n\r\nNow I come along and say, if AMD authorized measurement M, and TCB_VERSION T, then I endorse this as \"Y-proprietary security level L\". This is contrived, but still there are possible cross-profile conditions that folks will want to express. You can't do this now, since the negative values in the condition and consequent will both be scoped to the 1 document's profile, and you'd end up having to have a strict superset of the AMD evidence profile for the Y-proprietary claim profile. Perhaps that's the correct way to do it anyway.",
      "createdAt": "2024-05-22T16:22:47Z",
      "updatedAt": "2024-07-31T15:40:29Z",
      "closedAt": "2024-07-31T15:40:29Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "To extend this with today's meeting's comment, we need the condition representation to be asymmetric with the consequent.\r\n\r\nFrom (roughly)\r\n```\r\ncondition: ECT / [+ ECT]\r\n\r\nECT = [\r\nenvironment-map\r\n? measurement-map\r\n]\r\n```\r\n\r\nTo\r\n```\r\ncondition: PECT / [+ PECT]\r\n\r\nPECT = [\r\nenvironment-map\r\n? measurement-map\r\n? profile-reference\r\n]\r\n\r\nprofile-reference /= $profile-type-choice / profile-binding\r\n```\r\n\r\nWhere the `profile-binding` is part of a top level `corim-map` field\r\n\r\n```\r\n $$corim-map-extension /= &( 6 => dependent-profiles-map )\r\ndependent-profiles-map = { profile-binding => $profile-type-choice }\r\nprofile-binding = int / text\r\n```\r\n\r\n(or however a map extension is supposed to be written in CDDL)\r\n\r\nNow profile-local claim definitions can be named appropriately in conditions.",
          "createdAt": "2024-06-12T15:07:09Z",
          "updatedAt": "2024-06-12T15:08:11Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing since profile in ECT disambiguates.",
          "createdAt": "2024-07-31T15:40:29Z",
          "updatedAt": "2024-07-31T15:40:29Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "I_kwDOH6-tI86J4HHE",
      "title": "Add a lifecycle management section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/236",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The validity-map usage across the format is confusing given what we know about managing expiration with PKI infrastructure.\r\n\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/224 sought to remove it entirely, but since there are existing uses and we shouldn't try to impose complex PKI management on issuers, I think it's better to more holistically discuss what lifecycle management options are modellable given the inclusion of both validity-map in CoRIM and PKI for the issuer's key certificate.",
      "createdAt": "2024-05-23T15:15:00Z",
      "updatedAt": "2024-05-23T15:15:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 237,
      "id": "I_kwDOH6-tI86J4Pah",
      "title": "Extract a common core between reference and evidence",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/237",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In PR#232 the addition \"CoRIM data structures may be used by Evidence and Attestation Results that wish to describe overlapping structure\" is particularly concerning. I've seen Ned describe the desire to avoid needing to define new translations between all new evidence formats by declaring that industry evidence formats are just always going to use CoRIM triples. That's not at all decided, and I think there are phase distinction concerns to address when trying to blend the provisioning+signing time and run time representations of both expectations and raw evidence.\r\n\r\nGiven that, just saying that \"CoRIM data structures may be used\" is certainly a possibility, but it's too hypothetical to solidify in the standard. When another entity decides their message representation, they are of course well within their rights to reuse CoRIM encodings, but without a standard to describe the common core between evidence, attestation results, and CoRIMs, it's too early to muddy the waters. A concrete example of the bleeding between reference and evidence is the mkey https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/230, and I don't think that it belongs there in the reference structure.",
      "createdAt": "2024-05-23T15:30:11Z",
      "updatedAt": "2024-07-31T15:31:24Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The internal representation reuses ECTs for everything from evidence to endorsement to attestation results. The semantics of ECTs overlaps all the various conceptual messages. Hence, the idea of a schema that \"overlaps\" or in other words is multi-purpose isn't out of the question.\r\n\r\nThe TCG specs that define concise-evidence, DiceTcbInfo, and SPDM formats overlap portions of the CoRIM schema on purpose to ensure a mapping to the internal representation is (ideally) non-lossy. The definition of evidence that borrows some of the CDDL in CoRIM nevertheless relies on different CBOR tagging that distinguishes it as Evidence vs Reference or Endorsed Values (which is what the CBOR tagging in CoMID distinguish.  \r\n\r\nThe language in section 8 is in the context of a description of appraisal processing where all the inputs are transformed into internal representations. This text is setting the stage for use of ECTs.",
          "createdAt": "2024-05-23T15:53:57Z",
          "updatedAt": "2024-05-23T15:53:57Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Maybe referencing TCG concise-evidence as an example in the context of Dionna's proposed \"\"CoRIM data structures may be used\" is good enough?",
          "createdAt": "2024-05-29T13:28:44Z",
          "updatedAt": "2024-05-29T13:28:44Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "That still seems unguided. Is the goal not to converge on an industry standard attestation evidence format? Without that goal, we can see diverging uses of CoRIM CDDL codepoints.",
          "createdAt": "2024-05-29T14:01:49Z",
          "updatedAt": "2024-05-29T14:01:49Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps we can make a label for issues that are better handled in a \"User guide\" type of document to accompany the reference document? If we have that, I'd say label it that and close so we can come back to it in a follow-up doc.",
          "createdAt": "2024-07-31T15:31:23Z",
          "updatedAt": "2024-07-31T15:31:23Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDOH6-tI86KfaIZ",
      "title": "Need a better Introduction overall...",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/238",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-29T14:32:25Z",
      "updatedAt": "2024-05-29T14:32:25Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 239,
      "id": "I_kwDOH6-tI86KfiFm",
      "title": "Plurality mismatch. Best to attempt to use singular terms when possible.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/239",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Concept of RV's going into ACS needs to be revisited!\r\n\r\nWhen Evidence is not corroborated with RVP",
      "createdAt": "2024-05-29T14:46:40Z",
      "updatedAt": "2024-05-31T14:10:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "The wording I used for this in the meeting is, approximately:\r\n\r\n\"If a reference value in a CoRIM matches claims in the ACS, then the authority of the CoRIM issuer  is added to those claims.\"",
          "createdAt": "2024-05-29T15:03:32Z",
          "updatedAt": "2024-05-31T14:10:45Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Replace CoRIM provider with CoRIM issuer and I agree.",
          "createdAt": "2024-05-29T15:22:37Z",
          "updatedAt": "2024-05-29T15:22:37Z"
        }
      ]
    },
    {
      "number": 240,
      "id": "I_kwDOH6-tI86Kwtio",
      "title": "Create new RFC draft for appendices",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/240",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The SPDM and DICE concise evidence appendices ought to be follow-on RFCs to the CoRIM RFC @andrew-draper ",
      "createdAt": "2024-05-31T14:51:16Z",
      "updatedAt": "2024-05-31T14:51:16Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 241,
      "id": "I_kwDOH6-tI86LPWeK",
      "title": "Clarify first paragraph of Verifier Reconciliation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/241",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              ```suggestion\r\nWhile this specification focuses on the CoRIM format itself, it is also vital to  document how a Verifier should process the CoRIM so as to enable the CoRIM authors to appropriately encode it.\r\n```\r\n\r\n_Originally posted by @yogeshbdeshpande in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/232#discussion_r1627880853_\r\n            ",
      "createdAt": "2024-06-05T14:18:34Z",
      "updatedAt": "2024-08-16T12:43:24Z",
      "closedAt": "2024-08-16T12:43:24Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande do we really need this issue?",
          "createdAt": "2024-06-05T14:24:43Z",
          "updatedAt": "2024-06-05T14:24:43Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "resolved by PR #252",
          "createdAt": "2024-08-16T12:43:24Z",
          "updatedAt": "2024-08-16T12:43:24Z"
        }
      ]
    },
    {
      "number": 242,
      "id": "I_kwDOH6-tI86LQEnX",
      "title": "Complete the section on Quantisation of inputs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/242",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Need to complete the section - that deals with \r\nQuantizing Inputs {#sec-quantize}",
      "createdAt": "2024-06-05T15:41:31Z",
      "updatedAt": "2024-10-04T15:33:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we need to clarify that we're specifying a single step of logical propagation in the context of computing a fixed point. We need to clarify if the CoRIM author can depend on the fixed point getting computed, or whether they have to be concerned about an arbitrary limit to the number of steps that the Verifier may take. That boils down to the question, what is a CoRIM-compliant Verifier?\r\n\r\nTo further get rid of the need for the notion of \"quantum\", we need a way of describing the verification status of certificates, and that that status is an input to the appraisal process. The time that a CoRIM is accepted to the knowledge base is different from the time that appraisal happens.\r\n\r\nThe knowledge base's certificates should have their revocation status and expiry checked periodically. The validity period of a CoRIM included in the knowledge base should be checked periodically. We won't demand a specific periodicity or that a check precedes every single appraisal request.\r\n\r\nThe revocation status of certificates are determined through multiple messages to different services. Time passes between each request. The time at which expiry is checked could be wall clock time or the time that appraisal began. There is no simultaneity of the state of consistency of all facts checked to admit a CoRIM to the knowledge base.\r\n\r\nI don't think we can specify that knowledge base checks must happen at the time of appraisal, since there is no one time.",
          "createdAt": "2024-06-05T21:19:40Z",
          "updatedAt": "2024-06-05T21:19:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "If the appraisal process is broken down into a sequence of well-defined and non-overlapping phases (which I think is already the case), then it is sufficient to define an \"appraisal context preparation\" phase and say that such a phase happens once and before all other phases.\r\n\r\nThe goal of the \"appraisal context preparation\" phase is to gather the needed knowledge base && determine the suitability of each knowledge base component in terms of its freshness, revocation status, etc.\r\n",
          "createdAt": "2024-06-05T22:07:32Z",
          "updatedAt": "2024-06-05T22:07:32Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Do you want all those phases to happen every appraisal request is the question. If we want to say suitability can be \"predetermined\" such as \"this has been checked in the last hour, so we don't need to check it again\", then I'm fine with including that in the phasing documentation.",
          "createdAt": "2024-06-05T22:31:57Z",
          "updatedAt": "2024-06-05T22:34:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Do you want all those phases to happen every appraisal request is the question.\r\n\r\nformally, yes.  implementations can optimise/amortise provided they do not violate the security invariants, i.e.:\r\n1. allowing stale\r\n2. allowing revoked\r\n\r\n> If we want to say suitability can be \"predetermined\" such as \"this has been checked in the last hour, so we don't need to check it again\", then I'm fine with including that in the phasing documentation.\r\n\r\nyes, exactly.\r\n",
          "createdAt": "2024-06-05T23:05:57Z",
          "updatedAt": "2024-06-05T23:05:57Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "You're asking for contradictory things. Stale and revoked are time-dependent properties that must have room for error and or time-limited caching.",
          "createdAt": "2024-06-06T00:13:48Z",
          "updatedAt": "2024-06-06T00:13:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> You're asking for contradictory things. Stale and revoked are time-dependent properties that must have room for error and or time-limited caching.\r\n\r\nSure.  I am not sure I see the contradiction: however one implements the appraisal machine, it needs to refuse artefacts that are stale or revoked at the time appraisal starts.\r\n",
          "createdAt": "2024-06-06T02:14:16Z",
          "updatedAt": "2024-06-06T02:14:16Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Every appraisal needs request needs to make multiple ocsp requests to check for certificate revocation even it just did so a second or a minute ago? You said you would allow caching, but if the checks have to be performed before every appraisal then you\u2019re caching nothing.",
          "createdAt": "2024-06-06T02:20:42Z",
          "updatedAt": "2024-06-06T02:20:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Every appraisal needs request needs to make multiple ocsp requests to check for certificate revocation even it just did so a second or a minute ago?\r\n> You said you would allow caching, but if the checks have to be performed before every appraisal then you\u2019re caching nothing.\r\n\r\nIt is not impossible to cache OCSP responses, see [Section 6 of RFC5019]( https://datatracker.ietf.org/doc/html/rfc5019#section-6).\r\nA similar argument can be made for CRLs.",
          "createdAt": "2024-06-06T04:58:13Z",
          "updatedAt": "2024-06-06T04:58:13Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "While I quite agree with a need for an \"appraisal context preparation\" phase, we should avoid implementation specific `caching` and any details about how revocation/freshness is  determined by each Verifier. ",
          "createdAt": "2024-06-06T08:44:22Z",
          "updatedAt": "2024-06-06T08:44:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> While I quite agree with a need for an \"appraisal context preparation\" phase, we should avoid implementation specific `caching` and any details about how revocation/freshness is determined by each Verifier.\r\n\r\nexactly my point.",
          "createdAt": "2024-06-06T08:53:14Z",
          "updatedAt": "2024-06-06T08:53:14Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Okay, we're in violent agreement.",
          "createdAt": "2024-06-07T23:23:42Z",
          "updatedAt": "2024-06-07T23:23:42Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Forgot about this issue and added more thoughts in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/298 which I closed as a dupe of this.",
          "createdAt": "2024-10-04T15:33:38Z",
          "updatedAt": "2024-10-04T15:33:38Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "I_kwDOH6-tI86M0RdW",
      "title": "The CI is broken on `main`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/243",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "As per title line.\r\n\r\nSee also https://github.com/ietf-rats-wg/draft-ietf-rats-corim/actions/runs/8990233955/job/25851350085",
      "createdAt": "2024-06-19T14:20:40Z",
      "updatedAt": "2024-07-04T08:01:33Z",
      "closedAt": "2024-07-04T08:01:33Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Done in 542276ab",
          "createdAt": "2024-07-04T08:01:33Z",
          "updatedAt": "2024-07-04T08:01:33Z"
        }
      ]
    },
    {
      "number": 244,
      "id": "I_kwDOH6-tI86M1kvQ",
      "title": "authority baselines and authority delegation (was authorized-by appears to be a security flaw)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/244",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I don't think it's appropriate at all for X to sign a document that Y is the one that actually authorized the claims. There is no signature by Y. This is a clear spoofing problem. Even if the Verifier is supposedly forwarding an authorization that it had previously seen by including it in the CoRIM, I don't think that Y has delegated that authority to the Verifier. The Verifier would need to use a \"hearsay\" claim that it had already shown that Y authorized the claim.",
      "createdAt": "2024-06-19T17:25:35Z",
      "updatedAt": "2024-07-10T00:14:20Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think one way to address unsoundness is to remove authorized-by from measurement-map and add an optional \u2018authorities\u2019 entry to \u2018stateful-environment-record\u2019.",
          "createdAt": "2024-06-20T16:20:36Z",
          "updatedAt": "2024-06-20T16:20:36Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> X to sign a document that Y is the one that actually authorized the claims\r\n\r\nThis isn't the intended semantics of `authorized-by`. The motivating use case is entity A wants to specify whether entity B is authorized to say X (where X is a set of claims aka an ECT). The logic is \"A says B says X\".  Note, it is still necessary for B to say X. `authorized-by` is therefore a matching condition (as opposed to an addition).\r\n\r\nWe think AEs are not likely to need this, so it is excluded from Evidence. \r\n\r\nBut it is reasonable that X could be applied to RVs or Endorsements. \r\n\r\nThe suggested change: \r\n\"remove authorized-by from measurement-map and add an optional \u2018authorities\u2019 entry to `stateful-environment-record`\"\r\n\r\nwould have the same semantics as `authorized-by` only it restricts its use to Endorsements as `stateful-environment-record` is only used by Endorsements. To make a symmetric change to the CDDL `reference-triple-record` should be updated too.\r\n```\r\nreference-triple-record = [\r\n  environment-map\r\n  measurement-map\r\n ? authority: [ + $crypto-key-type-choice ]\r\n]\r\n```\r\nIn both structures, the authority is used as a matching condition that determines if B did in fact assert X. In the case above, authority and environment-map are the matching condition, and environment-map and measurement-map are the addition (which is added under the authority of the RIM signer - A). \r\n\r\nAn internal representation is supposed to keep track of the dynamic that A says B says X. \r\n\r\nI don't think the current internal representation using ECTs is sufficient to represent this dynamic. We could modify ECT so that there is an outer authority. I'll use `policy` to explain what I mean:\r\nGiven:\r\n```\r\npolicy = [\r\n    condition: [ + ECT ]\r\n    addition: [ + ECT ]\r\n]\r\n```\r\nBy defining a nested ECT:\r\n```\r\nnested-ECT = [\r\n  ECT\r\n  ? a: [ + $crypto-key-type-choice ]\r\n  ? cm: cm-type\r\n]\r\n```\r\nPolicy can be changed to:\r\n```\r\npolicy = [\r\n    condition: [ + ECT ]\r\n    addition: [ + ECT / nested-ECT ]\r\n]\r\n```\r\nThis would allow expressions such as:\r\n```\r\n/cbor diag example/\r\n[\r\n  [\r\n    e: 'x0',\r\n    c: 'x1',\r\n    a: B,\r\n    cm: 0 /ref-val/\r\n  ]\r\n  a: A,\r\n  cm: 5 /policy/\r\n]\r\n```\r\nIt would be interpreted as: A says [ B says (x0, x1) ]\r\n\r\nAs a policy, it is applied after all the inputs are processed, including an input that includes:  B says (x0, x1)\r\n\r\nIf an RP has policy that says A is trusted, but is silent about B. Then the statement asserted by A (that B says (x0, x1)) would evaluate to true and be eligible as a matching condition for attestation results.\r\n\r\nSomething to consider is whether it makes sense to restrict transitive trust statements like A says B says X to policy statements or if these should still be supported by Endorsements and RV statements. \r\n\r\nMore complex transitive trust statements such as: `A says B says C says X` seems unnecessary at this point since the primary motivation for this type of delegation is a dominant supplier wants to maintain some control over downstream suppliers' clobbering upstream reference values. It's implied that the authority to delegate is not delegated. \r\n\r\nIf downstream suppliers beyond the first supplier need to be authorized, the originator (A) can do something like:\r\n(A says B says X,\r\nA says C says X)\r\n\r\nIf we see value in restricting transitive trust statements to policies, then we might consider a new triple:\r\n`policy-triple-record = policy` \r\nand we can remove `authorized-by` from measurement-values-map. \r\n\r\nThis approach might have some beneficial flexibility such as allowing statements like \"A says B says -any-\" by:\r\n```\r\n/cbor diag example/\r\n[\r\n  [\r\n    a: B,\r\n    cm: 0 /ref-val/\r\n  ]\r\n  a: A,\r\n  cm: 5 /policy/\r\n]\r\n```\r\nwhere the absence of `e` and `c` is interpreted as -any-.\r\n\r\nWe wouldn't want to complicate RV and Endorsement with such semantics IMO.\r\n\r\n\r\n",
          "createdAt": "2024-06-20T21:38:17Z",
          "updatedAt": "2024-06-20T21:38:17Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not so much asking for a hearsay triple as I am confused by the intended semantics.\r\n\r\nI can propose some words to make the role of `authorized-by` clearer since its meaning is different whether it's in the ACS (\"was authorized by all...\") or in the CoRIM (\"must also be authorized by one of...\").\r\n\r\nThis makes me wonder if we accept cycles or if we reject them.\r\n\r\n> Kid to parents: Can I go to the concert with Foo?\r\n> Bar: I'm okay with it if your Baz's okay with it.\r\n> Baz: I'm okay with it if your Bar's okay with it.\r\n> Kid: My parents said I could go!\r\n\r\nor\r\n\r\n> Kid: My parents are deadlocked, so I can't go.\r\n\r\nBoth seem like valid interpretations, but a simple fixed point calculation would not collapse the co-dependence, and thus rejection is easier to implement. I can also see resolving bounded length cycles by having primary endorsement keys and hedged-n-levels endorsement keys to stratify the trust relationship. I'd thus err on the side of rejection for simplicity.\r\n\r\nRegarding\r\n> An internal representation is supposed to keep track of the dynamic that A says B says X.\r\n\r\nThis doesn't match the words in the document, which is simply that the ACS ends up saying \"both A and B say X\", unless you have some order dependence in the authorized-by codepoint processing, which I don't see any evidence of. Sure, you might only say \"A says X only if B says X\" in your CoRIM, but that relationship is lost and irrelevant unless we add hearsay triples (which I don't want).\r\n",
          "createdAt": "2024-06-22T16:51:50Z",
          "updatedAt": "2024-06-22T17:01:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "In a sidebar with Thomas, he suggested defining a new triple for doing authority delegation as a way to compare and contrast current use of `authorized-by`.  I'll tweak naming so as to borrow semantic context from existing CDDL, but slightly different names help prevent bringing over baggage.\r\n\r\nAuthority is delegated using a triple.\r\nThe signer of the RIM identifies principal making the delegation assertion/statement.\r\nThe triples-map is extended to include an authority delegation triple:\r\n```\r\ntriples-map = non-empty<{\r\n...\r\n? &(authority-delegation-triples: 11) =>\r\n    [ + authority-delegation-record ]\r\n...\r\n}>\r\n\r\nauthority-delegation-record = [\r\n    acs-conditions: [ + eect ]\r\n    delegations: [ + delegation-record ]\r\n]\r\n```\r\n\r\nSince ECT is a common building block (used in above example) but is intended as an internal representation. I'll define External ECT (EECT) as follows:\r\n```\r\neect = [\r\n ? a: [ + $crypto-key-type-choice ]\r\n ? e: environment-map\r\n ? m: measurement-map\r\n]\r\n```\r\n`a` is a matching condition that is used to conditionally apply the delegation when certain principals have asserted claims. For example, only when principal A asserted someting or when principal B asserted something.\r\n`e` are target environment claims that have been asserted / appraised.\r\n`m` are measurement claims that have been asserted / appraised.\r\n\r\nIf the acs-conditions are met, the delegation record is applied.\r\n\r\nI don't think it makes sense to put delegations in the ACS since they are policy statements rather than actual Attester state. Note that this CDDL is an external representation. An internal representation of delegations may require a different structure than an ECT. Possibly, a nested ECT as defined above `nested-ECT`.\r\n\r\nA delegation record describes what is delegated:\r\n```\r\ndelegation-record = [\r\n  ? delegate: $crypto-key-type-choice\r\n  ? ct: cm-type2\r\n  ? env: environment-map2\r\n  ? mea: measurement-values-map2\r\n]\r\n```\r\n`delegate` identifies the principal that is the target of delegation.\r\n`ct` means a delegate may be constrained to a subset of possible message types such as reference values only.\r\n`env` means the delegate may be constrained to specific target environments.\r\n`mea` means the delegate may be constrained to a specific set of measurement values.\r\nNote: a variation of environment-map and measurement-map is used that allows a wildcard for -any- set of measurements or environments. I didn't write the CDDL for this yet. It means that a delegate may supply any measurement values, but may be restricted to a subset of possible measurement types such as `digests` only - no `svn` measurements...\r\n```\r\n/cbor diag example/\r\n/ Authority-delegation-record / [\r\n  / acs condition /  [\r\n    principal_A, / authority /\r\n    h'0xDEADBEEF', / uuid environment /\r\n    '1', / svn measurement /\r\n    0 / cm-type : ref-vals /\r\n  ],\r\n  / delegation / [\r\n    principal_B, / delegate /\r\n    0 / ref-vals /\r\n    \"cm.class-id.uuid\" h'0xFEEDABBE', / constrained to the FEEDABBE environment /\r\n    \"mm.mvm.version\" \"-any-\" / constrained to version claims of any value /\r\n  ]\r\n]\r\n```\r\n",
          "createdAt": "2024-07-02T23:28:09Z",
          "updatedAt": "2024-07-02T23:28:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nedmsmith for putting forward a proposal.\r\n\r\nThe statement we need to model is, I think, the following:\r\n\r\n> `A` \"delegates\" `B` \"to make\" `ConceptualMessages` \"statements about\" `ClaimsNames` \"claims of\" `Env` \"environment\"\r\n\r\nWhere:\r\n* `A` and `B` are `$crypto-key-type-choice`\r\n* `ConceptualMessages` is one of reference-values, endorsements, or \"any\"\r\n* `ClaimsNames` is a list of measurement-map code-points or \"any\"\r\n* `Env` is an `environment-map` or \"any\"\r\n\r\nThis allows us to say things like:\r\n1. _`A` delegates `B` to make any statements about any claims of any environment_\r\n2. _`A` delegates `B` to make ref-value and endorsements statements about any claims of any environment_\r\n3. _`A` delegates `B` to make endorsements statements about SVN and version claims of any environment_\r\n4. _`A` delegates `B` to make endorsements statements about SVN and version claims of environment with class-id=1825_\r\n\r\netc.\r\n\r\nIn CDDL, this could be expressed as:\r\n\r\n```\r\ndelegation-statement = {\r\n  authority: $crypto-key-type-choice\r\n  delegate: $crypto-key-type-choice\r\n  ? cm: uint .bits cm-type-restricted\r\n  ? claim-names: [ + int / text ]\r\n  ? environment: environment-map\r\n}\r\n\r\n$crypto-key-type-choice = bytes .size 4\r\nenvironment-map = \"an environment\"\r\n\r\ncm-type-restricted = &(\r\n  reference-values: 0\r\n  endorsements: 1\r\n)\r\n```\r\n\r\nMorphing it into a triple shape is a matter of rearranging and grouping things, but I believe the highlighted types are the core ones.  In particular, it looks like we need `cm-type-restricted` and a sensible definition for `claim-names` (which may include a profile indicator alongside the raw numbers & strings).\r\n\r\n",
          "createdAt": "2024-07-04T06:07:14Z",
          "updatedAt": "2024-07-04T06:25:27Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Stepping back from just how the wildcarding is supposed to be expressed, I want to make sure I understand the concept. What\u2019s the theory of operation?\r\nIt seems that there\u2019s\r\n\r\n* the delegation definer, i.e., the issuer of the corim that contains this triple,\r\n* the issuer\u2019s trusted delegator, A, or \u201cauthority\u201d\r\n* the permitted delegate(s) to sign corims with some substructure that is defined by\r\n* a corim filter, i.e., a means of accepting or rejecting the contents of the delegate\u2019s signed corim. It will take careful language design to express a good enough filter for most, but there absolutely should be a way to introduce new filter logic with cbor tags.\r\n\r\nis that about right?\r\nIn the theory of operation, we then have ECTs with first party signing authorities as a field, and new ECTs with delegated authorities.\r\n\r\nIf some CoRIM measurement-map/authority (say, B) is compared against, it\u2019s that CoRIM\u2019s issuer (C) that wants the ECT to be signed by B. But integrator (I) signed a delegation that B can delegate to D for anything. Let\u2019s say D signs the corim that would otherwise match that C wants. If we have a list of all ects in the ACS that match without considering authority, we then need to check delegations.\r\n\r\nD is allowed to sign for B if you trust I to provide delegations. So now the C-signed corim triple gets added to the ACS with authorities C(if you trust I), B(if you trust I), and D.\r\n\r\nThe delegated authority becomes infectious for anything that depends on the authority to match, until you get first-hand knowledge that oh, B actually signed the data first hand, and now we need to backtrack to all the provisional assignments to make them direct authorities?\r\n\r\nProbably the verifier would want to ensure that I is certainly trusted to assign delegations as a matter of a priori policy to remove this complicated provisional authority tracking.\r\n\r\nDoes this pass our litmus tests?\r\n\r\n1. Vertical integration: each layer of a measured boot can be seen as a system integrator up to their point of boot, but with specific delegated authorities for who can sign the previous layers.  \r\n\r\n2. Right to repair: can integrator further in the chain allow for delegations above them that the prior layers did not delegate to themselves?\r\n\r\nVertical integration I would say specialized versions of a linux distribution can delegate pcrs 0-10,12-15 to the main distribution while they sign their own measurements for higher pcrs. That\u2019s not expressible with the proposed syntax since it\u2019s too coarse to limit to specific integrity registers. Say it were.\r\n\r\nS: special version authority\r\nD: distro authority\r\nH: shim authority\r\nG: grub authority.\r\nF: firmware authority \r\nS signs high pcrs reference values and a delegation of pcrs 0-10,12-15 to D. But whose authority is delegated? Let\u2019s say S.\r\nD signs pcr 9,10,12-15 reference values (oops this is merged with shim measurements. Drat) and a delegation of D\u2019s authority to G for pcrs 0-8.\r\nG signs pcr 8 (oops this is merged with shim. Drat) and a delegation of G\u2019s authority to H for pcrs 0-7.\r\nH does its thing that breaks this example and delegates H to F for pcrs 0-7.\r\nF signs reference values for pcrs 0-7 (oops ESP from D gets mixed in here).\r\n\r\nSo pcrs are messy. Lets say we have signed CELRs instead and some policy for safely rearranging them for the verifier to then add an ECT that measured boot passes a TPM integration policy. However it\u2019s do e, it\u2019s not the most important thing.\r\nWhen the Verifier gets a request and has all these corims, then it doesn\u2019t look like the filter syntax would allow redelegation like the distro to grub or shim to firmware. If you did, then it would need to be a narrowing of what was permitted to the delegate. You can\u2019t limit an app to only have read access for it to then call another app that needs write access. It\u2019s the capabilities model.\r\n\r\nSay we allow delegating delegations but only within the scope of what has been delegated. Does S authorize the firmware measurement? S let D authorize it as if it were S. D let G authorize as if it were D (which is also as S), G let H authorize it as if it were G (which is also as D and then S), etc with cascading authority additions. So S authorizes the firmware.\r\n\r\nThat test failed with the current proposal. What about test 2? I\u2019ll edit this later when I\u2019m not getting pulled away.\r\n",
          "createdAt": "2024-07-05T00:51:58Z",
          "updatedAt": "2024-07-05T00:51:58Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I tried working out test 2 and it's not worth sharing. I confused myself with the `authority` field. I don't see how `authority` in `delegation-statement` would be anything other than the CoRIM issuer. I think that's why Ned's `delegation-record` does not include it. I suppose that's why Thomas, you said something about morphing it into a triple shape?\r\n\r\nIt does appear that test 2 would pass if you allow every delegated authority to sign any pcr index value, but that's generally not what I'd want to express.",
          "createdAt": "2024-07-10T00:14:20Z",
          "updatedAt": "2024-07-10T00:14:20Z"
        }
      ]
    },
    {
      "number": 249,
      "id": "I_kwDOH6-tI86OYvHF",
      "title": "Should we deprecate endorsed value triple in favour of conditional endorsments triple?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/249",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It looks like the former is a superset of the latter.",
      "createdAt": "2024-07-03T14:54:37Z",
      "updatedAt": "2024-07-03T22:07:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this the same as PR #219?  Is this issue necessary?",
          "createdAt": "2024-07-03T20:35:27Z",
          "updatedAt": "2024-07-03T20:35:27Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is this the same as PR #219? Is this issue necessary?\r\n\r\nThis issue exists precisely because #219 doesn't do the whole thing.  It only merges MEC and CET, it doesn't deal with EVT at all.",
          "createdAt": "2024-07-03T22:07:18Z",
          "updatedAt": "2024-07-03T22:07:18Z"
        }
      ]
    },
    {
      "number": 250,
      "id": "I_kwDOH6-tI86OqY2G",
      "title": "Add details on key provisioning/protection assertions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/250",
      "state": "OPEN",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "              Should we say how? Or, if we do already, reference the place(s) that contain the relevant text.\r\n\r\n_Originally posted by @thomas-fossati in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/135#discussion_r1666725465_\r\n            ",
      "createdAt": "2024-07-06T08:43:31Z",
      "updatedAt": "2024-07-06T08:43:31Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 251,
      "id": "I_kwDOH6-tI86P30GA",
      "title": "Endorsements are implicitly conditional on reference values. Which ones?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/251",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> An Endorsed Values triple declares additional measurements that are valid when a Target Environment has been verified against reference measurements.\r\n\r\nThere can be multiple reference measurements that are signed for a certain class-id. I don't expect reference measurements to be signed as limited to any specific instance. It doesn't seem correct to just accept anything from the `authorized-by`. The only interpretation that I can think of that could work is if the endorsement triple's environment is also associated with a reference-value-triple in the same CoMID, and that reference value has been added to the ACS.\r\n\r\nThe 1 environment to identify the reference values doesn't apply to the conditional-endorsement-triple now though, so I'm guessing those _aren't_ implicitly conditional on the reference values? I'd really like if we could solidify the semantics by giving explicit transformations of triples in CoRIM to the relations that have more explicitly defined semantics?\r\n\r\n> Evidence is divided up into one or more `ev` relations where the condition ECT identifies the Attester from which Evidence was collected. If the Verifier maintains multiple Attester sessions, the Verifier session may be identified using an ECT.\r\n\r\nIs this \"Evidence is\" meant to be \"Endorsements are\"? The `ev` relation is for endorsements.\r\n\r\n> Evidence information is mapped to an addition ECT that populates each of the ECT fields.\r\n\r\nThis seems more correct, but by saying `addition` instead of the `ae` relation doesn't match the use of relation in the previous sentence.",
      "createdAt": "2024-07-17T14:29:13Z",
      "updatedAt": "2024-10-14T18:35:55Z",
      "closedAt": "2024-10-14T18:35:55Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Has this issue been addressed?",
          "createdAt": "2024-10-14T17:06:08Z",
          "updatedAt": "2024-10-14T17:06:08Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, we changed the wording to not imply any measurement condition.",
          "createdAt": "2024-10-14T18:35:55Z",
          "updatedAt": "2024-10-14T18:35:55Z"
        }
      ]
    },
    {
      "number": 253,
      "id": "I_kwDOH6-tI86SPEtD",
      "title": "Claim naming, data types and matching rules",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/253",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "An Attesting Environment creates claims about a Target Environment which are processed and added to the Attestation Claim Set. These claims are later matched against reference values from CoMIDs.\r\n\r\nFor this issue, I am defining a claim as including:\r\n- a name indicating what was measured\r\n- the value of the measurement\r\n- authority information about the measurement\r\nThere may be other information associated with the claim, but it is not relevant to this issue.\r\n\r\nIn some cases, each environment contains a single claim, or a single claim of each type, and the matching rules for that type are acceptable. For example if there is one digest claim and one raw value claim in an environment). This case is easy to encode within the reference claims. I will call these \"standard claims\".\r\n\r\nIn other cases, extensions are required. In this issue I will use the name \"extension claim\" for a claim which cannot be encoded using the standard fields within `measurement-values-map` (perhaps renamed to `claims-map`). \r\n\r\nUses for extension claims may include:\r\n1. multiple claims with the same data-type in the same environment\r\n2. claims whose semantics cannot be easily represented by the standard data types\r\n3. claims which require custom matching rules\r\n\r\nThe current text suggests that for each of these uses, negative labels within `measurement-values-map`  can be used as part of the solution.\r\n\r\nFor each extension claim, the verifier and/or relying party needs to know three things:\r\n- Its name, that is what was measured to generate the claim\r\n  - For the verifier, environment maps are opaque.\r\n  - CoRIM authors and relying parties understand what names are\r\n- How the data is represented within the claim\r\n  - The verifier can sometimes treat this as opaque\r\n- How to import and export the claim\r\n- How to compare the claim data against a reference value\r\n  - There may be multiple comparison options for the same data\r\n\r\nImport, export and comparison operations for extension claims with new data types will normally require custom code in the verifier. This is to be expected, especially for legacy data whose semantics are already established.\r\n\r\nShould we design CoMID so that it is easy to add some extension claims without having to write significant code in the verifier?\r\n\r\nI assume that import of extension claims will be handled by the document which describes import of values into the ACS, so that is not a problem for us to consider here. We can similarly defer consideration of export until later.\r\n\r\nWe do need to consider comparison of extension claims here, as that affects the syntax of reference values etc. in CoRIM files.\r\n\r\nTo me, the key issue is how the verifier determines the data type of a CoRIM file. The data type will be an internal identifier which triggers appropriate code for matching, serialization, etc.\r\n\r\nThe data type of standard claims is determined from the `measurement-values-map` index.\r\n\r\nMost data types have a single matching rule which triggers code which will match an ACS claim against the corresponding reference value.\r\n\r\nSome data types, for example `svn`, have multiple data matching rules. The type of matching is chosen by a CBOR TAG on the reference value (specifically, on the value within the `measurement-values-map`).\r\n\r\nFor extension claims, how should the verifier determine the data type and the matching rules to be used when matching a reference value against that claim?\r\n\r\nWe have discussed several options for selecting data type and matching rules. The fields which we have discussed using to select include:\r\n- CoRIM profile (of the CoRIM which contains the reference value)\r\n- All fields in the `environment-map`\r\n- The `class` field within `environment-map`\r\n- The `measurement-value-map` label\r\n- The CBOR TAG on the reference value being measured\r\n- Are there any others?\r\n\r\nWhich of these should be used?\r\n\r\nIs it worth adding a way to add extension claims without requiring new code in the verifier?\r\n\r\nFor example, a profile could describe an encoding and a set of matching rules for a data type. Implementing this will require new code in the verifier. An imported claim and/or a reference value could then indicate that the claim with a particular `environment-map`/`class` and `measurement-value-map` label uses the defined data type.\r\n\r\nIf this is worthwhile then how should this be encoded in CoRIM files and in internal data structures?\r\n\r\nIf so then how should the data type be encoded?\r\n",
      "createdAt": "2024-08-07T12:58:14Z",
      "updatedAt": "2024-08-14T16:05:48Z",
      "closedAt": "2024-08-14T16:05:47Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "All extensions are determined by the profile, so you'll dispatch from profile id to typeclass instance (or whathaveyou) to implement matching for the extensions and restrictions for standard fields.\r\n\r\n> Should we design CoMID so that it is easy to add some extension claims without having to write significant code in the verifier?\r\n\r\nNo, since that bleeds into becoming a full programming language.",
          "createdAt": "2024-08-07T14:30:14Z",
          "updatedAt": "2024-08-07T14:30:14Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that my proposed text about tagging data types having a \"default\" comparison method can perhaps work for a lot of profiles, so you can map multiple profile ids to \"use default semantics\" for extensions' measurement-values-map extensions. That doesn't eliminate the choice that some profiles may make to specify alternative matching semantics for their extensions.",
          "createdAt": "2024-08-07T14:49:04Z",
          "updatedAt": "2024-08-07T14:49:04Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "We discussed this in the CoRIM meeting on 14th August.\r\n\r\nThe feeling of the meeting is that every ACS entry may include a profile identifier.\r\nIf the ACS entry includes non-standard data types then it must include a profile identifier (if it does not then its not valid).\r\n\r\nA verifier will need to include code for every supported profile, there will be no way to support custom data types without writing code.\r\nThe profile definition must describe data formats, serialization and matching rules for the data types which it defines.\r\n\r\nMultiplicity of data types is important - for example multiple SVNs within the same environment. The `integrity-registers` data type supports a multiplicity of `digest` data values, but this is a special case. We would like a standard way to represent the multiplicity of all data types.\r\n\r\nYogesh will open a new issue to discuss the syntax and matching rules for multiplicity of data types.",
          "createdAt": "2024-08-14T16:05:47Z",
          "updatedAt": "2024-08-14T16:05:47Z"
        }
      ]
    },
    {
      "number": 255,
      "id": "I_kwDOH6-tI86S7tXy",
      "title": "Add high level context how CoRIM realizes the RATS Endorsement I-D",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/255",
      "state": "OPEN",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "\"The diagram\" in RATS Endorsement + provenance/authority is essentially the ACS.",
      "createdAt": "2024-08-14T07:41:13Z",
      "updatedAt": "2024-08-14T07:41:13Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 256,
      "id": "I_kwDOH6-tI86TAGcP",
      "title": "Expressing Multiplicity of same type of Measurement using CoRIM Schema",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/256",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "With recent discussions with various teams using CoRIMs with their own profile it has become evident that there is a requirement to express in CoRIM, the following:\r\n\r\n_For a given single Environment, there can be multiple measurements of the same type, i.e. For an Environment there can be a series of SVN\u2019s pertaining to the environment. The other example is: for a given environment, it can have multiple acceptable states where each state has a unique measurement expressed either by a Digest or a Serial Number or a UUID (each of these are entries in a Measurement Values Map), in the base CoRIM schema._\r\n\r\nThis issue tracks the requirement and CoRIM Authors are requested to provide suitable possible options to debate on. \r\n\r\nHere are few which was discussed during Extended Meeting 14th August 2024:\r\n\r\nOption 1: Individual CoRIM Profile extends the Measurement Values Map. The singular Measurement is expressed using Base CoRIM Schema and the Extension slot offer mechanism for expressing multiplicity.\r\n\r\nPros: The base schema is NOT impacted. The Implementation is specific to required profile where individual measurements for an Environment is uniquely identified by the profile owner. The matching rules are profile specific\r\n\r\nCons: Multiple profiles requiring a similar extension will end up duplicating implementation. A single Verifier supporting these profiles will have difficulty scaling the implementation.\r\n\r\n",
      "createdAt": "2024-08-14T16:19:09Z",
      "updatedAt": "2024-08-16T12:54:15Z",
      "closedAt": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Option 2: The other option is to express different measurements using multiplicity of Reference Value Triples, each having the same Environment identifier.\r\n\r\nPros: The base Schema is not changed. \r\n\r\nCons: if there are large number of states, then this option is not scalable. Can be confusing as well.\r\n\r\n ",
          "createdAt": "2024-08-14T16:20:19Z",
          "updatedAt": "2024-08-14T16:29:55Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Why is the option 2 not scalable? You have  `/ mkey: / 0: 0 / mval: / 1: {/ svn: / 1: 1}` instead of `{ / my-svn: / -20: 1}` which isn't that much difference in encoding. It's certainly more uniform to use.\r\n\r\nWe then say $measured-element-type-choice is explicitly local to the environment map and is meant to name a particular measurement in one evidence object. We ought to add another sense of instance identity to environment map to allow for multiplicity of devices that have the same attestation environment. That would be a new instance-id-type-choice, like a tagged pair of subcomponent-id-type-choice and base-instance-id-type-choice (everything in instance-id-type-choice except the tagged pair recursively).",
          "createdAt": "2024-08-14T16:52:00Z",
          "updatedAt": "2024-08-14T16:52:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I would certainly give the guidance that if you use mkey, then the mval should have exactly one value. I wouldn't require it.",
          "createdAt": "2024-08-14T16:54:02Z",
          "updatedAt": "2024-08-14T16:54:02Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "We need to be able to describe two multiplicity-related situations:\r\n\r\ncase 1: multiplicity of acceptable states for a given environment (essentially, multiplicity which describes alternatives);\r\n\r\nIn this case, multiple reference value triples, in the same or different CoMIDs/CoRIMs, with the same environment (and mkey, sigh!) seem to be the right construct.\r\n\r\ncase 2: multiplicity of measurements that represent, _en bloc_, one acceptable state of a given environment.  (To be clear, I am talking about a target environment made of multiple individually measured components.)\r\n\r\nA simple and clear way to model this other case is to group all the measurements into the same measurement map using a map/array type, similar to what we did with the integrity registers.\r\n\r\n",
          "createdAt": "2024-08-14T17:05:34Z",
          "updatedAt": "2024-08-16T12:54:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Quick follow-up.  The problem with spreading (rather than bunching) in case 2 is that spreading creates an ambiguity about what exactly constitutes the wanted TCB image in case there are fewer acceptable states than the cartesian product.  E.g.: $s_1 = [ A, B ]$ and $s_2 = [ C, D ]$ are OK, but $s_3 = [ A, D ]$ and $s_4 = [ C, B ]$ are not.\r\n\r\n\r\n\r\n",
          "createdAt": "2024-08-14T17:20:14Z",
          "updatedAt": "2024-08-14T17:21:45Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed with Thomas that my usage of mkey above is more `en bloc` and not multiple acceptable states. If you want multiple acceptable states irrespective of other pieces of information, then `mval` itself should have multiplicity. If you need different combinations of acceptable states, you should have different CoMIDs to express those.",
          "createdAt": "2024-08-14T17:31:19Z",
          "updatedAt": "2024-08-14T17:31:19Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Certainly at this point it sounds more like we need to better account for reference value components as data bindings that can be given more nuanced handling by a policy that references the values bound to same names.",
          "createdAt": "2024-08-14T17:34:01Z",
          "updatedAt": "2024-08-14T17:34:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> We then say $measured-element-type-choice is explicitly local to the env\r\n\r\n@deeglaze My comment on Option 2 was focused on the existing CoRIM Schema, where `mkey` exits in `measurement-map`.\r\nIn this model, one needs to repeatedly insert the same `environment identity` for `N` number of Measurements belonging to same environment, when using `N` Ref Value triples!",
          "createdAt": "2024-08-14T18:23:29Z",
          "updatedAt": "2024-08-14T18:23:55Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> In this model, one needs to repeatedly insert the same environment identity for N number of Measurements belonging to same environment, when using N Ref Value triples!\r\n\r\nInsert the same environment identity where? The ACS? I don't think you have to store copies of the same environment. Just a reference to one. If the scaling problem is continually needing to match the same environment map, there's nothing stopping a Verifier from representing that nesting behavior in a more optimal way.",
          "createdAt": "2024-08-14T18:32:32Z",
          "updatedAt": "2024-08-14T18:32:32Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The _en bloc_ interpretation of all mkeys in the multiple measurement-maps suggests that the `authorized-by` ought to be for the collection and not for each of the mkeys themselves. In that case I'd want to change the multiplicity to something else\r\n\r\n```\r\nreference-triple-record = [environment-map, authority-and-claim-values-map / keyed-claim-map]\r\nauthority-and-claim-values-map = {\r\n  &(cval: 1) => claim-values-map\r\n  &(authorized-by: 2) => [ + authority-type-choice ]\r\n}\r\nkeyed-claim-map = {\r\n  &(claims: 0) => [ + key-claim-record ]\r\n  &(authorized-by: 2) => [ + authority-type-choice ]\r\n}\r\nkey-claim-record = [ckey: uint, cval: claim-values-map]\r\n```\r\n\r\n\r\n",
          "createdAt": "2024-08-14T20:54:06Z",
          "updatedAt": "2024-08-14T20:54:06Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > In this model, one needs to repeatedly insert the same environment identity for N number of Measurements belonging to same environment, when using N Ref Value triples!\r\n> \r\n> Insert the same environment identity where? The ACS? I don't think you have to store copies of the same environment. Just a reference to one. If the scaling problem is continually needing to match the same environment map, there's nothing stopping a Verifier from representing that nesting behavior in a more optimal way.\r\n\r\n@deeglaze I was referring to CoRIM that a supply chain actor needs to specify to the Verifier. I am not referring to ACS which is an Internal representation where of course smart filtering will remove such need anyway!",
          "createdAt": "2024-08-14T21:39:48Z",
          "updatedAt": "2024-08-14T21:39:48Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> @deeglaze I was referring to CoRIM that a supply chain actor needs to specify to the Verifier. I am not referring to ACS which is an Internal representation where of course smart filtering will remove such need anyway!\r\n\r\nAh you were just talking about multiple possible measurements in the same environment, not different measurements of the same type (e.g., TDX's 16 CPU SVNs) in the same environment. Understood.",
          "createdAt": "2024-08-15T00:53:55Z",
          "updatedAt": "2024-08-15T00:53:55Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Agreed with Thomas that my usage of mkey above is more `en bloc` and not multiple acceptable states. If you want multiple acceptable states irrespective of other pieces of information, then `mval` itself should have multiplicity.\r\n\r\nThis requires changing a non-leaf element of the schema.  IMHO we should look for minimally intrusive modifications first, and do disruptive ones only if there are no good alternatives.\r\n\r\n> If you need different combinations of acceptable states, you should have different CoMIDs to express those.\r\n\r\nOr different triples within the same CoMID.  (A CoMID does not define any semantic boundary, it's just a packaging construct.)\r\n\r\n",
          "createdAt": "2024-08-15T08:28:24Z",
          "updatedAt": "2024-08-15T08:28:24Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Agreed with Thomas that my usage of mkey above is more `en bloc` and not multiple acceptable states. If you want multiple acceptable states irrespective of other pieces of information, then `mval` itself should have multiplicity.\r\n> \r\n> This requires changing a non-leaf element of the schema. IMHO we should look for minimally intrusive modifications first, and do disruptive ones only if there are no good alternatives.\r\n> \r\nYes, fair enough. Do we want to add a generically typed tag, then, that is for `measurement-values-map / codepoint / T` where we can always have `#6.5xx([ + T ])` to represent \"any of these are allowed irrespective of surrounding context\"?\r\n\r\n> > If you need different combinations of acceptable states, you should have different CoMIDs to express those.\r\n> \r\n> Or different triples within the same CoMID. (A CoMID does not define any semantic boundary, it's just a packaging construct.)\r\n\r\nOkay, agreed. I was still working from the idea that we needed to merge",
          "createdAt": "2024-08-15T15:49:21Z",
          "updatedAt": "2024-08-15T15:49:21Z"
        }
      ]
    },
    {
      "number": 262,
      "id": "I_kwDOH6-tI86TtjLG",
      "title": "Documentation of Profiles",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/262",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": " Clarify the use of Extension and requirement for documentation as per the existing text on Line 1280\r\n        \r\n      No, CoRIM profiles can be entirely private and not be meant for use outside of a closed circuit.\r\n\r\n_Originally posted by @deeglaze in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/260#discussion_r1725100324_\r\n            ",
      "createdAt": "2024-08-21T14:29:50Z",
      "updatedAt": "2024-08-21T14:29:50Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 266,
      "id": "I_kwDOH6-tI86VrU9_",
      "title": "TCG compatibility",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/266",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Some of the changes to CDDL in this repo are incompatible with the TCG Endorsement Architecture. \r\n\r\nThis thread maintains a list of incompatibilities and possible ways to address them.\r\n\r\n1. reference-triple-record - The measurement-map in `reference-triple-record` no longer has multiples. The incompatibility can be addressed by:\r\n```\r\nreference-triple-record = [\r\n  environment-map\r\n  (measurement-map / [ + measurement-map])\r\n]\r\n```\r\n2. endorsed-triple-record - The measurement-map in `endorsed-triple-record` no longer has multiples. The incompatibility can be addressed by:\r\n```\r\nendorsed-triple-record = [\r\n  environment-map\r\n  (measurement-map / [ + measurement-map])\r\n]\r\n```\r\n3. *next-tbd*",
      "createdAt": "2024-09-06T20:39:50Z",
      "updatedAt": "2024-10-02T22:47:56Z",
      "closedAt": "2024-10-02T22:47:55Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: I created the `tcg-compatible` branch to validate the cddl. See examples `comid-1a.diag` and `comid-2a.diag`. \r\n\r\nThis is for documation purposes only. I don't anticipate this should be followed by a PR necessarily.",
          "createdAt": "2024-09-06T20:50:52Z",
          "updatedAt": "2024-09-06T20:52:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "see PR #268 ",
          "createdAt": "2024-09-17T21:38:55Z",
          "updatedAt": "2024-09-17T21:38:55Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed. Fixed by PR #268",
          "createdAt": "2024-10-02T22:47:55Z",
          "updatedAt": "2024-10-02T22:47:55Z"
        }
      ]
    },
    {
      "number": 271,
      "id": "I_kwDOH6-tI86WmXPJ",
      "title": "Define or remove `offline`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/271",
      "state": "CLOSED",
      "author": "steven-bellock",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The specification talks about `offline` verification of keys. For example\r\n>The Verifier SHOULD perform offline verification of keys contained in Device Identity triples.\r\n\r\nI'm not sure what `offline` means here. Either `offline` should be defined, or it can probably be removed since\r\n>The Verifier SHOULD perform verification of keys contained in Device Identity triples.\r\n\r\nsounds good to me.\r\n",
      "createdAt": "2024-09-14T22:28:29Z",
      "updatedAt": "2024-09-18T17:18:12Z",
      "closedAt": "2024-09-18T17:18:12Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "see PR #274 \r\n\r\nOffline refers to checks that can't be performed by an attesting environment in the context of collecting measurements. For example, an AE could do proof-of-possession on the TE that wields a key. Removing the term makes sense there isn't industry consensus that offline refers to key verification sans PoP.",
          "createdAt": "2024-09-17T21:37:42Z",
          "updatedAt": "2024-09-17T21:37:42Z"
        }
      ]
    },
    {
      "number": 278,
      "id": "I_kwDOH6-tI86XCQzG",
      "title": "Need to explain claims_map better on ECT map description",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/278",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Line 1583 which describes the claims needs to be:\r\n1. Reworded with a more appropriate name, like a set of claims \r\n2. Needs to explain better, regarding the claims pertaining to each of the measured elements belonging to a target environment\r\n\r\n_Originally posted by @yogeshbdeshpande in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268#discussion_r1765100087_\r\n            ",
      "createdAt": "2024-09-18T14:46:35Z",
      "updatedAt": "2024-09-18T14:46:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 279,
      "id": "I_kwDOH6-tI86XCkn_",
      "title": "Change sec-match-one-se to be matching one ECT to another.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/279",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We have matching semantics sometimes in terms of external representation, and sometimes internal representation.\r\n\r\nThe translation from external triples to internal relations like `rv` is incomplete in the definition of the semantics. The crux of the representation is matching an ECT condition against an ECT in the ACS.",
      "createdAt": "2024-09-18T15:17:31Z",
      "updatedAt": "2024-09-25T15:28:52Z",
      "closedAt": "2024-09-25T15:28:51Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I recommend that we name the condition ECT the \"pattern\" and the ACS entry against which to match, the \"entry\".",
          "createdAt": "2024-09-18T15:34:38Z",
          "updatedAt": "2024-09-18T15:34:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is there a problem naming the condition ECT \"condition\" as it currently exists?",
          "createdAt": "2024-09-18T16:19:21Z",
          "updatedAt": "2024-09-18T16:19:21Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I suppose not. I have a bigger follow-up to this suggestion though to use ordering sequents as an initial definition to start writing the prose.",
          "createdAt": "2024-09-18T16:20:24Z",
          "updatedAt": "2024-09-18T16:20:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> ordering sequents\r\n\r\nAre you suggesting that a reader of this spec needs to have a working knowledge of formal logics in order to understand this spec?",
          "createdAt": "2024-09-18T16:27:46Z",
          "updatedAt": "2024-09-18T16:27:46Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "No, I'm saying I'm summarizing my semantics in relationships in a comment here to help folks understand my intention behind the prose to come, since it's very technical.",
          "createdAt": "2024-09-18T16:28:58Z",
          "updatedAt": "2024-09-18T16:28:58Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "To get roughly on the same page before writing the prose, here's my interpretation as a mathematical relation.\r\n\r\nI'll treat `? x : cddl` to mean `x: optional<encodeType(cddl)>`.\r\n\r\n```\r\np  \u22a2 ce <= ee : optional<environment-map>\r\np  \u22a2 cc <= ec : optional<[ + local-claim]>\r\np  \u22a2 ca <= ea: optional<[ + $crypto-key-type-choice ]>\r\n \u22a2 ccm <= ecm : optional<cm-type>\r\n-------------------------------------------------- [ ECT matching ]\r\n \u22a2 { ce cc ca ns ccm p } <= { ee ec ea ns ecm p }\r\n```\r\n\r\nNote `ns` and 'p' on both sides on the bottom to require exact equality for namespace and profile whether given or not.\r\n\r\nFor optional type ordering, we treat `none` as logical bottom:\r\n\r\n```\r\n-------------- [ optional<T> refl ]\r\n \u22a2 none <= none : optional<T>\r\n\r\n--------------- [ optional<T> bottom ]\r\n \u22a2 none <= some v : T\r\n\r\nP \u22a2 v0 <= v1 : T\r\n--------------------- [ optional<T> <= ]\r\nP \u22a2 some v0 <= some v1 : optional<T>\r\n```\r\nRelations can be refined by the profile or not. The P context can be empty or a profile identifier.\r\n\r\n\r\ncm-type, bstr, uint, and tstr have no extra structure to match.\r\n```\r\n----- [cm-type refl ]\r\nP \u22a2 x <= x : cm-type\r\n\r\n----- [tstr refl ]\r\nP \u22a2 x <= x : tstr\r\n\r\n----- [bstr refl ]\r\nP \u22a2 x <= x : bstr\r\n\r\n----- [uint refl ]\r\nP \u22a2 x <= x : uint\r\n```\r\nNote uint is treated as an identifier and not with numerical inequality.\r\n\r\nA list of local-claims all must match for the list to match.\r\n```\r\nAND_{ clc in clcs }{Exists ecl in elcs such that P \u22a2 clc <= elc : local-claim }\r\n--------------------------------- [ [ + local-claim ] <= ]\r\nP \u22a2 clcs <= elcs  : [ + local-claim ]\r\n```\r\n\r\nA local-claim can only match its _exact_ mkey and a subset of authorities.\r\n```\r\ncmv <= emv : measurement-values-map\r\nca <= ea : optional<[ + $crypto-key-type-choice]>\r\n--------------------------------------------------- [ local-claim/measurement-map <= ]\r\n[ mkey: mk, mval: cmv, authorities: ca ] <= [ mkey: mk, mval: emv, authorities: ea ] : local-claim\r\n```\r\n\r\nThe measurement-values-map subset relation is defined on a per-codepoint basis, and with the optional<T> semantics.\r\nI will not rehash the ordering of the right-hand-side codepoints here.\r\n```\r\nAND_{ cmvk => cmvv in cmvs } {\r\n  some emvv := emvs[cmvk]\r\n  P \u22a2 cmvv <= emvv : measurement-values-order(P, cmvk)\r\n}\r\n--------------------------------------------------- [ measurement-values-map <= ]\r\nP \u22a2 cmvs <= emvs : measurement-values-map\r\n```\r\nThe `measurement-values-order(none, uint)` definition is as defined for each of the measurement-values-map codepoints in the spec.\r\n\r\n```\r\nP \u22a2 cclass <= eclass : optional<class-map>\r\nP \u22a2 cgroup <= egroup : optional<$group-id-type-choice>\r\nP \u22a2 cinstance <= einstance : optional<$instance-id-type-choice>\r\n---------------------------------------------------------- [ environment-map <= ]\r\nP \u22a2 { cclass cgroup cinstance } <= { eclass egroup einstance } : environment-map\r\n```\r\n\r\n```\r\nP \u22a2 cclassid <= eclassid : optional<$class-id-type-choice>\r\n\u22a2 cvendor <= evendor : optional<tstr>\r\n\u22a2 cmodel <= emodel : optional<tstr>\r\n\u22a2 clayer <= elayer : optional<uint>\r\n\u22a2 cindex <= eindex : optional<uint>\r\n---------- [ class-map <= ]\r\nP \u22a2 { cclassid cvendor cmodel  clayer cindex } <= { eclassid evendor emodel elayer eindex } : class-map\r\n```\r\n\r\nAuthorities are matched with a subset relationship:\r\n\r\n```\r\nAND_{ ck in ca }{Exists ek in ea such that P \u22a2 ck <= ek }\r\n------------------------ [ authority <= ]\r\nP \u22a2 ca <= ea : [ + $crypto-key-type-choice ] \r\n```\r\n\r\nA profile MAY define an ordering relation on $crypto-key-type-choice extensions, $class-id-type-choice, $group-id-type-choice, and $instance-id-type-choice may be defined by a profile. For the base CDDL choices, only CBOR-encoding-equality is a match.\r\n\r\n```\r\ncrypto-key-ordering(p, ck, ek)\r\n------------------------------- [ profile-defined crypto key type choice ordering ]\r\np \u22a2 ck <= ek : $crypto-key-type-choice (not in base CDDL)\r\n```\r\n\r\nAll of this setup gives much more structure to how a profile may impose extra matching semantics.",
          "createdAt": "2024-09-18T16:39:27Z",
          "updatedAt": "2024-09-18T16:42:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> p  \u22a2 ce <= ee : optional<environment-map>\r\n\r\nI'm having difficulty understanding this because I'm not familiar with the notation and the variable names are terse.",
          "createdAt": "2024-09-20T20:13:56Z",
          "updatedAt": "2024-09-20T20:13:56Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The variables start with c or e for the condition ECT and entry ECT that are being compared, respectively. The rest of the variable comes from the fields of the ECT in the order specified in your revert PR.\r\n\r\nBelow the --- is the consequent. A goal you want to satisfy. Above the --- are the antecedents, the subgoals you need to discharge to satisfy the goal.\r\n\r\nA turnstile \u22a2 is notation from Frege. It roughly means \"Given Premises \u22a2 That which is proved\". With added types \": type\" you can further limit the deduction rules that apply to the goal. Our only premises are an optionally assumed profile.",
          "createdAt": "2024-09-24T18:26:50Z",
          "updatedAt": "2024-09-24T18:26:50Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Duplicate of #283 ",
          "createdAt": "2024-09-25T15:28:52Z",
          "updatedAt": "2024-09-25T15:28:52Z"
        }
      ]
    },
    {
      "number": 280,
      "id": "I_kwDOH6-tI86XFImc",
      "title": "DICE and SPDM references no longer needed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/280",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The sections on DICE and SPDM were moved into another draft. The references to DICE and SPDM are not cited within the document, hence should be removed.",
      "createdAt": "2024-09-18T20:51:33Z",
      "updatedAt": "2024-09-18T20:51:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 281,
      "id": "I_kwDOH6-tI86XFJoZ",
      "title": "Remove 'namespace' from ECT",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/281",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The 'namespace' member of ECT is not needed going forward, hence it can be removed.",
      "createdAt": "2024-09-18T20:53:40Z",
      "updatedAt": "2024-10-02T22:49:04Z",
      "closedAt": "2024-10-02T22:48:41Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This includes removing 'ns' from truth tables.",
          "createdAt": "2024-09-20T16:14:37Z",
          "updatedAt": "2024-09-20T16:14:37Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This is now addressed in PR #268 ",
          "createdAt": "2024-09-20T16:36:01Z",
          "updatedAt": "2024-09-20T16:36:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in PR #268 ",
          "createdAt": "2024-10-02T22:49:03Z",
          "updatedAt": "2024-10-02T22:49:03Z"
        }
      ]
    },
    {
      "number": 282,
      "id": "I_kwDOH6-tI86XFKl6",
      "title": "Internal representation CDDL needs CI integration",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/282",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "Since the internal representation should be valid CDDL, it needs CI integration and code snippets should be imported into the document.",
      "createdAt": "2024-09-18T20:55:07Z",
      "updatedAt": "2024-09-25T14:56:45Z",
      "closedAt": "2024-09-25T14:56:45Z",
      "comments": []
    },
    {
      "number": 283,
      "id": "I_kwDOH6-tI86XF8s4",
      "title": "Section describing how to compare two ECTs needed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/283",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 8.6.4 Processing a stateful environment against the Appraisal Claim Set should be moved / integrated into Section 8.9 ECT Comparison. \r\n\r\nSection 8.5 Reference Values Corroboration and Augmentation and section 8.6.1 language uses the word \"match\" to refer to condition ECT and ACS ECT matching semantics. When this issue is addressed, these sections should cross-reference section 8.9. \r\n\r\nSection 8.9 also describes ACS addition semantics.",
      "createdAt": "2024-09-18T23:00:41Z",
      "updatedAt": "2024-10-02T23:47:04Z",
      "closedAt": "2024-10-02T23:47:04Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a duplicate of https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/279 no?",
          "createdAt": "2024-09-20T16:31:09Z",
          "updatedAt": "2024-09-20T16:31:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> This is a duplicate of #279 no?\r\n\r\nThey are certainly related. See updated description.",
          "createdAt": "2024-09-20T18:35:49Z",
          "updatedAt": "2024-09-20T18:35:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Can this issue be closed now that PR #289 has been merged?",
          "createdAt": "2024-10-02T22:44:55Z",
          "updatedAt": "2024-10-02T22:44:55Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good to me.",
          "createdAt": "2024-10-02T23:47:04Z",
          "updatedAt": "2024-10-02T23:47:04Z"
        }
      ]
    },
    {
      "number": 285,
      "id": "I_kwDOH6-tI86XV9i8",
      "title": "Flesh out Endorsement Triples Transformation section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/285",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There are placeholders for conditional endorsement and conditional endorsement series transformations in the Endorsement Triples Transformation section. \r\n\r\nThere are notes in the documents pointing to this issue.",
      "createdAt": "2024-09-20T15:38:34Z",
      "updatedAt": "2024-10-14T16:52:53Z",
      "closedAt": "2024-10-14T16:52:37Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #299",
          "createdAt": "2024-10-14T16:52:51Z",
          "updatedAt": "2024-10-14T16:52:51Z"
        }
      ]
    },
    {
      "number": 286,
      "id": "I_kwDOH6-tI86XWCon",
      "title": "Use of parens surrounding cross-references",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/286",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I believe it is a document convention to surround cross-references with parens: e.g.:\r\n```\r\n({{my-cross-reference}})\r\n```\r\nA cleanup task is needed that fixes all the instances that don't conform to the convention.",
      "createdAt": "2024-09-20T15:48:52Z",
      "updatedAt": "2024-10-09T15:17:33Z",
      "closedAt": "2024-10-09T15:17:33Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "it's done!",
          "createdAt": "2024-10-09T15:17:33Z",
          "updatedAt": "2024-10-09T15:17:33Z"
        }
      ]
    },
    {
      "number": 287,
      "id": "I_kwDOH6-tI86XWC8E",
      "title": "Truth tables should not use abbreviations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/287",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The truth tables in section 8.2.1 Internal Representation of Conceptual Messages uses abbreviations for the various attributes of the ECT structure. These should be replaced with more readable values used in the ECT CDDL.",
      "createdAt": "2024-09-20T15:49:37Z",
      "updatedAt": "2024-10-01T23:50:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Additionally, actions should be mandatory, optional, or N/A",
          "createdAt": "2024-09-24T00:18:31Z",
          "updatedAt": "2024-09-24T00:18:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "See PR #296 ",
          "createdAt": "2024-10-01T23:50:21Z",
          "updatedAt": "2024-10-01T23:50:21Z"
        }
      ]
    },
    {
      "number": 288,
      "id": "I_kwDOH6-tI86XWZKl",
      "title": "Evaluate impact of Measured Element Multiplicity (in an Environment) to Conditional Triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/288",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Once https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/266 is resolved, via via PR #268 which sorts the compatibility with the TCG, this has an impact on the Conditional Triples.\r\n\r\nPR #277 points to this issue as it's motivation.\r\n\r\nThis issue tracks the impact of Introduction of measurements of `one or more` Measured Elements in an Environment  on the following:\r\n\r\n1. CDDL Schema of (a) conditional-endorsement-series-triple-record AND (b) conditional-endorsement-triple-record\r\n2. Impact on Matching Semantics and Introduction of Endorsements to ACS",
      "createdAt": "2024-09-20T16:44:56Z",
      "updatedAt": "2024-10-02T22:55:03Z",
      "closedAt": "2024-10-02T22:55:02Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "My Initial Analysis:\r\n\r\n* Stateful Environment MUST change to reflect that the entire Environment needs to be stateful, meaning all the Measured Elements state needs to be recorded, hence the multiplicity of `measurement-map` needs to be expressed in the stateful environment.\r\n\r\n; STATEFUL  environment with one or more measurements  that must match evidence\r\nstateful-environment-record = [\r\n  environment-map,\r\n  [ + measurement-map ]\r\n]\r\n\r\n* Conditional Endorsement Triple {#sec-comid-triple-cond-endors}\r\n\r\nconditional-endorsement-triple-record = [\r\n  conditions: [ + stateful-environment-record ]\r\n  endorsements: [ + endorsed-triple-record ]\r\n]\r\n\r\nThere is no ambiguity..\r\n\r\nWhen a Stateful Environment with multiple measured elements all match then only\r\nAn Endorsed Triple containing One Env, with Multiple Endorsements each pertaining to each measured Element within an Environment applies and added to ACS.\r\n\r\nThe Supply Chain Actor decides, how many of all measured-elements it wants an exact match in stateful environment, prior to one or more measurements each belonging to the SAME measured elements, it wishes to ADD via endorsed-triple-record.\r\n",
          "createdAt": "2024-09-20T16:52:05Z",
          "updatedAt": "2024-09-20T16:52:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "What is the meaning of the authorities in the endorsed-triple-records? I would hope they're _either_ instructed to be ignored, OR they make the endorsement addition yet further conditional on all the endorsed measurements matching the ACS with the listed authorized-by keys\u2013the action is then only to add the CoRIM issuer to that authorized-by list.",
          "createdAt": "2024-09-20T17:09:08Z",
          "updatedAt": "2024-09-20T17:09:08Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I will reply to authority inside `endorsed-triple-records`\r\n\r\nThe example is : as I tried in the other issue, is say a Test House has run certain benchmark tests on a Stateful Environment, to keep it simple, an Env with one Measured Element (With an Mkey: Value 1, Meas-val: Digest, Revision 1.0.0. \r\n\r\nThe Test Results are the Endorsements.\r\n\r\nThe Test House lists the Authority in the meas-map of Endorsed triple. \r\n\r\nThe Integrator or some other authority signs the CoRIM : So now it has a Statefule Env: and an Endorsed Value with the Authority of the Test House completes the Endorsed value triple!",
          "createdAt": "2024-09-20T17:21:07Z",
          "updatedAt": "2024-09-20T17:21:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Once #266 is resolved, via via PR #268 which sorts the compatibility with the TCG, this has an impact on the Conditional Triples.\r\n> \r\n> This issue tracks the impact of Introduction of measurements of `one or more` Measured Elements in an Environment on the following:\r\n> \r\n> 1. CDDL Schema of (a) conditional-endorsement-series-triple-record AND (b) conditional-endorsement-triple-record\r\n> 2. Impact on Matching Semantics and Introduction of Endorsements to ACS\r\n\r\nThe issue name is misleading since TCG specs didn't define conditional endorsement triples (assuming the simple endorsed-values-triple isn't lumped into this class).",
          "createdAt": "2024-09-24T00:22:40Z",
          "updatedAt": "2024-09-24T00:22:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The impact of making `element` multi-valued on `conditional-endorsed-series-triple-record` is as follows:\r\n- `stateful-environment-record` should also have element multiplicity\r\n-  mkey should be added to `conditional-series-record`\r\n\r\nThe following CDDL changes are implied:\r\n```\r\nconditional-endorsement-series-triple-record = [\r\n  stateful-environment-record\r\n  [ + conditional-series-record ]\r\n]\r\n\r\nstateful-environment-record = [\r\n  environment-map,\r\n  [ + measurement-map ]\r\n]\r\n\r\nconditional-series-record = [\r\n  refv: measurement-map\r\n  endv: measurement-map\r\n]\r\n```\r\nThese changes do not attempt to address other concerns such as:\r\n- Whether condition matching should span multiple stateful-environment-records\r\n- Whether the target of the series match (aka selection) should differ from the matched condition.",
          "createdAt": "2024-09-24T00:37:38Z",
          "updatedAt": "2024-09-24T00:37:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Conditions that span multiple ECTs (aka stateful-environment-record) introduces ambiguity for series `selection` in the current series triple because the selection target defaults to the matched `condition`. With multiple conditions, the default behavior is non-deterministic. \r\n\r\nThe `evs` relation addresses the non-determinism by requiring the selection to include the target explicitly. This can result in Awkward or bulky statements for the happy path use case where the condition and the selection environments are the same.\r\n\r\nAdditionally, the `addition` in `conditional-endorsed-series-triple-record` defaults to the current `selection` environment as the target for supplying the addition. However, if the addition is given more flexibility to target which environment to apply the addition, then the full ECT context must be supplied. This, however, results in yet another instance of the full ECT replicated in the RIM entry for the happy path use case. \r\n\r\nThe net result of a generalized `evs`-based conditional series triple is the common case will seem bloated with seemingly redundant information. (Actually, three copies of environment and measurement values will exist). If the `addition` is just a single or few claims, then it seems like it fails to realize the principle that \"simple things should be simple, but complex things possible\". Instead, it is an example of: \"simple and complex things are achievable\".\r\n\r\nA reasonable compromise is to have two forms of the series triple, one that is optimized for the common / simple case and one that is more powerful but also more complex.",
          "createdAt": "2024-09-24T00:56:28Z",
          "updatedAt": "2024-09-24T00:56:28Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "OK to close this issue? Fixed in PR #276 and PR #268",
          "createdAt": "2024-10-02T22:41:26Z",
          "updatedAt": "2024-10-02T22:47:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> OK to close this issue? Fixed in PR #276 and PR #268\r\n\r\nYes, I will close this. Thanks for the reminder!",
          "createdAt": "2024-10-02T22:55:03Z",
          "updatedAt": "2024-10-02T22:55:03Z"
        }
      ]
    },
    {
      "number": 291,
      "id": "I_kwDOH6-tI86YLlqm",
      "title": "cryptokeys comparison is unclear. Why the ordering?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/291",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> The value stored under measurement-values-map key 12 is an array of $crypto-key-type-choice entries. $crypto-key-type-choice entries are CBOR tagged values. The array contains one or more entries in sequence.\r\n>\r\n> The CBOR tag of the first entry of the Reference Value cryptokeys array is compared with the CBOR tag of the first entry of the ACS cryptokeys value. If the CBOR tags match, then the bytes following the CBOR tag from the Reference Value entry are compared with the bytes following the CBOR tag from the ACS entry. If the byte strings match, and there is another array entry, then the next entry from the Reference Values array is likewise compared with the next entry of the ACS array. If all entries of the Reference Values array match a corresponding entry in the ACS array, then the cryptokeys Reference Value matches. Otherwise, cryptokeys does not match.\r\n\r\n\r\n\r\nThis confuses me. I can't conceptualize the procedure this is describing, and I don't know why it only cares about tagged values. The $crypto-key-type-choice choice can be extended with non-tagged values. I don't know why it describes the tagged value comparison in two steps when it seems equivalent to just compare binary encodings.\r\n\r\nIt seems like it requires the size of the condition's key array to be less than or equal to the candidate's key array size, and that all elements of the condition's key array must be binary equal to the corresponding position in the candidate's key array. Seems strange to not allow some permutation in the comparison. Why is this not a subset semantics? Does this really need to impose an ordering?\r\n\r\nThe intended meaning of the triple is lost on me. It would help to have some supporting prose. Is it that the environment could be reasonably expected to give a proof of possession for these keys? I could see the ordering mattering if you're expecting the format of a CA bundle, but whether you're iterating from the left or right can cause problems due to bundle inconsistencies across server implementations as root..leaf or leaf..root\r\n\r\n",
      "createdAt": "2024-09-27T15:10:40Z",
      "updatedAt": "2024-09-27T15:10:40Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 293,
      "id": "I_kwDOH6-tI86YMbgg",
      "title": "Use cases for authorized-by",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/293",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This issue is related to: Issues #244, #202, #160, and #159\r\n\r\nThis issue aims to document expected usages of authorized-by and to identify gaps in the internal representation (ECT) if any.\r\n\r\nACS `authority` field is populated when the signature over a Verifier input is valid and triples processing results in an addition to the ACS. The signer authority (typically a signing key) is added to ACS ECT entries.\r\n\r\nThe following triples have been annotated to indicate which parts specify `condition` and which specify `addition`. `condition-addition` means the statement is overloaded to be both a matching condition and an addition if the matching condition is satisfied. `selection` is a context sensitive condition where the `selection` is applied to the result of the `condition`.\r\n```\r\nevidence-triple-record = [\r\n  addition: environment-map\r\n  addition: [ + measurement-map ]\r\n]\r\n\r\nreference-triple-record = [\r\n  condition-addition: environment-map\r\n  condition-addition: [ + measurement-map ]\r\n]\r\n\r\nendorsed-triple-record = [\r\n  condition-addition: environment-map\r\n  addition: [ + measurement-map ]\r\n]\r\n\r\nconditional-endorsed-triple-record = [\r\n  conditions: [ + stateful-environment-record ]\r\n  additions: [ + stateful-environment-record ]\r\n]\r\n\r\nconditional-endorsement-series-triple-record = [\r\n  condition: stateful-environment-record\r\n  selective-addition: [ + conditional-series-record ]\r\n]\r\n\r\nconditional-series-record = [\r\n  selection: [ + measurement-map]\r\n  addition: [ + measurement-map]\r\n]\r\n```\r\n\u00a0\r\nUse Cases:\r\n\r\n1. `authorized-by` as a condition for querying ACS state. If `authorized-by` is included in `addition` statements it is ignored. Semantics: If `authorized-by` is in a condition / condition-addition / selection statement, then it is compared with the ECT `authority` field. If `authorized-by` is a subset of the authorities listed in `authority` then the condition is met.\r\n\r\n2. `authorized-by` is included in an Evidence addition. Semantics: `authorized-by` identifies trust dependencies where the current TE measurements are expected to be collected by a particular AE. `authorized-by` contains the AE signing key. The key is saved in a new field in the ACS `expected-authority` that the Verifier checks to verify the actual authority is the same as the expected authority. Notes: If the AE is compromised such that `authority` differs from `expected-authority`, then it seems reasonable that the compromised AE would supply an attack TE who changes `authorized-by` value to be the attack AE making the consistency check meaningless.\r\n\r\n3. `authorized-by` is included in an Evidence addition. Semantics: `authorized-by` identifies the RVP that is supposed to supply the reference values. The `authorized-by` value is saved to a new field in the ACS ECT (`expected-rvp`). The Verifier processes RVP `condition-addition` statements and adds the ECT with an additional check that the `expected-rvp` field in the evidence ECT matches the `authority` field of the to-be-added RV ECT. Notes: If the `expected-rvp` is not in the Verifier's TA list, this could be a risk of privilege escalation. If a second RVP adds the same ECT under the second RVP authority, but it is not named by `expected-rvp`, then Verifier will not match on the second RVP. I assume the Verifier will ignore the second RVPs addition. However, this seems controversial since the Attester is masking off Verifier TA policy.\r\n\r\n4. `authorized-by` is included in Reference Values. Semantics: As a condition, `authorized-by` is matching criteria that applies to Evidence. `authorized-by` matches an evidence ECT `authority` if `authorized-by` is a subset of `authority` field. The RV ECT is added with `authority` being set to the RVP key. Note: There is no way to query / match on `expected-rvp` or `expected-authority` if use cases (2) or (3) are valid.\r\n\r\n5. `authorized-by` is included in simple Endorsements. Semantics: As a condition, `authorized-by` is matching criteria applies to Evidence / RV / Endorsement(?) ECTs in the ACS. `authorized-by` is compared to the `authority` field in the ECT. If it is a subset of `authority` then it matches. The Endorsement `environment-map` and `[ + measurement-map ] contents are added to an ACS ECT where `authority` is the Endorser signing key. Notes: There is no way to describe an addition that incorporates authority without overloading `authorized-by` to mean both condition and addition. But if overloaded, the `addition` needs to be added to the ACS ECT. Maybe it has use case (6) semantics, in which case `authorized-by` as a delegation updates `ce-delegates`. This would be strange since the named delegate is already trusted by the verifier or `authorized-by` use as a `condition` would have failed.\r\n\r\n6. `authorized-by` is included in conditional endorsements in the `additions`. To indicated that another Endorser or RVP is authorized (delegated) to supply values for the `addition` claims. Semantics: The set of additions includes `authorized-by` values. These are added to the ECT using a new field `ce-delegates`. Notes: Since any entity can assert RV / Endorsement claims, the Verifier will add them to the ACS without delegation. This assumes the Verifier TA policy trusts the delegate entity. If the Verifier doesn't already trust the delegate, then this use case is a form of TA management where supplier A introduces supplier B to the Verifier. Upon seeing `ce-delegates` in an ECT, the Verifier updates its TA policy to include the delegate (but with restrictions described by the `addition` statement.) One of the challenges with delegation is rescinding delegations. It isn't clear from the triple, for how long the delegation is valid.\r\n\r\n7. `authorized-by` is included in a conditional series endorsement in the `condition` and in the `selection`. Since the series scope is tied to the `condition`, the `authorized-by` in `selection` appears to be redundant. If `authorized-by` appears in the `addition`, it could have the semantics of use case (6).  Notes: since this triple didn't have `authorized-by` semantics prior to #276 the existence of `authorized-by` in the `addition` is unexpectedly inherited. Hence, the Verifier should ignore `authorized-by` if it appears in `addition`.",
      "createdAt": "2024-09-27T17:18:42Z",
      "updatedAt": "2024-10-09T15:55:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think when we translate evidence triples to evs, the condition ects are\r\none per different collection of authorities across the measurement-maps and\r\nthe addition is the environment and measurement-maps with authorized-by\r\nreplaced by the corim authority across the board.\r\n\r\nOn Fri, Sep 27, 2024 at 10:19 Ned Smith ***@***.***> wrote:\r\n\r\n> This issue is related to: Issues #244\r\n> <https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/244>, #202\r\n> <https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/202>, #160\r\n> <https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/160>, and #159\r\n> <https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/159>\r\n>\r\n> This issue aims to document expected usages of authorized-by and to\r\n> identify gaps in the internal representation (ECT) if any.\r\n>\r\n> ACS authority field is populated when the signature over a Verifier input\r\n> is valid and triples processing results in an addition to the ACS. The\r\n> signer authority (typically a signing key) is added to ACS ECT entries.\r\n>\r\n> The following triples have been annotated to indicate which parts specify\r\n> condition and which specify addition:\r\n>\r\n> evidence-triple-record = [\r\n>   addition: environment-map\r\n>   addition: [ + measurement-map ]\r\n> ]\r\n>\r\n> reference-triple-record = [\r\n>   condition_addition: environment-map\r\n>   condition_addition: [ + measurement-map ]\r\n> ]\r\n>\r\n> endorsed-triple-record = [\r\n>   condition: environment-map\r\n>   addition: [ + measurement-map ]\r\n> ]\r\n>\r\n> conditional-endorsed-triple-record = [\r\n>   conditions: [ + stateful-environment-record ]\r\n>   additions: [ + stateful-environment-record ]\r\n> ]\r\n>\r\n> conditional-endorsement-series-triple-record = [\r\n>   condition: stateful-environment-record\r\n>   series: [ + conditional-series-record ]\r\n> ]\r\n>\r\n> conditional-series-record = [\r\n>   sub-condition: [ + measurement-map]\r\n>   addition: [ + measurement-map]\r\n> ]\r\n>\r\n>\r\n> Use Cases:\r\n> (1) authorized-by as a condition for querying ACS state. If authorized-by\r\n> is included in addition statements it is ignored.\r\n>\r\n> (2)\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/293>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAFL4HFNDD7JGHKYBJBR64TZYWHQPAVCNFSM6AAAAABO7SHR62VHI2DSMVQWIX3LMV43ASLTON2WKOZSGU2TGMZZGUZDGMQ>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
          "createdAt": "2024-09-27T17:36:02Z",
          "updatedAt": "2024-09-27T17:36:02Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think when we translate evidence triples to evs, the condition ects are one per different collection of authorities across the measurement-maps and the addition is the environment and measurement-maps with authorized-by replaced by the corim authority across the board.\r\n> \r\nThe evs is populated with the `environment-map` and `[ + measurement-map]` from the series triple condition. Maybe this should be stereotyped as a condition-addition? But I wasn't expecting the `authorized-by` in the evs `condition` ECT would be copied into the evs `addition` ECT. \r\n\r\nAt the conclusion of constructing the evs, there will be an addition ECT that contains the candidate to be added to the ACS. If it isn't NULL then it is added. The ACS candidate `authority` is populated with the signer of the RIM. If the `conditional-series-record` `addition` contained `authorized-by` there is no place to put it in the ACS ECT. If we create a place for it. It would need to be done based on some other use case context such as (6). Since the original design of the triple didn't anticipate a use case other than for querying the ACS it is unclear what authorized-by appearing in the `conditional-series-record` `addition` means.\r\n",
          "createdAt": "2024-09-27T19:05:48Z",
          "updatedAt": "2024-09-27T19:15:21Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think I disagree with use case (3) since the attester shouldn't declare who the only permitted RVPs are. That mixes attestation with authorization, which I don't think is what attesting technologies do.\r\n\r\nI don't quite understand (2) either, unless you're not requiring that evidence signature authorities are trusted by policy (configured trust anchors), and that the signatures of the evidence are valid before adding their measurements to the ACS.\r\n\r\nFor (5), I'm less inclined to support authorized-by for simple endorsements. If you really want to match just an environment and mkey without any measured values, then we should allow empty measurement-values-maps in the conditions of a confidential endorsement triple. If you want to say you cosign someone else's endorsements, that can be expressed as a reference-value-triple, since the measurements will be included in the condition.\r\n\r\n(6) I'm skeptical since it's too syntactically bound, when delegation can be much more policy-based. I would like to punt on this mechanic to a later version and disallow additions to have authorized-by until we see a compelling RFC.\r\n\r\n(7) authorized-by in both condition and selection is as redundant as having both a condition and a selection. There's reason to narrow authorities after a baseline condition is established. I don't think addition should have (6) semantics since I don't agree with (6).\r\n\r\nSo I would vote to keep use cases (1) and (4) and determine if we need to allow empty measurements in conditions. I'd need more discussion about (2).",
          "createdAt": "2024-09-27T20:17:29Z",
          "updatedAt": "2024-09-27T20:17:29Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Anybody else see value in use case (3)?",
          "createdAt": "2024-10-09T00:38:29Z",
          "updatedAt": "2024-10-09T00:38:29Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Consensus to work on use case 1.\r\n\r\nIf there is interest in working on other use cases (for example, use case 3) they will be dealt with in separate issues.\r\n\r\nwe need to determine if case 4 is already covered (and how).\r\n",
          "createdAt": "2024-10-09T15:55:56Z",
          "updatedAt": "2024-10-09T15:55:56Z"
        }
      ]
    },
    {
      "number": 295,
      "id": "I_kwDOH6-tI86YlCQ5",
      "title": "Profile-directed comparison and profile-id comparison",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/295",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In the space of candidate and condition having a profile id, we've discussed\r\n\r\nboth without: use base semantics\r\ncondition with, candidate without: use the profile matching algorithm for any extensions, but I think we're missing wording in the spec that if there are any non-base CDDL bits of a CoRIM that it MUST have a profile-id to give them meaning. The text in the current draft just falls back to binary equality,\r\n\r\n> If a codepoint's comparison algorithm is not stated or does not default to the comparison algorithms described in this specification, then the Verifier MUST compare the binary equality of the CBOR encodings of the values.\r\n\r\nBut I worry that a -1: 1 in one profile may have completely different meaning from -1: 1 in another, and the lack of a profile can mean that two completely different measurements are getting viewed as the same.\r\n\r\nWe haven't discussed\r\ncondition without, candidate with: I'm guessing we use the base semantics' matching algorithm applies and rejects to match any nonstandard values.\r\ncondition with, candidate with: This one really does require mentioning in the document. I think that we need to require equality or at least condition profile-specified matching condition to allow for subsumption judgments.\r\n\r\nIn an email thread I discussed the merits and dangers of allowing a profile in a condition to override the profile in the ACS. Recap here\r\n\r\n>> is there any downside to giving that flexibility to the profile?\r\n>\r\n> There is, but we probably shouldn't rule it out entirely.\r\n>\r\n>Evidence can be translated to an ECT with some specific profile that assigns meaning to nonstandard codepoints, and another profile comes along and says, \"ya ya ya, whatever\" and adds its CoRIM issuer authority to the ACS entry that still has the evidence's profile identifier associated and not the CoRIM's. I mean I guess if you trust both the CoRIM issuer and the semantics of the profile, then you could trust this behavior, but it seems like it would be cause for confusion and inadvertent privilege escalation. You shift more burden into the policy side of the Verifier to accept a profile's overreach to subsume ACS entries' profiles.\r\nGiven that the base CDDL says that a profile MUST NOT override its specified semantics for its codepoints, I would think that you might want the option for an ACS entry's profile to also have non-expansive matching semantics.\r\n>\r\n>If we do allow for the profile to do whatever, we ought to add a note that profile identifier comparisons that are not binary equality are NOT RECOMMENDED due to the additional burden of ensuring the interactions are acceptable by policy.\r\n",
      "createdAt": "2024-10-01T17:47:44Z",
      "updatedAt": "2024-10-04T04:04:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "There is a lot of punning between evidence and condition for matching evidence that can be useful for simple CoRIMs but not for more specific profiles like Ned's Intel TDX profile's inclusion of set relations.\r\n\r\nDo we clone measurement-map into actual-measurement-map and condition-measurement-map to allow profiles to enhance all code points of any measurement-values-map to allow for more expressive match conditions? It would allow us to move `tagged-min-svn` out of measurement-values-map and just into condition-measurement-map so we don't have any inexact measurements.",
          "createdAt": "2024-10-01T17:53:09Z",
          "updatedAt": "2024-10-01T17:53:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is the \"not fo\r\n\r\nThere seems to be missing text.",
          "createdAt": "2024-10-01T18:20:38Z",
          "updatedAt": "2024-10-01T18:20:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> In the space of candidate and condition having a profile id, we've discussed\r\n\r\nDoes \"condition\" refer to a `condition` statement in a triple? \r\nWhat does \"candidate\" refer to?",
          "createdAt": "2024-10-01T18:21:57Z",
          "updatedAt": "2024-10-01T18:21:57Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Do we clone measurement-map into actual-measurement-map and condition-measurement-map to allow profiles to enhance all code points of any measurement-values-map to allow for more expressive match conditions?\r\n\r\nThe Intel Profile for Corim (different from the Intel profile for TDX EAT claims) contains definitions for both possible state and actual state. The profile expects `condition` statements will include `measurement-values-map` extensions for negative code points. However, it doesn't expect condition statements will express \"possible state\" as the ACS only expresses actual state. This implies the richness of the `condition` need only cover expressions of actual state.\r\n\r\n",
          "createdAt": "2024-10-01T18:33:21Z",
          "updatedAt": "2024-10-01T18:33:21Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe \"possible state\" is where we're missing each other. I'm simply talking about a condition that matches more than one actual state. The space of all actual states that it matches is what I call possible state.\r\n\r\n\"Expressions of actual state\" refers to your expression language, does it not?\r\n\r\n> Expressions are used to specify richer Reference Values measurements that expect non-exact matching semantics\r\n\r\nBy having non-exact matching, you are expressing a space of measurements that is not a singleton set.",
          "createdAt": "2024-10-04T04:04:18Z",
          "updatedAt": "2024-10-04T04:04:18Z"
        }
      ]
    },
    {
      "number": 297,
      "id": "I_kwDOH6-tI86YoHoc",
      "title": "cmtype is never used",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/297",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The cm-type is an enum in an ECT that has no functional purpose. I understand that it's an optional field of CMWs and it can be helpful for hinting, but there's internal representation stating that cm-type is a mandatory field despite never having a prescribed meaning outside of the enum. An `ae` definition doesn't say the ECTs will all have `cmtype: /evidence/ 2` for example. There's no mention of its use in result construction and how it is meant to feed into the CMW format.\r\n\r\nIs this planned?",
      "createdAt": "2024-10-02T04:32:24Z",
      "updatedAt": "2024-10-05T00:08:29Z",
      "closedAt": "2024-10-05T00:08:29Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "It's one of those things that look useful until you realise they've been sitting in a corner for years only to collect dust, so you throw them in the bin.  5 seconds later, you find yourself scraping the rubbish pile to try and get them back because you suddenly realise you need them :-)",
          "createdAt": "2024-10-02T07:23:23Z",
          "updatedAt": "2024-10-02T07:23:23Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah yes, to be clear I'm not saying bin it, I'm saying please explain it.",
          "createdAt": "2024-10-02T13:35:25Z",
          "updatedAt": "2024-10-02T13:35:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The processing rules for RVs only applies to Evidence. If there is no way to distinguish message type then the RV processing could mistakenly be applied to Endorsements and other RVs.",
          "createdAt": "2024-10-02T14:53:08Z",
          "updatedAt": "2024-10-02T14:53:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Like profile, cm-type doesn't have a way for a condition to match on these values, but like profile, the internal processing logic does need it.",
          "createdAt": "2024-10-02T14:54:36Z",
          "updatedAt": "2024-10-02T14:54:36Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "evidence, reference values, and endorsements all talk about the same kinds of measurements. The role is really in who's doing the signing. I don't see why you would have to separate RVs from never applying to measurements added by an endorser. You end up needing to express the same thing just more verbosely by using a conditional endorsement that the measurements you want to see are the measurements you want to add your authority to.",
          "createdAt": "2024-10-03T02:16:15Z",
          "updatedAt": "2024-10-03T02:16:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #299 more clearly articulates how cmtype plays a role in verifier processing. Is this incorrect?",
          "createdAt": "2024-10-03T16:20:42Z",
          "updatedAt": "2024-10-03T16:20:42Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "That PR should satisfy this, yes.",
          "createdAt": "2024-10-04T03:58:48Z",
          "updatedAt": "2024-10-04T03:58:48Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #299",
          "createdAt": "2024-10-05T00:08:29Z",
          "updatedAt": "2024-10-05T00:08:29Z"
        }
      ]
    },
    {
      "number": 298,
      "id": "I_kwDOH6-tI86YuKdk",
      "title": "CoBOMs, context, and provenance",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/298",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "> After context initialization, additional inputs are held back until appraisal processing has completed.\r\n> [...]\r\n> 8.3.1.1 CoRIM Selection\r\n> All available CoRIMs are collected.\r\n\r\nand\r\n\r\n> 6. CoBOM\r\n> If a Verifier Owner has a policy that does not require CoBOM, tags within a CoRIM received by a Verifier are activated immediately and treated valid for appraisal.\r\n\r\nThese two pieces are at odds with one another I think. At the very least this should be \"valid for future appraisal sessions\".\r\nI don't know what it means for the Verifier Owner policy to `require CoBOM`. Does it need appraisal requests to provide CoBOM tags to guide tag selection? Is this only for ingesting tags prior to an appraisal? Why is that an interaction we are specifying?\r\n\r\n> After context initialization, additional inputs are held back until appraisal processing has completed.\r\n\r\nI think this text still leaves a window for state mutation to muddle things. We ought to say that the input state to context construction is also fixed at the start of an appraisal session.\r\n\r\n> The primary goal of this phase is to ensure that all necessary information is available for subsequent processing.\r\n\r\nGiven that there are apparently different Verifier interactions that change the available information to construct the input context, we have a few entry points to the imagined Verifier. Perhaps we can simplify this to just the theory of appraisal of evidence and say the goal of context construction is to have a well-defined set of inputs for describing attestation appraisal as determined entirely by its inputs.\r\n\r\nWonk follows\r\n---\r\nImmediacy is not meaningful in distributed systems and leads to problems with tracking provenance. We haven't really described the difference between a Verifier receiving a CoRIM and performing an attestation appraisal. I don't think we want to draw the distinction and instead treat the initial state as an immutable input.\r\n\r\nRight now we have the ECT and ACS internal representations, but not an abstract machine. Since `evs` can fail to match the ACS at one point in time and then succeed after a different triple has been processed, we ought to describe the semantics as a fixed-point computation.\r\n\r\nI think we're not meant to be talking about interactions between services in this specification. Instead we are describing a document format and its meaning for attestation appraisal. Perhaps we can say there are internal representations of inputs,\r\n\r\n* initial state available to construct an appraisal context [e.g., a versioned database]\r\n* time used for validity-checking\r\n* evidence submitted for appraisal\r\n\r\nand an internal representation of an appraisal state that _includes_ the ACS,\r\n\r\n* appraisal context as constructed for a session\r\n\r\nEach of the triple's internal representations correspond to a `cm-type`, so let's make a tagged union.\r\n\r\n```\r\nctx-triple = {\r\n  val: rv / es / evs / policy\r\n  cmtype: cm-type\r\n]\r\ncontext = {\r\n  todo: [ ctx-triple ]\r\n  acs: ACS\r\n  session: any\r\n}\r\n```\r\n\r\nA `context` transition is therefore a selection of a triple to process, where a selection strategy already determined the order of processing, an ACS addition (if any), and a session state update (if any).\r\n\r\n```\r\nstep({todo: [ triple, todo ... ], acs: ACS, session: session}) = {\r\n  todo: [ todo ... ]\r\n  acs: ACS-next\r\n  session: session-next\r\n}\r\nwhere\r\nACS-next, session-next = process-triple(triple, session)\r\n}\r\n\r\nstep({todo: [], acs: ACS, session: session}) = final-phases(ACS, session)\r\n```\r\n\r\nWe've defined `process-triple` for all the internal triple types and described `final-phases` as optional.\r\n\r\nFinally,\r\n```\r\nappraise(initial-state, evidence, time) = appraise-internal(ctx)\r\n  where ctx = construct-context(initial-state, evidence, time)\r\n\r\nconstruct-context(initial-state, evidence, time) = {\r\n  todo: tag-selection(initial-state, evidence),\r\n  acs: valid-evidence(initial-state, evidence, time)\r\n  session: verifier-session-new()\r\n} \r\nappraise-internal(context) = leastfixedpoint(step)(context)\r\n```\r\n\r\nThe `tag-selection` MAY take evidence into account to narrow the active tags further from its initial state to tags hinted at from evidence.\r\nThe `valid-evidence` function is effectively phase 2.",
      "createdAt": "2024-10-02T17:20:06Z",
      "updatedAt": "2024-10-04T18:22:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd generally like for `appraise` to be able to provide a summary of its inputs in its results for provenance's sake, but we can leave that out of this spec.",
          "createdAt": "2024-10-02T17:21:11Z",
          "updatedAt": "2024-10-02T17:21:11Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Attempted to handle this a bit in PR#307.",
          "createdAt": "2024-10-04T18:22:56Z",
          "updatedAt": "2024-10-04T18:22:56Z"
        }
      ]
    },
    {
      "number": 302,
      "id": "I_kwDOH6-tI86Y3F9a",
      "title": "Should RVPs be able to set RVs for Endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/302",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Normally, an RVP mints RVs that are applied to Evidence (only). The question is raised whether it is meaningful if an RVP could also mint RVs for Endorsements.\r\n\r\nNote: It is possible for an Endorser to endorse another Endorser's Claims using conditional endorsements so long as the `condition` expressions are permitted to use possible state expressions. \r\n\r\nThe current spec is silent. That is to say, the cmtype of the `condition` ECT is not specified.",
      "createdAt": "2024-10-03T17:20:50Z",
      "updatedAt": "2024-10-09T00:35:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "If cosigning endorsements is always an endorsement, can we say that a conditional endorsement can have optional additions, such that the meaning is just to add the CoRIM issuer's authority to the condition environment/measurement as an endorsement cmtype, or is that too punny?",
          "createdAt": "2024-10-04T01:39:00Z",
          "updatedAt": "2024-10-04T01:39:00Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> can we say that a conditional endorsement can have optional additions, such that the meaning is just to add the CoRIM issuer's authority\r\n\r\nI believe all forms of endorsement triples allow this already. Even if the condition included `authorized-by` (used for matching). The addition wouldn't include the matched authority. Even if the addition included `authorized-by`, that would represent something else in the internal representation than `authority`. ",
          "createdAt": "2024-10-09T00:06:47Z",
          "updatedAt": "2024-10-09T00:06:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> environment/measurement as an endorsement cmtype\r\n\r\nMaybe I'm not following? The triple's predicate determines its cmtype. Otherwise, the cmtype is known to the Verifier as the various inputs are accepted and validated (phase 0 / 1), even if the inputs aren't expressed as CoMID triples. The output from processing an Endorsement triple is still an endorsement. This is true even when an endorsement condition searches over Evidence, corroborated RVs, or other Endorsements. \r\n\r\nThe question can be recast in terms for whether there is something like \"corroboration\" for Endorsements. Given the purpose of corroboration is to convert reference state into actual state, applying this to endorsements seems unnecessary since endorsements are defined to be actual state already. \r\n\r\nThe subtlety may be that for RVs, the totality of the inputs represents more Evidence states than are present in an ACS. While for Endorsement, the conditions describe a search space that is restricted to an Attester's actual states (even though the search may include corroborated RVs and other Endorsements).\r\n\r\nI think this means that for RV processing, there's an outer loop of RVs (reference states) that is applied to an inner loop that iterates over the ACS entries. ",
          "createdAt": "2024-10-09T00:35:22Z",
          "updatedAt": "2024-10-09T00:35:22Z"
        }
      ]
    },
    {
      "number": 303,
      "id": "I_kwDOH6-tI86Y3MPf",
      "title": "Should `element-list` processing allow positional comparison",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/303",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "The triple cddl allows mkey to be optional and multiple measurement-map entries to exist simultaneously. What should be Verifier behavior? There are two possibilities:\r\n\r\nOption (1) fall back to positional comparison where the record at position i of the `condition` relation is compared with the record at position i of the ACS ECT.\r\n\r\nOption (2) write normative text that bans multiplicity of measurement-map without mkey.\r\n\r\nI'm leaning toward option 1.",
      "createdAt": "2024-10-03T17:30:26Z",
      "updatedAt": "2024-10-14T16:48:00Z",
      "closedAt": "2024-10-14T16:47:42Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, I have a personal distaste for positional semantics.\r\n\r\nBesides, if one wants positional semantics for \"anonymous\" elements, they can use a `mkey` of type `uint` and define their matching algorithm, no?\r\n\r\nSo, leaning toward option 2, i.e.: _\"if multiple elements exist they **`MUST NOT`** be anonymous_\".",
          "createdAt": "2024-10-03T18:55:54Z",
          "updatedAt": "2024-10-03T18:56:36Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I vote option 2 because the authorized-by can be different for the same mkey and different values. I'm not strongly opposed to a missing mkey to implicitly be interpreted as its position in the array, but that makes 0 and missing mkey synonymous, which can cause interpretation problems.\r\n\r\nIf you have a mix of numbered 0..9 mkeys and a missing mkey for the \"most basic\" values, then implicit numbering confuses things.",
          "createdAt": "2024-10-03T19:11:18Z",
          "updatedAt": "2024-10-03T19:14:28Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @andrew-draper Your comments are requested.",
          "createdAt": "2024-10-04T16:04:12Z",
          "updatedAt": "2024-10-04T16:04:12Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I think there was a hint at an option 3.\r\n\r\nOption (3) write normative text that if any `measurement-map` contains an `mkey`, then all `measurement-map` array elements must contain an `mkey`. If no `measurement-map` of the array contains an `mkey`, each element has an implicit `mkey` of its index in the array.\r\n\r\nThis feels too punny to me, but we're already in a situation where the list of key/value pairs does not have association-list semantics (the first matching mkey in a linear search is what it means) to make a simple finite function data type. We have to allow multiple entries of the array to have the same mkey to account for different `authority` conditions.\r\n\r\nI wouldn't protest if we allowed for this option.",
          "createdAt": "2024-10-04T16:08:26Z",
          "updatedAt": "2024-10-05T00:10:07Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Slight twist,\r\n\r\nOption (4) write normative text that if no measurement-map of the array contains an mkey, then each element has an implicit mkey of its index in the array.\r\n\r\nThis allows a missing mkey amongst many mkeys to be its own unit-type key that refers to the same element. I dislike this choice because it changes the meaning of other elements as soon as you add another that happens to have an mkey.\r\n\r\nThis differs from (1) in that the mkey refers to the same element rather than the ith element based on the position in the array amongst other measurements with mkeys.",
          "createdAt": "2024-10-04T16:11:06Z",
          "updatedAt": "2024-10-05T00:11:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Depending on the option selected, the language in Endorsement Triples Transformation {#sec-end-trans} can be softened.",
          "createdAt": "2024-10-04T23:12:14Z",
          "updatedAt": "2024-10-04T23:12:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> This differs from (1) in that the mkey refers to the same element rather than the ith element based on the position in the array amongst other measurements with mkeys.\r\n\r\nWouldn't the ith element be the same as its index in the array?",
          "createdAt": "2024-10-05T00:15:45Z",
          "updatedAt": "2024-10-05T00:15:45Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> write normative text that if any `measurement-map` contains an `mkey`, then all `measurement-map` array elements must contain an `mkey`\r\n\r\nI expect the dominant use case for measurement-map will involve a singleton. Singletons don't need additional disambiguation. If an implementation begins with a singleton, but later adds a second, the onus is on the second to disambiguate it from the first. If the implementation of the second didn't touch the implementation of the first, it doesn't make sense that the first implementation should have to change. \r\n\r\nLanguage that mandated use of mkey for subsequent entries means there would only ever be one anonymous entry.\r\n\r\nOne of the profiles (psa/cca?) was overloading mkey to do more than simple disambiguation. I think this should be discouraged IMO. Other than that, the purpose for defining the namespace scope of mkey as \"local\" is primarily to disambiguate measurement-map multiples. It seems reasonable to mandate use of mkey when there are 2 or more entries but allow a single anonymous entry.\r\n\r\nIf that were the case, then it wouldn't matter where in the array the anonymous entry fell.",
          "createdAt": "2024-10-05T00:39:48Z",
          "updatedAt": "2024-10-05T00:45:19Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> One of the profiles (psa/cca?) was overloading mkey to do more than simple disambiguation. I think this should be discouraged IMO.\r\n\r\nWe use `mkey`s in both CCA and PSA to disambiguate different firmware elements within the same TCB.  There is no more semantic than that.  I am unsure what you are referring to, but I would like to know a bit more because I don't want our design to diverge from \"the CoRIM's way\".\r\n",
          "createdAt": "2024-10-05T09:28:19Z",
          "updatedAt": "2024-10-05T09:28:49Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > One of the profiles (psa/cca?) was overloading mkey to do more than simple disambiguation. I think this should be discouraged IMO.\r\n> \r\n> We use `mkey`s in both CCA and PSA to disambiguate different firmware elements within the same TCB. There is no more semantic than that. I am unsure what you are referring to, but I would like to know a bit more because I don't want our design to diverge from \"the CoRIM's way\".\r\n\r\nI'm not an expert in ARM's use of mkey. Based on how it has been described to me the extension point is more complex than a simple identifier / label. I don't know how \"TCB\" differs from \"environment\" or \"element\". ",
          "createdAt": "2024-10-07T15:36:19Z",
          "updatedAt": "2024-10-07T15:36:19Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm not an expert in ARM's use of mkey. Based on how it has been described to me the extension point is more complex than a simple identifier / label. I don't know how \"TCB\" differs from \"environment\" or \"element\".\r\n\r\nIt is a _composite_ identifier - mirroring the mandatory information in the [`psa-software-component`](https://www.ietf.org/archive/id/draft-tschofenig-rats-psa-token-24.html#section-4.4.1) - but an identifier nonetheless.\r\n",
          "createdAt": "2024-10-07T16:27:11Z",
          "updatedAt": "2024-10-07T16:27:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Option 5 - Allow a single anonymous entry. Additional entries MUST supply mkey. The location in the various measurement-map entries in the array is not significant.",
          "createdAt": "2024-10-08T23:56:44Z",
          "updatedAt": "2024-10-08T23:57:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is there consensus for option 5?",
          "createdAt": "2024-10-08T23:58:46Z",
          "updatedAt": "2024-10-08T23:58:46Z"
        },
        {
          "author": "jraman567",
          "authorAssociation": "NONE",
          "body": "Option 6 - Allow a single anonymous entry (for backward compatibility), which MUST be the first element. Additional entries MUST supply mkey. The location in the various measurement-map entries in the array is not significant, but the evidence MUST contain ALL the elements in the endorsement.",
          "createdAt": "2024-10-09T15:27:29Z",
          "updatedAt": "2024-10-09T15:30:07Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "recording rough consensus on option 5.",
          "createdAt": "2024-10-09T15:38:59Z",
          "updatedAt": "2024-10-09T15:38:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing issue - fixed by #315 ",
          "createdAt": "2024-10-14T16:47:17Z",
          "updatedAt": "2024-10-14T16:47:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed.",
          "createdAt": "2024-10-14T16:47:58Z",
          "updatedAt": "2024-10-14T16:47:58Z"
        }
      ]
    },
    {
      "number": 310,
      "id": "I_kwDOH6-tI86Zb5F_",
      "title": "Better Initial description for the Triples Description",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/310",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "            PR #299 attempts to make the Triple Definition and explination tied highly to Internal Verifier Actions which are strictly not required.\r\n\r\nA Triple should explain:\r\n\r\n1. What it is used for, i.e purpose?\r\n2. What the elements in the triple imply\r\n3.  Finally optional text to indicate, how internally it can be internally used for.\r\nThe new text seems to do 3. right at the start, which can be daunting for a new reader.\r\n\r\nThe risk is that New comers will STOP using CoRIM on a first read and will not be inclined to read the specification fully!       ",
      "createdAt": "2024-10-08T21:15:27Z",
      "updatedAt": "2024-10-08T21:15:27Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 311,
      "id": "I_kwDOH6-tI86Zjxj_",
      "title": "Evidence internal representation is not the target of Evidence tranformation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/311",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We describe the internal representation of evidence as an `ae` relation, but the transformation in phase 1 uses the `ev` relation.",
      "createdAt": "2024-10-09T15:39:37Z",
      "updatedAt": "2024-10-11T05:28:44Z",
      "closedAt": "2024-10-11T05:28:44Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "To be clear, I think we don't need `ae`, but stylistically I think Ned preferred to separate them. This is just a gap in the explanation.",
          "createdAt": "2024-10-09T15:46:07Z",
          "updatedAt": "2024-10-09T15:46:07Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know what I was looking at.",
          "createdAt": "2024-10-11T05:28:44Z",
          "updatedAt": "2024-10-11T05:28:44Z"
        }
      ]
    },
    {
      "number": 312,
      "id": "I_kwDOH6-tI86ZkGfr",
      "title": "Allow `mkey`s to be `tstr`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/312",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@jraman567 has a use case that needs this.\r\n\r\nAn alternative would be for Jag's profile to extend `$measured-element-type-choice`, but it seems that `tstr` would be common enough to deserve being brought into the base schema.",
      "createdAt": "2024-10-09T16:15:02Z",
      "updatedAt": "2024-10-16T14:05:00Z",
      "closedAt": "2024-10-16T14:05:00Z",
      "comments": []
    },
    {
      "number": 314,
      "id": "I_kwDOH6-tI86Zkv0l",
      "title": "Attest-key-triple validation needed for ae construction?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/314",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If we're dropping the need for RVPs to specify the attester authority, we ought to mention in Phase 1 that Evidence can only be transformed an ECT about environment E only if the evidence was signed by a key bound to E with an attest-key-triple, no? It probably works differently for SPDM since the measurement is over an authenticated channel rather than signed, but unfortunately that detail is missing from the TCG document https://trustedcomputinggroup.org/wp-content/uploads/TCG-DICE-Concise-Evidence-Binding-for-SPDM-Version-1.0-Revision-54_pub.pdf",
      "createdAt": "2024-10-09T17:42:10Z",
      "updatedAt": "2024-10-23T16:16:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> we ought to mention in Phase 1 that Evidence can only be transformed an ECT about environment E only if the evidence was signed by a key bound to E with an attest-key-triple, no?\r\n\r\nThis might be too constraining since it is reasonable for an Attester to disclose the existence of a key without it being used. For example, an HSM could have several keys that are protected by the HSM but doesn't use all of them when producing Evidence.\r\nThe RIM author can decide when it is appropriate to supply attest key triples. That decision likely make sense for attestation keys that are used to sign evidence, but if a key isn't used, the spec should not compel them to supply an attest key triple (nor should it compel them to use it even if a key is used). The spec expects the verifier will verify keys that are used in the generation of evidence already, so it's the cases when a key isn't used to sign a Verifier input / Evidence, but may be used some other time, that attest key triple and identity key triple comes into play.",
          "createdAt": "2024-10-09T18:05:21Z",
          "updatedAt": "2024-10-09T18:05:21Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> It probably works differently for SPDM since the measurement is over an authenticated channel rather than signed\r\n\r\nSPDM defines something called a \"transcript\" which is something like a signed block that can be taken out of the channel context to be used to verify the integrity of offline measurements. They could be forwarded to a proxy to verify etc. This seems a bit like an IETF \"token\" but the spec isn't written that way.",
          "createdAt": "2024-10-09T18:09:23Z",
          "updatedAt": "2024-10-09T18:09:23Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> but unfortunately, that detail is missing from the TCG document \r\n\r\nThe TCG binding spec anticipates that a transcript can be used.\r\nThe spec doesn't preclude use of a token or a detached signature (e.g., EAT) as the `spdm-toc-map` is extensible.",
          "createdAt": "2024-10-09T18:16:31Z",
          "updatedAt": "2024-10-09T18:16:31Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we have any plan for normative language about attest-key-triple and how its use is meant to bind an evidence-signing key to an environment?",
          "createdAt": "2024-10-10T00:42:45Z",
          "updatedAt": "2024-10-10T00:43:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Do we have any plan for normative language about attest-key-triple and how its use is meant to bind an evidence-signing key to an environment?\r\n\r\nBy \"bind\" do you mean some form of proof-of-possession?",
          "createdAt": "2024-10-10T17:47:10Z",
          "updatedAt": "2024-10-10T17:47:10Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "No I mean more of a binding contract in the Verifier to not accept evidence from keys not associated with the environment the reference values are for. I want to make sure that if I\u2019m not specifying authorized-by for my reference values, then the environment must be tied to the manufacturer RoT somehow",
          "createdAt": "2024-10-10T21:31:09Z",
          "updatedAt": "2024-10-10T21:31:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The trust dependency triple is trying to model that. We've parked that discussion a while ago so we could do the refactoring and get more prose behind core features. Maybe it's time to revisit trust dependency triple. One of the open topics was whether or not the `domain` abstraction was compelling. There was a proposal to squash it into an environment. (e.g,. $domain-type-choice /= environment-map or stateful-environment-map). That would allow the RVP to explicitly say which environments / keys depend on which other environments/keys (without needing an abstraction layer). If modeling DICE layering, the bottom dependency would be a RoT key and so forth. The verifier would use the trust dependency triples to check the actual DICE layers' signing sequences (aka DICE cert path) If the actual path differed from the intended path, the verifier would raise a red flag of some sort (i.e., not add corroborating RVs). ",
          "createdAt": "2024-10-10T22:10:28Z",
          "updatedAt": "2024-10-10T22:10:28Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm afraid I don't follow that explanation. The RVP cannot say which exact keys the whole fleet that will run its signed firmware will have. We just know that the keys' certs should be issued by AMD's intermediate CA.",
          "createdAt": "2024-10-11T05:24:52Z",
          "updatedAt": "2024-10-23T14:45:38Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Attest-key-triple can be encoded by AMD's KDS signing a VCEK certificate with extensions that identify the environment it's bound to.\r\n\r\nSEV-SNP Evidence can be interpreted as coming from a certain environment.\r\nIf there is a valid attest-key-triple for that environment and it verifies the evidence, then the evidence can be added as authorized by the attest-key. Yes? ",
          "createdAt": "2024-10-23T14:52:11Z",
          "updatedAt": "2024-10-23T14:52:11Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "There is no ACS / Appraisal context representation of attest-key-triple. I think we need to concretize the internal representation and its meaning.",
          "createdAt": "2024-10-23T14:55:44Z",
          "updatedAt": "2024-10-23T14:55:44Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Reflecting rough consensus from the 2024-10-23 corim design team discussion:\r\n- attest-key-triple should be processed as an endorsement. \r\n- the combination of environment-map and a key ($crypto-key-type-choice) tuple (EKT) makes up the condition to be searched in the ACS. This means Evidence or Reference triples should have previously placed an EKT in the ACS.\r\n- If key verification is successful, then a new ACS entry is added that contains the EKT values as an ECT where the ECT authority includes both the original endorser and the verifier.\r\n- The verifier relies on the root of the certificate path that is provided in $crypto-key-type-choice as the trust anchor. (Note: if a key digest / key-id form of crypto-key-type-choice is used, the verifier will have to do \"best effort\" attempts to find a verifiable credential. Or we restrict the set of crypto-key-type-choice values to some subset). I'm leaning toward best effort rather than the spec having restrictions.\r\n\r\nOther considerations:\r\n- The attest-key-triple doesn't have a way to include authority as part of the condition. This could be a useful addition as it would allow an endorser to specify which RVP (or DICE layer key) it expects would have supplied the original (existential) measurement.\r\n- \r\n- A backwards compatible way to add authorized-by as a matching condition might be:\r\n```\r\nattest-key-triple-record = [\r\n  environment-map\r\n  key-list: [ + $crypto-key-type-choice ]\r\n  ? authorized-by\r\n]\r\n```\r\nIf there is a second key-list entry that has different authority, this can be modeled by using a second attest-key-triple-record.\r\n\r\nNote: to be consistent with measurement-map use of authorized-by we might want:\r\n```\r\nattest-key-triple-record = [\r\n  environment-map\r\n  key-list: [ + $crypto-key-type-choice ]\r\n  ? [ + authorized-by ]\r\n]\r\n```\r\nThe semantics are that there could be multiple entities asserting the EKT, meaning multiple signers of the evidence / reference triples. In practice, this seems unlikely, but it isn't much overhead if added.\r\n\r\n- The structure of the ACS addition (assuming key verification succeeds) would be an ECT where the environment is the EKT.environment-map and the ECT.element-id is omitted (anonymous), the ECT.element-claims.measurement-map.measurement-values-map is the EKT.measurement-map.measurement-values-map containing the key-list.",
          "createdAt": "2024-10-23T16:00:17Z",
          "updatedAt": "2024-10-23T16:16:30Z"
        }
      ]
    },
    {
      "number": 316,
      "id": "I_kwDOH6-tI86ZzO97",
      "title": "linked-tags can represent cycles, but is that always nonsense?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/316",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It doesn't make sense to have a cycle in supplements / replaces relationships, since they are apparently causally ordered.\r\n\r\nSince `$tag-rel-type-choice` is extensible by profiles, do we say that only cycles involving supplements/replaces are invalid and leave the validity of cycles to a profile that extends the relationship enum to decide? Or just disallow cycles entirely? ",
      "createdAt": "2024-10-11T03:33:33Z",
      "updatedAt": "2024-10-11T03:33:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 317,
      "id": "I_kwDOH6-tI86Z3tun",
      "title": "Remove key lookup normative text around key digests",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/317",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": ">  The digest value may be used to find the public key if contained in a lookup table.\r\n\r\nWe've decided that crypto-key-type-choice can only be binary-compared, so lookups are not meaningful to appraisal.",
      "createdAt": "2024-10-11T14:28:41Z",
      "updatedAt": "2024-10-11T16:04:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Key lookup may still be usable for resolving attest-key-triple keys to construct certificate paths. See proposed text in PR #318.",
          "createdAt": "2024-10-11T16:03:59Z",
          "updatedAt": "2024-10-11T16:03:59Z"
        }
      ]
    },
    {
      "number": 319,
      "id": "I_kwDOH6-tI86Z5_JV",
      "title": "Internal representation labels are too cryptic",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/319",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Internal representation labels: `ae`, `rv`, `ev`, `evs` are too cryptic when used in prose. Something easier to read may be better: `evidence`, `reference`, `endorsement`, `endorsement-series`",
      "createdAt": "2024-10-11T20:10:39Z",
      "updatedAt": "2024-10-11T20:10:39Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 320,
      "id": "I_kwDOH6-tI86Z--hU",
      "title": "\"Augmentation using CoMID triples\" and \"Order of triple processing\" misplaced",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/320",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The sections \"Augmentation using CoMID triples\" and \"Order of triple processing\" are currently in Phase 2 (Section 8.4) but are more specific to how non-evidence is supposed to be processed.\r\n\r\nWe don't have \"triples\" in this part of the spec either. We have relations of ECTs, so using \"CoMID triples\" in the section title is confusing.\r\n\r\nI understand that the order of conditional endorsement matching with the base CDDL can be understood as Horn clauses and thus can be understood with the P-complete Boolean Constraint Propagation problem. With profiles, that algorithm is not necessarily complete. Prolog-like unification with cuts could also be encoded, so a Verifier that implements it could diverge on broken/malicious input, for example.\r\n\r\nAny directive with a condition that can include an endorsement is subject to needing a fixed point computation.",
      "createdAt": "2024-10-12T21:24:29Z",
      "updatedAt": "2024-10-16T19:16:46Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 321,
      "id": "I_kwDOH6-tI86Z_DxU",
      "title": "Conditional endorsement series is unsafe",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/321",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The shortcutting semantics is a short form of having multiple regular conditional endorsements that include _negative_ conditions.\r\nThis violates the conditions of safe negation in Datalog (no negation allowed in the head of rules) because it makes the logic inconsistent.\r\n\r\nYou can order your processing such that\r\n\r\n*  the third alternate in a series condition is the first to match and add some endorsement.\r\n* some more endorsements are added\r\n* now the first alternate is the first to match and adds its endorsement.\r\n\r\nWhat if now you reorder your triples such that the endorsements that satisfy the first alternate are added before the series is processed? You have a different result.\r\n\r\n@andrew-draper are there restrictions you can think to add to your use case to restore consistency?",
      "createdAt": "2024-10-12T21:53:41Z",
      "updatedAt": "2024-10-14T21:30:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Any pointers that help to \"see the issue\" in current documents somewhere is useful here, I think (e.g., Andy's use case).",
          "createdAt": "2024-10-14T16:08:22Z",
          "updatedAt": "2024-10-14T16:08:22Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The use cases I'm aware of don't anticipate more than one series match for a given Attester (TE). I think the inconsistency scenario only emerges if there are multiple series tuples that will match for a given TE. Since the series evaluation is within the context of the condition result, there isn't a generalized problem. The unspecified assumption is that only one series tuple can match. \r\n\r\nThis puts the burden on consistency on the shoulders of the triple/rim author. Is that OK?\r\n\r\nIf not, then the normative might change to say that all the series tuples will be evaluated. The trade-off is performance. ",
          "createdAt": "2024-10-14T16:16:45Z",
          "updatedAt": "2024-10-14T16:16:45Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "If there\u2019s never any expectation that more than one case will match, then we should change the rule to be that all series variants are compared with no short-circuiting. That removes negation and should still satisfy the use case, no?\r\n\r\nEdit:yes, agree with Ned on the last point. I don\u2019t want to entrust consistency to the corim writer",
          "createdAt": "2024-10-14T20:31:58Z",
          "updatedAt": "2024-10-14T20:33:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It turns out that order of the series matters for the use case to get the right answer. \r\nIf the series is ordered, say from a..n, and b is the record whose condition matches. If another verifier chose the ordering to be n..a, then records n..b would all match. \r\n\r\nThe use case author is counting on the triple series preserving order. Normally, in CDDL arrays are ordered. In some cases in the CoRIM spec array are overly constrained in that we specified array (aka SEQUENCE), but unordered arrays (SET) is what was intended. \r\n\r\nI think I mischaracterized the consistency proposition when I asked: \"should the Endorser be entrusted with consistency of the Verifier\". A better characterization might be: \"should the Verifier be free to break the CDDL imposed ordering semantics?\"",
          "createdAt": "2024-10-14T21:30:57Z",
          "updatedAt": "2024-10-14T21:30:57Z"
        }
      ]
    },
    {
      "number": 322,
      "id": "I_kwDOH6-tI86aLKUl",
      "title": "Recursion algorithm for processing layered Endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/322",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Conditional endorsements can be written such that the processing of Endorsement A depends on the acceptance of Endorsement B into the ACS. If A is processed before B, then the conditions in A will not be met. \r\n\r\nA recursive algorithm may address this problem. If A is processed before B and A isn't accepted into the ACS, then B is processed. Once B completes, A resumes. This time it completes.\r\n\r\nThere may be other ways to solve this problem. The spec needs to describe at least one viable strategy to both document the potential for inconsistent results, but also to show a viable solution.\r\n\r\nThis probably belongs in \"Ordering of Triple Processing\" section (wherever it gets moved to).",
      "createdAt": "2024-10-14T17:14:51Z",
      "updatedAt": "2024-10-14T23:07:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 324,
      "id": "I_kwDOH6-tI86aNtsX",
      "title": "Section \"Adding to the ACS\" should be moved",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/324",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 8.8 - Adding to the ACS contains two sub-sections of requirements. This is outside of the phase 2, 3, and 4 which describe ACS processing of the various triples. Possibly, requirements sections belong with the ACS internal representation section since requirements are placing constraints on processing steps. Or maybe they belong in Phase 2 ACS initialization?  \r\n\r\nAlternatively, section 8.8 is renamed to \"ACS Augmentation - Phases 2, 3, and 4\" and sections 8.4, 8.5, and 8.6 are moved into section 8.8 as sub-sections following the ACS requirements sections 8.8.1 and 8.8.2. We may want to augment the requirements sections to add something about ACS ending state being consistent across all Verifiers.",
      "createdAt": "2024-10-14T23:42:06Z",
      "updatedAt": "2024-10-14T23:42:06Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 327,
      "id": "I_kwDOH6-tI86afytN",
      "title": "Provide syntactically valid examples in the doc for $crypto-key-type-choice variants",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/327",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "554, 555, 556, 557, etc.",
      "createdAt": "2024-10-16T14:11:22Z",
      "updatedAt": "2024-10-16T14:11:22Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 328,
      "id": "I_kwDOH6-tI86ai2-D",
      "title": "CoSWID triple needs transformation and processing sections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/328",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CoSWID triples `coswid-triple-record` needs a transformation section and possibly a processing section. The transformation section will map contents of a coswid tag to internal representations for evidence, reference, and endorsements. If the mapping comes up with gaps (something that doesn't map) then a processing section may be needed.\r\n\r\nCoSWID field mappings are as follows:\r\npayload-entry : Reference Values\r\nevidence-entry : Evidence\r\nsoftware-meta.activation-status : Evidence? (if so, how should it be reported since concise-evidence omits it)\r\nchannel-type : Endorsement\r\ncolloquial-version : Endorsement\r\ndescription : Endorsement\r\nedition : Endorsement\r\nentitlement-data-required : ??? (feels like policy)\r\nentitlement-key : Endorsement\r\ngenerator : tag info\r\npersistent-id : Should be used in the construction of Environment-maps \r\nproduct : Endorsement\r\nproduct-family : Endorsement\r\nrevision : Endorsement\r\nsummary : Endorsement\r\nunspsc-code : Endorsement\r\nunspsc-version : Endorsement\r\n\r\nExtension to sw meta should describe their internal representation mapping / transformation.\r\n\r\nConcise Swid Tag:\r\nsoftware-name : Endorsement\r\nsoftware-version : Endorsement\r\nversion-scheme : Endorsement\r\nmedia : Endorsement (for example, it may contain a stringified representation of environment-map)\r\n\r\nAll other members of `concise-swid-tag` are tag specific.\r\n",
      "createdAt": "2024-10-16T19:16:05Z",
      "updatedAt": "2024-10-30T16:12:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "What form of evidence is expected for communicating software information in a module at the granularity of CoSWIDs? Is there a real usage of this triple that the spec can reference to point a reader at something plausible?",
          "createdAt": "2024-10-30T16:12:10Z",
          "updatedAt": "2024-10-30T16:12:10Z"
        }
      ]
    },
    {
      "number": 330,
      "id": "I_kwDOH6-tI86ajdco",
      "title": "Transformation and processing sections needed for attest key and identity key triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/330",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also relates to #314 \r\nA transformation section is needed for attest key and identity key triples that describes how attest/identity key triples are transformed into an internal representation.  \r\n\r\nA processing section is needed that describes how the internal representation is processed. For example, it might impact phase 3 where a negative result of the AKT prevents the reference values from being added to the ACS.\r\n\r\nNote: Given verifier behavior differs based on the type of key (identity vs. attest), there needs to be a way to represent the key type across external to internal processing. One approach is to modify the internal representation to include `key-type` info along with the `$crypto-key-type-choice` key.",
      "createdAt": "2024-10-16T20:30:08Z",
      "updatedAt": "2024-11-15T19:25:56Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There is a thread related to the semantics of what it means for a key to belong to an environment. \r\nThe diag snippet below shows a key identifier (e.g., cert path) as a measurement of the environment class-id ending in ...39. This means the key is in the target environment named ...39. Since the private key is a secret the cert / public key serves as its alias. \r\nExample:\r\n```\r\n  / comid.triples / 4 : {\r\n    / reference-triples / 0 : [\r\n      [\r\n        / environment-map / {\r\n          / class / 0 : {\r\n            / class-id / 0 :\r\n              / tagged-uuid-type / 37( h'67b28b6c34cc40a19117ab5b05911e39' )\r\n          }\r\n        },\r\n        [\r\n          / measurement-map / {\r\n            / mkey / 0 : \"thing 2\",\r\n            / mval / 1 : {\r\n              / cryptokeys / 13 : [\r\n                / tagged-pkix-base64-cert-path-type / 556(\"base64_cert_path_X\"),\r\n                / tagged-pkix-base64-cert-path-type / 556(\"base64_cert_path_Y\")\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      ]\r\n    ],\r\n```\r\nThe next snippet shows an identity-triple that matches the keys that were named above as measurements and instructs the verifier to do key verification.\r\n```\r\n    / identity-triples / 2 : [ \r\n      [\r\n        / environment-map / {\r\n          / class / 0 : {\r\n            / class-id / 0 :\r\n              / tagged-uuid-type / 37( h'67b28b6c34cc40a19117ab5b05911e39' )\r\n          }\r\n        },\r\n        / key-list / [\r\n          / tagged-pkix-base64-cert-path-type / 556(\"base64_cert_path_X\"),\r\n          / tagged-pkix-base64-cert-path-type / 556(\"base64_cert_path_Y\")\r\n        ],\r\n        / conditions / {\r\n          / mkey / 0 : \"thing 2\"\r\n        }\r\n      ]\r\n```\r\nIf the private key for base64_cert_path_X was used to authenticate the Attester to the Verifier. The verifier also has PoP that the private key is indeed on the Attester. The above RV claim asserts that the private key is in the environment named ...39.  The identity-key triple is almost a no-op since it did the key verification on key _X already. It just needs to add it to the endorsement record that will be added to the ACS. \r\n\r\nThe Verifier can also check key _Y, but since it wasn't used earlier, it has to do the cert path validation, crl check. It can't do the PoP check unless there the conveyance protocol exposes an interface for that (out of scope for this spec). Note, the Verifier has the option of creating richer endorsements that might indicate the variety of key verifications checks that were applied and the result for each. That might require breaking out each _X and _Y keys into separate triples entries so they can have different verifier asserted key verification results (or the verifier might just generate an audit log with that information in it). ",
          "createdAt": "2024-11-13T23:20:48Z",
          "updatedAt": "2024-11-13T23:20:48Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "So identity-triple and attest-key-triple both get processed the same way (perform checks before associating keys to environment), and there _isn't_ any requirement to verify a certificate path in cryptokeys if in evidence, since the claim itself means the keys have been verified by the attester? Ah, and that's why the Verifier is the authority when processing identity-triple and attest-key-triple.\r\n\r\nBut after translating both of these triples to the same internal representation, for what reason are there two triples for the same thing? It looks like they imply some meaning, but if you drop that meaning in the transformation prior to giving the ACS to your policy engine, I don't know what the point is of keeping them separate.",
          "createdAt": "2024-11-14T01:38:12Z",
          "updatedAt": "2024-11-14T01:38:12Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I don't know what the point is of keeping them separate.\r\n\r\nDICE certs and TPM keys distinguish between keys intended for use to sign evidence vs. signing an authentication challenge. The Verifier presumably will check this. \r\n\r\nWe talked about merging the triples, but that would require parameterizing it in some way. Since the convention has been that the predicate part is implicit (not in CDDL) if there are semantic differences that would require parameterization, we decided to avoid that by creating a different triple.\r\n\r\nHowever, if the triples are restricted to using crypto-key-type-choice forms that have certs (or require the verifier to do path construction), then the key type is in the certificate (or the key object itself). It doesn't need to be a parameter of the triple (I don't think?). The wording in the transformation and processing sections imply that the key type / usage restrictions are part of the crypto-key-type-choice object already as the internal representation doesn't parameterize on key type / usage.\r\n\r\nAssuming others agree, I think the key verify triples could be merged.",
          "createdAt": "2024-11-15T19:25:55Z",
          "updatedAt": "2024-11-15T19:25:55Z"
        }
      ]
    },
    {
      "number": 333,
      "id": "I_kwDOH6-tI86bf5qP",
      "title": "Nonsense: corim = tagged extensible type choice of tags ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/333",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to remove the extensibility of $concise-rim-type-choice since extensibility is driven by profile, but profile isn't known at this point.\r\n\r\nWe also don't need to tag the type choice. Let's release the 500 tag?\r\n\r\n`corim = concise-rim-type-choice`",
      "createdAt": "2024-10-23T14:31:01Z",
      "updatedAt": "2024-10-30T15:24:53Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We need to remove the extensibility of $concise-rim-type-choice since extensibility is driven by profile, but profile isn't known at this point.\r\n\r\nIndeed, that `$` looks like a typo to me.  `$concise-rim-type-choice` should be a closed type choice which, per [our typographical conventions](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-3), should read `concise-rim-type-choice`.\r\n\r\n> We also don't need to tag the type choice. Let's release the 500 tag?\r\n> \r\n> `corim = concise-rim-type-choice`\r\n\r\nThe two-level tagging system effectively smells like overengineering.\r\n\r\nI don't recall why we originally decided to use this tagging scheme.\r\n\r\nWhile I am not opposed to dropping it, this could produce wire-image incompatibility with the TCG's spec, which we agreed must be avoided.\r\n\r\n",
          "createdAt": "2024-10-30T09:12:24Z",
          "updatedAt": "2024-10-30T09:12:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "TCG Endorsement spec defines:\r\n```\r\ncorim = #6.500($concise-reference-integrity-manifest-type-choice)\r\ntagged-corim-map = #6.501(corim-map)\r\n$concise-reference-integrity-manifest-type-choice /= tagged-corim-map\r\n$concise-reference-integrity-manifest-type-choice /= #6.502(signed-corim)\r\n\r\nCOSE-Sign1-corim = [\r\n  protected: bstr .cbor protected-corim-header-map\r\n  unprotected: unprotected-corim-header-map\r\n  payload: bstr .cbor tagged-corim-map\r\n  signature: bstr\r\n]\r\n\r\n```\r\nThe TCG is doing errata for this spec. Maybe it makes sense to influence this?\r\nBut it would need to happen quickly and be minimally invasive.",
          "createdAt": "2024-10-30T12:25:04Z",
          "updatedAt": "2024-10-30T12:25:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> TCG Endorsement spec defines:\r\n> \r\n> ```\r\n> corim = #6.500($concise-reference-integrity-manifest-type-choice)\r\n> tagged-corim-map = #6.501(corim-map)\r\n> $concise-reference-integrity-manifest-type-choice /= tagged-corim-map\r\n> $concise-reference-integrity-manifest-type-choice /= #6.502(signed-corim)\r\n> \r\n> COSE-Sign1-corim = [\r\n>   protected: bstr .cbor protected-corim-header-map\r\n>   unprotected: unprotected-corim-header-map\r\n>   payload: bstr .cbor tagged-corim-map\r\n>   signature: bstr\r\n> ]\r\n> ```\r\n> \r\n> The TCG is doing errata for this spec. Maybe it makes sense to influence this? But it would need to happen quickly and be minimally invasive.\r\n\r\nThen I'd do:\r\n\r\n```\r\ncorim = tagged-corim-map / tagged-cose-sign1-corim\r\n```\r\n\r\nwhich uses 501 for the unprotected and 18 for the sign1-protected `corim-map`.\r\n",
          "createdAt": "2024-10-30T12:57:52Z",
          "updatedAt": "2024-10-30T12:57:52Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> The TCG is doing errata for this spec. Maybe it makes sense to influence this? But it would need to happen quickly and be minimally invasive.\r\n\r\nWhich working group?\r\n\r\n(NOTE by thofos: I hit \"edit\" instead of \"quote reply\", apologies!)",
          "createdAt": "2024-10-30T13:28:24Z",
          "updatedAt": "2024-10-30T13:37:19Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > The TCG is doing errata for this spec. Maybe it makes sense to influence this? But it would need to happen quickly and be minimally invasive.\r\n> \r\n> Which working group?\r\n\r\nShould be DICE.",
          "createdAt": "2024-10-30T13:35:13Z",
          "updatedAt": "2024-10-30T13:35:13Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Then I'd do:\r\n> \r\n> ```\r\n> corim = tagged-corim-map / tagged-cose-sign1-corim\r\n> ```\r\n\r\nThe TCG spec doesn't define `tagged-cose-sign1-corim` only `signed-corim = #6.18(COSE-Sign1-corim)`\r\nBut I think it is effectively the same thing. Essentially, the updated TCG spec would look like:\r\n```\r\ncorim = concise-rim-type-choice\r\ntagged-corim-map = #6.501(corim-map)\r\nconcise-rim-type-choice /= tagged-corim-map\r\nconcise-rim-type-choice /= #6.502(signed-corim)\r\n```\r\nIt would be an extension to add:\r\n```\r\nconcise-rim-type-choice /= signed-corim\r\n```",
          "createdAt": "2024-10-30T15:24:52Z",
          "updatedAt": "2024-10-30T15:24:52Z"
        }
      ]
    },
    {
      "number": 334,
      "id": "I_kwDOH6-tI86bf__A",
      "title": "\"Claim name\" needs to include the mkey",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/334",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #329 references the name of a claim but misses the aspect of the mkey.",
      "createdAt": "2024-10-23T14:37:18Z",
      "updatedAt": "2024-10-23T14:37:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 335,
      "id": "I_kwDOH6-tI86bgBRj",
      "title": "Conditional endorsement triple processing order \"is important\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/335",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The order should not be important so long as additions are followed by triple processing that has a condition that could match it. We don\u2019t want to impose other order dependencies unless you need to stratify triple processing more explicitly.\r\n\r\nGiven that we\u2019re defining a processing order for base triples, it should also be allowable for profiles to specify when their triples get processed if indeed order is important. Will they always be after the base triples, or can they be specified to happen at any time?",
      "createdAt": "2024-10-23T14:39:24Z",
      "updatedAt": "2024-10-23T22:24:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "See also #321",
          "createdAt": "2024-10-23T14:43:01Z",
          "updatedAt": "2024-10-23T14:43:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">Given that we\u2019re defining a processing order for base triples, it should also be allowable for profiles to specify when their triples get processed if indeed order is important. Will they always be after the base triples, or can they be specified to happen at any time?\r\n\r\nEvidence is the only CM type that doesn't require a `condition`. All the other CM types presume some sort of condition. Even the optional stages imply some sort of ACS condition has to exist before the stage can be processed.\r\n\r\nProfiles shouldn't, IMO, be permitted to change the basic assumption that an ACS condition has to be satisfied as a pre-condition to processing a profile defined triple. The spec normative claims that the ACS in in a consistent state at the end of phase 4. If a profile is permitted to inject itself before phase 4 it should be held to the same standard. But possibly, the spec should not permit this. Essentially, we would be saying profile defined phases are always optional and hence would be applied when the other optional phases are performed. I'm not sure I have an opinion about the ordering of optional phases. Ideally, that wouldn't matter, but if it does, it would be OK for the profile to say which other optional phases should go first.  At least that is my initial thinking.",
          "createdAt": "2024-10-23T22:24:10Z",
          "updatedAt": "2024-10-23T22:24:10Z"
        }
      ]
    },
    {
      "number": 336,
      "id": "I_kwDOH6-tI86bgDGY",
      "title": "\"Reference values [..] matched against the ACS, as per the appraisal policy\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/336",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reference value matching semantics is defined entirely by the CoRIM specification (including added semantics by profile) is it not?\r\n\r\nPolicy can drop reference values but not change semantics.",
      "createdAt": "2024-10-23T14:41:54Z",
      "updatedAt": "2024-10-23T14:41:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 339,
      "id": "I_kwDOH6-tI86bv15y",
      "title": "Cleanup: drop #6.500 and #6.502",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/339",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The 500 tag is redundant with 501 and 502. The 502 tag is redundant with the COSE tags since the content-type is the disambiguating piece. It's kind of annoying to get a cose-signed corim that you can't just parse as a cose object because of irrelevant tags.",
      "createdAt": "2024-10-25T03:57:21Z",
      "updatedAt": "2024-10-28T20:26:47Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I wouldn't drop 500 and 502 since there are other contexts besides COSE/JOSE that carry corim. Rather, it should be possible to use the untagged variant if that makes the most sense.\r\nThere may be cases where there isn't a media-type definition for the various possible $concise-rim-type-choice variants, hence having the tagged alternative might be needed.\r\n\r\nWe discussed doing something like:\r\n```\r\ncorim = tagged-concise-rim-type-choice / $concise-rim-type-choice\r\n$concise-rim-type-choice /= tagged-corim-map\r\n$concise-rim-type-choice /= tagged-signed-corim\r\n$concise-rim-type-choice /= corim-map\r\n$concise-rim-type-choice /= signed-corim\r\n\r\ntagged-concise-rim-type-choice = #6.500($concise-rim-type-choice)\r\ntagged-corim-map = #6.501(corim-map)\r\ntagged-signed-corim = #6.502(signed-corim)\r\nsigned-corim = #6.18(COSE-Sign1-corim)\r\n\r\nCOSE-Sign1-corim = [\r\n  protected: bstr .cbor protected-corim-header-map\r\n  unprotected: unprotected-corim-header-map\r\n  payload: bstr .cbor (tagged-corim-map / corim-map)\r\n  signature: bstr\r\n]\r\n```\r\nCOSE payload as: `payload: bstr .cbor (tagged-corim-map / corim-map)` allows untagged form to be used if media type is supplied and sufficient. \r\n\r\nIt is unclear if media-types / CFs will have enough specificity to disambiguate the comid \"tag\" level thereby making the CBOR tags redundant but if so, we could define untagged variants.\r\n```\r\n$concise-tag-type-choice /= concise-swid-tag\r\n$concise-tag-type-choice /= concise-mid-tag\r\n$concise-tag-type-choice /= concise-bom-tag\r\n\r\n$concise-tag-type-choice /= tagged-concise-swid-tag\r\n$concise-tag-type-choice /= tagged-concise-mid-tag\r\n$concise-tag-type-choice /= tagged-concise-bom-tag\r\ntagged-concise-swid-tag = #6.505(bytes .cbor concise-swid-tag)\r\ntagged-concise-mid-tag = #6.506(bytes .cbor concise-mid-tag)\r\ntagged-concise-bom-tag = #6.508(bytes .cbor concise-bom-tag)\r\n```\r\n\r\n",
          "createdAt": "2024-10-25T16:22:00Z",
          "updatedAt": "2024-10-25T16:22:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The extensibility of the $concise-rim-type-choice doesn\u2019t make sense though. It\u2019s signed or unsigned. The signing envelope is cose. I\u2019m not saying to drop 501 for the case where you want to send around an unsigned corim.",
          "createdAt": "2024-10-26T06:18:47Z",
          "updatedAt": "2024-10-26T06:18:47Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "If you're saying you'd like #6.500 to be an arbitrary \"treat my contents as a corim\" without any further information, I have a problem with that. You don't learn enough about the value to interpret the contents effectively.\r\n\r\nIf #6.502 is for signing envelopes that are more ambiguous to CBOR, then I'd like that better explained in the text, including the need to use #6.501 for the payload if there is no concept like a protected header to disambiguate the context of the signature. I'd also like to recommend that #6.502 NOT be used for COSE representations.",
          "createdAt": "2024-10-28T20:26:45Z",
          "updatedAt": "2024-10-28T20:26:45Z"
        }
      ]
    },
    {
      "number": 340,
      "id": "I_kwDOH6-tI86b17S6",
      "title": "accepted-claims-set.cddl can be removed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/340",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The set of intrep-*.cddl files replaces the need for accepted-claims-set.cddl.",
      "createdAt": "2024-10-25T16:41:04Z",
      "updatedAt": "2024-10-25T16:41:04Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 342,
      "id": "I_kwDOH6-tI86cbtSM",
      "title": "Lack of clarity on Authority around Unsigned CoRIM Map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/342",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Current specification (06) has no clear way of determining the authority around unsigned corim map",
      "createdAt": "2024-10-30T15:38:47Z",
      "updatedAt": "2024-10-30T17:08:15Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Current specification (06) has no clear way of determining the authority around unsigned corim map\r\n\r\nThe idea behind unsigned-corim-map is that a conveyance protocol or some outer wrapper layer (e.g., CWT) supplies the signature. The verifier will know what context supplied the signature. It may not be something the CoRIM spec can anticipate.",
          "createdAt": "2024-10-30T15:44:01Z",
          "updatedAt": "2024-10-30T15:44:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "There should be a clarifying text in the CoRIM which should state, that authority is out of band for the case of unsigned-corim-map, simply to make the document look more complete!",
          "createdAt": "2024-10-30T17:08:13Z",
          "updatedAt": "2024-10-30T17:08:13Z"
        }
      ]
    },
    {
      "number": 344,
      "id": "I_kwDOH6-tI86ctNkY",
      "title": "TN function CBOR tags",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/344",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC9277 defines TN function for generating CBOR tags from CF ID. The IANA sections don't clearly identify the corim entry point such that if a CBOR tag is generated, what CDDL/CBOR is the next byte following the tag value.\r\n\r\nFor example, a generated tag might replace #6.502.",
      "createdAt": "2024-11-01T13:58:56Z",
      "updatedAt": "2024-11-01T13:58:56Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 345,
      "id": "I_kwDOH6-tI86dSCTx",
      "title": "Use consistent field projection syntax",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/345",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We have `a`/`b` in some places and `a`.`b` in others. Since '.' is more commonly used syntax for projection, let's stick to that.",
      "createdAt": "2024-11-06T17:26:54Z",
      "updatedAt": "2024-11-06T17:26:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 347,
      "id": "I_kwDOH6-tI86d93Bk",
      "title": "Ambiguous use of term `state-triples` in ACS construction",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/347",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In the Verifier processing,the draft text states that Evidence is represented as `state-triples`\r\n\r\nHowever, there is no internal representation expressing Evidence as `state-triples`.\r\n\r\nThis part of the text needs to be re-visited..",
      "createdAt": "2024-11-11T19:45:55Z",
      "updatedAt": "2024-11-11T19:46:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 348,
      "id": "I_kwDOH6-tI86eNC0U",
      "title": "Domain membership wording looks wrong",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/348",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> Endorsed environments ([Section 5.1.4.3](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#sec-comid-triple-endval)) membership is conditional upon successful matching of Reference Values ([Section 5.1.4.2](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#sec-comid-triple-refval)) to Evidence.\r\n\r\nI don't think we have a sense of which reference values an environment is supposed to match before suggesting that its within a particular trust domain. We got rid of the wording of matching reference values for endorsed triples for this reason.",
      "createdAt": "2024-11-13T05:22:46Z",
      "updatedAt": "2024-11-13T05:22:46Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOH6-tI84-PkEB",
      "title": "hook the cddl assemble & test machinery into the default build",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/1",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-09-01T21:54:48Z",
      "updatedAt": "2022-09-06T07:36:46Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "5ef5d6c0b5ff0af372141f33b4977a6a41cbc92a",
      "headRepository": "thomas-fossati/draft-ietf-rats-corim",
      "headRefName": "main",
      "headRefOid": "80e05c264e541fb8dd081b53478f80af8b9bf005",
      "closedAt": "2022-09-06T07:36:46Z",
      "mergedAt": "2022-09-06T07:36:46Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "0f586969564e4e6ea93295416fb9eb742e4a73dc"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith the build is OK locally, but there are troubles with the CI as you can see from the \"checks\" menu.  Apparently the ruby environment in the Docker image does not allow installing the json package that cddl and cbor-diag depend on.",
          "createdAt": "2022-09-01T22:15:46Z",
          "updatedAt": "2022-09-01T22:15:46Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "passes my local tool-chain. As an author please try to branch instead of forking. That keeps my management overhead lower ;-)",
          "createdAt": "2022-09-06T07:31:26Z",
          "updatedAt": "2022-09-06T07:31:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85BNs8Z",
          "commit": {
            "abbreviatedOid": "e1152e3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-01T21:59:58Z",
          "updatedAt": "2022-09-01T21:59:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85BNxyp",
          "commit": {
            "abbreviatedOid": "0fc89ea"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-01T22:30:01Z",
          "updatedAt": "2022-09-01T22:30:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85BZBG7",
          "commit": {
            "abbreviatedOid": "80e05c2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "could worse. thx!",
          "createdAt": "2022-09-06T07:31:55Z",
          "updatedAt": "2022-09-06T07:31:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOH6-tI84-fyXw",
      "title": "Ci fixes",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/3",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-07T09:44:28Z",
      "updatedAt": "2022-09-07T11:20:49Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "0f586969564e4e6ea93295416fb9eb742e4a73dc",
      "headRepository": "martinthomson/draft-ietf-rats-corim",
      "headRefName": "ci-fixes",
      "headRefOid": "182144786a63ea05b1bdab3d081c443172ffce2d",
      "closedAt": "2022-09-07T11:20:49Z",
      "mergedAt": "2022-09-07T11:20:49Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "003249ffe067e6c14e4ea344be4709cc7e7b29aa"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "PR_kwDOH6-tI84_gzAY",
      "title": "Update draft-ietf-rats-corim.md",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/19",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updated refs to the issues post migration from the individual I-D repo.",
      "createdAt": "2022-09-23T17:01:56Z",
      "updatedAt": "2022-10-06T13:05:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "003249ffe067e6c14e4ea344be4709cc7e7b29aa",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "update-issues",
      "headRefOid": "c544c7ca7e9ce4e1e1f5b45286593a1b779c67b9",
      "closedAt": "2022-10-06T13:05:55Z",
      "mergedAt": "2022-10-06T13:05:54Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "b99d9ae5d1486ae32cea5471bd08b3c9af2f7d4e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85CsYKl",
          "commit": {
            "abbreviatedOid": "c544c7c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-23T19:01:47Z",
          "updatedAt": "2022-09-23T19:01:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85Dh7T4",
          "commit": {
            "abbreviatedOid": "c544c7c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-06T13:05:23Z",
          "updatedAt": "2022-10-06T13:05:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOH6-tI85AJ0R5",
      "title": "Update measurement-map.cddl",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/22",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Add 'authorized-by' field.",
      "createdAt": "2022-10-04T17:33:15Z",
      "updatedAt": "2022-10-04T18:35:40Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "003249ffe067e6c14e4ea344be4709cc7e7b29aa",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "20-measurement-authorization-support",
      "headRefOid": "96c9614df726c9e8a5bc3a731dba1049b24030d7",
      "closedAt": "2022-10-04T18:35:40Z",
      "mergedAt": "2022-10-04T18:35:40Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "539d53fc1e113339f7bf6673b2be56bb7a052dda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85DYJEa",
          "commit": {
            "abbreviatedOid": "96c9614"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2022-10-04T18:01:48Z",
          "updatedAt": "2022-10-04T18:01:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDOH6-tI85AKuh4",
      "title": "Reference endorsed branch",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/23",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "wontfix"
      ],
      "body": "created branch to define reference-endorsed-triples ",
      "createdAt": "2022-10-04T22:01:22Z",
      "updatedAt": "2023-02-01T23:48:12Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "539d53fc1e113339f7bf6673b2be56bb7a052dda",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "reference-endorsed-branch",
      "headRefOid": "d4de1a9082c467a6db7f4544a90dc87f1ea5faf1",
      "closedAt": "2023-02-01T23:48:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR is superseded by PR#36 ",
          "createdAt": "2022-12-07T22:37:07Z",
          "updatedAt": "2022-12-07T22:37:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "closed by PR #49 ",
          "createdAt": "2023-02-01T23:48:11Z",
          "updatedAt": "2023-02-01T23:48:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85FfKsC",
          "commit": {
            "abbreviatedOid": "d4de1a9"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-02T18:23:52Z",
          "updatedAt": "2022-11-02T18:23:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Propose to add support of time series in this new reference-endorsed-triple-record:\r\n\r\nreference-endorsed-triple-record = [\r\nenvironment-map ; target environment\r\n[ * reference-endorsed-map ] ; multi-valued list, which can be an empty list\r\n? [ + reference-endorsed-map ] ; If this second list is present, it contains a time series of reference-endorsed-maps\r\n]\r\n\r\nIf each entry in a time series should be a multi-valued list, then the definition will be:\r\n\r\nreference-endorsed-triple-record = [\r\nenvironment-map ; target environment\r\n[ * reference-endorsed-map ] ; multi-valued list, which can be an empty list\r\n? [ + [ + reference-endorsed-map ] ] ; If this second list is present, it contains a time series of reference-endorsed-map lists.\r\n]\r\n",
              "createdAt": "2022-11-02T18:23:53Z",
              "updatedAt": "2022-11-02T18:23:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOH6-tI85DlQcS",
      "title": "remove autogenerated files",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/25",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-11-23T17:18:41Z",
      "updatedAt": "2022-11-23T19:19:36Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "b99d9ae5d1486ae32cea5471bd08b3c9af2f7d4e",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "remove-autogen",
      "headRefOid": "dfc851b7ec7fe9662166a4a6029abbdc9a747ecf",
      "closedAt": "2022-11-23T17:21:44Z",
      "mergedAt": "2022-11-23T17:21:44Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "93aa69fafc71fea95005f80e508c0f35e1275868"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Should the examples be updated too? This change will break working examples.",
          "createdAt": "2022-11-23T17:45:14Z",
          "updatedAt": "2022-11-23T17:45:14Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Should the examples be updated too? This change will break working examples.\r\n\r\nmmm in theory it shouldn't: the examples Makefile targets are predicated on the existence of the autogen files.  Can you reproduce the problem?\r\n",
          "createdAt": "2022-11-23T18:23:24Z",
          "updatedAt": "2022-11-23T18:23:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Can you reproduce the problem?\r\n\r\nIn the example cbor diag below from (https://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/main/cddl/examples/comid-1.diag), the array at  `/ measurement-map / [ {` and at the end  `} ]` should be removed since the array was removed from the triple definition.\r\n```\r\n},\r\n      / measurement-map / [ {\r\n        / comid.mval / 1 : {\r\n          / comid.ver / 0 : {\r\n            / comid.version / 0 : \"1.0.0\",\r\n            / comid.version-scheme / 1 : 16384 / semver /\r\n          },\r\n          / comid.digests / 2 : [ [\r\n            / hash-alg-id / 1, / sha256 /\r\n            / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n          ] ]\r\n        }\r\n      } ]\r\n```",
          "createdAt": "2022-11-23T19:19:36Z",
          "updatedAt": "2022-11-23T19:19:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85HDR9H",
          "commit": {
            "abbreviatedOid": "dfc851b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2022-11-23T17:21:11Z",
          "updatedAt": "2022-11-23T17:21:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDOH6-tI85DlSw_",
      "title": "BEST PR EVER: allow one measurement-map only in RVs and EVs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/26",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed in our call today.\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-11-23T17:25:47Z",
      "updatedAt": "2022-11-24T11:29:45Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "93aa69fafc71fea95005f80e508c0f35e1275868",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "drop-multi-measurements",
      "headRefOid": "d0a254a54aafe5eaf0abd1c0fef998c3fb6cd441",
      "closedAt": "2022-11-24T11:29:41Z",
      "mergedAt": "2022-11-24T11:29:41Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d0514fcb2fc433a1d8f6c4d6fe0f9aba2ea9cf0b"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "_BEST PR EVER to review:_",
          "createdAt": "2022-11-23T17:29:15Z",
          "updatedAt": "2022-11-23T17:29:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Copying misdirected conversation from PR #25:\r\n\r\nIn the example cbor diag below from (https://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/main/cddl/examples/comid-1.diag), the array at `/ measurement-map / [ {` and at the end `} ]` should be removed since the array was removed from the triple definition.\r\n\r\n```\r\n},\r\n      / measurement-map / [ {\r\n        / comid.mval / 1 : {\r\n          / comid.ver / 0 : {\r\n            / comid.version / 0 : \"1.0.0\",\r\n            / comid.version-scheme / 1 : 16384 / semver /\r\n          },\r\n          / comid.digests / 2 : [ [\r\n            / hash-alg-id / 1, / sha256 /\r\n            / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n          ] ]\r\n        }\r\n      } ]\r\n```",
          "createdAt": "2022-11-23T19:26:22Z",
          "updatedAt": "2022-11-23T19:27:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Copying misdirected conversation from PR #25:\r\n> \r\n> In the example cbor diag below from (https://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/main/cddl/examples/comid-1.diag), the array at `/ measurement-map / [ {` and at the end `} ]` should be removed since the array was removed from the triple definition.\r\n> \r\n> ```\r\n> },\r\n>       / measurement-map / [ {\r\n>         / comid.mval / 1 : {\r\n>           / comid.ver / 0 : {\r\n>             / comid.version / 0 : \"1.0.0\",\r\n>             / comid.version-scheme / 1 : 16384 / semver /\r\n>           },\r\n>           / comid.digests / 2 : [ [\r\n>             / hash-alg-id / 1, / sha256 /\r\n>             / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n>           ] ]\r\n>         }\r\n>       } ]\r\n> ```\r\n\r\nspot on!",
          "createdAt": "2022-11-23T21:08:05Z",
          "updatedAt": "2022-11-23T21:08:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85HDUiq",
          "commit": {
            "abbreviatedOid": "a9a0cf4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2022-11-23T17:29:33Z",
          "updatedAt": "2022-11-23T17:29:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85HDXxQ",
          "commit": {
            "abbreviatedOid": "a9a0cf4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-23T17:40:34Z",
          "updatedAt": "2022-11-23T17:40:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDOH6-tI85DrIbJ",
      "title": "fix bad ref",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/28",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-11-24T22:49:27Z",
      "updatedAt": "2022-12-05T18:23:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d0514fcb2fc433a1d8f6c4d6fe0f9aba2ea9cf0b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "fix-wrong-ref",
      "headRefOid": "d1ddab4c5a09e43b01ac0983c455cd1e92b1650e",
      "closedAt": "2022-12-05T18:23:03Z",
      "mergedAt": "2022-12-05T18:23:03Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "cd6cd96f3a2e73bcd109e5c5db6374133c643e85"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85H0uPo",
          "commit": {
            "abbreviatedOid": "d1ddab4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T17:56:31Z",
          "updatedAt": "2022-12-05T17:56:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOH6-tI85EstJq",
      "title": "Conditional reference series triple record",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/36",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "more discussion needed"
      ],
      "body": "Added conditional-reference-series-triples extension with test case.",
      "createdAt": "2022-12-07T22:35:10Z",
      "updatedAt": "2022-12-08T18:15:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "cd6cd96f3a2e73bcd109e5c5db6374133c643e85",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "conditional-reference-series-triple-record",
      "headRefOid": "0ca34977253e07c61d810277821c875bde797e93",
      "closedAt": "2022-12-08T18:05:29Z",
      "mergedAt": "2022-12-08T18:05:29Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "2f807a032cfed2b37ee07c9aa19ac62a62555736"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is it OK to merge this PR?",
          "createdAt": "2022-12-08T17:14:45Z",
          "updatedAt": "2022-12-08T17:14:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it OK to merge this PR?\r\n\r\nThe CDDL looks good, but I am slightly confused by the lack of accompanying prose in the draft.  I thought this was a \"draft PR\" rather than one ready to ship.",
          "createdAt": "2022-12-08T17:46:54Z",
          "updatedAt": "2022-12-08T17:46:54Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">> Is it OK to merge this PR?\r\n> \r\n> The CDDL looks good, but I am slightly confused by the lack of accompanying prose in the draft. I thought this was a \"draft PR\" rather than one ready to ship.\r\n\r\nThis PR is only aimed at the CDDL another PR is needed that includes prose for the I-D.",
          "createdAt": "2022-12-08T17:49:59Z",
          "updatedAt": "2022-12-08T17:49:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> This PR is only aimed at the CDDL another PR is needed that includes prose for the I-D.\r\n\r\nThe subsequent PR will need to also change (slightly) the content of this one, in order to comply with the presentation style of the document.",
          "createdAt": "2022-12-08T17:54:04Z",
          "updatedAt": "2022-12-08T17:54:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> The subsequent PR will need to also change (slightly) the content of this one, in order to comply with the presentation style of the document.\r\n\r\n\r\n\r\n> > This PR is only aimed at the CDDL another PR is needed that includes prose for the I-D.\r\n> \r\n> The subsequent PR will need to also change (slightly) the content of this one, in order to comply with the presentation style of the document.\r\n\r\nCan you suggest how it will be changed and where in the I-D the prose should appear?",
          "createdAt": "2022-12-08T17:58:34Z",
          "updatedAt": "2022-12-08T17:58:34Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "it's a compromise. not great, but not a blocker ",
          "createdAt": "2022-12-08T18:15:06Z",
          "updatedAt": "2022-12-08T18:15:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85IJ2Wz",
          "commit": {
            "abbreviatedOid": "0ca3497"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I'm OK with this, as long as we mark it explicitly with \"needs more discussion\" because of its borderline nature.",
          "createdAt": "2022-12-08T18:04:50Z",
          "updatedAt": "2022-12-08T18:04:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDOH6-tI85HoMeg",
      "title": "BOM sketch",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/41",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "(BOM lifecycle linking still missing)\r\n\r\nFixes #40 \r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>\r\nSigned-off-by: Yogesh Deshpande <yogesh.deshpande@arm.com>",
      "createdAt": "2023-01-18T13:54:59Z",
      "updatedAt": "2023-02-04T21:35:13Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "2f807a032cfed2b37ee07c9aa19ac62a62555736",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "bom",
      "headRefOid": "a5638b2bc323a98ae18cf5b553395ac40d7a7bbb",
      "closedAt": "2023-02-04T21:35:09Z",
      "mergedAt": "2023-02-04T21:35:09Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "7dcf7e5639072b7b76a2178c1aea39d76b33b7ce"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am okay with omitting horizontal linking as discussed in #40",
          "createdAt": "2023-02-02T18:14:24Z",
          "updatedAt": "2023-02-02T18:14:24Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am okay with omitting horizontal linking as discussed in #40\r\n\r\nCan I merge it then?  I'd need an approval from you lot :)",
          "createdAt": "2023-02-04T11:47:12Z",
          "updatedAt": "2023-02-04T11:47:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85LrMfM",
          "commit": {
            "abbreviatedOid": "7a224a0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-25T15:49:05Z",
          "updatedAt": "2023-01-25T15:49:06Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "should add extension point here",
              "createdAt": "2023-01-25T15:49:05Z",
              "updatedAt": "2023-01-25T15:49:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85LreRO",
          "commit": {
            "abbreviatedOid": "7a224a0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-25T16:27:12Z",
          "updatedAt": "2023-01-25T16:27:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "done in [25a1738](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/41/commits/25a1738c05d62395e46c5715d472644d21c5a104)\r\n",
              "createdAt": "2023-01-25T16:27:13Z",
              "updatedAt": "2023-01-25T16:27:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Lre_-",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-25T16:28:18Z",
          "updatedAt": "2023-01-25T16:40:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Should expand the BOM acronym before using the acronym.\r\nAlso, wording should be more clear that the `tags-list` in the `concise-bom-tag` behaves like a signaling mechanism from a product vendor to a Verifier that _activates_ the tags in `tags-list` for use in an Evidence appraisal process.",
              "createdAt": "2023-01-25T16:28:18Z",
              "updatedAt": "2023-01-25T16:40:01Z"
            },
            {
              "originalPosition": 10,
              "body": "There should be normative language surrounding the scope of the activation. Possibly: All tags listed in `tags-list` MUST be activated or no tags are activated.",
              "createdAt": "2023-01-25T16:37:07Z",
              "updatedAt": "2023-01-25T16:40:01Z"
            },
            {
              "originalPosition": 22,
              "body": "Maybe the normative statements should follow (not precede) the description of the `concise-bom-tag` structure?",
              "createdAt": "2023-01-25T16:38:28Z",
              "updatedAt": "2023-01-25T16:40:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Lro0p",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-25T16:47:07Z",
          "updatedAt": "2023-01-25T16:47:08Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Also we must say here that the tag_list comprises a list of tags (CoMID tags and/or CoSWID tags) that were successfully submitted to a verifier in past.",
              "createdAt": "2023-01-25T16:47:07Z",
              "updatedAt": "2023-01-25T16:47:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85LrvBm",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-25T17:02:17Z",
          "updatedAt": "2023-01-25T17:02:18Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "not necessarily, they could be shipped contextually.  So the \"present\" also work :-)",
              "createdAt": "2023-01-25T17:02:17Z",
              "updatedAt": "2023-01-25T17:02:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85MQArt",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-01T14:48:19Z",
          "updatedAt": "2023-02-01T14:48:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "done in a5638b2",
              "createdAt": "2023-02-01T14:48:19Z",
              "updatedAt": "2023-02-01T14:48:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85MQAuk",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-01T14:48:25Z",
          "updatedAt": "2023-02-01T14:48:26Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "done in a5638b2",
              "createdAt": "2023-02-01T14:48:25Z",
              "updatedAt": "2023-02-01T14:48:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85MQAyl",
          "commit": {
            "abbreviatedOid": "25a1738"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-01T14:48:32Z",
          "updatedAt": "2023-02-01T14:48:33Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "done in a5638b2",
              "createdAt": "2023-02-01T14:48:32Z",
              "updatedAt": "2023-02-01T14:48:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mie36",
          "commit": {
            "abbreviatedOid": "a5638b2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-04T19:28:35Z",
          "updatedAt": "2023-02-04T19:28:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "PR_kwDOH6-tI85JDo94",
      "title": "Cond ref series triple branch",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/49",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added section for conditional reference series triple.",
      "createdAt": "2023-02-01T23:44:12Z",
      "updatedAt": "2023-03-03T23:17:50Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "2f807a032cfed2b37ee07c9aa19ac62a62555736",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "cond-ref-series-triple-branch",
      "headRefOid": "90b779f8f51b0c243860aa1d8a9a717d18625369",
      "closedAt": "2023-03-03T23:17:50Z",
      "mergedAt": "2023-03-03T23:17:50Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "33590f4072cac8b1a4b6740a684f929ec23413c5"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Closes issue #44.",
          "createdAt": "2023-02-01T23:45:34Z",
          "updatedAt": "2023-02-01T23:45:34Z"
        },
        {
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "body": "The latest commits look good to me.",
          "createdAt": "2023-02-08T21:31:08Z",
          "updatedAt": "2023-02-08T21:31:08Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I feel the proposed changes are far too complex to be part of base specification:\r\n\r\nWhat we can have is a simple statement as under:\r\n\r\n; A supply chain actor would like to provision additional reference values or endorsed values,\r\n; based on the simple condition that the subject specified using the given env and ref values\r\n; matches the criterion specified by the Verifier\r\n; Then we should leave it to individual schemes/profiles, how individual verifiers want to accept the series \r\n; of reference and/or endorsed values `specified within the object` of the triple\r\nbased on their specific implementations\r\n\r\nconditional-reference-series-triple-record = [\r\n  ; triple subject\r\n  [ environment-map,\r\n    measurement-map ; initial reference values\r\n  ] \r\n  ; triple object - series of ref-end values\r\n  [ + ref-end-series-map ] ; not sure we need a series here as well, but retaining to clarify?\r\n]\r\n\r\nref-end-series-map = non-emtpy <{\r\n  ? [+measurement-values-map] ; reference values\r\n  ? [+measurement-values-map] ; endorsed values\r\n}>\r\n\r\n",
          "createdAt": "2023-02-15T13:45:46Z",
          "updatedAt": "2023-02-15T13:46:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I\u2019m not sure what is being proposed here. The CDDL below differs from what is proposed in the base draft. What is proposed below is arguably more complex as it puts arrays around each measurement-values-map in the inner triple renamed to \u2018ref-end-series-map\u2019. The proposal also changes a record to a map, but formats it as a record and makes both optional. As a record, making both optional leads to undecidability as we don\u2019t know whether what is provided is a reference or an endorsement since both are optionally allowed. As a map, this could be resolved as each would have its own code point definition \u2013 but this example lacks specification of code points.\r\n\r\nUplevelling, the concern seems to be with complexity. We need to establish a definition for complexity to justify whether what is initially proposed is \u201ctoo\u201d complex (or not). This definition will also help evaluate if counter-proposals are also \u201ctoo\u201d complex. The argument for why the current proposal isn\u2019t too complex it that it addresses a real-world use case, as SGX and TDX are shipping features.\r\n\r\nThere is a possible argument for wanting a triple that is usable more broadly. For example, maybe there is a user that wants to simply assert several endorsement values if a particular set of evidence / reference values are matched. This wouldn\u2019t be possible with this triple because it requires \u2018series\u2019 matching semantics.\r\n\r\nBut it was determined, early in the design of CoRIM/CoMID, that CoMID wanted the complexity to reside in the triples that encourages as many triples as necessary to satisfy a broad reach of users/use cases. I think the conditional-reference-series-triple holds true to these principles.\r\n\r\nThe question of whether a triple should be included in a \u201cbase\u201d / \u201cstandard\u201d definition vs. is included in a profile is a question should be discussed head on. If we say that profiles are optional (which is what the CDDL says currently), but then say that generalized Verifiers must rely on a profile to determine which triples to implement, then we are mandating use of profiles in a roundabout way. If we assert that any triple that is defined in a standard means we highly recommend that generalized verifiers should implement the triple, then that means anyone can use the triple to author a manifest / evidence without first consulting the verifier community to ensure there is verifier support. Given there is a population of millions or billions of nodes, this should be reasonable criteria for it being included into the base / standard.\r\n\r\n-Ned\r\n\r\nFrom: Yogesh Deshpande ***@***.***>\r\nReply-To: ietf-rats-wg/draft-ietf-rats-corim ***@***.***>\r\nDate: Wednesday, February 15, 2023 at 5:46 AM\r\nTo: ietf-rats-wg/draft-ietf-rats-corim ***@***.***>\r\nCc: \"Smith, Ned\" ***@***.***>, Assign ***@***.***>\r\nSubject: Re: [ietf-rats-wg/draft-ietf-rats-corim] Cond ref series triple branch (PR #49)\r\n\r\n\r\nI feel the proposed changes are far too complex to be part of base specification:\r\n\r\nWhat we can have is a simple statement as under:\r\n\r\n; A supply chain actor would like to provision additional reference values or endorsed values,\r\n; based on the simple condition that the subject specified using the given env and ref values\r\n; matches the criterion specified by the Verifier\r\n; Then we should leave it to individual schemes/profiles, how individual verifiers want to accept the series\r\n; of reference and/or endorsed values based on their specific implementations\r\n\r\nconditional-reference-series-triple-record = [\r\n; triple subject\r\n[ environment-map,\r\nmeasurement-map ; initial reference values\r\n]\r\n; triple object - series of ref-end values\r\n[ + ref-end-series-map ] ; not sure we need a series here as well, but retaining to clarify?\r\n]\r\n\r\nref-end-series-map = non-emtpy <{\r\n? [+measurement-values-map] ; reference values\r\n? [+measurement-values-map] ; endorsed values\r\n}>\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/49#issuecomment-1431394595>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSFV3CUOFSXTYALJDS3WXTMZNANCNFSM6AAAAAAUOLDLXU>.\r\nYou are receiving this because you were assigned.Message ID: ***@***.***>\r\n",
          "createdAt": "2023-02-22T01:37:15Z",
          "updatedAt": "2023-02-22T01:37:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Applied changes discussed as part of issue #44 - PR #49 is ready for review\r\n\r\nI think we should use the CDDL in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/44#issuecomment-1452743059",
          "createdAt": "2023-03-03T20:51:18Z",
          "updatedAt": "2023-03-03T20:51:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think we should use the CDDL in [#44 (comment)](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/44#issuecomment-1452743059)\r\n\r\nI thought I did. What is different?",
          "createdAt": "2023-03-03T20:56:53Z",
          "updatedAt": "2023-03-03T20:56:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I think we should use the CDDL in [#44 (comment)](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/44#issuecomment-1452743059)\r\n> \r\n> I thought I did. What is different?\r\n\r\nsorry, my bad.  I checked out a similarly named branch `conditional-reference-series-triple-record` and got utterly confused :-(",
          "createdAt": "2023-03-03T21:22:07Z",
          "updatedAt": "2023-03-03T21:22:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85MppYo",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Suggested edits. The input evidence already has claims that match all the reference values in the matched record, so the reference values in that record should not be accepted again (which creates duplicates).",
          "createdAt": "2023-02-06T20:47:33Z",
          "updatedAt": "2023-02-06T20:58:13Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nevaluation. If none of the member-records in this series is matched, then the entire triple\r\n```",
              "createdAt": "2023-02-06T20:47:33Z",
              "updatedAt": "2023-02-07T00:42:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mp7Uc",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-06T21:36:22Z",
          "updatedAt": "2023-02-06T21:36:22Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nValues in a member-record, the Endorsed values in that member-record, if any, are accepted.\r\n```",
              "createdAt": "2023-02-06T21:36:22Z",
              "updatedAt": "2023-02-07T00:30:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mp81w",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-06T21:41:36Z",
          "updatedAt": "2023-02-06T21:41:36Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "The scope of the term 'record' could be ambiguous unless it is defined better. Existing text uses 'additional' to disambiguate the other values in the triple object (which could be regarded as a 'record'), but so could any of the subordinate statements within the triple object.",
              "createdAt": "2023-02-06T21:41:36Z",
              "updatedAt": "2023-02-06T21:41:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mqh0Q",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-07T00:31:11Z",
          "updatedAt": "2023-02-07T00:31:11Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nthey appear in an array. The series has one or more member-records containing additional Reference\r\n```",
              "createdAt": "2023-02-07T00:31:11Z",
              "updatedAt": "2023-02-07T00:31:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mqh2d",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-07T00:31:23Z",
          "updatedAt": "2023-02-07T00:31:23Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "This term 'record' is the one defined in preceding sentence \"The series has one or more records containing ...\".\r\n\r\nChanging 'record' to 'member-record' could help eliminate ambiguity. I've updated my comments reflect the change. ",
              "createdAt": "2023-02-07T00:31:23Z",
              "updatedAt": "2023-02-07T00:31:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Mqh4k",
          "commit": {
            "abbreviatedOid": "57864d3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-07T00:31:35Z",
          "updatedAt": "2023-02-07T00:31:36Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nThe first successfully matched member-record from the `reference-endorsed-record` series terminates\r\n```",
              "createdAt": "2023-02-07T00:31:35Z",
              "updatedAt": "2023-02-07T00:36:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M22Wm",
          "commit": {
            "abbreviatedOid": "bbb983e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T15:35:27Z",
          "updatedAt": "2023-02-08T15:35:27Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "change 'given' to 'if'",
              "createdAt": "2023-02-08T15:35:27Z",
              "updatedAt": "2023-02-08T15:35:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M24Y_",
          "commit": {
            "abbreviatedOid": "bbb983e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T15:38:59Z",
          "updatedAt": "2023-02-08T15:39:00Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Ned captured an issue raised by others: is there a syntactical bug with measurement-map / measurement-values-map?",
              "createdAt": "2023-02-08T15:38:59Z",
              "updatedAt": "2023-02-08T23:15:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M3YdV",
          "commit": {
            "abbreviatedOid": "bbb983e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T16:44:51Z",
          "updatedAt": "2023-02-08T16:44:51Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Note that tooling doesn't complain about syntax and examples pass schema checks. If there is a problem, it doesn't appear to be syntactical. The parser may be handed a byte string that could be either a measurement-map or measurement-values-map, but given one or the other may have failed a parsing test (but not both), chances are good the type of byte string would be included with the byte string to the parser. This would substitute for a well-known type such as a CBOR tag. In any case, it seem unlikely that a parser would be confused unless the first few bytes can satisfy both the measurement-map and measurement-values-map schema constraints and an implementation favors one over the other (incorrectly). Nevertheless, the use doesn't require supporting this much optionality, especially if the initial reference values are always measurement-maps and authorized-by, if used, applies to all measurements in the series data.",
              "createdAt": "2023-02-08T16:44:51Z",
              "updatedAt": "2023-02-08T23:15:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M5S9F",
          "commit": {
            "abbreviatedOid": "e664e41"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T22:21:42Z",
          "updatedAt": "2023-02-08T22:34:55Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nand optionally Endorsement measurements, to a Target Environment, where the endorsed measurements\r\n```",
              "createdAt": "2023-02-08T22:21:42Z",
              "updatedAt": "2023-02-08T22:34:55Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nby `environment-map`, and initial Reference Values defined by `measurement-map`,\r\n```",
              "createdAt": "2023-02-08T22:23:05Z",
              "updatedAt": "2023-02-08T22:34:55Z"
            },
            {
              "originalPosition": 38,
              "body": "I see that the term \"claims\" are used a few times. Wonder if it will be more clear to change all \"endorsement measurements\" to \"endorsement claims\"?",
              "createdAt": "2023-02-08T22:34:32Z",
              "updatedAt": "2023-02-08T22:34:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M5d1Z",
          "commit": {
            "abbreviatedOid": "e664e41"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T23:07:26Z",
          "updatedAt": "2023-02-08T23:07:26Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "A Claim is the combination of a named thing and its measurement(s). In this triple the triple subject is the named thing and the object is the set of measurements that are accepted. The measurement is more or less the triple object, but given a compound object like series records, the measurement could refer to either the reference or endorsed values. Given this understanding of Claim, does the proposed text still make sense? ",
              "createdAt": "2023-02-08T23:07:26Z",
              "updatedAt": "2023-02-08T23:07:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85M5eSD",
          "commit": {
            "abbreviatedOid": "e664e41"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-08T23:09:41Z",
          "updatedAt": "2023-02-08T23:09:42Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Yes, the existing proposed text still make sense.",
              "createdAt": "2023-02-08T23:09:41Z",
              "updatedAt": "2023-02-08T23:09:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85NdOqI",
          "commit": {
            "abbreviatedOid": "2bf9700"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-15T13:35:53Z",
          "updatedAt": "2023-02-15T13:35:54Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "In my view we should have a simplified triple object that simply says that accept these values when the `subject matches evidence`.\r\n\r\nThis PR makes the individual conditional checking within the `triple object` far too  complicated to have it in the main specifiction",
              "createdAt": "2023-02-15T13:35:54Z",
              "updatedAt": "2023-02-15T13:36:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85O8wVk",
          "commit": {
            "abbreviatedOid": "9cd3767"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Applied changes discussed as part of issue #44 - PR #49 is ready for review",
          "createdAt": "2023-03-03T20:27:25Z",
          "updatedAt": "2023-03-03T20:27:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85O8_Bc",
          "commit": {
            "abbreviatedOid": "9cd3767"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "thanks, a few comments inlined",
          "createdAt": "2023-03-03T21:22:51Z",
          "updatedAt": "2023-03-03T21:30:26Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "not related to this PR, just noting this duplicates L1",
              "createdAt": "2023-03-03T21:22:52Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            },
            {
              "originalPosition": 2,
              "body": "style note: we don't use commas\r\n\r\n```suggestion\r\n  stateful-environment-record\r\n```",
              "createdAt": "2023-03-03T21:23:58Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            },
            {
              "originalPosition": 4,
              "body": "lines > 72 do not render well\r\n\r\n```suggestion\r\n  ? &(conditional-endorsement-series-triples: 8) =>\r\n    [ + conditional-endorsement-series-triple-record ]\r\n```",
              "createdAt": "2023-03-03T21:24:42Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            },
            {
              "originalPosition": 5,
              "body": "ditto\r\n\r\n```suggestion\r\n  ? &(conditional-endorsement-triples: 9) =>\r\n    [ + conditional-endorsement-triple-record ]\r\n```",
              "createdAt": "2023-03-03T21:26:46Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nA Conditional Endorsement triple uses a stateful environment, (i.e., `stateful-environment-record`),\r\n```",
              "createdAt": "2023-03-03T21:29:14Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            },
            {
              "originalPosition": 65,
              "body": "this does not apply here, right?",
              "createdAt": "2023-03-03T21:30:12Z",
              "updatedAt": "2023-03-03T21:30:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85O9C_q",
          "commit": {
            "abbreviatedOid": "9cd3767"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-03T21:39:00Z",
          "updatedAt": "2023-03-03T21:39:00Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Yes, because measurement-values-map measurements in the triple object are not qualified by a bounding `measurement-map` and because we said the scope of `authorized-by` is triple level scope. That implies the `authorized-by` in the `stateful-environment-record` applies to the triple object too.",
              "createdAt": "2023-03-03T21:39:00Z",
              "updatedAt": "2023-03-03T21:39:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85O9KmS",
          "commit": {
            "abbreviatedOid": "df93cb3"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.",
          "createdAt": "2023-03-03T22:06:00Z",
          "updatedAt": "2023-03-03T22:06:22Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n]\r\n\r\n```\r\nNeed return for the last line?",
              "createdAt": "2023-03-03T22:06:00Z",
              "updatedAt": "2023-03-03T22:06:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85O9aUi",
          "commit": {
            "abbreviatedOid": "90b779f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-03T22:58:41Z",
          "updatedAt": "2023-03-03T22:58:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 52,
      "id": "PR_kwDOH6-tI85Kn2ky",
      "title": "Allow only one profile per CoRIM",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/52",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #29",
      "createdAt": "2023-02-23T16:24:50Z",
      "updatedAt": "2023-02-28T10:17:05Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d1a144b20c1b323aad52b8822f783bf8fe41cba4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "one-profile",
      "headRefOid": "b8156f76328555c2879b0fca3466352c3cd0298b",
      "closedAt": "2023-02-28T10:17:01Z",
      "mergedAt": "2023-02-28T10:17:01Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "51e3332ae0a256c6b252c49eb34384346fc3150b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85ONQKj",
          "commit": {
            "abbreviatedOid": "b8156f7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-23T20:30:25Z",
          "updatedAt": "2023-02-23T20:30:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOH6-tI85Kn7_w",
      "title": "allow key thumbprints as authorized-by",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/53",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #51",
      "createdAt": "2023-02-23T16:42:31Z",
      "updatedAt": "2023-02-28T21:11:48Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d1a144b20c1b323aad52b8822f783bf8fe41cba4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "authorized-by+thumbprint",
      "headRefOid": "56c0339c73216c3d76e578a4deed9763c70557bc",
      "closedAt": "2023-02-28T21:11:44Z",
      "mergedAt": "2023-02-28T21:11:44Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "5d27892a1a309cc427e4946d8b421948e3631338"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Should this PR be updated to use COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ] ?",
          "createdAt": "2023-02-24T15:18:55Z",
          "updatedAt": "2023-02-24T15:18:55Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Should this PR be updated to use COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ] ?\r\n\r\nI'll do the relaxation of the digests in a separate PR.",
          "createdAt": "2023-02-24T15:29:13Z",
          "updatedAt": "2023-02-24T15:29:13Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Should this PR be updated to use COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ] ?\r\n> \r\n> I'll do the relaxation of the digests in a separate PR.\r\n\r\nSee https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/56",
          "createdAt": "2023-02-24T15:36:44Z",
          "updatedAt": "2023-02-24T15:36:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith I've updated based on #56 ",
          "createdAt": "2023-02-24T15:47:03Z",
          "updatedAt": "2023-02-24T15:47:03Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @yogeshbdeshpande @henkbirkholz should I merge this?",
          "createdAt": "2023-02-28T10:16:20Z",
          "updatedAt": "2023-02-28T10:16:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85OTp_R",
          "commit": {
            "abbreviatedOid": "61b6c7f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-24T15:45:36Z",
          "updatedAt": "2023-02-24T15:45:37Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\ntagged-thumbprint-type = #6.557(digest)\r\n```",
              "createdAt": "2023-02-24T15:45:36Z",
              "updatedAt": "2023-02-24T15:45:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OTqR9",
          "commit": {
            "abbreviatedOid": "cf3a940"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-24T15:46:01Z",
          "updatedAt": "2023-02-24T15:46:02Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\ntagged-thumbprint-type = #6.557(digest)\r\n```",
              "createdAt": "2023-02-24T15:46:01Z",
              "updatedAt": "2023-02-24T15:46:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OlhV6",
          "commit": {
            "abbreviatedOid": "56c0339"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T19:44:06Z",
          "updatedAt": "2023-02-28T19:44:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOH6-tI85KtokI",
      "title": "Allow digest algorithm to be string",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/56",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #54",
      "createdAt": "2023-02-24T15:36:22Z",
      "updatedAt": "2023-02-28T16:47:49Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d1a144b20c1b323aad52b8822f783bf8fe41cba4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "relaxing-digests",
      "headRefOid": "49fe8a5e363ff2fed052842eedafa2f6edfe68dc",
      "closedAt": "2023-02-24T15:45:11Z",
      "mergedAt": "2023-02-24T15:45:11Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "6cf700c052470c7ba0494ccf8d5f5259e5f173ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85OTnuj",
          "commit": {
            "abbreviatedOid": "49fe8a5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-24T15:42:14Z",
          "updatedAt": "2023-02-24T15:42:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOH6-tI85K360r",
      "title": "svn-type-choice #8",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/57",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added prose to section describing svn and min-svn\r\n\r\nFix #8 ",
      "createdAt": "2023-02-27T21:30:02Z",
      "updatedAt": "2023-03-01T15:10:41Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "6cf700c052470c7ba0494ccf8d5f5259e5f173ab",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "svn-type-choice-branch",
      "headRefOid": "fe972853a4864e4d0194307baac896124ce721e3",
      "closedAt": "2023-03-01T15:10:41Z",
      "mergedAt": "2023-03-01T15:10:41Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "218a6b2fd7ec6ceea6b49c90f9e9ec1eadded7ba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85Og3ya",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T10:34:57Z",
          "updatedAt": "2023-02-28T10:45:15Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "this should go now that we have text.",
              "createdAt": "2023-02-28T10:34:57Z",
              "updatedAt": "2023-02-28T10:45:15Z"
            },
            {
              "originalPosition": 5,
              "body": "we should precisely define what we mean by \"object\" here (or possibly use another, more intuitive, term)",
              "createdAt": "2023-02-28T10:37:12Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            },
            {
              "originalPosition": 4,
              "body": "There seems to be one or more missing piece(s) of English language here, but I can't tell exactly what :)\r\n\r\n* The following describes _in_ details the security [...]\r\n* The following details the security [...]\r\n* The following describes _the_ details _of_ the security [...]",
              "createdAt": "2023-02-28T10:40:43Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThere may be several versions of an object that are in production use at a given time.\r\n```",
              "createdAt": "2023-02-28T10:42:38Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nor may not be in a security critical condition. The Endorser may provide a minimum svn value using `min-svn`\r\nto specify the lowest svn value that is acceptable.\r\n```",
              "createdAt": "2023-02-28T10:44:17Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nObjects with svn values that are equal to or greater than `min-svn` do not signal a security critical condition.\r\n```",
              "createdAt": "2023-02-28T10:44:41Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nObjects that are below the `min-svn` value are in a security critical condition that is unsafe for normal operations.\r\n```",
              "createdAt": "2023-02-28T10:44:56Z",
              "updatedAt": "2023-02-28T10:45:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Ok9mK",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T18:41:58Z",
          "updatedAt": "2023-02-28T18:41:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm open to suggestions. We use Target Environment and `environment-map` to refer to the component that is being attested. The Target Environment could have multiple measurements such as `digest` and `raw-value-group` but these measurements could be describing different objects within the Target Environment. I don't think we have terminology for the object from which a measurement is collected. I like \"object\" because it is neutral. Alternatives like \"component\", \"device\", \"module\" all have baggage. The O in OID can mean a variety of things without too much baggage. Object does however have baggage with regard to triples structure, but it seems this is obvious when in triples-map context.",
              "createdAt": "2023-02-28T18:41:58Z",
              "updatedAt": "2023-02-28T18:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OmMR3",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T21:10:05Z",
          "updatedAt": "2023-02-28T21:10:06Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Maybe we could provide one or more examples of objects, e.g.:\r\n```\r\nA security version number is used to track changes to\r\nan object (e.g., OBJECT_INSTANCE_1, OBJECT_INSTANCE_2)\r\nthat are security relevant.\r\n```\r\nwhich avoids both defining it or finding another term.\r\n\r\n",
              "createdAt": "2023-02-28T21:10:05Z",
              "updatedAt": "2023-02-28T21:10:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OmakT",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T21:33:59Z",
          "updatedAt": "2023-02-28T21:33:59Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Fixed in branch - this thread is outdated.",
              "createdAt": "2023-02-28T21:33:59Z",
              "updatedAt": "2023-02-28T21:33:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OmasL",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T21:34:22Z",
          "updatedAt": "2023-02-28T21:34:23Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "fixed in branch - this thread is outdated.",
              "createdAt": "2023-02-28T21:34:22Z",
              "updatedAt": "2023-02-28T21:34:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Omq7H",
          "commit": {
            "abbreviatedOid": "d245ff5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:28:42Z",
          "updatedAt": "2023-02-28T22:28:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I meant `OBJECT_INSTANCE_$i` as placeholders for real things.\r\n\r\n```suggestion\r\nA security version number is used to track changes to an object (e.g., a Secure Enclave, a boot loader executable, a configuration file, etc.) that are security relevant.\r\n```",
              "createdAt": "2023-02-28T22:28:42Z",
              "updatedAt": "2023-02-28T22:55:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OqMqu",
          "commit": {
            "abbreviatedOid": "fe23e43"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T11:54:19Z",
          "updatedAt": "2023-03-01T11:54:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Ned, if you address this we can merge.  (You may have missed this comment.)",
              "createdAt": "2023-03-01T11:54:20Z",
              "updatedAt": "2023-03-01T11:55:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Ork1l",
          "commit": {
            "abbreviatedOid": "a6e6344"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks",
          "createdAt": "2023-03-01T15:07:57Z",
          "updatedAt": "2023-03-01T15:07:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 58,
      "id": "PR_kwDOH6-tI85K4Bl5",
      "title": "Tagged Integer Type description",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/58",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "added description for tagged integer in class-id\r\n\r\nFix #5 ",
      "createdAt": "2023-02-27T21:52:33Z",
      "updatedAt": "2023-02-28T21:13:49Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "6cf700c052470c7ba0494ccf8d5f5259e5f173ab",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "tagged-int-branch",
      "headRefOid": "45903b1f87145e58a364997b4f985dfcfe62e113",
      "closedAt": "2023-02-28T21:13:45Z",
      "mergedAt": "2023-02-28T21:13:44Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "62073975730567163b740f8b051c4c82124b8ced"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85OgnNb",
          "commit": {
            "abbreviatedOid": "9338cb1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T10:01:45Z",
          "updatedAt": "2023-02-28T10:01:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I don't think there's a reason for this to be other than vendor-specific.  Also, I reckon we need to make it a bit more normative.\r\n\r\n```suggestion\r\nUsed as a class identifier for the environment.  It is expected that the\r\ninteger value is vendor specific rather than globally meaningful.  Therefore,\r\nthe sibling `vendor` field in the `class-map` MUST be populated to define the\r\nnamespace under which the value must be understood.\r\n```",
              "createdAt": "2023-02-28T10:01:45Z",
              "updatedAt": "2023-02-28T10:01:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Og4DM",
          "commit": {
            "abbreviatedOid": "9338cb1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T10:35:34Z",
          "updatedAt": "2023-02-28T10:35:35Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "this should be expunged in this PR",
              "createdAt": "2023-02-28T10:35:34Z",
              "updatedAt": "2023-02-28T10:35:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OmELR",
          "commit": {
            "abbreviatedOid": "45903b1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2023-02-28T20:45:59Z",
          "updatedAt": "2023-02-28T20:45:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOH6-tI85LEmLd",
      "title": "digest algorithm clarifications",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/61",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #60",
      "createdAt": "2023-03-01T22:02:22Z",
      "updatedAt": "2023-03-02T07:43:15Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "218a6b2fd7ec6ceea6b49c90f9e9ec1eadded7ba",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "digest-clarifications",
      "headRefOid": "15c3e02de3a92adea15c855d85162922e0489ee4",
      "closedAt": "2023-03-02T07:43:11Z",
      "mergedAt": "2023-03-02T07:43:11Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "2e22719f99872d8a39c37937653b453595d932ff"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85OuDnL",
          "commit": {
            "abbreviatedOid": "593365c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few minor tweaks needed.",
          "createdAt": "2023-03-01T22:08:42Z",
          "updatedAt": "2023-03-01T22:11:44Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "grammar seems wrong - maybe something like \"should only be used when...\"?\r\nupper case Reference Value?",
              "createdAt": "2023-03-01T22:08:43Z",
              "updatedAt": "2023-03-01T22:11:44Z"
            },
            {
              "originalPosition": 24,
              "body": "upper case MUST?\r\nupper case Evidence?",
              "createdAt": "2023-03-01T22:09:09Z",
              "updatedAt": "2023-03-01T22:11:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OuFeG",
          "commit": {
            "abbreviatedOid": "593365c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T22:16:01Z",
          "updatedAt": "2023-03-01T22:16:02Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nshould only be used when the `digest` type conveys reference value\r\n```",
              "createdAt": "2023-03-01T22:16:01Z",
              "updatedAt": "2023-03-01T22:16:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OuFwt",
          "commit": {
            "abbreviatedOid": "f035568"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T22:17:04Z",
          "updatedAt": "2023-03-01T22:17:05Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nmeasurements that are matched verbatim with Evidence that uses the same\r\n```",
              "createdAt": "2023-03-01T22:17:04Z",
              "updatedAt": "2023-03-01T22:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OuGEa",
          "commit": {
            "abbreviatedOid": "593365c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T22:18:17Z",
          "updatedAt": "2023-03-01T22:18:17Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "the must is not normative in this piece of prose.  I have replaced \"must be\" with \"are\" to remove any possible ambiguity.",
              "createdAt": "2023-03-01T22:18:17Z",
              "updatedAt": "2023-03-01T22:18:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OuGI5",
          "commit": {
            "abbreviatedOid": "593365c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T22:18:33Z",
          "updatedAt": "2023-03-01T22:18:34Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "s/evidence/Evidence/ \ud83d\udc4d ",
              "createdAt": "2023-03-01T22:18:34Z",
              "updatedAt": "2023-03-01T22:18:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OuHBb",
          "commit": {
            "abbreviatedOid": "13f1eeb"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T22:22:10Z",
          "updatedAt": "2023-03-01T22:22:10Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nto the \"Named Information Hash Algorithm Registry\" {{-named-info}}.\r\n```",
              "createdAt": "2023-03-01T22:22:10Z",
              "updatedAt": "2023-03-01T22:22:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85OupD_",
          "commit": {
            "abbreviatedOid": "15c3e02"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-02T00:17:00Z",
          "updatedAt": "2023-03-02T00:17:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 64,
      "id": "PR_kwDOH6-tI85LT2lA",
      "title": "refactor fragments",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/64",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #62\r\nFix #27",
      "createdAt": "2023-03-05T18:14:57Z",
      "updatedAt": "2023-03-08T15:27:30Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "33590f4072cac8b1a4b6740a684f929ec23413c5",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "build-refactor",
      "headRefOid": "f4a0fd0a7770e36562dd68c7ef6bff8affaed20a",
      "closedAt": "2023-03-08T15:27:25Z",
      "mergedAt": "2023-03-08T15:27:25Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f9a9e57e6b303e2800af92190e5f0b2ff4f176ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85PU--W",
          "commit": {
            "abbreviatedOid": "f4a0fd0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "useful",
          "createdAt": "2023-03-08T15:26:35Z",
          "updatedAt": "2023-03-08T15:26:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85PU_TG",
          "commit": {
            "abbreviatedOid": "f4a0fd0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-08T15:27:16Z",
          "updatedAt": "2023-03-08T15:27:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85PU_Xi",
          "commit": {
            "abbreviatedOid": "f4a0fd0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-08T15:27:25Z",
          "updatedAt": "2023-03-08T15:27:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOH6-tI85LWtXU",
      "title": "CBOR tags registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/65",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #13",
      "createdAt": "2023-03-06T11:02:19Z",
      "updatedAt": "2023-03-09T18:55:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "33590f4072cac8b1a4b6740a684f929ec23413c5",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "iana-cbor-tags",
      "headRefOid": "8cc7ee214b6c07e182343bcba662656195c0e14f",
      "closedAt": "2023-03-09T18:55:10Z",
      "mergedAt": "2023-03-09T18:55:10Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "b4c4b88550c2c2fbad47e9866bc6e0f1c6a303b3"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "with contributions from cabo",
          "createdAt": "2023-03-06T11:02:41Z",
          "updatedAt": "2023-03-06T11:02:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85PEOJu",
          "commit": {
            "abbreviatedOid": "8cc7ee2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "awesome, thanks!",
          "createdAt": "2023-03-06T15:03:52Z",
          "updatedAt": "2023-03-06T15:04:02Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "if you think #13 is done, please remove this also.",
              "createdAt": "2023-03-06T15:03:52Z",
              "updatedAt": "2023-03-06T15:04:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PEo_B",
          "commit": {
            "abbreviatedOid": "8cc7ee2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-06T15:55:11Z",
          "updatedAt": "2023-03-06T15:55:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85PVCXK",
          "commit": {
            "abbreviatedOid": "8cc7ee2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-08T15:33:44Z",
          "updatedAt": "2023-03-08T15:33:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "PR_kwDOH6-tI85LeQU-",
      "title": "Andrew draper evidence verification min",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/66",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change adds a description of verifier processing.\r\n\r\nIt is based on Yogesh's notes on the appraisal flow, on text in the TCG CoRIM spec and on the branch I wrote which we discussed a few weeks ago.",
      "createdAt": "2023-03-07T13:00:29Z",
      "updatedAt": "2023-05-24T15:01:32Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "33590f4072cac8b1a4b6740a684f929ec23413c5",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "andrew-draper-evidence-verification-min",
      "headRefOid": "e107670210bd7c385bf2b06d26838f62a61804ff",
      "closedAt": "2023-05-24T15:01:32Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: the CI tools will fail if a line ends in whitespace. ",
          "createdAt": "2023-03-07T19:24:26Z",
          "updatedAt": "2023-03-07T19:24:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85POeOK",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:49:46Z",
          "updatedAt": "2023-03-07T17:49:47Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "It is helpful is long sentences are broken into separate lines that don't wrap around.\r\nthe use of ... etc. ) etc. ...  is clunky. I don't think the sentence looses any meaning if the second 'etc.' is omitted.",
              "createdAt": "2023-03-07T17:49:47Z",
              "updatedAt": "2023-03-07T17:49:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PNXNS",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks Andrew!  I have left a few comments inline.  The high order bit for me is that the DICE-specific logics should be separated in its own section and become the blueprint for other profiles.",
          "createdAt": "2023-03-07T15:57:38Z",
          "updatedAt": "2023-03-07T18:00:55Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThe goal of the initialisation phase is to load the CoRIM Appraisal Context with objects such as CoRIM tags, cryptographic validation key material (e.g., raw public keys, root certificates, intermediate CA certificate chains), etc. that will be used in the subsequent Evidence Appraisal phase.\r\n```",
              "createdAt": "2023-03-07T15:57:38Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 27,
              "body": "I guess we don't need to expand CoRIM here.\r\nAlso, consistent capitalisation.\r\n\r\n```suggestion\r\nAll available CoRIMs are collected. A Verifier may be pre-configured with a large number of tags describing many types of device. All CoRIMs are loaded at this stage, later stages will select the CoRIMs appropriate to the Evidence Appraisal step.\r\n```",
              "createdAt": "2023-03-07T15:58:47Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 42,
              "body": "I am not sure I don't understand this.\r\n\r\nI think what we want to say here is that the search must end with at least one CoBOM.",
              "createdAt": "2023-03-07T16:50:26Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 46,
              "body": "Either we remove CoTS from here or we need to add a reference to I-D.ietf-rats-concise-ta-stores.  (The reference must be informative.)",
              "createdAt": "2023-03-07T16:52:50Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 53,
              "body": "I'd use \"found\" or \"selected\" rather than \"potential\".",
              "createdAt": "2023-03-07T16:56:11Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 59,
              "body": "s/evidence/Evidence/\r\n\r\n(also below.)",
              "createdAt": "2023-03-07T17:31:18Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nThe first part of the Evidence collection phase does not perform any cryptographic validation. This allows verifiers to use untrusted code for their initial Evidence collection.\r\n```",
              "createdAt": "2023-03-07T17:37:59Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 65,
              "body": "Isn't this part of appraisal rather than collection?  In fact, this needs to be done by trusted code.",
              "createdAt": "2023-03-07T17:39:49Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 72,
              "body": "\"DICE Layering Architecture\" needs to be made into a bib item.\r\n\r\nE.g., add:\r\n```\r\n  DICE-Layering-Architecture:\r\n    author:\r\n      org: \"Trusted Computing Group\"\r\n    title: \"DICE Layering Architecture\"\r\n    target: https://trustedcomputinggroup.org/wp-content/uploads/DICE-Layering-Architecture-r19_pub.pdf\r\n    date: July, 2020\r\n```\r\n\r\nin the informative references at the top, and then:\r\n\r\n```suggestion\r\nIn DICE, a proof of liveness is performed on the final key in the certificate chain. If this passes then a suitable certification path anchored on a trusted root certificate is looked up -- e.g., based on linking information obtained from the DeviceID certificate (see Section 9.2.1 of {{DICE-Layering-Architecture}})-- in the Appraisal Context.  If found, then usual X.509 certificate validation is performed.\r\n```",
              "createdAt": "2023-03-07T17:54:17Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 73,
              "body": "ditto for PSA.  But the entry is already there, so you can simply do:\r\n```suggestion\r\nIn PSA, the verification public key is looked up in the appraisal context using the `euid` claim found in the PSA claims-set (see {{Section 4.2.1 of -psa-token}}).  If found, COSE Sign1 verification is performed accordingly.\r\n```",
              "createdAt": "2023-03-07T17:55:14Z",
              "updatedAt": "2023-03-07T18:00:55Z"
            },
            {
              "originalPosition": 95,
              "body": "Not sure this belongs in here.",
              "createdAt": "2023-03-07T17:56:19Z",
              "updatedAt": "2023-03-07T18:00:56Z"
            },
            {
              "originalPosition": 97,
              "body": "DICE-specific verification mechanics should be separate from the common flow.",
              "createdAt": "2023-03-07T17:59:30Z",
              "updatedAt": "2023-03-07T18:00:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85POeok",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Manifold comments inline.",
          "createdAt": "2023-03-07T17:50:38Z",
          "updatedAt": "2023-03-07T18:58:18Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "'device' to 'devices'\r\n'CoRIMs' to 'tags'",
              "createdAt": "2023-03-07T17:50:38Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 34,
              "body": "'CoRIMs' to 'tags'",
              "createdAt": "2023-03-07T17:52:46Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 36,
              "body": "'CoRIM' to 'tag'.",
              "createdAt": "2023-03-07T17:53:12Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 38,
              "body": "'CoBOMs' to 'CoBOM'",
              "createdAt": "2023-03-07T17:53:34Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 46,
              "body": "'Concise Module Identifers' to 'Concise Module ID Tags'\r\n'Concise Software Identifiers' to 'Concise Software ID Tags'\r\nEach of CoSWID and CoTS should have references.",
              "createdAt": "2023-03-07T17:55:12Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 48,
              "body": "'located' is ambiguous. Maybe \"...successfully obtained and ...\"",
              "createdAt": "2023-03-07T17:57:41Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 49,
              "body": "suggest \"...any cross-referenced triples (e.g., ...\"",
              "createdAt": "2023-03-07T17:59:19Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 53,
              "body": "Suggest \"All of the validated and potentially useful tags are...\"\r\n'loaded together' is ambiguous - I don't have a suggestion per se, but wording to the effect that they are available to the Verifier for appraisal.",
              "createdAt": "2023-03-07T18:00:53Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 65,
              "body": "The RATS Architecture refers to this as 'appraisal'. We should use that term unless we're describing something else.",
              "createdAt": "2023-03-07T18:05:40Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 72,
              "body": "break up long sentences into non-wraparound lines.\r\n'proof of liveness' is ambiguous - maybe 'proof of possession' or 'key authentication' is intended?\r\nDICE uses the term 'alias key' or 'alias certificate' to refer to the last layer in a DICE layering. \r\nReferences should use either [1] or [RFC0000] convention.",
              "createdAt": "2023-03-07T18:07:05Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 75,
              "body": "\"specific method\" is ambiguous - suggest \"specific integrity protection method used, the integrity of Evidence...\"",
              "createdAt": "2023-03-07T18:12:52Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 79,
              "body": "\"conveyed\" is misleading since RATS Arch uses 'conveyance' to mean how files such as manifests are communicated from one role / entity to another. This usage seems to be describing how verification key material is to be represented by Endorsements.",
              "createdAt": "2023-03-07T18:16:06Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 85,
              "body": "'evidence' to 'Evidence'",
              "createdAt": "2023-03-07T18:16:43Z",
              "updatedAt": "2023-03-07T18:58:18Z"
            },
            {
              "originalPosition": 87,
              "body": "'reference values' to 'Reference Values'\r\n'evidence' to 'Evidence'\r\n'environment map' to '`environment-map`'\r\n'measurement-values-map' to '`measurement-values-map`'\r\nMore explanation is needed that describes how Evidence, in other encodings, is translated into a representation that follows a CoMID triple. Possibly elevate the section below or cross-reference it.",
              "createdAt": "2023-03-07T18:17:30Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 91,
              "body": "suggest \"... the measurement-values-maps are...\" to \"... the measurements (e.g., `measurement-values-map`) are merged.\r\n'key' is ambiguous - suggest 'code point' \r\nsuggest adding a simple example - \"(e.g., if the 'name' code point has the value \"my environment\" and 'name' is found in multiple sets of measurements being merged, then each value must be \"my environment\" or the merge will fail.\"",
              "createdAt": "2023-03-07T18:25:39Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 95,
              "body": "Should use a placeholder reference e.g., [TCG_SPDM-TBD]",
              "createdAt": "2023-03-07T18:32:37Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 99,
              "body": "Note: There are additional formats. Should cite TCG specs and use DiceTcbInfo and DiceMultiTcbInfo as examples.",
              "createdAt": "2023-03-07T18:34:06Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 117,
              "body": "I assume ... means TBD?\r\nsuggest: \"... the measurements are merged under the common environment.\"",
              "createdAt": "2023-03-07T18:37:26Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 125,
              "body": "'We make no...' to 'This specification makes no...'",
              "createdAt": "2023-03-07T18:38:55Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 127,
              "body": "These few lines seem to be repeated from above.",
              "createdAt": "2023-03-07T18:40:29Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 144,
              "body": "Lots of inconsistent use of case for RATS Architecture defined terms that are upper case terms.\r\nCoMID defines Reference Values and Endorsements but not Evidence.  Maybe remove 'CoMID'?",
              "createdAt": "2023-03-07T18:42:06Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 146,
              "body": "Note: this process assumes the Evidence, Reference Values and Endorsed Values have a common environment.",
              "createdAt": "2023-03-07T18:45:33Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 150,
              "body": "This needs more discussion.",
              "createdAt": "2023-03-07T18:47:03Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 156,
              "body": "'enumerates' to 'iterates'",
              "createdAt": "2023-03-07T18:48:11Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 158,
              "body": "Can we describe the method using more generic terminology such as \"corresponding measurements, (e.g., `measurement-values-map`)\" so that the specific corim statements are exemplary.",
              "createdAt": "2023-03-07T18:52:29Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 162,
              "body": "'tagged' is ambiguous - suggest 'tagged (e.g., IANA CBOR tags registry [REF-TBD])...\"\r\n'protocol' may be ambiguous\r\n'tag' may be ambiguous",
              "createdAt": "2023-03-07T18:55:19Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 164,
              "body": "'key' may be ambiguous",
              "createdAt": "2023-03-07T18:57:06Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            },
            {
              "originalPosition": 178,
              "body": "'name' may be ambiguous",
              "createdAt": "2023-03-07T18:57:45Z",
              "updatedAt": "2023-03-07T18:58:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PPAno",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T19:08:42Z",
          "updatedAt": "2023-03-07T19:08:42Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "CDDL for `corim-map` doesn't make use of CoBOM tag mandatory. But the prose makes it mandatory - see [1]. Given [1], the language in 1107 can describe 'unactivated tags' as ignored. Not sure it needs to be normative MUST since [1] already contains normative. \r\n\r\n[1]\r\nA Concise Bill of Material (CoBOM) object represents the signal for the verifier to activate the listed tags. Data contained in a tag MUST NOT be used for appraisal until a CoBOM which activates that tag has been received and successfully processed. All the tags listed in the CoBOM must be activated in the same transaction, i.e., either all or none.",
              "createdAt": "2023-03-07T19:08:42Z",
              "updatedAt": "2023-03-07T19:08:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PPBv4",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T19:12:00Z",
          "updatedAt": "2023-03-07T19:12:01Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Make CoTS exemplary and cite as informative. It is acceptable if TAs are selected from other sources. The profile should contain normative as to how TAs are selected.\r\nSimilarly, sources of CoMID/CoSWID tags need not be CoRIM. This is examplary and 'are' means 'MAY'.",
              "createdAt": "2023-03-07T19:12:00Z",
              "updatedAt": "2023-03-07T19:12:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PPE2q",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T19:20:40Z",
          "updatedAt": "2023-03-07T19:20:40Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "RATS Arch uses 'Claims collection' to mean the Attesting Environment directly measures the Target Environment. It also uses 'Evidence collection' to describe a lead Attester that assembles multiple Evidences and prepares them for conveyance. 'Evidence' means the Claims are integrity protected, so we don't need to describe the various forms of Claims integrity protection here.\r\n\r\nIt seems reasonable to say that the Verifier SHOULD be performed by trusted code.",
              "createdAt": "2023-03-07T19:20:40Z",
              "updatedAt": "2023-03-07T19:21:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PS39G",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:28:03Z",
          "updatedAt": "2023-03-08T10:28:04Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nIf any CoBOM is present then other tags in the CoRIM which are not activated by the CoBOM MUST be ignored.\r\n```\r\nI think, this statement is ambiguous. In fact if any CoBOM is present, then any CoMID/CoSWID tags present in CoRIM but absent in CoBOM MUST be ignored.",
              "createdAt": "2023-03-08T10:28:03Z",
              "updatedAt": "2023-03-08T10:28:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTAES",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:42:22Z",
          "updatedAt": "2023-03-08T10:42:23Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "```suggestion\r\nThe accepted claims set will be matched against CoMID reference values, as per the appraisal policy of the verifier. This document describes an example evidence structure which can be easily matched against these reference values. Each set of evidence contains an environment map providing a namespace, and a measurement-values-map containing one or more entries.\r\n```",
              "createdAt": "2023-03-08T10:42:22Z",
              "updatedAt": "2023-03-08T10:42:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTD8F",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:49:17Z",
          "updatedAt": "2023-03-08T10:49:17Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "Line 1182 is not complete? Can you please complete this....",
              "createdAt": "2023-03-08T10:49:17Z",
              "updatedAt": "2023-03-08T10:49:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTFEK",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:51:23Z",
          "updatedAt": "2023-03-08T10:51:23Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nIn the Evidence Appraisal phase, a CoRIM Appraisal Context and an Evidence Appraisal Policy are used to convert the received Evidence from its raw form into a more usable form. This phase may be repeated multiple times.\r\n```",
              "createdAt": "2023-03-08T10:51:23Z",
              "updatedAt": "2023-03-08T10:51:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTG0l",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:54:36Z",
          "updatedAt": "2023-03-08T10:54:37Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "I think the statement on Line 1186 is not accurate. \r\nIn the Evidence Appraisal phase, a CoRIM Appraisal Context and an Evidence Appraisal Policy are used by the Verifier to appraise the received evidence to deduce the trustworthiness of the received Evidence.\r\n",
              "createdAt": "2023-03-08T10:54:36Z",
              "updatedAt": "2023-03-08T10:54:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTHrC",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:56:12Z",
          "updatedAt": "2023-03-08T10:56:12Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "I do not think, Line 1197 is part of scope of CoRIM Profile only, but very much also depends on the Appraisal policy ",
              "createdAt": "2023-03-08T10:56:12Z",
              "updatedAt": "2023-03-08T10:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTJcr",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T10:59:17Z",
          "updatedAt": "2023-03-08T10:59:17Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "I think, this needs more discussion and clarification as well!",
              "createdAt": "2023-03-08T10:59:17Z",
              "updatedAt": "2023-03-08T10:59:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTLGd",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:02:20Z",
          "updatedAt": "2023-03-08T11:02:21Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "Line 1217 correctly say that we are matching Evidence against Reference Values, however, the description at line 1219, explains as if we are matching CoMID against Accepted Claims Set.\r\n\r\nI suppose your intention was to match \"Accepted Claims Set\" against the given reference values present in the CoMID tags?",
              "createdAt": "2023-03-08T11:02:20Z",
              "updatedAt": "2023-03-08T11:02:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTLiM",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thank you for the PR.\r\nLeft few comments and clarifications",
          "createdAt": "2023-03-08T11:03:10Z",
          "updatedAt": "2023-03-08T11:03:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85PTO2M",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:09:20Z",
          "updatedAt": "2023-03-08T11:09:21Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nEach CoRIM profile MUST provide a description of the expected Verifier behavior for each of those well-defined points.\r\n```",
              "createdAt": "2023-03-08T11:09:20Z",
              "updatedAt": "2023-03-08T11:09:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTPWB",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:10:13Z",
          "updatedAt": "2023-03-08T11:10:14Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThe following text illustrates an example.\r\n```",
              "createdAt": "2023-03-08T11:10:14Z",
              "updatedAt": "2023-03-08T11:10:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTPod",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:10:48Z",
          "updatedAt": "2023-03-08T11:10:48Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "'cost' is not introduced. What does that mean?",
              "createdAt": "2023-03-08T11:10:48Z",
              "updatedAt": "2023-03-08T11:10:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTQBp",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:11:34Z",
          "updatedAt": "2023-03-08T11:11:35Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I would recommend to refrain from 'implementers guidance' and go with 'examples' ",
              "createdAt": "2023-03-08T11:11:34Z",
              "updatedAt": "2023-03-08T11:11:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTQ45",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:13:16Z",
          "updatedAt": "2023-03-08T11:13:16Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "this is always true. Could have been removed, if this would be normative text. But is an example. Doing both is possible (actually...) but confusing. Normative sections have to be separated from informative sections.",
              "createdAt": "2023-03-08T11:13:16Z",
              "updatedAt": "2023-03-08T11:13:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PTRdC",
          "commit": {
            "abbreviatedOid": "3a9aa4c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-08T11:14:23Z",
          "updatedAt": "2023-03-08T11:14:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "TL;DR\r\n\r\nis this intended to be normative or an example? Please see confused comments below.",
              "createdAt": "2023-03-08T11:14:23Z",
              "updatedAt": "2023-03-08T11:14:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Pi7qx",
          "commit": {
            "abbreviatedOid": "4e2ded2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T10:37:38Z",
          "updatedAt": "2023-03-10T10:37:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "the entry is incomplete and breaks compilation\r\n\r\n```suggestion\r\n  DICE-Layering-Architecture:\r\n    author:\r\n      org: \"Trusted Computing Group\"\r\n    title: \"DICE Layering Architecture\"\r\n     target: https://trustedcomputinggroup.org/wp-content/uploads/DICE-Layering-Architecture-r19_pub.pdf\r\n    date: July, 2020\r\n```",
              "createdAt": "2023-03-10T10:37:38Z",
              "updatedAt": "2023-03-10T10:39:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Pi82Z",
          "commit": {
            "abbreviatedOid": "45d1511"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T10:41:05Z",
          "updatedAt": "2023-03-10T10:41:06Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n  DICE-Layering-Architecture:\r\n    author:\r\n      org: \"Trusted Computing Group\"\r\n    title: \"DICE Layering Architecture\"\r\n    target: https://trustedcomputinggroup.org/wp-content/uploads/DICE-Layering-Architecture-r19_pub.pdf\r\n    date: July, 2020\r\n  IANA.named-information: named-info\r\n```",
              "createdAt": "2023-03-10T10:41:05Z",
              "updatedAt": "2023-03-10T10:41:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjJSr",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:09:22Z",
          "updatedAt": "2023-03-10T11:09:23Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "there seems to be a bit missing:\r\n```suggestion\r\nNote that what follows is not meant to describe a real implementation.\r\nIn particular, it is expected that the resources used during the initialisation phase can be amortised across multiple appraisals.\r\n```",
              "createdAt": "2023-03-10T11:09:22Z",
              "updatedAt": "2023-03-10T11:19:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjN3N",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:18:04Z",
          "updatedAt": "2023-03-10T11:18:05Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "> this is always true. Could have been removed, if this would be normative text. But is an example. Doing both is possible (actually...) but confusing. Normative sections have to be separated from informative sections.\r\n\r\nWe could debate on whether it's a necessity -- there might be more complex control flow decisions based on a requirement violation than just \"bail out!\".\r\nBut more generally, it doesn't hurt to make an explicit statement here, to set the context at the very beginning of a long and complex set of actions.\r\n\r\n",
              "createdAt": "2023-03-10T11:18:04Z",
              "updatedAt": "2023-03-10T11:19:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjSrU",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:27:21Z",
          "updatedAt": "2023-03-10T11:27:21Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Actually, I want to correct myself.  I think we should drop L1089 altogether not because it is redundant, but because it is misleading: for example, when later on we say _\"corims outside their validity period MUST be discarded\"_ we don't want to kill the appraisal if a corim is found to be past its expiration, we just want to avoid pulling it in...",
              "createdAt": "2023-03-10T11:27:21Z",
              "updatedAt": "2023-03-10T11:27:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjS_3",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:27:58Z",
          "updatedAt": "2023-03-10T11:27:58Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-10T11:27:58Z",
              "updatedAt": "2023-03-10T11:27:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjUEL",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:30:00Z",
          "updatedAt": "2023-03-10T11:30:01Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "the chaining to a known and authorised entity is taken care of in L1099.\r\n\r\n```suggestion\r\nCoRIM that are secured by a cryptographic mechanism such as a signature MUST be discarded if the signature does not validate successfully.\r\n```",
              "createdAt": "2023-03-10T11:30:00Z",
              "updatedAt": "2023-03-10T11:30:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjYUS",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:38:23Z",
          "updatedAt": "2023-03-10T11:38:23Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "suggest streamlining a bit:\r\n\r\n```suggestion\r\nAll the available Concise Bill Of Material (CoBOMs) tags are then collected from the selected CoRIMs.\r\n```",
              "createdAt": "2023-03-10T11:38:23Z",
              "updatedAt": "2023-03-10T11:38:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjZ6x",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:41:27Z",
          "updatedAt": "2023-03-10T11:41:27Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "not clear what the \"activation criteria\" for a CoBOM would be.\r\n\r\nThe idea is that, at this stage, all CoBOMs found are taken into consideration for subsequent tags identification and validation.\r\n\r\nProbably this bit does not deserve a section on its own and can be merged with the following sub-section.",
              "createdAt": "2023-03-10T11:41:27Z",
              "updatedAt": "2023-03-10T11:41:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PjerQ",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T11:50:41Z",
          "updatedAt": "2023-03-10T11:50:41Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I see you are still a young Padawan in the art of [kramdown-rfc references](https://github.com/cabo/kramdown-rfc#references) :-)\r\n\r\n```suggestion\r\nThe verifier chooses tags -- including Concise Module ID Tags (CoMID, {{sec-comid}}), Concise Software ID Tags (CoSWID, {{-coswid}}), and/or Concise Trust Anchor Stores (CoTS, {{?I-D.ietf-rats-concise-ta-stores}}) -- from the selected CoRIMs.\r\n```",
              "createdAt": "2023-03-10T11:50:41Z",
              "updatedAt": "2023-03-10T11:52:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PnU3t",
          "commit": {
            "abbreviatedOid": "956f14b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T22:33:26Z",
          "updatedAt": "2023-03-10T22:33:26Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "We can just strike \"activated\" from activated CoBOM without loss of meaning. The Verifier trusts CoBOM tags based on its trust anchor policy.",
              "createdAt": "2023-03-10T22:33:26Z",
              "updatedAt": "2023-03-10T22:33:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PnVCo",
          "commit": {
            "abbreviatedOid": "956f14b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T22:34:29Z",
          "updatedAt": "2023-03-10T22:45:27Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "\"...activated.\" is sufficient \"by a CoBOM.\" can be deleted without loss of meaning.",
              "createdAt": "2023-03-10T22:34:29Z",
              "updatedAt": "2023-03-10T22:45:27Z"
            },
            {
              "originalPosition": 177,
              "body": "The attribute name is `digests` -- suggest: \"Comparing digests entries\"",
              "createdAt": "2023-03-10T22:44:21Z",
              "updatedAt": "2023-03-10T22:45:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Pr2ow",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T12:03:46Z",
          "updatedAt": "2023-03-13T12:03:47Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nCoRIM that are secured by a cryptographic mechanism such as a signature MUST pass signature validation successfully, if not CoRIM shall be discarded\r\n\r\n\r\n```",
              "createdAt": "2023-03-13T12:03:46Z",
              "updatedAt": "2023-03-13T12:03:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Pr6XW",
          "commit": {
            "abbreviatedOid": "956f14b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T12:10:53Z",
          "updatedAt": "2023-03-13T12:10:53Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "@andrew-draper Just checking, this comment is marked as \"Resolved\" by you without:\r\n* either changing the content in the PR \r\nOR\r\n* Providing a suitable explaination as to why you think, you wanted to retain the same text.\r\nCould you please clarify. \r\n\r\nApologies if I am looking at the wrong set of changes? Please point to the right set of files then?",
              "createdAt": "2023-03-13T12:10:53Z",
              "updatedAt": "2023-03-13T12:10:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Psx-c",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T14:06:50Z",
          "updatedAt": "2023-03-13T14:06:51Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nEach entry in the `measurement-values-map` is a separate piece of evidence describing the environment named by the `environment-map`. An attester can provide multiple `environment-map`s each containing a single values measurement-values map, a single `environment-map` containing multiple entries in its `measurement-values-map`, or a combination of these approaches.\r\n```",
              "createdAt": "2023-03-13T14:06:50Z",
              "updatedAt": "2023-03-13T14:06:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PsyGx",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T14:07:05Z",
          "updatedAt": "2023-03-13T14:07:06Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "```suggestion\r\nIf the evidence is acceptable then the CoRIM can supplement it with a more concise description of the attester.\r\n```",
              "createdAt": "2023-03-13T14:07:05Z",
              "updatedAt": "2023-03-13T14:07:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PsyPp",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T14:07:22Z",
          "updatedAt": "2023-03-13T14:07:22Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nThis specification makes no assumptions on the specific shape of the Attestation Result, except for its optional ability to include Evidence from the attester and Endorsed Values that the Verifier has been able to infer from Evidence and the Appraisal Context.\r\n```",
              "createdAt": "2023-03-13T14:07:22Z",
              "updatedAt": "2023-03-13T14:07:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PsycJ",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T14:07:44Z",
          "updatedAt": "2023-03-13T14:07:45Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "```suggestion\r\nIn each pass, each potential CoMID tag in the Appraisal Context is compared against the accepted claims set (which has been initialised with Evidence from the attester(s) ). If the reference values in the CoMID tag match the Accepted Claims Set then Endorsements and other values from the tag are added to the Accepted Claims Set.\r\n```",
              "createdAt": "2023-03-13T14:07:44Z",
              "updatedAt": "2023-03-13T14:07:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-nRA",
          "commit": {
            "abbreviatedOid": "f110165"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:37:15Z",
          "updatedAt": "2023-03-15T15:37:15Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "If you want to leave these subsections as placeholders, please add an issue to track these and reference it in here using:\r\n```\r\n[^issue]: Content missing. Tracked at: <THE_ISSUE_URL_HERE>\r\n```",
              "createdAt": "2023-03-15T15:37:15Z",
              "updatedAt": "2023-03-15T15:37:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QADCM",
          "commit": {
            "abbreviatedOid": "f8e3853"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T19:02:08Z",
          "updatedAt": "2023-03-15T19:02:08Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "I don't think these comments have been addressed:\r\n\r\n1. remove \"activate\"\r\n2. merge the two adjacent subsections",
              "createdAt": "2023-03-15T19:02:08Z",
              "updatedAt": "2023-03-15T19:02:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QPe9N",
          "commit": {
            "abbreviatedOid": "539e198"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "committing a first batch of comments before leaving office for the w/e.  I'll restart on Monday from L1196.",
          "createdAt": "2023-03-17T16:01:30Z",
          "updatedAt": "2023-03-17T16:21:03Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "this must is normative:\r\n\r\n```suggestion\r\nVerifiers claiming compliance with this specification MUST exhibit the same\r\n```",
              "createdAt": "2023-03-17T16:01:30Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 29,
              "body": "An observation: the term \"CoRIM tag\" does not look right.  A CoRIM _has_ tags (i.e., CoMIDs, CoSWIDs, CoBOMs, CoTS), but it's not itself a tag.\r\n\r\nIn this context seems more appropriate to talk about endorsed values and reference values rather than a generic CoRIM, which includes the crypto material.\r\n\r\n```suggestion\r\nwith objects such as CoRIM tags,\r\ncryptographic validation key material (e.g., raw public keys, root certificates,\r\nintermediate CA certificate chains), etc. that will be used in the subsequent\r\nEvidence Appraisal phase.\r\n```",
              "createdAt": "2023-03-17T16:07:41Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 47,
              "body": "this seems to repeat L1112, specifically:\r\n\r\n_\"[...] that cannot be associated with an authenticated [...] source MUST be discarded.\"_",
              "createdAt": "2023-03-17T16:11:08Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 87,
              "body": "I suggest we drop _\"potentially useful\"_ as it's not necessary (and a bit distracting)",
              "createdAt": "2023-03-17T16:15:20Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 107,
              "body": "streamline\r\n\r\n```suggestion\r\nwhich are used as input to appraisal by the Verifier.\r\n```",
              "createdAt": "2023-03-17T16:17:52Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 97,
              "body": "missing capitalisation (Evidence, Verifier, Attester)",
              "createdAt": "2023-03-17T16:18:22Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\nthe DeviceID certificate (see Section 9.2.1 of {{DICE-Layering-Architecture}}) --\r\n```",
              "createdAt": "2023-03-17T16:19:15Z",
              "updatedAt": "2023-03-17T16:21:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QP4HV",
          "commit": {
            "abbreviatedOid": "c4e9db2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-17T17:00:37Z",
          "updatedAt": "2023-03-17T18:27:42Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "The RATS Arch asserts that the Verifier communicates with an Attester (not plural). If we want to describe a scenario where there are multiple endpoints to a conveyance protocol, we should use 'Attesting Environment' terminology. e.g. \"In the evidence collection phase the Verifier communicates with multiple Attesting Environments to...\"",
              "createdAt": "2023-03-17T17:00:37Z",
              "updatedAt": "2023-03-17T18:27:42Z"
            },
            {
              "originalPosition": 87,
              "body": "+1",
              "createdAt": "2023-03-17T18:23:14Z",
              "updatedAt": "2023-03-17T18:27:42Z"
            },
            {
              "originalPosition": 114,
              "body": "Inconsistent use of terms: 'Evidence collection' or 'evidence collection' but not both.",
              "createdAt": "2023-03-17T18:25:46Z",
              "updatedAt": "2023-03-17T18:27:42Z"
            },
            {
              "originalPosition": 107,
              "body": "'can be' seems appropriate since Evidence can be protected by a conveyance protocol or by a conveyance mechanism such as COSE wrapper.",
              "createdAt": "2023-03-17T18:26:43Z",
              "updatedAt": "2023-03-17T18:27:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QXN5d",
          "commit": {
            "abbreviatedOid": "c4e9db2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "review completed.  Thanks for your patience.",
          "createdAt": "2023-03-20T10:51:37Z",
          "updatedAt": "2023-03-20T14:23:21Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "I have a few troubles with this section, starting with the naming \"accepted claims set\" for something that should be a superset of Evidence. (Specifically, why \"accepted\", I don't think anything has been \"rejected\" from Evidence.).\r\nMaybe we could change it to \"appraised claims-set\".\r\n\r\nBut the high level bit for me is I think we are elevating an implementation detail (that of how evidence is \"internalised\") to an algorithmic necessity.\r\n\r\nTo me, the real deal is about highlighting the need to define the semantic mapping from evidence to CoRIM data used for ref-val and endorsed-val matching:\r\n\r\n1. target (& attesting) environment mapping\r\n2. measurement mapping\r\n\r\nwhich must be left to profiles.\r\n\r\nI very much prefer if we'd stick with the structure in my [wiki musing](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/Notes-on-the-appraisal-flow).",
              "createdAt": "2023-03-20T11:03:38Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 154,
              "body": "we are using \"Accepted Claims Set\" without defining it.",
              "createdAt": "2023-03-20T11:04:18Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 159,
              "body": "entries of?\r\n\r\n```suggestion\r\na `measurement-values-map` containing one or more entries of ...\r\n```",
              "createdAt": "2023-03-20T11:05:14Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 171,
              "body": "These two paragraphs seem to assume that the evidence format uses `environment-map`s and `measurement-values-map`s natively, which is not the case in general.",
              "createdAt": "2023-03-20T11:11:35Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 177,
              "body": "kramdown-rfc typography notes:\r\n\r\n* Refs use double curly brackets `{{...}}`\r\n* anchors are somewhat smart: a section anchor will resolve to \"Section x.y.z\", a  figure anchor to \"Figure n\"\r\n\r\n```suggestion\r\n{{sec-dice-spdm}} provides information on how evidence collected using\r\n```",
              "createdAt": "2023-03-20T11:16:46Z",
              "updatedAt": "2023-03-20T23:05:52Z"
            },
            {
              "originalPosition": 175,
              "body": "This is a requirement for a profile.\r\n\r\nFor example, [Section 3 of CoRIM-PSA](https://www.ietf.org/archive/id/draft-fdb-rats-psa-endorsements-02.html#name-psa-endorsements) completely avoids this while still specifying all the evidence-to-CoRIM mappings needed.\r\n\r\nI think we can drop this and rely on the more specific profile requirement in the subsequent sections.\r\n",
              "createdAt": "2023-03-20T11:19:12Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 181,
              "body": "\"Evidence appraisal\" also includes cryptographic validation.\r\n\r\n(See also my previous note on the section structuring.)",
              "createdAt": "2023-03-20T11:33:08Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 186,
              "body": "This sentence is a bit problematic:\r\n\r\n1. We should define what we mean by _\"acceptable evidence\"_\r\n2. _\"supplement\"_ and _\"more concise\"_ are a bit at odds.  I'd rather say something like: _\"If Evidence matches, the Verifier can supplement it with further details about the Attester, see {{\"Adding CoMID Endorsed Values to the Accepted Claims Set\"}}.\"_\r\n\r\n",
              "createdAt": "2023-03-20T11:39:33Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 189,
              "body": "Not clear which _phase_ can be repeated and what this _phase_ entails -- it looks like the phase is \"supplementing evidence\", but I don't think it's what we want to say.",
              "createdAt": "2023-03-20T11:55:27Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 196,
              "body": "s/attestor/Attester/",
              "createdAt": "2023-03-20T12:12:47Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 219,
              "body": "the content of this parenthetical should have been stated much earlier, possibly even at the top in the \"accepted claims set\" section.",
              "createdAt": "2023-03-20T12:21:56Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 226,
              "body": "TBC(tho) if this works with conditional endorsements.",
              "createdAt": "2023-03-20T12:27:24Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 223,
              "body": "not sure what this means.  Also, what happens if no tags matched in a pass?",
              "createdAt": "2023-03-20T12:29:07Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 217,
              "body": "I think the unit of logical comparison is the single triple rather than an entire CoMID.\r\n\r\nImplementation note: in our verifier all CoMIDs that have been \"activated\" are merged into the appraisal context.",
              "createdAt": "2023-03-20T13:58:29Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 230,
              "body": "Complex behaviour as the one described above should be encoded in a triple rather than trickling through the whole process.",
              "createdAt": "2023-03-20T14:06:50Z",
              "updatedAt": "2023-03-20T14:23:21Z"
            },
            {
              "originalPosition": 238,
              "body": "It doesn't seem to be specified what it mean for a tag to match?  All the triples must match?  Or one is sufficient?  If the latter, then I'd argue that the unit of matching is not the CoMID, but the triple.",
              "createdAt": "2023-03-20T14:10:00Z",
              "updatedAt": "2023-03-20T14:23:22Z"
            },
            {
              "originalPosition": 244,
              "body": "We don't seem to define what is the _\"canonical format\"_?",
              "createdAt": "2023-03-20T14:10:40Z",
              "updatedAt": "2023-03-20T14:23:22Z"
            },
            {
              "originalPosition": 251,
              "body": "we should create a shorthand for _\"Accepted Claims Set\"_ (e.g., ACS).",
              "createdAt": "2023-03-20T14:11:44Z",
              "updatedAt": "2023-03-20T14:23:22Z"
            },
            {
              "originalPosition": 261,
              "body": "This looks like a fundamental design decision that needs further discussion.\r\n\r\nIf we want to use this method (i.e., CBOR tags) to define the matcher for a base type, we should describe it in the measurement-map section and registry also/first.\r\n\r\nI know SVN is a precedent here, but other methods may be used (i.e., using a different key in the map) that are more cohesive -- i.e., they don't scatter semantics over different registries.",
              "createdAt": "2023-03-20T14:16:53Z",
              "updatedAt": "2023-03-20T23:06:48Z"
            },
            {
              "originalPosition": 232,
              "body": "It looks like at least half of this section (i.e., the part that discusses the details of value matching) belongs to the measurement-value-map section.",
              "createdAt": "2023-03-20T14:21:01Z",
              "updatedAt": "2023-03-20T14:23:22Z"
            },
            {
              "originalPosition": 296,
              "body": "Not sure what we mean by _\"must attempt\"_.  It this a best-effort operation?  (I don't think so.)",
              "createdAt": "2023-03-20T14:21:49Z",
              "updatedAt": "2023-03-20T23:07:23Z"
            },
            {
              "originalPosition": 300,
              "body": "missing whitespace\r\n\r\n```suggestion\r\n`measurement-values-map` key, but a different `measurement-values-map` value\r\n```",
              "createdAt": "2023-03-20T14:22:39Z",
              "updatedAt": "2023-03-20T14:23:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SX0AB",
          "commit": {
            "abbreviatedOid": "d80c5fa"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T19:33:13Z",
          "updatedAt": "2023-04-12T19:33:13Z",
          "comments": [
            {
              "originalPosition": 217,
              "body": "Does \"activated\" mean the same as \"accepted\" in the context of the discussion related to \"accepted Claims\"?",
              "createdAt": "2023-04-12T19:33:13Z",
              "updatedAt": "2023-04-12T19:33:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SX3jv",
          "commit": {
            "abbreviatedOid": "d80c5fa"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Multiple comments",
          "createdAt": "2023-04-12T19:44:27Z",
          "updatedAt": "2023-04-12T20:33:12Z",
          "comments": [
            {
              "originalPosition": 223,
              "body": "Using terminology such as first pass, second pass etc. may be too prescriptive in terms of an implementation. It may be better to describe the steps or stages of appraisal as a simple workflow that accepts / activates a Claim based on well-defined criteria for acceptance.  E.g.:\r\nEvidence Claim without an expected Reference Value : accept\r\nEvidence Claims with trusted Reference Value: accept if RV matches Evidence\r\nEndorsed Value : accept if Endorser is trusted\r\nConditional endorsed value: accept if stateful environment has been accepted\r\nIdentity Claim : accept if authentication challenge-response is valid\r\netc...",
              "createdAt": "2023-04-12T19:44:27Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 230,
              "body": "The \"accepted Claims\" structure should support a hierarchical(?) composition of the Attester based on various groupings of Evidence, such as when a lead attester presents multiple instances of Evidence presumably pertaining to different components (aka Target Environments) or when Evidence is described using identifiers that have compositional scope. For example, a \"device identifier\" may be composed of multiple sub-components but the Endorsement claim that the device is WIFI certified (for example) may apply to several grouped sub-components. \r\n\r\nThere may be some tweaks to the triples logic that make the hierarchy easier to represent. For example, a 'domain' that groups several environments could itself be an \"Environment\", aka component that consists of multiple sub-components. Today 'domain' identifiers differ from 'environment' identifiers. Possibly, domain should reuse environment identifiers as a straight forward way of representing a hierarchy of 'environments'? ",
              "createdAt": "2023-04-12T19:56:33Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 234,
              "body": "```suggestion\r\nThis section describes the process performed by the Verifier to determine\r\n```",
              "createdAt": "2023-04-12T19:57:27Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 235,
              "body": "Given the discussion above, the candidate \"Claim\" is \"accepted\" if the rules for appraisal are satisfied, then the Claim is added to the Accepted Claims set. \r\nA CoMID \"tag\" can contain multiple triples that describe multiple components having multiple Claims. It seems trying to describe an appraisal process at the 'tag' granularity may be difficult.",
              "createdAt": "2023-04-12T20:01:36Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 244,
              "body": "The Verifier relies on Reference Values to specify the 'canonical' or expected format of key-value expressions. If Evidence is in a different (non canonical) form, then the Verifier can do a conversion. For example, endieness, words vs. bytes, ascii vs. UTF8 etc.",
              "createdAt": "2023-04-12T20:07:01Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 261,
              "body": "CBOR tags could have multiple meanings: (a) data format, (b) function that is applied to the data.  I don't know if we have defined cddl that implies (b) but if we do, we should discuss the implications of this. In the case of `min-svn` there is an expectation that a 'min' function is applied when evaluating an `svn` with a `min-svn`.  However, a tagged-min-svn only indirectly implies the 'min' function semantics as the data type itself implies function semantics. \r\nIt is reasonable to expect that function semantics could be explicitly described by the cddl expression contained in the 'value' side of a 'key-value' expression. The `min-svn` example encodes the function semantics in the 'key' rather than the 'value'.",
              "createdAt": "2023-04-12T20:15:12Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 296,
              "body": "```suggestion\r\nIf a CoMID tag matches the Accepted Claims Set then the Verifier must attempt\r\n```",
              "createdAt": "2023-04-12T20:15:50Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 296,
              "body": "(as suggested above) matching should be described as the Claim level of granularity. For a CoMID tag to \"match\" Endorsed values, the tag must contain triples that contain Endorsed Values. The Environment that is the subject of the triple (aka the name portion of the 'name-value' statement) must equal the name portion of a 'name-value' statement found in ACS. This is closer to what it means to \"match\" something. The measurements in the 'value' portion of the Endorsed Values claim is copied into the ACS at the place where the name match occurred. \r\nNote: If there are Reference Value claims that didn't match Evidence then the node in the ACS where the Endorsement claim would have been copied into will be removed including any claims that might have shown up in advance, be it from processing Endorsements or from processing Attester Evidence claims are are the superset of the Reference Values claims.  \r\nBy describing the acceptance and rejection criteria, the explanation can avoid having to be careful about building up state of the ACS over multiple passes and keeping track to apply the right pass at the right time.",
              "createdAt": "2023-04-12T20:27:22Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 302,
              "body": "```suggestion\r\npart of the Claim to the Accepted Claims Map.\r\n```",
              "createdAt": "2023-04-12T20:29:34Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            },
            {
              "originalPosition": 302,
              "body": "This paragraph assumes 'exact match' semantics. Maybe this assumption should be stated clearly as part of the intro to this subsection?",
              "createdAt": "2023-04-12T20:32:06Z",
              "updatedAt": "2023-04-12T20:33:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85S-gxZ",
          "commit": {
            "abbreviatedOid": "d95cdca"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-19T13:50:07Z",
          "updatedAt": "2023-04-19T13:50:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nwith objects such as tags (CoMID, CoSWID, etc.) from CoRIM files,\r\n```",
              "createdAt": "2023-04-19T13:50:07Z",
              "updatedAt": "2023-04-19T13:50:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOH6-tI85Ll9Lf",
      "title": "Initial Introduction addition",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/68",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #4\r\nFix #6 \r\nFix #7 \r\n\r\n",
      "createdAt": "2023-03-08T18:01:12Z",
      "updatedAt": "2023-03-29T17:09:13Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "b4c4b88550c2c2fbad47e9866bc6e0f1c6a303b3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "corim-intro",
      "headRefOid": "cc7bcbacc580ddf09499ab8634a4ef05681faf27",
      "closedAt": "2023-03-29T17:09:06Z",
      "mergedAt": "2023-03-29T17:09:06Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "b2c4f2dd45dc063bf11b618cdb7f71ac5595471e"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Would love to hear feedback from you all",
          "createdAt": "2023-03-08T18:03:11Z",
          "updatedAt": "2023-03-08T18:03:11Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> committing a first batch for fear of losing work due to browser silliness...\r\n\r\n@thomas-fossati Sure, I understand and thanks for reviewing it!\r\nI will have a look at these! \r\n\r\n",
          "createdAt": "2023-03-20T17:18:05Z",
          "updatedAt": "2023-03-20T17:18:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > committing a first batch for fear of losing work due to browser silliness...\r\n> \r\n> @thomas-fossati Sure, I understand and thanks for reviewing it! I will have a look at these!\r\n\r\nSafari crashed in the middle of a previous review pass...",
          "createdAt": "2023-03-20T17:21:40Z",
          "updatedAt": "2023-03-20T17:21:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith, @henkbirkholz @andrew-draper \r\n\r\nMe and Thomas has re-written the draft together.\r\n\r\nPlease have a re-look at the modified contents and comment.\r\n\r\nAppreciate your help in this matter. ",
          "createdAt": "2023-03-29T15:02:41Z",
          "updatedAt": "2023-03-29T15:02:41Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith I agree with your suggestion. It is taken far too long and many hours for this complex document.\r\n\r\nI will merge this now!\r\n\r\nThank you for everyone who reviewed and contributed to this effort!",
          "createdAt": "2023-03-29T17:08:50Z",
          "updatedAt": "2023-03-29T17:08:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85PWOQn",
          "commit": {
            "abbreviatedOid": "65a3c10"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "manifold comments.",
          "createdAt": "2023-03-08T18:30:27Z",
          "updatedAt": "2023-03-08T19:41:58Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "wrap-around lines are difficult to review and comment on. Please break them into multiple lines.",
              "createdAt": "2023-03-08T18:30:28Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 9,
              "body": "'CBOR data' to 'CBOR'\r\nUppercase / camel-case Supply Chain Entity is not needed according to the RATS Architecture.\r\nLower case shall is not normative, but reads like a normative requirement. Maybe use 'is' or 'typically is' instead.\r\nThe rest of the sentence seems confusing as it repeats Endorsed Value and Reference Value but doesn't use RATS Architecture conventions of 'Endorser' or 'RVP'.  But if this is corrected then it repeats what is in line 93 and with this change, line 94 becomes part of the sentence that begins at line 93. ",
              "createdAt": "2023-03-08T18:32:18Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 16,
              "body": "'Chain' should be 'chain'\r\n'Endorsed' is not an upper case term according to RATS Arch. Suggest 'Endorsements'.\r\nLine 100 seems to repeat the concept described by line 94 but uses different examples, yet some are reused e.g., 'manufacturer'. Only the last sentence adds new information.\r\n",
              "createdAt": "2023-03-08T18:42:56Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 18,
              "body": "'a' schema\r\nIt doesn't define 'conveyance' it defines a manifest encoding. How the Verifier obtains the manifest is out of scope.\r\nThe schema facilitates Evidence appraisal by Verifier(s) that are independent of Attester(s), Endorser(s), and RVP(s).",
              "createdAt": "2023-03-08T18:47:41Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 20,
              "body": "Giving a name to the schema should be done earlier in this section such as the deleted line 94.\r\n'top level schema' is ambiguous. The CoBOM is the closet thing to a 'top level' according to CoRIM. But tag activation is more intuitive. Since different supply chain entities could add value any any point during supply, it could be reasonable to say each supplier adds to the 'top level', but that this also seems ambiguous. Suggest removing 'that represent top level'. However, the resulting sentence seems to repeat what is said above. So maybe its best to remove line 104.",
              "createdAt": "2023-03-08T18:53:43Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 21,
              "body": "'CBOR format.' should be moved to line 104.\r\n'tags are used to express' seems verbose : suggest \"tags contain metadata and Claims pertaining to hardware and firmware.'\r\nSuggest: \"Comid tags can describe...\"\r\nSuggest: \"SWID tags can describe software...\"\r\n'Concise' to 'concise'\r\n'SWID' should include a reference to [ISO_SWID]\r\nSuggest: \"...SWID tag that can be...\"\r\nThe last sentence should be revised to say: \"A CoRIM may contain multiple tags and can be extended to include different tag types. The base CoRIM schema defines three tag types: CoMID, CoSWID, and CoBOM.\" ",
              "createdAt": "2023-03-08T19:03:25Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 28,
              "body": "The heading should spell out the name: \"Concise Reference Integrity Manifest (CoRIM)\"",
              "createdAt": "2023-03-08T19:04:53Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 29,
              "body": "The sentence can simply use 'CoRIM' since the expanded form is in the heading.\r\nSuggest singular form: \"A CoRIM contains...\"",
              "createdAt": "2023-03-08T19:06:19Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 31,
              "body": "please break this into multiple lines.",
              "createdAt": "2023-03-08T19:08:15Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 33,
              "body": "The first sentence restates what was said above and excludes CoBOM.\r\nReferences to other sections should include a pointer.",
              "createdAt": "2023-03-08T19:09:48Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 36,
              "body": "\"A CoRIM...\"\r\n\"...can be cryptographically authenticated and integrity protected.\"\r\nMove \"The\" to line 266.",
              "createdAt": "2023-03-08T19:11:32Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 37,
              "body": "\"A CoRIM signer is an entity that asserts the integrity and authenticity of Claims.\"\r\nClaims may be asserted by a 'RIM creator' vs. a 'RIM signer'.",
              "createdAt": "2023-03-08T19:14:28Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 41,
              "body": "This is misleading as RIMs only have 'RIM locators' that are a hint for discovering possibly relevant RIMs. \r\n'device class' is ambiguous.",
              "createdAt": "2023-03-08T19:16:46Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 43,
              "body": "'Attestation Scheme' isn't a formal term according to RATS Arch.\r\nIt is unclear if line 272 is introducing the concept of 'profiles'. If so, it should provide a reference to the section that describes profiles. A brief summary of a profile might be \"A CoRIM profile contains additional information needed to complete appraisals given a specific attestation context.\"",
              "createdAt": "2023-03-08T19:23:53Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 45,
              "body": "Strike \"At the top-level,\" doesn't change the meaning.",
              "createdAt": "2023-03-08T19:25:46Z",
              "updatedAt": "2023-03-08T19:41:58Z"
            },
            {
              "originalPosition": 53,
              "body": "strike 'type'\r\nSuggest: \"A CoRIM identifier uniquely identifies a CoRIM instance. The base schema allows UUID and text identifiers. Other types of identifiers could be defined as needed.\"",
              "createdAt": "2023-03-08T19:28:24Z",
              "updatedAt": "2023-03-08T19:41:59Z"
            },
            {
              "originalPosition": 59,
              "body": "Expand the acronym in the heading.",
              "createdAt": "2023-03-08T19:30:48Z",
              "updatedAt": "2023-03-08T19:41:59Z"
            },
            {
              "originalPosition": 62,
              "body": "\"...is a tag that...\"\r\nThe tag isn't a conveyance mechanism. Suggest: \"...tag contains information about...\"\r\n\"...used by supply chain <to the rest of the sentence>\" can be removed since it is out of scope for this document.\r\nSuggest: \"Each CoMID tag has a unique identifier that is used to identify tag instances.\" ",
              "createdAt": "2023-03-08T19:36:31Z",
              "updatedAt": "2023-03-08T19:41:59Z"
            },
            {
              "originalPosition": 64,
              "body": "\"Claims\" vs. \"claims\"\r\nA short but detailed description of triples is needed. The second sentence doesn't add new information from the first sentence.",
              "createdAt": "2023-03-08T19:38:53Z",
              "updatedAt": "2023-03-08T19:41:59Z"
            },
            {
              "originalPosition": 66,
              "body": "\"Claims\" vs. \"claims\"\r\nThe structure of a reference triple should be described and should include a reference to the section that defines the triple.\r\n\r\nThe subsequent list of triples should follow suit.",
              "createdAt": "2023-03-08T19:40:55Z",
              "updatedAt": "2023-03-08T19:41:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Pdap4",
          "commit": {
            "abbreviatedOid": "65a3c10"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T15:32:21Z",
          "updatedAt": "2023-03-09T15:32:21Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "@nedmsmith I have addressed most of your comments. Please re-review.\r\n\r\nI am not convinced we should describe all the triples under CoMID Introduction section, as you stated.\r\n\r\nMay be I can add a link to individual descriptions for each of the Triples. That might be just sifficient.",
              "createdAt": "2023-03-09T15:32:21Z",
              "updatedAt": "2023-03-09T15:32:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85PnXMg",
          "commit": {
            "abbreviatedOid": "130062a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "manifold comments",
          "createdAt": "2023-03-10T22:48:22Z",
          "updatedAt": "2023-03-10T23:10:26Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Change SWID to CoSWID since CoRIM doesn't recognize SWID.",
              "createdAt": "2023-03-10T22:48:22Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 34,
              "body": "or TA Stores",
              "createdAt": "2023-03-10T22:49:01Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 48,
              "body": "\"inside a Verifier\" is confusing.",
              "createdAt": "2023-03-10T22:50:21Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 49,
              "body": "expected: \"be a version or a digest for a given firmware component.\"\r\n",
              "createdAt": "2023-03-10T22:52:10Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 50,
              "body": "Endorsed Value Provider isn't a formal term defined by RATS Architecture. The correct term is Endorser. \r\nEndorsed Value is also not formal, should be \"Endorsements\".\r\n",
              "createdAt": "2023-03-10T22:56:43Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 51,
              "body": "search and replace proper use of RATS Architecture terms.",
              "createdAt": "2023-03-10T22:57:36Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 54,
              "body": "\"refer CoMID\" to \"refer to CoMID\"",
              "createdAt": "2023-03-10T22:58:14Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 61,
              "body": "Change: \"A device may comprise\" to \"A device may be comprised of\"",
              "createdAt": "2023-03-10T22:59:28Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 104,
              "body": "change: \"hardware or firmware\" to \"hardware, firmware, or module composition that is provisioned\"",
              "createdAt": "2023-03-10T23:02:55Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 105,
              "body": "upper case Verifier",
              "createdAt": "2023-03-10T23:03:08Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 111,
              "body": "break into multiple lines.\r\nChange \"Specific example includes\" to \"Specific examples include\"\r\nChange \"immutable and additional\" to \"immutable and dynamic\"\r\nChange \"assits verifiers to derive\" to \"assist Verifiers to infer\"\r\nChange \"attester\" to \"Attester\"",
              "createdAt": "2023-03-10T23:04:38Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 115,
              "body": "Change \"keys which is\" to \"keys that are\"\r\nChange \"evidence\" to \"Evidence\"\r\nChange \"attester\" to \"Attester\"",
              "createdAt": "2023-03-10T23:07:48Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            },
            {
              "originalPosition": 119,
              "body": "suggest: \"describe the composition and topology of the Attester in terms of its modules and sub-modules.\"",
              "createdAt": "2023-03-10T23:10:00Z",
              "updatedAt": "2023-03-10T23:10:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P319r",
          "commit": {
            "abbreviatedOid": "130062a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-14T18:29:02Z",
          "updatedAt": "2023-03-14T18:29:03Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "SWID was just an intro to CoSWID",
              "createdAt": "2023-03-14T18:29:03Z",
              "updatedAt": "2023-03-14T18:29:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P32Po",
          "commit": {
            "abbreviatedOid": "130062a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-14T18:29:35Z",
          "updatedAt": "2023-03-14T18:29:35Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Anyway I have now removed it for better clarity",
              "createdAt": "2023-03-14T18:29:35Z",
              "updatedAt": "2023-03-14T18:29:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P322T",
          "commit": {
            "abbreviatedOid": "130062a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-14T18:30:44Z",
          "updatedAt": "2023-03-14T18:30:44Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Endorsed Values have been replaced in my introductions to Endorsements! However we need to work on the remainder of the original text where Endorsed Values may have been referred.",
              "createdAt": "2023-03-14T18:30:44Z",
              "updatedAt": "2023-03-14T18:30:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P43SK",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-14T21:28:36Z",
          "updatedAt": "2023-03-14T21:28:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85P449Q",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for this work.\r\n\r\nSome high-level observations:\r\n\r\n* There are a few terms that are seemingly used with a very precise meaning (e.g., Module, Claim).  We should have glossary for those\r\n* There is a fair amount of redundancy that could be removed without loss of information\r\n* Some fundamental concepts are not really explained\r\n\r\n",
          "createdAt": "2023-03-14T21:34:57Z",
          "updatedAt": "2023-03-14T22:25:53Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nDevice Manufactueres (ODMs), firmware and software vendors. Generally, these values\r\n```",
              "createdAt": "2023-03-14T21:34:57Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 21,
              "body": "the sentence seems incomplete: \"Endorsements and Reference Values\" are unqualified.",
              "createdAt": "2023-03-14T21:38:03Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 24,
              "body": "not sure when these information are *not* about an attester?",
              "createdAt": "2023-03-14T21:38:55Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 25,
              "body": "spurious comma",
              "createdAt": "2023-03-14T21:39:18Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 27,
              "body": "I don't think \"schema\" is the word we want to use here.  \"data model\" seems more appropriate.\r\n\r\nalso: \"the schema [...] facilitate interoperability between different supply chain entities and also between multiple Verifiers\" does not seem an entirely convincing argument.\r\n\r\n```suggestion\r\nThis document defines a data model for encoding manifests that contain Endorsements and Reference Values. The schema defined in this document facilitates interoperability between different supply chain entities and also between multiple Verifiers receiving these Endorsements and Reference Values.\r\n```",
              "createdAt": "2023-03-14T21:45:16Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 32,
              "body": "there's lots of redundancy in this paragraph, it can be streamlined.\r\n\r\nalso, we don't \"TA Store\" is not defined here.",
              "createdAt": "2023-03-14T21:48:38Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 43,
              "body": "it is not clear to me what we mean by \"platform\" and \"component\" here.",
              "createdAt": "2023-03-14T21:50:05Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 44,
              "body": "why \"typically\"?  I don't think it's needed.",
              "createdAt": "2023-03-14T21:50:51Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nentities and a Verifier. For example, a Reference Value provider will use CoRIM to provision\r\n```",
              "createdAt": "2023-03-14T21:51:03Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 46,
              "body": "why \"Attester Class\"?  We should avoid capitalising a word if it's not a term of art. ",
              "createdAt": "2023-03-14T21:53:23Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 47,
              "body": "I'd remove \"firmware version\" because that can be a typical endorsed value as well.",
              "createdAt": "2023-03-14T21:54:38Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nbe a firmware version or a digest for a given firmare component. Similary, an Endorser will\r\n```",
              "createdAt": "2023-03-14T21:54:48Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 49,
              "body": "what do we mean by \"test results\"?",
              "createdAt": "2023-03-14T21:57:18Z",
              "updatedAt": "2023-03-14T22:25:53Z"
            },
            {
              "originalPosition": 56,
              "body": "why is \"Claims\" capitalised?",
              "createdAt": "2023-03-14T21:58:39Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 56,
              "body": "spurious comma\r\n```suggestion\r\nThe CoRIM signer is the entity that asserts integrity and authenticity of the Claims\r\n```",
              "createdAt": "2023-03-14T21:58:58Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 58,
              "body": "grammar\r\n\r\n```suggestion\r\nA device may comprise multiple components. Endorsers and Reference Value providers\r\n```",
              "createdAt": "2023-03-14T21:59:49Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 66,
              "body": "typo: missing space.\r\nalso, there missing reference.\r\n\r\n```suggestion\r\nAttestation Context (for example, DICE or PSA).\r\n```",
              "createdAt": "2023-03-14T22:06:24Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 66,
              "body": "profiles deserve a bit more treatment",
              "createdAt": "2023-03-14T22:07:15Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 89,
              "body": "typo",
              "createdAt": "2023-03-14T22:08:15Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 101,
              "body": "```suggestion\r\nA CoMID tag contains information about hardware, firmware, or module composition that is provisioned\r\n```",
              "createdAt": "2023-03-14T22:09:41Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 103,
              "body": "ID is used for linking\r\n\r\n```suggestion\r\nin a Verifier. Each CoMID has a unique identifier that is used to identify tag instances unambigously\r\nwith in the Verifier.\r\n```",
              "createdAt": "2023-03-14T22:17:46Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 105,
              "body": "have we already defined the term \"triple\" at this point?",
              "createdAt": "2023-03-14T22:19:05Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            },
            {
              "originalPosition": 105,
              "body": "ditto for capitalised \"Claim\"",
              "createdAt": "2023-03-14T22:19:32Z",
              "updatedAt": "2023-03-14T22:25:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9Aly",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:32:20Z",
          "updatedAt": "2023-03-15T12:32:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "We do not want to remove etc, as this list may not be complete and this is only a limited set and not a definitive set of entities.",
              "createdAt": "2023-03-15T12:32:20Z",
              "updatedAt": "2023-03-15T12:32:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9CHR",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:36:04Z",
          "updatedAt": "2023-03-15T12:36:04Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I think, comma here is a logical pause. Isn't it?",
              "createdAt": "2023-03-15T12:36:04Z",
              "updatedAt": "2023-03-15T12:36:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9Dio",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:39:30Z",
          "updatedAt": "2023-03-15T12:39:31Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "a `schema` is synonymous to a model, I am happy to change it to data model, if that suits better!",
              "createdAt": "2023-03-15T12:39:31Z",
              "updatedAt": "2023-03-15T12:39:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9EX1",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:41:37Z",
          "updatedAt": "2023-03-15T12:41:37Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "These are self explanatory terms, used widely in the industry and I expect reader to understand the context!",
              "createdAt": "2023-03-15T12:41:37Z",
              "updatedAt": "2023-03-15T12:41:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9FYu",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:43:39Z",
          "updatedAt": "2023-03-15T12:43:39Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Firmware version is a specific measurement in terms of revision, so I would like to retain it!",
              "createdAt": "2023-03-15T12:43:39Z",
              "updatedAt": "2023-03-15T12:43:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9GKv",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:45:33Z",
          "updatedAt": "2023-03-15T12:45:34Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "I think, this is quite self explanatory. We do not need to qualify test results, as results obtained when certain set of test cases are executed!",
              "createdAt": "2023-03-15T12:45:33Z",
              "updatedAt": "2023-03-15T12:45:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P9GtD",
          "commit": {
            "abbreviatedOid": "902d948"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T12:46:44Z",
          "updatedAt": "2023-03-15T12:46:44Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "This is as per RATS document alignment where in bulk of the places `Claims` is capitalized!",
              "createdAt": "2023-03-15T12:46:44Z",
              "updatedAt": "2023-03-15T12:46:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-PnL",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:06:22Z",
          "updatedAt": "2023-03-15T15:06:22Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nSupply chain entities provide necessary Endorsements and Reference Values to a Verifier.\r\n```",
              "createdAt": "2023-03-15T15:06:22Z",
              "updatedAt": "2023-03-15T15:06:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-QOm",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:07:30Z",
          "updatedAt": "2023-03-15T15:07:31Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "tag-id....",
              "createdAt": "2023-03-15T15:07:30Z",
              "updatedAt": "2023-03-15T15:07:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-QoM",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:08:16Z",
          "updatedAt": "2023-03-15T15:08:17Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Add RATS reference to this,",
              "createdAt": "2023-03-15T15:08:16Z",
              "updatedAt": "2023-03-15T15:08:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-S2_",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:12:36Z",
          "updatedAt": "2023-03-15T15:12:37Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "mention they are Target Environments (example, platform, device, component or software)",
              "createdAt": "2023-03-15T15:12:36Z",
              "updatedAt": "2023-03-15T15:12:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-XTu",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:18:36Z",
          "updatedAt": "2023-03-15T15:18:36Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "More than one Attesting Environment within an Attester.",
              "createdAt": "2023-03-15T15:18:36Z",
              "updatedAt": "2023-03-15T15:18:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-d-N",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:22:56Z",
          "updatedAt": "2023-03-15T15:22:57Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "```suggestion\r\n* Domain dependency Triples describe trust relationships between domains.\r\n```",
              "createdAt": "2023-03-15T15:22:57Z",
              "updatedAt": "2023-03-15T15:22:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85P-fKZ",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-15T15:23:49Z",
          "updatedAt": "2023-03-15T15:23:50Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "Multiple Attesting Environment within an Attester",
              "createdAt": "2023-03-15T15:23:49Z",
              "updatedAt": "2023-03-15T15:23:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QOEa-",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T12:37:20Z",
          "updatedAt": "2023-03-17T12:37:20Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nSupply chain entities provide the necessary Endorsements and Reference Values associated with an Attester to a Verifier.\r\n```",
              "createdAt": "2023-03-17T12:37:20Z",
              "updatedAt": "2023-03-17T12:37:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QOE7M",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T12:38:41Z",
          "updatedAt": "2023-03-17T12:38:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Remove these values are from the text",
              "createdAt": "2023-03-17T12:38:41Z",
              "updatedAt": "2023-03-17T12:38:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QOFse",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T12:40:52Z",
          "updatedAt": "2023-03-17T12:40:52Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nThis document defines a data model for encoding manifest that contains the Endorsements and Reference Values. The model defined in this document facilitate harmonization between different supply chain entities and also between multiple Verifiers receiving these Endorsements and Reference Values.\r\n```",
              "createdAt": "2023-03-17T12:40:52Z",
              "updatedAt": "2023-03-17T12:40:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QOLPx",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T12:56:11Z",
          "updatedAt": "2023-03-17T12:56:12Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\ndescribe platforms, devices and components. A CoSWID Tag represents a Concise representation of a SWID tag and can be implemented in a memory efficient manner. The tag can be extended to accomodate other types of information example TA store. A TA store tag represents a Trust Anchor Store. A CoRIM consists of one or more CoMID and/or CoSWID and/or TA Store tag.\r\n```",
              "createdAt": "2023-03-17T12:56:11Z",
              "updatedAt": "2023-03-17T12:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QONNH",
          "commit": {
            "abbreviatedOid": "49990ba"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T13:01:01Z",
          "updatedAt": "2023-03-17T13:01:02Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM) for expressing\r\n```\r\nThis line is abosbed in 107 and can be unified",
              "createdAt": "2023-03-17T13:01:01Z",
              "updatedAt": "2023-03-17T13:01:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QRhcT",
          "commit": {
            "abbreviatedOid": "159d0f8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-17T21:49:27Z",
          "updatedAt": "2023-03-17T21:50:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "suggest: \r\n\"Each CoMID has a unique identifier (tag-id) that is used to unambiguously identify CoMID tags.\r\nThe `tag-id` may be used to cross reference CoMID tags from other manifest files and tags within the same manifest, such as a CoBOM, CoSWID, or TA-Store.\"",
              "createdAt": "2023-03-17T21:49:27Z",
              "updatedAt": "2023-03-17T21:50:40Z"
            },
            {
              "originalPosition": 15,
              "body": "Should be lower case \" * Domain dependency triples ...\"",
              "createdAt": "2023-03-17T21:50:26Z",
              "updatedAt": "2023-03-17T21:50:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QZI4l",
          "commit": {
            "abbreviatedOid": "b9e6f49"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-20T15:09:02Z",
          "updatedAt": "2023-03-20T15:10:28Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "may be comprised of ",
              "createdAt": "2023-03-20T15:09:02Z",
              "updatedAt": "2023-03-20T15:10:28Z"
            },
            {
              "originalPosition": 18,
              "body": "establishes --> defines",
              "createdAt": "2023-03-20T15:09:37Z",
              "updatedAt": "2023-03-20T15:10:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QZtKg",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-20T16:04:32Z",
          "updatedAt": "2023-03-20T16:04:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85QZ7i7",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "committing a first batch for fear of losing work due to browser silliness...",
          "createdAt": "2023-03-20T16:28:42Z",
          "updatedAt": "2023-03-20T17:13:18Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "removing redundancy\r\n\r\n```suggestion\r\nconveying Endorsements and Reference Values in CBOR format.\r\n```",
              "createdAt": "2023-03-20T16:28:42Z",
              "updatedAt": "2023-03-20T17:13:18Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nSupply chain actors provide Endorsements and Reference Values ({{Section 4.2 of -rats-arch}}) that describe an Attester to a Verifier.\r\n```",
              "createdAt": "2023-03-20T16:31:53Z",
              "updatedAt": "2023-03-20T17:13:19Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nExamples of supply chain entites include Original Equipment Manufacturers (OEMs), Original Device Manufactueres (ODMs), firmware and software vendors, integrators.\r\nIn a complex supply chain, these values can be created by multiple entities at different points in time.\r\n```",
              "createdAt": "2023-03-20T16:42:32Z",
              "updatedAt": "2023-03-20T17:13:19Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM), a data format to convey Endorsements and Reference Values.\r\n```",
              "createdAt": "2023-03-20T16:45:34Z",
              "updatedAt": "2023-03-20T17:13:19Z"
            },
            {
              "originalPosition": 31,
              "body": "clarify and streamline\r\n\r\n```suggestion\r\nAlongside metadata identifying the authoring supply chain entities, the time validity of the included information, etc., a CoRIM contains a collection of \"tags\".\r\nTags can be of different types:\r\n\r\n* Concise Module ID (CoMID) tags contain metadata and claims about hardware and firmware modules;\r\n* CoSWID tags represent software components;\r\n* Concise Bill of Material (CoBOM) tags contain the list of CoMID and CoSWID tags that the Verifier should consider as \"active\" at a certain point in time.\r\n\r\nThe set of tags is extensible so that future specifications can add new kinds of information.  For example, Concise Trust Anchor Stores (CoTS) {{?I-D.draft-ietf-rats-concise-ta-stores}} are currently being defined as a standard CoRIM extension.\r\n```",
              "createdAt": "2023-03-20T17:09:47Z",
              "updatedAt": "2023-03-20T22:57:09Z"
            },
            {
              "originalPosition": 33,
              "body": "OBE\r\n\r\n```suggestion\r\n```",
              "createdAt": "2023-03-20T17:12:38Z",
              "updatedAt": "2023-03-20T17:13:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QaSyG",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-20T17:20:51Z",
          "updatedAt": "2023-03-20T17:20:51Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "@thomas-fossati I would retain Some examples,  to start on line 104, as we definitely do not want to restrict the set to certain known fixed values.",
              "createdAt": "2023-03-20T17:20:51Z",
              "updatedAt": "2023-03-20T17:20:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QaTp7",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-20T17:23:03Z",
          "updatedAt": "2023-03-20T17:23:03Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "I think, it is quite clear that defining a common format helps harmonization and it is a worth stating that, just elevates the relevance of the document",
              "createdAt": "2023-03-20T17:23:03Z",
              "updatedAt": "2023-03-20T17:23:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QaUeq",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "second and final batch of comments \ud83d\ude05 ",
          "createdAt": "2023-03-20T17:25:09Z",
          "updatedAt": "2023-03-20T18:58:00Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "also CoBOMs",
              "createdAt": "2023-03-20T17:25:10Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 29,
              "body": "this is a standard document, we don't need to make the case for standardisation, we are past that point.",
              "createdAt": "2023-03-20T17:27:16Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 26,
              "body": "there's no loss: the same effect is obtained with _\"examples ... include\"_",
              "createdAt": "2023-03-20T17:28:47Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 49,
              "body": "we have already said this multiple times already in the preceding text.",
              "createdAt": "2023-03-20T17:32:48Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 58,
              "body": "in the RATS arch, capitalised \"Claims\" is for Evidence claims.  maybe use \"statements\" instead.",
              "createdAt": "2023-03-20T17:33:49Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 56,
              "body": "here we should talk about signed (using COSE Sign1) or unsigned (using an unspecified secure channel) CoRIMs.",
              "createdAt": "2023-03-20T17:35:46Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 58,
              "body": "here we should talk about CoRIM \"entity\" and \"roles\"",
              "createdAt": "2023-03-20T17:37:51Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 62,
              "body": "the connection between separate endorsers/ref-value providers and locator data seems quite tenuous to me.  I'd remove the link, or drop locator altogether.",
              "createdAt": "2023-03-20T17:39:40Z",
              "updatedAt": "2023-03-20T23:01:04Z"
            },
            {
              "originalPosition": 66,
              "body": "spurious capitalisation for \"Context\"",
              "createdAt": "2023-03-20T17:40:22Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 90,
              "body": "this new bit is redundant: the semantic description of id is already done in the parent section, where it belongs.  This sub-section should just describe the type in terms of available choices and extensibility. I think one important aspect that is missing at the moment is telling the reader how the `tstr` type is supposed to provide uniqueness.",
              "createdAt": "2023-03-20T17:46:18Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 104,
              "body": "split at line breaks; remove redundancy and inaccuracies\r\n\r\n```suggestion\r\nA CoMID tag contains information about hardware, firmware, or module composition.\r\nEach CoMID has a unique id that is used to unambiguously identify\r\nCoMID instances when cross-referencing CoMID tags, for example in typed link relations, or in a CoBOM tag.\r\n```",
              "createdAt": "2023-03-20T18:17:37Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 107,
              "body": "remove problematic \"Claim\"\r\n\r\n```suggestion\r\nCentral to CoMID is the concept of triples.\r\nAt a high level, a triple is a statement linking a subject to an object via a predicate.\r\nCoMID triples typically encode assertions made by the CoRIM author about Attesting or Target Environments and their security features, for example measurements, cryptographic key material, etc.\r\n```",
              "createdAt": "2023-03-20T18:20:23Z",
              "updatedAt": "2023-03-20T18:58:00Z"
            },
            {
              "originalPosition": 109,
              "body": "```suggestion\r\nThe set of triples is extensible.\r\nThe following triples are currently defined:\r\n```",
              "createdAt": "2023-03-20T18:28:51Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 112,
              "body": "kramdown-rfc itemisation does not require empty lines between items, only before the first item.\r\n```suggestion\r\n```",
              "createdAt": "2023-03-20T18:29:04Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-20T18:30:33Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-20T18:30:41Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 122,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-20T18:30:47Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n* Reference Values triples: containing Reference Values that are expected to match Evidence for a given Target Environment ({{sec-comid-triple-refval}}).\r\n```",
              "createdAt": "2023-03-20T18:32:10Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 116,
              "body": "```suggestion\r\n* Endorsed Values triples: containing \"endorsed values\", i.e. features about a Target Environment that do not appear in Evidence ({{sec-comid-triple-endval}}}).\r\nSpecific examples include testing or certification data pertaining to a module.\r\n```",
              "createdAt": "2023-03-20T18:39:22Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n* Device Identity triples: containing cryptographic credentials - for example, an IDevID - uniquely identifying a device ({{sec-comid-triple-identity}}).\r\n```",
              "createdAt": "2023-03-20T18:46:38Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n* Attestation Key triples: containing cryptographic keys that are used to verify the integrity protection on the Evidence received from the Attester ({{sec-comid-triple-attest-key}}).\r\n```",
              "createdAt": "2023-03-20T18:49:37Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 123,
              "body": "```suggestion\r\n* Domain dependency triples: describing trust relationships between domains, i.e., collections of related environments and their measurements ({{sec-comid-triple-domain-dependency}}).\r\n```",
              "createdAt": "2023-03-20T18:51:34Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 124,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-20T18:51:44Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 127,
              "body": "```suggestion\r\n* Domain membership triples: describing topological relationships between modules.\r\nFor example, in a composite Attester comprising multiple sub-Attesters, this triple can be used to define the topological relationship between lead- and sub- Attester environments ({{sec-comid-triple-domain-membership}}).\r\n```",
              "createdAt": "2023-03-20T18:54:31Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 128,
              "body": "please remove spurious NL",
              "createdAt": "2023-03-20T18:55:25Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            },
            {
              "originalPosition": 130,
              "body": "```suggestion\r\n* CoMID-CoSWID linking triples: associating a Target Environment with existing CoSWID tags ({{sec-comid-triple-coswid}}).\r\n```",
              "createdAt": "2023-03-20T18:57:00Z",
              "updatedAt": "2023-03-20T18:58:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeDOb",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T09:54:23Z",
          "updatedAt": "2023-03-21T09:54:24Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "No, in this section, we have set some examples of possible values so elaborating what has been said earlier, it is minimal repetition only on line 269 to set the examples.",
              "createdAt": "2023-03-21T09:54:23Z",
              "updatedAt": "2023-03-21T09:54:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeLHj",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T10:10:38Z",
          "updatedAt": "2023-03-21T10:10:38Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "we assume the reader has gone through the intro already.\r\nhere we should go into the details.",
              "createdAt": "2023-03-21T10:10:38Z",
              "updatedAt": "2023-03-21T10:10:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeNHI",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T10:14:46Z",
          "updatedAt": "2023-03-21T10:14:47Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Yes, but in Introduction we have not specified any example of Reference Values or Endorsement Values are, so this is setting some specific scene to the CoRIM context, a bit more elaborate example of what has been stated at a very high level in the Intro section. ",
              "createdAt": "2023-03-21T10:14:46Z",
              "updatedAt": "2023-03-21T10:14:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeTg4",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T10:29:49Z",
          "updatedAt": "2023-03-21T10:29:49Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "These are some examples we want to state here. We do not want to have a definitive example set here.",
              "createdAt": "2023-03-21T10:29:49Z",
              "updatedAt": "2023-03-21T10:29:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeXcT",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T10:38:19Z",
          "updatedAt": "2023-03-21T10:38:20Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Regardless of what point we are in standardization, it is always good to specify the purpose of the document.\r\n\r\nI would retain it for now and let's discuss this in the meeting, what others feel about the purpose/relevance!",
              "createdAt": "2023-03-21T10:38:20Z",
              "updatedAt": "2023-03-21T10:38:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QeiSr",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T11:05:14Z",
          "updatedAt": "2023-03-21T11:05:14Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "sure, that's what _\"examples ... include\"_ means.",
              "createdAt": "2023-03-21T11:05:14Z",
              "updatedAt": "2023-03-21T11:05:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qej6H",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T11:09:31Z",
          "updatedAt": "2023-03-21T11:09:31Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "what I'm suggesting is to streamline this, not to drop it completely.",
              "createdAt": "2023-03-21T11:09:31Z",
              "updatedAt": "2023-03-21T11:09:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QemAD",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T11:13:38Z",
          "updatedAt": "2023-03-21T11:13:39Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "I am not strictly against keeping that sentence (though I reckon we could drop it without relevant loss of information), but *if* we want to say that CoRIM _\"facilitate harmonisation between different supply chain entities.\"_, we also need to explain how.",
              "createdAt": "2023-03-21T11:13:38Z",
              "updatedAt": "2023-03-21T11:13:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qeonv",
          "commit": {
            "abbreviatedOid": "40862c9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T11:20:32Z",
          "updatedAt": "2023-03-21T11:20:32Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Yes, point taken and I realized what is the precise problem. This text should be in fact part of the Introduction Paragraph and then move specifics of CoRIM in the CoRIM specific section.\r\n\r\nThis also removes \"Duplication\" which is also there in the document so have addressed this in the new revision.\r\n\r\nThank you for your help!",
              "createdAt": "2023-03-21T11:20:32Z",
              "updatedAt": "2023-03-21T11:20:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qflni",
          "commit": {
            "abbreviatedOid": "dbc70c5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T13:26:06Z",
          "updatedAt": "2023-03-21T13:26:07Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This is not the way I-D refs work.  If you want you can copy the ref I've left inline in one of my previous comments.",
              "createdAt": "2023-03-21T13:26:06Z",
              "updatedAt": "2023-03-21T13:26:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qfp0u",
          "commit": {
            "abbreviatedOid": "dbc70c5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T13:31:49Z",
          "updatedAt": "2023-03-21T13:31:50Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This seems to be working and taking us to the IETF data tracker for concise TA Store?",
              "createdAt": "2023-03-21T13:31:49Z",
              "updatedAt": "2023-03-21T13:31:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QfqZV",
          "commit": {
            "abbreviatedOid": "dbc70c5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T13:32:55Z",
          "updatedAt": "2023-03-21T13:32:55Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "`draft-` is not needed",
              "createdAt": "2023-03-21T13:32:55Z",
              "updatedAt": "2023-03-21T13:32:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QhTzT",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "manifold comments",
          "createdAt": "2023-03-21T16:22:31Z",
          "updatedAt": "2023-03-21T16:31:59Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "should be '.., for example...'",
              "createdAt": "2023-03-21T16:22:31Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 65,
              "body": "should italicize 'triples'",
              "createdAt": "2023-03-21T16:23:44Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 66,
              "body": "\"...statement that links...\"",
              "createdAt": "2023-03-21T16:24:07Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 67,
              "body": "\"CoMID triples, typically, encode...\" \"...CoRIM author, about...\"",
              "createdAt": "2023-03-21T16:24:42Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 71,
              "body": "\"The set of _triples_ is extensible.\"",
              "createdAt": "2023-03-21T16:27:27Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 72,
              "body": "\"The following _triples_ are currently defined:\"",
              "createdAt": "2023-03-21T16:28:14Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            },
            {
              "originalPosition": 74,
              "body": "\" * `reference-value-triple-record`: contains Reference Values that are...\"\r\n\r\nand subsequent bullets should follow the convention of naming the CDDL triple record IMHO",
              "createdAt": "2023-03-21T16:30:05Z",
              "updatedAt": "2023-03-21T16:31:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QiNGZ",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T18:19:23Z",
          "updatedAt": "2023-03-21T18:19:23Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "I do not think, comma is necessary in this statement!",
              "createdAt": "2023-03-21T18:19:23Z",
              "updatedAt": "2023-03-21T18:19:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QiNSk",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T18:19:42Z",
          "updatedAt": "2023-03-21T18:19:42Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Its just style of writing, but I have corrected it!",
              "createdAt": "2023-03-21T18:19:42Z",
              "updatedAt": "2023-03-21T18:19:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QiOQV",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T18:21:27Z",
          "updatedAt": "2023-03-21T18:21:28Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Done!",
              "createdAt": "2023-03-21T18:21:27Z",
              "updatedAt": "2023-03-21T18:21:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QiOTn",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T18:21:35Z",
          "updatedAt": "2023-03-21T18:21:35Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Corrected!",
              "createdAt": "2023-03-21T18:21:35Z",
              "updatedAt": "2023-03-21T18:21:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QiPb7",
          "commit": {
            "abbreviatedOid": "4f8683c"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-21T18:24:41Z",
          "updatedAt": "2023-03-21T18:24:42Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "> \" * `reference-value-triple-record`: contains Reference Values that are...\"\r\n> \r\n> and subsequent bullets should follow the convention of naming the CDDL triple record IMHO\r\n\r\nWe are linking every triple description to the section about that triple.\r\n\r\nThis is just a top level introduction section. The Triples section should dive into exact names of the triples in my view!\r\n\r\nLets discuss this aspect in the meeting tomorrow!",
              "createdAt": "2023-03-21T18:24:41Z",
              "updatedAt": "2023-03-21T18:24:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qmk1V",
          "commit": {
            "abbreviatedOid": "6feff44"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T10:55:17Z",
          "updatedAt": "2023-03-22T10:55:18Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nDevice Manufacturers (ODMs), firmware and software vendors. In a complex\r\n```",
              "createdAt": "2023-03-22T10:55:18Z",
              "updatedAt": "2023-03-22T10:55:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qmn0x",
          "commit": {
            "abbreviatedOid": "6feff44"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T11:02:32Z",
          "updatedAt": "2023-03-22T11:02:33Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nsupply chain, it is likely multiple actors will produce these values at different points in time.\r\n```",
              "createdAt": "2023-03-22T11:02:32Z",
              "updatedAt": "2023-03-22T11:03:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qmusi",
          "commit": {
            "abbreviatedOid": "6feff44"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T11:20:07Z",
          "updatedAt": "2023-03-22T11:20:08Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nsecurely convey the Endorsements and Reference Values to a Verifier. Typical Reference Values can\r\n```",
              "createdAt": "2023-03-22T11:20:07Z",
              "updatedAt": "2023-03-22T11:20:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qmw_E",
          "commit": {
            "abbreviatedOid": "2df2677"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T11:26:31Z",
          "updatedAt": "2023-03-22T11:26:31Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM), a CBOR-based data format to securely convey the Endorsements and Reference Values to a Verifier.\r\nTypical Reference Values can be the version or a digest for a given firmware component.\r\nTypical Endorsements may be information such as test results or certification data pertaining to an Attester.\r\n```",
              "createdAt": "2023-03-22T11:26:31Z",
              "updatedAt": "2023-03-22T11:29:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qmyf-",
          "commit": {
            "abbreviatedOid": "d37417b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T11:30:26Z",
          "updatedAt": "2023-03-22T11:30:27Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nSupply chain actors provide Endorsements and Reference Values\r\n```",
              "createdAt": "2023-03-22T11:30:26Z",
              "updatedAt": "2023-03-22T11:30:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qm9DX",
          "commit": {
            "abbreviatedOid": "52d68fb"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:00:28Z",
          "updatedAt": "2023-03-22T12:00:29Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nIn order to conduct Evidence appraisal, a Verifier requires not only fresh Evidence from an Attester, but also trusted Endorsements (e.g., test results or certification data) and Reference Values (e.g., the version or digest of a firmware component) associated with the Attester from the relevant supply chain actors, such as manufacturers, distributors, or device owners.  In a complex supply chain, it is likely that multiple actors will produce these values at different points in time.\r\n\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM) a CBOR {{-cbor}} based data format allowing multiple supply chain actors to securely convey Endorsements and Reference Values to a Verifier.\r\n```",
              "createdAt": "2023-03-22T12:00:28Z",
              "updatedAt": "2023-03-22T12:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnMgO",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:18:03Z",
          "updatedAt": "2023-03-22T12:18:03Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nA CoRIM contains two logical blocks. It has a collection of tags and metadata about CoRIM creator\r\n```",
              "createdAt": "2023-03-22T12:18:03Z",
              "updatedAt": "2023-03-22T12:18:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnMyH",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:18:31Z",
          "updatedAt": "2023-03-22T12:18:31Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nTags can be of different types:\r\n```",
              "createdAt": "2023-03-22T12:18:31Z",
              "updatedAt": "2023-03-22T12:18:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnNJV",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:19:07Z",
          "updatedAt": "2023-03-22T12:19:08Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n* CoSWID {{-coswid}} tags describe software components;\r\n```",
              "createdAt": "2023-03-22T12:19:08Z",
              "updatedAt": "2023-03-22T12:25:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnNY2",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:19:32Z",
          "updatedAt": "2023-03-22T12:19:33Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n* Concise Module ID (CoMID) tags contain metadata and claims about the hardware and firmware modules;\r\n```",
              "createdAt": "2023-03-22T12:19:32Z",
              "updatedAt": "2023-03-22T12:21:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnQzA",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:26:20Z",
          "updatedAt": "2023-03-22T12:26:21Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n* Concise Bill of Material (CoBOM) tags contain the list of CoMID and CoSWID tags that the Verifier\r\n```",
              "createdAt": "2023-03-22T12:26:21Z",
              "updatedAt": "2023-03-22T12:26:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QnUwS",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:36:28Z",
          "updatedAt": "2023-03-22T12:36:29Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nThe set of tags is extensible so that future specifications can add new kinds of information.  For example, Concise Trust Anchor Stores (CoTS) {{-ta-store}} are currently being defined as a standard CoRIM extension.\r\n```",
              "createdAt": "2023-03-22T12:36:29Z",
              "updatedAt": "2023-03-22T12:55:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QndIX",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:56:43Z",
          "updatedAt": "2023-03-22T12:56:44Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-03-22T12:56:43Z",
              "updatedAt": "2023-03-22T12:56:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85QndPE",
          "commit": {
            "abbreviatedOid": "477c98f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T12:56:58Z",
          "updatedAt": "2023-03-22T12:56:58Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-03-22T12:56:58Z",
              "updatedAt": "2023-03-22T12:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Qne7g",
          "commit": {
            "abbreviatedOid": "e993b87"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T13:00:51Z",
          "updatedAt": "2023-03-22T13:00:52Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nA CoRIM contains two logical blocks. It has a collection of tags and metadata about CoRIM.\r\n```",
              "createdAt": "2023-03-22T13:00:51Z",
              "updatedAt": "2023-03-22T13:00:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RQbs_",
          "commit": {
            "abbreviatedOid": "f21d124"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T14:29:38Z",
          "updatedAt": "2023-03-29T14:29:38Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nAttesters vary from one vendor to another, and for a given vendor from one product to another.\r\n```",
              "createdAt": "2023-03-29T14:29:38Z",
              "updatedAt": "2023-03-29T14:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RQueb",
          "commit": {
            "abbreviatedOid": "3b9c1ad"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-29T15:01:19Z",
          "updatedAt": "2023-03-29T15:01:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85QoMvW",
          "commit": {
            "abbreviatedOid": "3b9c1ad"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-22T14:26:31Z",
          "updatedAt": "2023-03-29T15:52:24Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I don't think it is a conveyance mechanism. It is a representation of Endorsements and Reference Values in CBOR format.",
              "createdAt": "2023-03-22T14:26:31Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 31,
              "body": "CBOR is a data encoding. 'format' is ambiguous since it could be interpreted as both a schema and/or an encoding.",
              "createdAt": "2023-03-22T14:28:02Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 41,
              "body": "It may be more intuitive to describe CoRIM as an enveloping structure, that has its own metadata, and contains various types of 'tag' structures that describe properties of Target Environments.",
              "createdAt": "2023-03-22T14:35:10Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 46,
              "body": "Concise Software ID (CoSWID)...",
              "createdAt": "2023-03-22T14:35:49Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 74,
              "body": "Just looking for a way to identify the specific triple vs. using generic terms like \"Reference Values\". ",
              "createdAt": "2023-03-22T14:40:24Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 131,
              "body": "I think it's a slippery slope if we say a Verifier does inference. Maybe just put a period after 'properties'?",
              "createdAt": "2023-03-22T14:43:17Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nAn `environment-map` may be used to represent a whole Attester, an Attesting\r\n```",
              "createdAt": "2023-03-29T15:09:16Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            },
            {
              "originalPosition": 151,
              "body": "```suggestion\r\nEnvironment, or a Target Environment.  The exact semantic depends on the\r\n```",
              "createdAt": "2023-03-29T15:09:40Z",
              "updatedAt": "2023-03-29T15:52:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRQdg",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T16:05:02Z",
          "updatedAt": "2023-03-29T16:05:03Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "May be expressing Endorsements and Reference Values in CBOR format.",
              "createdAt": "2023-03-29T16:05:02Z",
              "updatedAt": "2023-03-29T16:05:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRR4w",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T16:08:28Z",
          "updatedAt": "2023-03-29T16:08:28Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "@nedmsmith It is not just Target Environment related details, it could be Attesting Environment as well...",
              "createdAt": "2023-03-29T16:08:28Z",
              "updatedAt": "2023-03-29T16:08:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRWIr",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T16:19:14Z",
          "updatedAt": "2023-03-29T16:19:14Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "An Attesting Env starts out as a Target Env before it runs (as an Attesting Env).",
              "createdAt": "2023-03-29T16:19:14Z",
              "updatedAt": "2023-03-29T16:19:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRnSL",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T16:55:49Z",
          "updatedAt": "2023-03-29T16:55:49Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "@nedmsmith I think, you are using an Older version of the document for review!\r\n\r\nThis has been reworded to:\r\n\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM) a CBOR {{-cbor}} based data model\r\n",
              "createdAt": "2023-03-29T16:55:49Z",
              "updatedAt": "2023-03-29T16:55:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRoss",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T16:59:17Z",
          "updatedAt": "2023-03-29T16:59:17Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@nedmsmith  I have corrected it to representing. Please have a look at the latest version just committed!",
              "createdAt": "2023-03-29T16:59:17Z",
              "updatedAt": "2023-03-29T16:59:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRpEG",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T17:00:10Z",
          "updatedAt": "2023-03-29T17:00:10Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I would retain CoRIM with expressing what exactly it is trying to convey, however happy to discuss in a meeting!",
              "createdAt": "2023-03-29T17:00:10Z",
              "updatedAt": "2023-03-29T17:00:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRpJC",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T17:00:22Z",
          "updatedAt": "2023-03-29T17:00:22Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Changes Done!",
              "createdAt": "2023-03-29T17:00:22Z",
              "updatedAt": "2023-03-29T17:00:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRpYy",
          "commit": {
            "abbreviatedOid": "5de4073"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T17:00:58Z",
          "updatedAt": "2023-03-29T17:00:59Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "ok, I have removed the usage of Verifier inference!",
              "createdAt": "2023-03-29T17:00:58Z",
              "updatedAt": "2023-03-29T17:00:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRpnb",
          "commit": {
            "abbreviatedOid": "3b9c1ad"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-29T17:01:35Z",
          "updatedAt": "2023-03-29T17:01:35Z",
          "comments": [
            {
              "originalPosition": 150,
              "body": "@nedmsmith This section was not modified but as this comment is a logical comment, I have changed it in the latest version!",
              "createdAt": "2023-03-29T17:01:35Z",
              "updatedAt": "2023-03-29T17:01:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RRsUs",
          "commit": {
            "abbreviatedOid": "cc7bcba"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Maybe it makes sense to merge everything and keep refining as needed.",
          "createdAt": "2023-03-29T17:06:54Z",
          "updatedAt": "2023-03-29T17:06:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOH6-tI85NW653",
      "title": "remove spurious link definition",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/75",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "xml2rfc laments about an absurd link that is created because square brackets are not escaped in an entry of the CBOR tag registration table.",
      "createdAt": "2023-03-31T14:33:33Z",
      "updatedAt": "2023-04-11T09:35:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "b2c4f2dd45dc063bf11b618cdb7f71ac5595471e",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "spurious-link-def",
      "headRefOid": "097fdee067931af40bf324927dc99be8d190852f",
      "closedAt": "2023-04-11T09:35:10Z",
      "mergedAt": "2023-04-11T09:35:10Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "2e514428e0ed8402aa829e9f2aae1ff9f24c54f2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85Rhpw-",
          "commit": {
            "abbreviatedOid": "097fdee"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-01T00:28:08Z",
          "updatedAt": "2023-04-01T00:28:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85SLz7t",
          "commit": {
            "abbreviatedOid": "097fdee"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-04-11T09:33:07Z",
          "updatedAt": "2023-04-11T09:33:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOH6-tI85NXPvc",
      "title": "talk a bit more about profiles",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/76",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-31T15:17:36Z",
      "updatedAt": "2023-04-13T12:56:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "b2c4f2dd45dc063bf11b618cdb7f71ac5595471e",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "profile",
      "headRefOid": "48d47398efef6db443417ce410811ef6bae23d9b",
      "closedAt": "2023-04-13T12:56:06Z",
      "mergedAt": "2023-04-13T12:56:06Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "9da312cbc6533f2aade238aecf9b0b3f328406a8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85RfWx9",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:37:27Z",
          "updatedAt": "2023-03-31T15:37:27Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nA profile MAY constrain the values of a given CoRIM type to a subset of the values.\r\nA profile MAY extend the set of a given CoRIM type to meet the requirement of a specific profile using the defined extension points.\r\n```",
              "createdAt": "2023-03-31T15:37:27Z",
              "updatedAt": "2023-04-12T13:14:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfUAx",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "suggested changes inline.",
          "createdAt": "2023-03-31T15:30:15Z",
          "updatedAt": "2023-03-31T15:38:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "not sure 'Attester's family' is a concrete concept. It may generate more questions.",
              "createdAt": "2023-03-31T15:30:15Z",
              "updatedAt": "2023-03-31T15:38:26Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nA profile identifier is either an OID {{-cbor-oids}} or a URL {{-uri}}.\r\n```",
              "createdAt": "2023-03-31T15:32:10Z",
              "updatedAt": "2023-03-31T15:38:26Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nA CoRIM profile can use one of the base CoRIM media types defined in {{sec-mt-corim-signed}} and\r\n{{sec-mt-corim-unsigned}} with the `profile` parameter set to the appropriate value.\r\n```",
              "createdAt": "2023-03-31T15:33:32Z",
              "updatedAt": "2023-03-31T15:38:26Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nA profile defines which of the optional parts of a CoRIM are required,\r\nwhich are prohibited and which extension points are exercised and how.\r\nExercised extension points should preserve the intent of the original map semantics.\r\n```",
              "createdAt": "2023-03-31T15:36:53Z",
              "updatedAt": "2023-03-31T15:38:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfXuU",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:40:03Z",
          "updatedAt": "2023-03-31T15:40:03Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nProfiling is the mechanism that allows the base CoRIM schema to be customised to fit a specific Attester or Attesters' class.\r\n```",
              "createdAt": "2023-03-31T15:40:03Z",
              "updatedAt": "2023-03-31T15:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfYEd",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:41:01Z",
          "updatedAt": "2023-03-31T15:41:01Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I think 'values' is more intuitive than 'set' as set implies the type structure follows mathematical sets. But 'subset' isn't inferring mathematical sets.\r\nLines 394[5] can be combined: \"A profile MAY constrain or extend a CoRIM type statement.\"",
              "createdAt": "2023-03-31T15:41:01Z",
              "updatedAt": "2023-03-31T15:55:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfaWK",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:46:05Z",
          "updatedAt": "2023-03-31T15:46:05Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "It may be less awkward wording as: \"...customized to satisfy the requirements of a particular Attester, or class of Attester.\"",
              "createdAt": "2023-03-31T15:46:05Z",
              "updatedAt": "2023-03-31T15:46:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rfamx",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:46:48Z",
          "updatedAt": "2023-03-31T15:46:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I felt it a bit like key value semantics hence suggested, with the set.\r\nPerhaps `choice` may fit better, isn't it?",
              "createdAt": "2023-03-31T15:46:48Z",
              "updatedAt": "2023-03-31T15:46:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfeDm",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:56:02Z",
          "updatedAt": "2023-03-31T15:56:02Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "maybe less is more?",
              "createdAt": "2023-03-31T15:56:02Z",
              "updatedAt": "2023-03-31T15:56:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RffXW",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T15:59:19Z",
          "updatedAt": "2023-03-31T15:59:19Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "\"set\" alone doesn't sound good.  If you were instead suggesting \"set of values\", I concur with Ned that \"values\" alone does the job.",
              "createdAt": "2023-03-31T15:59:19Z",
              "updatedAt": "2023-03-31T15:59:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rff7j",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T16:00:54Z",
          "updatedAt": "2023-03-31T16:00:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I'm OK removing \"Attesters' family\" altogether.\r\nIn alternative, use Ned's suggestion in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/76#discussion_r1154636121",
              "createdAt": "2023-03-31T16:00:54Z",
              "updatedAt": "2023-03-31T16:00:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rfg2y",
          "commit": {
            "abbreviatedOid": "25a9ac1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T16:02:42Z",
          "updatedAt": "2023-03-31T16:02:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I'm going with option 1, see cee17f1",
              "createdAt": "2023-03-31T16:02:42Z",
              "updatedAt": "2023-03-31T16:08:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rfg7s",
          "commit": {
            "abbreviatedOid": "25a9ac1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T16:02:56Z",
          "updatedAt": "2023-03-31T16:02:57Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nProfiling is the mechanism that allows the base CoRIM schema to be customised to fit a specific Attester.\r\n```",
              "createdAt": "2023-03-31T16:02:57Z",
              "updatedAt": "2023-03-31T16:02:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RfhQ7",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T16:03:55Z",
          "updatedAt": "2023-03-31T16:03:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "dropped in [cee17f1](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/76/commits/cee17f19773f8503d87dc204bc00a0f924acfe75)",
              "createdAt": "2023-03-31T16:03:55Z",
              "updatedAt": "2023-03-31T16:03:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rf1BD",
          "commit": {
            "abbreviatedOid": "cee17f1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:03:58Z",
          "updatedAt": "2023-03-31T17:03:59Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "ok, fine. However what about  the other aspect of extend also ? It seems to say that we only Constrain the types.",
              "createdAt": "2023-03-31T17:03:58Z",
              "updatedAt": "2023-03-31T17:03:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rf2xw",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:10:02Z",
          "updatedAt": "2023-03-31T17:10:03Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> ok, fine. However what about the other aspect of extend also ? It seems to say that we only Constrain the types.\r\n\r\nthat would be wrong: existing types can only be constrained.  Only pre-defined extension points can be used for adding semantics.",
              "createdAt": "2023-03-31T17:10:02Z",
              "updatedAt": "2023-03-31T17:10:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rf6a0",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:22:15Z",
          "updatedAt": "2023-03-31T17:22:15Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I suppose the native types which are `$type-choices` can be extended, isn't it ?\r\n",
              "createdAt": "2023-03-31T17:22:15Z",
              "updatedAt": "2023-03-31T17:22:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Rf-uC",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:36:32Z",
          "updatedAt": "2023-03-31T17:36:33Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Not necessarily, only when we say so.",
              "createdAt": "2023-03-31T17:36:32Z",
              "updatedAt": "2023-03-31T17:36:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RgBGw",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:44:36Z",
          "updatedAt": "2023-03-31T17:44:36Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> Not necessarily, only when we say so.\r\n\r\nIn the context of defining profile rules, the profile mechanism is a way to extend / restrict the standard (base) schema in a non-standard way. By requiring the profile to be public, there is an approximation of a 'defacto' standardization. This flexibility is desirable even necessary as a way to accommodate the wide range of product differences. However, profiles are better than fully proprietary approaches. That is the value that should be highlighted. Profiles may be useful for identifying features that can / should be adopted into a standard / base schema over time. I think this is what is meant by \"only when we say so\".",
              "createdAt": "2023-03-31T17:44:36Z",
              "updatedAt": "2023-03-31T17:44:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RgCat",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:48:20Z",
          "updatedAt": "2023-03-31T17:48:20Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> ok, fine. However what about the other aspect of extend also ? It seems to say that we only Constrain the types.\r\n\r\nCDDL is a language of 'types'. Even maps and records are typing information. A schema is a type structure that is used to check a data structure for type compliance. It's OK to refer to the schema as a collection of 'type' structures IMHO. Otherwise, its ok to use 'schema', as in: \"A profile MAY constrain or extend CoRIM schema statements.\"",
              "createdAt": "2023-03-31T17:48:20Z",
              "updatedAt": "2023-03-31T17:48:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85RgDPR",
          "commit": {
            "abbreviatedOid": "524a332"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T17:51:12Z",
          "updatedAt": "2023-03-31T17:51:13Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "But we may want to qualify extension to the defined extension points: A profile MAY constrain or extend CoRIM schema statements using the defined extension points.\" Constraint may be more subtle.",
              "createdAt": "2023-03-31T17:51:12Z",
              "updatedAt": "2023-03-31T17:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SVPIA",
          "commit": {
            "abbreviatedOid": "a2829a0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T13:15:59Z",
          "updatedAt": "2023-04-12T13:15:59Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nA profile MUST NOT alter the syntax or semantics of an already defined CoRIM type.\r\nA profile MAY constrain the values of a given CoRIM type to a subset of the values.\r\nA profile MAY extend the set of a given CoRIM type to meet the requirement of a specific profile using the defined extension points.\r\nExercised extension points should preserve the intent of the original map semantics.\r\n\r\n```",
              "createdAt": "2023-04-12T13:15:59Z",
              "updatedAt": "2023-04-12T13:15:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SVP5N",
          "commit": {
            "abbreviatedOid": "3c894c8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T13:17:34Z",
          "updatedAt": "2023-04-12T13:17:35Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nA profile MAY extend the set of a given CoRIM type using the defined extension points.\r\n```",
              "createdAt": "2023-04-12T13:17:34Z",
              "updatedAt": "2023-04-12T13:17:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SVQXO",
          "commit": {
            "abbreviatedOid": "8233512"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T13:18:27Z",
          "updatedAt": "2023-04-12T13:18:28Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nExercised extension points should preserve the intent of the original semantics.\r\n```",
              "createdAt": "2023-04-12T13:18:27Z",
              "updatedAt": "2023-04-12T13:18:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SV1K_",
          "commit": {
            "abbreviatedOid": "ff6b108"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T14:27:57Z",
          "updatedAt": "2023-04-12T14:27:58Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nA profile MUST NOT alter the syntax or semantics of a standard CoRIM type.\r\n```",
              "createdAt": "2023-04-12T14:27:58Z",
              "updatedAt": "2023-04-12T14:31:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SV5mb",
          "commit": {
            "abbreviatedOid": "ff6b108"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-12T14:36:22Z",
          "updatedAt": "2023-04-12T14:36:22Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "A profile is fixed once it is released, any subsequent change will lead to a new profile identifier.",
              "createdAt": "2023-04-12T14:36:22Z",
              "updatedAt": "2023-04-12T14:37:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SXE-R",
          "commit": {
            "abbreviatedOid": "d2a52e2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-12T17:27:24Z",
          "updatedAt": "2023-04-12T17:27:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85SbjMQ",
          "commit": {
            "abbreviatedOid": "ff6b108"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-13T08:54:34Z",
          "updatedAt": "2023-04-13T08:54:34Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "done in [48d4739](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/76/commits/48d47398efef6db443417ce410811ef6bae23d9b)\r\n",
              "createdAt": "2023-04-13T08:54:34Z",
              "updatedAt": "2023-04-13T08:54:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85SbkTO",
          "commit": {
            "abbreviatedOid": "48d4739"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!\r\n\r\nThank you for all the work!",
          "createdAt": "2023-04-13T08:56:15Z",
          "updatedAt": "2023-04-13T08:56:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOH6-tI85OXaxs",
      "title": "Issue #78",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/79",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added tagged-oid-type to $domain-id-type-choice and examples that exercises domain names using all 4 supported domain id types.",
      "createdAt": "2023-04-14T21:44:23Z",
      "updatedAt": "2023-04-19T15:00:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "9da312cbc6533f2aade238aecf9b0b3f328406a8",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "domain-oid-i78",
      "headRefOid": "fe44b752f84a9ebf0c35ffe6199b62fca83d7955",
      "closedAt": "2023-04-19T15:00:08Z",
      "mergedAt": "2023-04-19T15:00:08Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "308b6388a57c59bed6acd9a496985f5369bd6d34"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85S_Hfg",
          "commit": {
            "abbreviatedOid": "fe44b75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udea2 it!",
          "createdAt": "2023-04-19T14:59:27Z",
          "updatedAt": "2023-04-19T14:59:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85S_Huy",
          "commit": {
            "abbreviatedOid": "fe44b75"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-04-19T14:59:53Z",
          "updatedAt": "2023-04-19T14:59:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOH6-tI85Oqs3B",
      "title": "Catch up branch to main",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/81",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-19T12:30:18Z",
      "updatedAt": "2023-04-19T12:35:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "andrew-draper-evidence-verification-min",
      "baseRefOid": "d95cdca0fefa82c11f5c56d232767d3779f43e06",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "main",
      "headRefOid": "9da312cbc6533f2aade238aecf9b0b3f328406a8",
      "closedAt": "2023-04-19T12:34:36Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Incorrect pull request",
          "createdAt": "2023-04-19T12:35:06Z",
          "updatedAt": "2023-04-19T12:35:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 83,
      "id": "PR_kwDOH6-tI85PNrNx",
      "title": "Update draft-ietf-rats-corim.md",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/83",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixed include for $crypto-key-type-choice",
      "createdAt": "2023-04-26T15:39:28Z",
      "updatedAt": "2023-04-26T15:42:00Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "308b6388a57c59bed6acd9a496985f5369bd6d34",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "crypto-key-type-choice-include",
      "headRefOid": "2d11eea403adfd5c43d8db3b6bfd71994c8ae140",
      "closedAt": "2023-04-26T15:41:59Z",
      "mergedAt": "2023-04-26T15:41:59Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "fa8c278f6c0b42399ea9019e91defba1caf48487"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85TlSIT",
          "commit": {
            "abbreviatedOid": "2d11eea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-04-26T15:40:43Z",
          "updatedAt": "2023-04-26T15:40:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOH6-tI85PO6qm",
      "title": "Crypto key issues",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/85",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "PR that addresses issues #83 and #84",
      "createdAt": "2023-04-26T20:04:46Z",
      "updatedAt": "2023-05-15T23:50:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fa8c278f6c0b42399ea9019e91defba1caf48487",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "crypto-key-issues",
      "headRefOid": "b7d2384c3fd3a8fd75bd0090c436850203531576",
      "closedAt": "2023-05-15T23:50:06Z",
      "mergedAt": "2023-05-15T23:50:06Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "a6ae6e3ff591ab1bce223d72602bf71611acd008"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I added a thumbprint for certificate path where a derived cert path may need to be represented as a digest",
          "createdAt": "2023-04-27T23:57:01Z",
          "updatedAt": "2023-04-27T23:57:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85TnC3J",
          "commit": {
            "abbreviatedOid": "2c76938"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T20:15:56Z",
          "updatedAt": "2023-04-26T20:52:12Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "I don't see yet why `COSE_KeySet` should be supported.",
              "createdAt": "2023-04-26T20:15:56Z",
              "updatedAt": "2023-04-26T20:52:12Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\ntagged-cose-key-type = #6.558(COSE_Key)\r\n```\r\nI don't see yet why COSE_KeySet should be supported. Everywhere `$crypto-key-type-choice` is used, it already is contained in an array. Also every existing `$crypto-key-type-choice` definition contains data for a single key or cert, it would be good to keep the new definition `tagged-cose-key-type` consistent.",
              "createdAt": "2023-04-26T20:40:24Z",
              "updatedAt": "2023-04-26T20:53:25Z"
            },
            {
              "originalPosition": 1,
              "body": "How about adding the comments in the COSE_Key definition in [RFC8152] (https://datatracker.ietf.org/doc/html/rfc8152#section-7) to here?",
              "createdAt": "2023-04-26T20:50:17Z",
              "updatedAt": "2023-04-26T20:52:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85TufaB",
          "commit": {
            "abbreviatedOid": "2c76938"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T18:47:32Z",
          "updatedAt": "2023-04-27T18:47:33Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Since RFC8152 defines both `COSE_Key` and `COSE_KeySet`, after further consideration, I think it makes sense to support both, to align with the RFC.",
              "createdAt": "2023-04-27T18:47:32Z",
              "updatedAt": "2023-04-27T18:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Tuwiw",
          "commit": {
            "abbreviatedOid": "2c76938"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T19:40:01Z",
          "updatedAt": "2023-04-27T19:40:02Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "we already have an entry for COSE (as STD96), please use that (which also points to the COSEbis document)",
              "createdAt": "2023-04-27T19:40:01Z",
              "updatedAt": "2023-04-27T19:40:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85TuxmY",
          "commit": {
            "abbreviatedOid": "2c76938"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM modulo adjusting the COSE ref",
          "createdAt": "2023-04-27T19:43:32Z",
          "updatedAt": "2023-04-27T19:43:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85UGmIS",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-03T14:22:42Z",
          "updatedAt": "2023-05-03T14:22:43Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n* `tagged-cert-path-thumbprint-type`: a `digest` of a certification path.\r\n```",
              "createdAt": "2023-05-03T14:22:42Z",
              "updatedAt": "2023-05-03T14:22:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85UGmX7",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-03T14:23:09Z",
          "updatedAt": "2023-05-03T14:23:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Include RFC 5280 reference",
              "createdAt": "2023-05-03T14:23:09Z",
              "updatedAt": "2023-05-03T14:23:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85UGmpY",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGMT! Please incorporate review comments",
          "createdAt": "2023-05-03T14:23:41Z",
          "updatedAt": "2023-05-03T14:23:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85UGoof",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-03T14:27:34Z",
          "updatedAt": "2023-05-03T14:27:34Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "If we add that reference, I'd recommend to add below line 59.\r\nWhere will that reference be used in text?",
              "createdAt": "2023-05-03T14:27:34Z",
              "updatedAt": "2023-05-03T14:27:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85UHtU2",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-03T16:35:36Z",
          "updatedAt": "2023-05-03T16:35:37Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I assume it would be informative (not sure what \"below line 59\" means). A reference to a pkix- thing might cite it or not based on whether or not it is a normative reference correct?",
              "createdAt": "2023-05-03T16:35:36Z",
              "updatedAt": "2023-05-03T16:35:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85UHuRX",
          "commit": {
            "abbreviatedOid": "c88732e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-03T16:38:07Z",
          "updatedAt": "2023-05-03T16:38:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Since RFC8152 defines the structure, the COSE_Key CDDL doesn't need to be incorporated into the prose. However, the cddl file is useful for building examples.",
              "createdAt": "2023-05-03T16:38:07Z",
              "updatedAt": "2023-05-03T16:38:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOH6-tI85QE8m8",
      "title": "Correct extensibility on profile-type-choice",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/88",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #77",
      "createdAt": "2023-05-09T09:32:54Z",
      "updatedAt": "2023-05-11T17:57:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fa8c278f6c0b42399ea9019e91defba1caf48487",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "issue-77",
      "headRefOid": "3c2093c3b1abe7131fb64dbd5ef76fb8dbcca23b",
      "closedAt": "2023-05-11T17:57:52Z",
      "mergedAt": "2023-05-11T17:57:52Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "8bf3f330428e226a97d0a0cd2eb7bc0aa32765de"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85Urq19",
          "commit": {
            "abbreviatedOid": "3c2093c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T14:06:47Z",
          "updatedAt": "2023-05-10T14:06:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85U0y6J",
          "commit": {
            "abbreviatedOid": "3c2093c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-11T17:38:32Z",
          "updatedAt": "2023-05-11T17:38:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85U0y6b",
          "commit": {
            "abbreviatedOid": "3c2093c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-11T17:38:33Z",
          "updatedAt": "2023-05-11T17:38:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 89,
      "id": "PR_kwDOH6-tI85QFOyr",
      "title": "Introduce tagged-type definitions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/89",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #74",
      "createdAt": "2023-05-09T10:18:35Z",
      "updatedAt": "2023-05-11T17:51:18Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fa8c278f6c0b42399ea9019e91defba1caf48487",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "issue-74",
      "headRefOid": "40fa0dd83cf7a2e5027050af6ab0328681238a58",
      "closedAt": "2023-05-11T17:51:13Z",
      "mergedAt": "2023-05-11T17:51:12Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "f5e71966e8e254f83d19737a34605e103e2c5180"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "we need to also adjust prose in the following sections/tables:\r\n* \u00a77.2 \"New CBOR Tags\"\r\n* \u00a72.1.2 \"Tags\"",
          "createdAt": "2023-05-11T16:01:59Z",
          "updatedAt": "2023-05-11T16:01:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85UrqpE",
          "commit": {
            "abbreviatedOid": "7d698aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T14:06:23Z",
          "updatedAt": "2023-05-10T14:06:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85Uy5NB",
          "commit": {
            "abbreviatedOid": "7d698aa"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T13:33:31Z",
          "updatedAt": "2023-05-11T13:33:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "this is autogenerated by `make -C cddl cbor-tags.txt`",
              "createdAt": "2023-05-11T13:33:31Z",
              "updatedAt": "2023-05-11T13:33:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Uzu2f",
          "commit": {
            "abbreviatedOid": "7d698aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T15:10:30Z",
          "updatedAt": "2023-05-11T15:10:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Your point is this is correct/incorrect?",
              "createdAt": "2023-05-11T15:10:30Z",
              "updatedAt": "2023-05-11T15:10:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85UzwXS",
          "commit": {
            "abbreviatedOid": "7d698aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T15:13:01Z",
          "updatedAt": "2023-05-11T15:13:01Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Somehow github issue @nedmsmith \r\nI regenerated the file but it was not showing up properly.\r\n\r\nI have now re-submitted and it all looks good!",
              "createdAt": "2023-05-11T15:13:01Z",
              "updatedAt": "2023-05-11T15:13:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Uz5L4",
          "commit": {
            "abbreviatedOid": "7d698aa"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T15:30:44Z",
          "updatedAt": "2023-05-11T15:30:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Your point is this is correct/incorrect?\r\n\r\nincorrect, but we've fixed it now",
              "createdAt": "2023-05-11T15:30:44Z",
              "updatedAt": "2023-05-11T15:30:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U0f6R",
          "commit": {
            "abbreviatedOid": "d1f69b9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T16:52:25Z",
          "updatedAt": "2023-05-11T16:54:07Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "thanks for addressing my comment.  Please keep the existing typographic alignment though.",
              "createdAt": "2023-05-11T16:52:25Z",
              "updatedAt": "2023-05-11T16:54:07Z"
            },
            {
              "originalPosition": 5,
              "body": "tiny prose adjustments\r\n\r\n```suggestion\r\nCoMID ({{sec-comid}}), a CoSWID {{-coswid}} or a CoBOM {{sec-cobom}}\r\n```",
              "createdAt": "2023-05-11T16:53:22Z",
              "updatedAt": "2023-05-11T16:54:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U0mKk",
          "commit": {
            "abbreviatedOid": "d1f69b9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T17:05:03Z",
          "updatedAt": "2023-05-11T17:05:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\r\nI checked online and the description:\r\nCoMID ({{sec-comid}}), or a CoSWID {{-coswid}}, or a CoBOM {{sec-cobom}}.\r\nis also correct and is written sometimes to be more explicit to state that the value can be either one of them\r\n",
              "createdAt": "2023-05-11T17:05:03Z",
              "updatedAt": "2023-05-11T17:05:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U0zN_",
          "commit": {
            "abbreviatedOid": "40fa0dd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-11T17:39:24Z",
          "updatedAt": "2023-05-11T17:39:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOH6-tI85QVx4a",
      "title": "The mostly agreed parts of the evidence-verification-min PR",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/91",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-11T23:56:15Z",
      "updatedAt": "2023-05-24T14:58:37Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8bf3f330428e226a97d0a0cd2eb7bc0aa32765de",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "verification-start",
      "headRefOid": "7437aa20c8cc60d93105499436cc454ef36936bd",
      "closedAt": "2023-05-24T14:58:33Z",
      "mergedAt": "2023-05-24T14:58:33Z",
      "mergedBy": "andrew-draper",
      "mergeCommit": {
        "oid": "6728592e36d1f472a8cd474f97ea80234885b7a8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85U9XLB",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:18:40Z",
          "updatedAt": "2023-05-13T10:18:41Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nNote that what follows describes a simplified and standard algorithm for verification.\r\n```",
              "createdAt": "2023-05-13T10:18:40Z",
              "updatedAt": "2023-05-13T10:19:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9XaR",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:29:30Z",
          "updatedAt": "2023-05-13T10:29:30Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Can you please help me clarify:\r\n\r\nFor a given profile, only one active CoBOM is expected at the point of verification.\r\n\r\nSo does this section assumes that the set of CoBOMs pertain to all the CoBOMs (for a variety of attester types) and thus all profiles which Verifier possesses?\r\nIf such is the assumption, then one must explain how to filter the `active` CoBOM relevant to a specific profile.",
              "createdAt": "2023-05-13T10:29:30Z",
              "updatedAt": "2023-05-13T10:30:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9XfU",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:33:14Z",
          "updatedAt": "2023-05-13T10:33:14Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nfrom the selected CoRIMs activated by a CoBOM.\r\n```",
              "createdAt": "2023-05-13T10:33:14Z",
              "updatedAt": "2023-05-13T10:33:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9X5H",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:52:45Z",
          "updatedAt": "2023-05-13T10:52:45Z",
          "comments": [
            {
              "originalPosition": 151,
              "body": "```suggestion\r\ndescribing the measurements associated to the environment identified in the `environment-map`.\r\n```",
              "createdAt": "2023-05-13T10:52:45Z",
              "updatedAt": "2023-05-13T10:52:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9X6t",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:54:12Z",
          "updatedAt": "2023-05-13T10:54:12Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "100 % agree with statement on line 1360 and hence we should support this expression natively in the base CDDL.",
              "createdAt": "2023-05-13T10:54:12Z",
              "updatedAt": "2023-05-13T10:54:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9X8s",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:55:47Z",
          "updatedAt": "2023-05-13T10:55:48Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nIf measurement-value-maps being merged contain the same key then the\r\n```",
              "createdAt": "2023-05-13T10:55:47Z",
              "updatedAt": "2023-05-13T10:55:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9X-E",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T10:56:45Z",
          "updatedAt": "2023-05-13T10:56:45Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Also can you please clarify what you meant by `key` here? is this referring to a key-value pair concept or something else?",
              "createdAt": "2023-05-13T10:56:45Z",
              "updatedAt": "2023-05-13T10:56:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9YC5",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-13T11:00:11Z",
          "updatedAt": "2023-05-13T11:00:11Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "```suggestion\r\na format suitable for appraisal, known as `accepted-claims-set`. This document describes an `accepted-claims-set`\r\n```",
              "createdAt": "2023-05-13T11:00:11Z",
              "updatedAt": "2023-05-13T11:00:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85U9YG_",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Hi @andrew-draper\r\nThanks for the Pull Request. The text seems to be in-line with what we have discussed so far.\r\n\r\nI have left some Nits for you to look at but the principle looks to be in good shape!",
          "createdAt": "2023-05-13T11:03:36Z",
          "updatedAt": "2023-05-13T11:03:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85VBi6o",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM, a first batch of comments for your consideration.",
          "createdAt": "2023-05-15T12:39:40Z",
          "updatedAt": "2023-05-15T13:47:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "@yogeshbdeshpande: I don't think what follows can be called a \"standard algorithm\" since we don't require implementations to follow it observantly.  I am OK with Andrew's \"simplified implementation\".",
              "createdAt": "2023-05-15T12:39:40Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nwith objects such as tags (CoMID, CoSWID, etc.) from CoRIM files,\r\n```",
              "createdAt": "2023-05-15T12:40:53Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nThe selection process MUST yield at least one usable CoRIM.\r\n```",
              "createdAt": "2023-05-15T12:43:41Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 55,
              "body": "> Can you please help me clarify:\r\n> \r\n> For a given profile, only one active CoBOM is expected at the point of verification.\r\n\r\nI am not sure, why?\r\n\r\nCoBOMs have a validity period.  All CoBOMs that are within their validity period at the point in time in which appraisal happens are good to go.\r\n\r\n\r\n> So does this section assumes that the set of CoBOMs pertain to all the CoBOMs (for a variety of attester types) and thus all profiles which Verifier possesses? If such is the assumption, then one must explain how to filter the `active` CoBOM relevant to a specific profile.\r\n\r\nI am not sure I understand what you mean: a profile is set at the CoRIM level and inherited by every enveloped tag (CoRIM, CoBOM, CoSWID, CoTS).\r\nThere is nothing special about CoBOMs in this respect.",
              "createdAt": "2023-05-15T12:54:42Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            },
            {
              "originalPosition": 57,
              "body": "I think it's worth adding here a note about _which_ CoBOMs are to be trashed at this stage -- i.e., all that are not \"fresh\" according to their validity period.",
              "createdAt": "2023-05-15T12:56:21Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 63,
              "body": "The distinction between\r\n\r\n* \"CoBOM Extraction\", and\r\n* \"Tags Identification and Validation\"\r\n\r\nseems tenuous.\r\n\r\nI suggest we merge these two subsections and rename the result \"Tags Extraction\"",
              "createdAt": "2023-05-15T13:02:22Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 68,
              "body": "@yogeshbdeshpande: the text you suggest seems redundant given we are past the CoBOM processing step.  (But see also my proposal to merge the subsections.)",
              "createdAt": "2023-05-15T13:03:08Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            },
            {
              "originalPosition": 79,
              "body": "unclear what this means.  Is there a typo?",
              "createdAt": "2023-05-15T13:10:44Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 109,
              "body": "remember to add the bib entry for DICE-Layering-Architecture or it won't compile.",
              "createdAt": "2023-05-15T13:26:15Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nthe `ueid` claim found in the PSA claims-set (see {{Section 4.2.1 of -psa-token}}).\r\n```",
              "createdAt": "2023-05-15T13:29:04Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 128,
              "body": "I don't think the specific suggestion works (esp. in the flow with the rest of the sentence).  But I agree we need to be a bit more precise here about what the `accepted-claims-set` is supposed to represent in our \"exemplary\" verification flow.  Maybe:\r\n```suggestion\r\na format suitable for appraisal. To this end, this document describes an `accepted-claims-set`\r\n```",
              "createdAt": "2023-05-15T13:33:04Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            },
            {
              "originalPosition": 67,
              "body": "use the already defined alias (`ta-store`) or it will break:\r\n\r\n```suggestion\r\nand/or Concise Trust Anchor Stores (CoTS, {{-ta-store}}) --\r\n```",
              "createdAt": "2023-05-15T13:35:03Z",
              "updatedAt": "2023-05-15T13:47:51Z"
            },
            {
              "originalPosition": 138,
              "body": "we probably want to move this together with the rest of the CDDL (to apply automatic validation & consistency checks).  If you'd rather make it in a separate PR, please raise an issue from this comment.",
              "createdAt": "2023-05-15T13:38:52Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            },
            {
              "originalPosition": 172,
              "body": "refs are `{{...}}`.  Besides, the processor is smart enough to prepend Section, Figure depending on the anchor.  So what you need is:\r\n```suggestion\r\n{{sec-dice-spdm}} provides information on how evidence collected using\r\n```",
              "createdAt": "2023-05-15T13:46:36Z",
              "updatedAt": "2023-05-15T13:47:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VMch0",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T20:07:46Z",
          "updatedAt": "2023-05-16T20:07:46Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "At this point, the RIM is discarded (except that the RIM's signer is remembered - possibly by injecting `authorized-by` attributes). The next level processing applies to tags. The current text seems correct.",
              "createdAt": "2023-05-16T20:07:46Z",
              "updatedAt": "2023-05-16T20:07:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VMdiI",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T20:10:56Z",
          "updatedAt": "2023-05-16T20:10:56Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "possibly: \"...will accept or ignore the tag in its entirety.\"",
              "createdAt": "2023-05-16T20:10:56Z",
              "updatedAt": "2023-05-16T20:10:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VMeuq",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T20:14:34Z",
          "updatedAt": "2023-05-16T20:14:34Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Note that what follows describes a simplified algorithm.",
              "createdAt": "2023-05-16T20:14:34Z",
              "updatedAt": "2023-05-16T20:14:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VMgeQ",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T20:19:30Z",
          "updatedAt": "2023-05-16T20:19:30Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "DICE Layering Architecture, Version 1.0, Revision 0.19, July 23, 2020. https://trustedcomputinggroup.org/wp-content/uploads/DICE-Layering-Architecture-r19_pub.pdf",
              "createdAt": "2023-05-16T20:19:30Z",
              "updatedAt": "2023-05-16T20:19:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VMjXg",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T20:27:55Z",
          "updatedAt": "2023-05-16T20:27:56Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "CoBOMs can contain tags that are not in the RIM that immediately contains the CoBOM. Dependent RIMS (containing these tags) may, themselves, have CoBOMs that reference tags in the immediate RIM (or yet other RIMS), and so forth. \r\nPresumably, there is a \"top level\" CoBOM that correctly describes the \"device\" that is being attested. The question for Verifiers is how does it know it has the complete description (via tags) of the device? Which CoBOM is the 'root' CoBOM?",
              "createdAt": "2023-05-16T20:27:55Z",
              "updatedAt": "2023-05-16T20:27:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VM8G6",
          "commit": {
            "abbreviatedOid": "5a65dd8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-16T21:21:36Z",
          "updatedAt": "2023-05-17T00:01:19Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "This borrows from the TCG concise-evidence work. However, it isn't technically 'Evidence'. Repurposing concise-evidence may be sufficient. Normally, this structure doesn't matter as a verifier implementation could find a variety of workable representations. However, if in a multi-verifier deployment, partial results are contained in an accepted-claims structure. It would be necessary to export this partial result to a downstream verifier. If the example here were to define an accepted-claims structure that is sufficient to convey partial results, then it could be the basis for describing in more detail a multi-verifier scenario.",
              "createdAt": "2023-05-16T21:21:36Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 151,
              "body": "suggest: \"about the environment named by the `environment-map`.",
              "createdAt": "2023-05-16T21:23:30Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 154,
              "body": "Note that there are multiple triples defined that assert identity claims in addition to measurement claims. Claims are subject to 'authorization' that also may be associated with individual claim granularity. The relationship of environment to measurement should take into account the complete model.",
              "createdAt": "2023-05-16T21:28:48Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nIf the merged measurement-value-map contains duplicate keys and the measurement values are equivalent. Then duplicate claims SHOULD be omitted. Equivalence typically means values MUST be binary identical.  \r\n```",
              "createdAt": "2023-05-16T21:34:53Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-05-16T21:35:11Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 172,
              "body": "```suggestion\r\n {sec-dice-spdm} describes popular evidence formats, including \r\n```",
              "createdAt": "2023-05-16T21:38:51Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 173,
              "body": "```suggestion\r\nDICE and SPDM Measurement Block, and how they are appraised using CoMID.\r\n```",
              "createdAt": "2023-05-16T21:42:50Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 205,
              "body": "```suggestion\r\nmeasurements in an SPDM Measurement Block are converted to Evidence suitable for\r\n```",
              "createdAt": "2023-05-16T21:44:36Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            },
            {
              "originalPosition": 198,
              "body": "DICE and SPDM should cite references.",
              "createdAt": "2023-05-16T21:51:15Z",
              "updatedAt": "2023-05-17T00:01:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VQN0d",
          "commit": {
            "abbreviatedOid": "5a65dd8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T10:19:47Z",
          "updatedAt": "2023-05-17T10:19:48Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nA Verifier may be pre-configured with a large number of CoRIMs describing many\r\n```",
              "createdAt": "2023-05-17T10:19:47Z",
              "updatedAt": "2023-05-17T10:19:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VQPSF",
          "commit": {
            "abbreviatedOid": "5a65dd8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T10:23:39Z",
          "updatedAt": "2023-05-17T10:23:39Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nFor example, if the Evidence format is known in advance, CoRIMs using a profile that is not\r\nunderstood by a Verifier can be readily discarded.\r\n```",
              "createdAt": "2023-05-17T10:23:39Z",
              "updatedAt": "2023-05-17T10:24:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VQR-S",
          "commit": {
            "abbreviatedOid": "5a65dd8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T10:30:38Z",
          "updatedAt": "2023-05-17T10:30:39Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> At this point, the RIM is discarded [...]\r\n\r\nDo you mean the RIM envelope or the RIM contents?",
              "createdAt": "2023-05-17T10:30:38Z",
              "updatedAt": "2023-05-17T10:30:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VTUmb",
          "commit": {
            "abbreviatedOid": "5a65dd8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T16:30:17Z",
          "updatedAt": "2023-05-17T16:30:18Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Given matching semantics are encoded by triples, shouldn't the language here focus on triples? ",
              "createdAt": "2023-05-17T16:30:17Z",
              "updatedAt": "2023-05-17T16:30:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VTxY0",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T17:43:14Z",
          "updatedAt": "2023-05-17T17:43:15Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "@nedmsmith : Me and Andrew thinks, \"standard algorithm is neat and is specified in the standard document, so works for us atleast!",
              "createdAt": "2023-05-17T17:43:14Z",
              "updatedAt": "2023-05-17T17:43:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85VT3tU",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T17:57:44Z",
          "updatedAt": "2023-05-17T17:57:44Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "WFM",
              "createdAt": "2023-05-17T17:57:44Z",
              "updatedAt": "2023-05-17T17:57:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7rag",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:23:26Z",
          "updatedAt": "2023-05-24T12:23:27Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Applied",
              "createdAt": "2023-05-24T12:23:26Z",
              "updatedAt": "2023-05-24T12:23:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7syD",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:26:37Z",
          "updatedAt": "2023-05-24T12:26:39Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Applied",
              "createdAt": "2023-05-24T12:26:38Z",
              "updatedAt": "2023-05-24T12:26:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7uyP",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:29:49Z",
          "updatedAt": "2023-05-24T12:29:51Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Using Yogesh's proposal",
              "createdAt": "2023-05-24T12:29:50Z",
              "updatedAt": "2023-05-24T12:29:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7vmP",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:31:28Z",
          "updatedAt": "2023-05-24T12:31:28Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "standard algorithm it is",
              "createdAt": "2023-05-24T12:31:28Z",
              "updatedAt": "2023-05-24T12:31:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7w5D",
          "commit": {
            "abbreviatedOid": "e8ac31e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:34:23Z",
          "updatedAt": "2023-05-24T12:34:24Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "The verification process could activate tags which are not CoMIDs, so I think referring to tags is appropriate here.",
              "createdAt": "2023-05-24T12:34:23Z",
              "updatedAt": "2023-05-24T12:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7x4S",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:36:35Z",
          "updatedAt": "2023-05-24T12:36:37Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I added a paragraph in the section above telling the verifier to discard invalid CoBOMs before using them.",
              "createdAt": "2023-05-24T12:36:36Z",
              "updatedAt": "2023-05-24T12:36:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7yVy",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:37:35Z",
          "updatedAt": "2023-05-24T12:37:37Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "I think the two steps are separate, so it is clearer to describe them sequentially. If you feel strongly then we can reconsider.",
              "createdAt": "2023-05-24T12:37:36Z",
              "updatedAt": "2023-05-24T12:37:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V7yqZ",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:38:19Z",
          "updatedAt": "2023-05-24T12:38:20Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "I agree, no need to state that twice.",
              "createdAt": "2023-05-24T12:38:19Z",
              "updatedAt": "2023-05-24T12:38:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V70pD",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:40:21Z",
          "updatedAt": "2023-05-24T12:40:23Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "We need to make a decision about whether tag boundaries are used as part of matching. Recent conversations in the group were going in the direction where they are ignored, but I think it may simplifiy things if we keep them. I will turn this into an issue.",
              "createdAt": "2023-05-24T12:40:22Z",
              "updatedAt": "2023-05-24T12:40:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V71vx",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:41:56Z",
          "updatedAt": "2023-05-24T12:41:58Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "I agree, this should go into a separate file (and be formatted correctly). Can I do that with a separate change after we accept this one?",
              "createdAt": "2023-05-24T12:41:56Z",
              "updatedAt": "2023-05-24T12:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V78s-",
          "commit": {
            "abbreviatedOid": "7051bfb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T12:54:33Z",
          "updatedAt": "2023-05-24T12:54:35Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "What I mean by \"key\" is what we were referring to last week as \"codepoint\" so I have changed the text to use this",
              "createdAt": "2023-05-24T12:54:34Z",
              "updatedAt": "2023-05-24T12:54:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V9QRA",
          "commit": {
            "abbreviatedOid": "7437aa2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-24T14:58:07Z",
          "updatedAt": "2023-05-24T14:58:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85V9QXq",
          "commit": {
            "abbreviatedOid": "7437aa2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-24T14:58:18Z",
          "updatedAt": "2023-05-24T14:58:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85V9Qba",
          "commit": {
            "abbreviatedOid": "7437aa2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-24T14:58:24Z",
          "updatedAt": "2023-05-24T14:58:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDOH6-tI85RMCX1",
      "title": "Fixes issue #63 and #100",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/94",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Fixes issue #63 ",
      "createdAt": "2023-05-23T22:09:55Z",
      "updatedAt": "2023-06-01T22:04:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a6ae6e3ff591ab1bce223d72602bf71611acd008",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "fix-issue-63",
      "headRefOid": "e6cfdcd71e9dee9df36561b4020a09fbc9d3bf70",
      "closedAt": "2023-06-01T22:04:08Z",
      "mergedAt": "2023-06-01T22:04:08Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "8af6169d284378d48ef1960f0b86a9a65a3d603b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85V3man",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T22:14:00Z",
          "updatedAt": "2023-05-23T22:14:01Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Just wondering how come we reversed the logic of this flag.\r\n\r\nIdeally if `recovery` is true then measured environment should be in the recovery mode isn't it?",
              "createdAt": "2023-05-23T22:14:00Z",
              "updatedAt": "2023-05-23T22:14:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V3miW",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM! I just have one question but overall ok.",
          "createdAt": "2023-05-23T22:14:40Z",
          "updatedAt": "2023-05-23T22:14:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85V9-hb",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T16:19:03Z",
          "updatedAt": "2023-05-24T16:19:04Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "> Just wondering how come we reversed the logic of this flag.\r\n\r\nOriginally, the first 3 flags were defined by TCG Attestation Architecture spec. They were described in ASN.1 as a bit array. They wanted the bit array to be zero if no security significant states were present. Interestingly, the debug flag in comid didn't preserve the reverse logic. Subsequent additions to the flags haven't preserved this convention. The most recent definition of flags in the asn.1 structure includes a mask and a max-size marker making it less important for the bit array to be zero for no security relevant concerns.\r\n\r\nIt seems odd that recovery has negative logic. Does it make sense to change this? What is the impact?",
              "createdAt": "2023-05-24T16:19:03Z",
              "updatedAt": "2023-05-24T16:19:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V9_ZD",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T16:21:15Z",
          "updatedAt": "2023-05-24T16:21:16Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "This PR isn't aimed at existing flags, but adding 3 new flags. Maybe we should open an issue for recovery flag and deal with it separately from this PR?",
              "createdAt": "2023-05-24T16:21:15Z",
              "updatedAt": "2023-05-24T16:21:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V-WEV",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "shnwc",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T17:16:30Z",
          "updatedAt": "2023-05-24T17:17:54Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "As shown in issue #63, the names in TCG extension are `immutable-meas` and `tcb-meas`. Why use different names here? Or how about change them to be easier to understand, like `runtime-measured`, `is-immutable`, and `is-tcb`.\r\n\r\nBy the way, is `tcb` redundant? Since `replay-protected` and `integrity-protected` already implies that the attester is a TCB.\r\n\r\nI think we need new flag `confidentiality-protected`.",
              "createdAt": "2023-05-24T17:16:30Z",
              "updatedAt": "2023-05-24T17:17:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85V_9EO",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-24T22:24:59Z",
          "updatedAt": "2023-05-24T22:24:59Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "> I think we need new flag `confidentiality-protected`.\r\n\r\nI think this should be a new issue.",
              "createdAt": "2023-05-24T22:24:59Z",
              "updatedAt": "2023-05-24T22:24:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WB8KU",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T08:23:59Z",
          "updatedAt": "2023-05-25T08:29:05Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "`++massive_cognitive_dissonance;`\r\n\r\nNot sure who's responsible for fixing this though.\r\n\r\nWe could drop it from this PR and make an issue to solve this with upstream, or put it in anyway but still have an explicit, inline warning flag and associated issue.\r\n\r\nHappy either way.",
              "createdAt": "2023-05-25T08:23:59Z",
              "updatedAt": "2023-05-25T08:29:06Z"
            },
            {
              "originalPosition": 37,
              "body": "> Or how about change them to be easier to understand, like `runtime-measured`, `is-immutable`, and `is-tcb`.\r\n\r\n:+1: ",
              "createdAt": "2023-05-25T08:28:12Z",
              "updatedAt": "2023-05-25T08:29:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WD_58",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T13:22:21Z",
          "updatedAt": "2023-05-25T13:22:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Either way, we need to raise this issue. @nedmsmith : I am OK, if you track this as a defect to fix it downstream in all appropriate documents...\r\n\r\nAll I do not want this `massive cognitive dissonance` to percolate to exist forever and be pain to readers/interpreters.",
              "createdAt": "2023-05-25T13:22:22Z",
              "updatedAt": "2023-05-25T13:22:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WqIr8",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T18:18:43Z",
          "updatedAt": "2023-05-31T18:18:44Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Fixed in latest push.",
              "createdAt": "2023-05-31T18:18:44Z",
              "updatedAt": "2023-05-31T18:18:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WqIx8",
          "commit": {
            "abbreviatedOid": "898906e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T18:19:01Z",
          "updatedAt": "2023-05-31T18:19:01Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "fixed in latest push.",
              "createdAt": "2023-05-31T18:19:01Z",
              "updatedAt": "2023-05-31T18:19:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WwUXJ",
          "commit": {
            "abbreviatedOid": "e6cfdcd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nI guess we could ping-pong forever on naming choices, but luckily the code point is what matters in the end :-)",
          "createdAt": "2023-06-01T13:40:32Z",
          "updatedAt": "2023-06-01T13:40:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOH6-tI85RVK4z",
      "title": "Delete draft-ietf-rats-corim.md.new",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/102",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This file was added accidentally as part of the pull request yesterday. This PR removes it.",
      "createdAt": "2023-05-25T10:35:17Z",
      "updatedAt": "2023-05-25T10:37:48Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "6728592e36d1f472a8cd474f97ea80234885b7a8",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "delete-accidentally-added-file",
      "headRefOid": "fa2f3c53b9e57ee537629660356ef7bb80b95c49",
      "closedAt": "2023-05-25T10:37:39Z",
      "mergedAt": "2023-05-25T10:37:38Z",
      "mergedBy": "andrew-draper",
      "mergeCommit": {
        "oid": "67013420d94fd88ddda23003913946f39dcd6705"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 104,
      "id": "PR_kwDOH6-tI85Rwq8X",
      "title": "Move accepted-claims-set cddl to new file (issue 97)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/104",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-31T08:40:05Z",
      "updatedAt": "2023-06-09T13:46:00Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "67013420d94fd88ddda23003913946f39dcd6705",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "91-move-cddl-to-new-file",
      "headRefOid": "b239a6c969ebd7cbe955cfc10de7ee1ceff39ecb",
      "closedAt": "2023-06-06T15:14:49Z",
      "mergedAt": "2023-06-06T15:14:49Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "8c4fd648260511450ce19710292ea5aea3ac0931"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85WnE5-",
          "commit": {
            "abbreviatedOid": "40d400b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T12:30:31Z",
          "updatedAt": "2023-05-31T12:30:31Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "There is no reason for the indexes to mirror CoMID's: this is a completely separate namespace.  I suggest we move to 0, 1, 2, ... instead.",
              "createdAt": "2023-05-31T12:30:31Z",
              "updatedAt": "2023-05-31T12:30:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WnFjE",
          "commit": {
            "abbreviatedOid": "40d400b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM\r\n\r\nI have left a minor comment inline.",
          "createdAt": "2023-05-31T12:32:00Z",
          "updatedAt": "2023-05-31T12:32:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85WnT44",
          "commit": {
            "abbreviatedOid": "40d400b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-31T12:58:18Z",
          "updatedAt": "2023-05-31T12:58:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "conventionally this should be called `accepted-claims-set-extension` ",
              "createdAt": "2023-05-31T12:58:18Z",
              "updatedAt": "2023-05-31T12:58:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WzRhZ",
          "commit": {
            "abbreviatedOid": "40d400b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T20:44:49Z",
          "updatedAt": "2023-06-01T20:44:51Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "ok, done",
              "createdAt": "2023-06-01T20:44:50Z",
              "updatedAt": "2023-06-01T20:44:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85WzRs-",
          "commit": {
            "abbreviatedOid": "40d400b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T20:45:26Z",
          "updatedAt": "2023-06-01T20:45:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ok",
              "createdAt": "2023-06-01T20:45:26Z",
              "updatedAt": "2023-06-01T20:45:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85Wn9fe",
          "commit": {
            "abbreviatedOid": "b239a6c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-31T14:05:14Z",
          "updatedAt": "2023-06-01T22:02:52Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Why reference-triple-record instead of endorsed-triple-record? These are \"actual\" claims that reflect the current state of the platform.",
              "createdAt": "2023-05-31T14:05:14Z",
              "updatedAt": "2023-06-01T22:02:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85W7-Pj",
          "commit": {
            "abbreviatedOid": "b239a6c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-02T22:50:57Z",
          "updatedAt": "2023-06-02T22:50:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85XT6B4",
          "commit": {
            "abbreviatedOid": "b239a6c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM, thanks",
          "createdAt": "2023-06-06T10:18:48Z",
          "updatedAt": "2023-06-06T10:18:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDOH6-tI85TjNY-",
      "title": "Matching a Reference Value to Accepted Claims Set",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/107",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR provides a description of how I see verifier behaviour in comparing a Reference Value against the Accepted Claims Set\r\nIt skirts around the undecided question of how to group Reference Values, Endorsements etc together as an input to this matching.\r\nThis PR partly resolves issue 71",
      "createdAt": "2023-06-21T13:46:48Z",
      "updatedAt": "2023-09-08T10:30:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "90ea90bbbce24e96aed5ed97e149b2440d7adf39",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "71-matching-reference-value",
      "headRefOid": "13f2368ec07d59a53364b82ea678f1ca0ae7a6c5",
      "closedAt": "2023-09-08T10:30:07Z",
      "mergedAt": "2023-09-08T10:30:07Z",
      "mergedBy": "andrew-draper",
      "mergeCommit": {
        "oid": "48bdd67559ef7dbdee9f561981659f4bcfb8d715"
      },
      "comments": [
        {
          "author": "setrofim",
          "authorAssociation": "COLLABORATOR",
          "body": "As point of clarification -- this section only indentended to apply to Verifiers that implement the Accepted Claim Set processing?\r\n\r\nThe Accepted Claim Set section states that Verifiers are not expcted to adhere to it. So in the cases where a Verifiers takes endorsements/ref values via CoRIM, but does not use Accepted Claims Set to process evidence, this does not put restrictions on how that Verifier processes the endorsement CoRIMs? (Specifically, the matching rules seem to apply that the Verifier must either store endorsements as CoRIMs internally, or be able to reproduce the CoRIM structure from its internal representation)",
          "createdAt": "2023-09-06T10:09:47Z",
          "updatedAt": "2023-09-06T10:10:22Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper : Important Point:\r\n\r\nYou need to rebase your Pull Request to the tip of the file on the main branch.\r\n\r\nOtherwise key fixes in these sections (like Feedback from RATS) and other work items from @nedmsmith will be wiped out!",
          "createdAt": "2023-09-07T10:29:56Z",
          "updatedAt": "2023-09-07T10:29:56Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> @andrew-draper : Important Point:\r\n> \r\n> You need to rebase your Pull Request to the tip of the file on the main branch.\r\n> \r\n> Otherwise key fixes in these sections (like Feedback from RATS) and other work items from @nedmsmith will be wiped out!\r\n\r\nAnd please let me know, if you need me to `rebase` if you face any issues in rebasing.",
          "createdAt": "2023-09-07T10:31:56Z",
          "updatedAt": "2023-09-07T10:31:56Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Add first text describing how to match a Reference Value against Accepted Claims Set. Fixes issue #71 ",
          "createdAt": "2023-09-08T10:29:54Z",
          "updatedAt": "2023-09-08T10:29:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85ZC28l",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple comments provided inline",
          "createdAt": "2023-06-22T20:09:27Z",
          "updatedAt": "2023-06-22T23:42:38Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The RATS Arch distinguishes between \"Endorsements\" and \"Reference Values\" whereas TCG may refer to Endorsements as both \"Endorsed Values\" and \"Reference Values\". This I-D should follow RFC9334 terminology conventions. So, while this sentence can be interpreted in a way that is correct, it isn't clear why Reference Values is omitted.",
              "createdAt": "2023-06-22T20:09:27Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nin the Accepted Claims Set {{sec-match-one-ref-val}} against Reference Values from the CoMID tag. These\r\n```",
              "createdAt": "2023-06-22T20:12:11Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nwith the Endorsements, for example as the Conditional Endorsement Series Triple {{sec-comid-triple-cond-series}}.\r\n```",
              "createdAt": "2023-06-22T20:15:56Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 5,
              "body": "Expected this section to describe matching evidence to reference values rather than how Endorsements are processed.",
              "createdAt": "2023-06-22T20:17:39Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nIf any Reference Value in a group does not match the Evidence that is appropriate for the group then this does not affect\r\n```",
              "createdAt": "2023-06-22T20:21:43Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 36,
              "body": "It seems there is an assumption that Evidence is automatically added to Accepted Claims such that matching Ref Vals is applied to Accepted Claims rather than to Evidence. This could make sense, but assumes a particular ordering when processing Evidence.",
              "createdAt": "2023-06-22T20:24:34Z",
              "updatedAt": "2023-08-14T23:36:30Z"
            },
            {
              "originalPosition": 38,
              "body": "It might be more clear to say that matching fails.",
              "createdAt": "2023-06-22T20:25:41Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 40,
              "body": "Line 1464 uses 'Reference Value' as an abstract conceptual message while here it is unclear if it refers to a specific triple. Given there are several triples that contain reference values, the statement loses generality by focusing on the structure of the `reference-triple-record` .\r\n\r\nThe other reference values defined by `identity-triple-record`, `attest-key-triple-record`, and `coswid-triple-record` seem to be ignored. ",
              "createdAt": "2023-06-22T20:28:28Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 41,
              "body": "Upper case Reference Value Triple is ambiguous. It isn't a term in RATS Arch and it isn't a section heading in this document. If it refers to `reference-value-triple-record` then it should use this name.",
              "createdAt": "2023-06-22T20:44:56Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nReferenve Values are represented more compactly by letting one `environment-map`\r\n```",
              "createdAt": "2023-06-22T20:45:41Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 43,
              "body": "`identity-triple-record`, `attest-key-triple-record`, and `coswid-triple-record` are triples that allow the same environment to apply to multiple measurements. Possibly the same is true for conditional endorsed triples too. Possibly, the use of `environment-map` and `measurement-map` are too specific given the goal is to describe compact representations of name-value (triples) structures?",
              "createdAt": "2023-06-22T20:52:46Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nThe Verifier first looks for entries in the Accepted Claims Set {{sec-match-one-ref-val}} with the same\r\n```",
              "createdAt": "2023-06-22T20:55:30Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 55,
              "body": "This step seems specific to the `reference-triple-record`. If so, it should be qualified as such.",
              "createdAt": "2023-06-22T20:59:23Z",
              "updatedAt": "2023-06-22T23:42:38Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\ndepends on whether the reference value is tagged with a CBOR tag {{-cbor}},\r\n```",
              "createdAt": "2023-06-22T21:01:13Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 62,
              "body": "It also depends on the datatype of the value being compared (int vs. string vs. array etc.)",
              "createdAt": "2023-06-22T21:03:00Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nThis specification defines the matching algorithms for some CBOR tagged measurements, which is described in\r\n```",
              "createdAt": "2023-06-22T21:03:40Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nsub-sections below. \r\n\r\nA CoRIM profile may define additional CBOR tags and their matching algorithms.\r\n```",
              "createdAt": "2023-06-22T21:07:56Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-06-22T21:08:07Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nNote that while specifications may extend the matching semantics using CBOR tags,\r\n```",
              "createdAt": "2023-06-22T23:18:30Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 85,
              "body": "What makes a key value \"special\"?",
              "createdAt": "2023-06-22T23:19:24Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nAny new keys requiring special handling must have an appropriate CBOR tag in the\r\n```",
              "createdAt": "2023-06-22T23:19:50Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nThe value accepted under `measurement-values-map` key 1 is an SVN, which is accepted\r\n```",
              "createdAt": "2023-06-22T23:20:47Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nof the Reference Value signer.\r\n```\r\nNote: There are two roles defined for corim: signer and manifest-creator. 'author' is ambiguous as to which role is appropriate. By default the rim signer is used for authority, but there may be a case for manifest-creator if it is supplied. Corim should document these roles better so that it is clear which entity is authoritatively supplying the measurements.",
              "createdAt": "2023-06-22T23:31:20Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nIf the CBOR encoding of the digest entry in the Reference Value or the\r\n```",
              "createdAt": "2023-06-22T23:32:02Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nhash algorithm identifiers that are present in the Reference Value and in the Accepted Claims\r\n```",
              "createdAt": "2023-06-22T23:32:44Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 124,
              "body": "```suggestion\r\nThe Verifier iterates over the Reference Value digests array, locating\r\n```",
              "createdAt": "2023-06-22T23:34:26Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 128,
              "body": "```suggestion\r\nIf there is no hash algorithm identifier which is present in the Reference Value and the\r\n```",
              "createdAt": "2023-06-22T23:35:12Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\nIf a hash algorithm identifier is present in both the Reference Value and the Accepted\r\n```",
              "createdAt": "2023-06-22T23:36:41Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nClaims Set, but the value of the digests are not binary identical between the\r\n```",
              "createdAt": "2023-06-22T23:37:03Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nReference Value and the Accepted Claims Set, the measurement does not match.\r\n```",
              "createdAt": "2023-06-22T23:39:10Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            },
            {
              "originalPosition": 151,
              "body": "```suggestion\r\ncomparison should not be stateful.\r\n```",
              "createdAt": "2023-06-22T23:41:47Z",
              "updatedAt": "2023-06-22T23:42:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPh9w",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T08:58:01Z",
          "updatedAt": "2023-07-05T08:58:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I would agree with Ned, please use RATS specific terms. Especially here, the sentence you mean I think is as follows:\r\n`This section describes the various steps performed by the Verifier to determine which Reference Values in the candidate CoMIDs are applicable to the Attester` All applicable Reference Values are added to the Accepted Claims set.`",
              "createdAt": "2023-07-05T08:58:01Z",
              "updatedAt": "2023-08-14T23:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPiax",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T08:58:56Z",
          "updatedAt": "2023-07-05T08:58:57Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe Verifier checks whether Endorsements are applicable by comparing Evidence\r\n```",
              "createdAt": "2023-07-05T08:58:56Z",
              "updatedAt": "2023-07-05T08:58:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPi9i",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:00:00Z",
          "updatedAt": "2023-07-05T09:00:00Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nwith the Endorsed Values, for example as the Conditional Endorsement Series Triple.\r\n```",
              "createdAt": "2023-07-05T09:00:00Z",
              "updatedAt": "2023-07-05T09:00:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPrkF",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:18:35Z",
          "updatedAt": "2023-07-05T09:18:35Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe following subsections describe how the CoRIM conveys the Verifier which\r\n```",
              "createdAt": "2023-07-05T09:18:35Z",
              "updatedAt": "2023-07-05T09:18:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPr5A",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:19:19Z",
          "updatedAt": "2023-07-05T09:19:19Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nReference Values and  Endorsed Values are grouped together ({{sec-grouping-ref-vals}})\r\n```",
              "createdAt": "2023-07-05T09:19:19Z",
              "updatedAt": "2023-07-05T09:19:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPr-Q",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:19:31Z",
          "updatedAt": "2023-07-05T09:19:31Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nand how the Verifier matches a Reference Value against the Accepted Claims Set\r\n```",
              "createdAt": "2023-07-05T09:19:31Z",
              "updatedAt": "2023-07-05T09:19:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPsMT",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:20:02Z",
          "updatedAt": "2023-07-05T09:20:02Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nEndorsed Values in the group are added to the Accepted Claims Set\r\n```",
              "createdAt": "2023-07-05T09:20:02Z",
              "updatedAt": "2023-07-05T09:20:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPtrG",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:23:08Z",
          "updatedAt": "2023-07-05T09:23:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Here I would like to mention one statement:\r\n`When a Reference Value mismatch occurs, its impact on overall Appraisal  depends on the Verifier Appraisal Policy used in the context of the Appraisal.`",
              "createdAt": "2023-07-05T09:23:08Z",
              "updatedAt": "2023-07-05T09:23:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPupa",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:25:07Z",
          "updatedAt": "2023-07-05T09:25:07Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nReference Values are stored more compactly by letting one `environment-map`\r\n```",
              "createdAt": "2023-07-05T09:25:07Z",
              "updatedAt": "2023-07-05T09:25:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPvQ-",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:26:14Z",
          "updatedAt": "2023-07-05T09:26:15Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n`environment-map` as the Reference Value. If there are no such entries then\r\n```",
              "createdAt": "2023-07-05T09:26:14Z",
              "updatedAt": "2023-07-05T09:26:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPw3q",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:28:52Z",
          "updatedAt": "2023-07-05T09:28:52Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Are we sure how this comparison is mentioned here ? Are we saying we compare the CBOR Encoded objects.\r\n\r\nMy understanding was that based on a specific `attestation scheme` the Environment Structure would be populated and one would compare it matching identical elements in the reference-value-triple-record.",
              "createdAt": "2023-07-05T09:28:52Z",
              "updatedAt": "2023-07-05T09:28:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPyRd",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:30:21Z",
          "updatedAt": "2023-07-05T09:30:22Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nIf the Verifier does not recognize the Reference Value CBOR tag value then\r\n```",
              "createdAt": "2023-07-05T09:30:21Z",
              "updatedAt": "2023-07-05T09:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPy7u",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:31:26Z",
          "updatedAt": "2023-07-05T09:31:26Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "Same comment, the statement is not clear and needs better explination",
              "createdAt": "2023-07-05T09:31:26Z",
              "updatedAt": "2023-07-05T09:31:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aPzgv",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:32:44Z",
          "updatedAt": "2023-07-05T09:32:44Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Did you mean the same Authorized by entry is expected in the received Evidence present in the Accepted Claims Set?",
              "createdAt": "2023-07-05T09:32:44Z",
              "updatedAt": "2023-07-05T09:32:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP0HZ",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:34:09Z",
          "updatedAt": "2023-07-05T09:34:09Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "I thought we now have a code point for every entry in the `measurement-values-map` ?",
              "createdAt": "2023-07-05T09:34:09Z",
              "updatedAt": "2023-07-05T09:34:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP14f",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:38:18Z",
          "updatedAt": "2023-07-05T09:38:18Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "```suggestion\r\n#6.TBD is a digest entry. \r\n```",
              "createdAt": "2023-07-05T09:38:18Z",
              "updatedAt": "2023-07-05T09:38:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP2Jb",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:38:55Z",
          "updatedAt": "2023-07-05T09:38:55Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\n A Reference Value may contain multiple digests, each with a\r\n```",
              "createdAt": "2023-07-05T09:38:55Z",
              "updatedAt": "2023-07-05T09:38:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP2pS",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:40:05Z",
          "updatedAt": "2023-07-05T09:40:05Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\ndifferent algorithm, if the algorithm meets the security requirements\r\n```",
              "createdAt": "2023-07-05T09:40:05Z",
              "updatedAt": "2023-07-05T09:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP35T",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:42:56Z",
          "updatedAt": "2023-07-05T09:42:57Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "```suggestion\r\n##### Handling of new tags\r\n```",
              "createdAt": "2023-07-05T09:42:56Z",
              "updatedAt": "2023-07-05T09:42:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP4Hm",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:43:29Z",
          "updatedAt": "2023-07-05T09:43:30Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "```suggestion\r\nprofile must specify how to compare the tagged Reference Value against\r\n```",
              "createdAt": "2023-07-05T09:43:30Z",
              "updatedAt": "2023-07-05T09:43:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85aP4QQ",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T09:43:48Z",
          "updatedAt": "2023-07-05T09:43:49Z",
          "comments": [
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nNote that the Verifier may compare Reference Values in any order, so the\r\n```",
              "createdAt": "2023-07-05T09:43:49Z",
              "updatedAt": "2023-07-05T09:43:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eCzxT",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T23:31:18Z",
          "updatedAt": "2023-08-14T23:31:18Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "The suggested change confuses me. The original seems clearer.",
              "createdAt": "2023-08-14T23:31:18Z",
              "updatedAt": "2023-08-14T23:31:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNjoZ",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:28:40Z",
          "updatedAt": "2023-08-16T13:28:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I could imagine changing line 1430 to say \"Matching Evidence and Endorsements against Reference values\", with a corresponding change to line 1433. Is this the change you're suggesting?",
              "createdAt": "2023-08-16T13:28:40Z",
              "updatedAt": "2023-08-16T13:28:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNmEH",
          "commit": {
            "abbreviatedOid": "65415f4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:32:41Z",
          "updatedAt": "2023-08-16T13:32:41Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I disagree with this change. The point of CoRIM is for the Endorser (rim author) to provide a description of what they want. If the Verifier ignores the mismatch then it is not following the instructions from the Endorser.\r\nI will find a way to say this which is hopefully acceptable.",
              "createdAt": "2023-08-16T13:32:41Z",
              "updatedAt": "2023-08-16T13:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNnJF",
          "commit": {
            "abbreviatedOid": "65415f4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:34:06Z",
          "updatedAt": "2023-08-16T13:34:07Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "The section above describes how the accepted claims set is initialized with evidence, so yes, the statement you made above is true.",
              "createdAt": "2023-08-16T13:34:06Z",
              "updatedAt": "2023-08-16T13:34:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNvc9",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:42:56Z",
          "updatedAt": "2023-08-16T13:42:56Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Well... a CoRIM does not convey policy (only conditional-endorsements as a fringe case, I think). Therefore, there is some discrepancy here. It must be very simple and clear, though, for a Verifier to select appropriate policies or fall-back to a default behavior, I think.",
              "createdAt": "2023-08-16T13:42:56Z",
              "updatedAt": "2023-08-16T13:42:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eUGpm",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-17T10:35:11Z",
          "updatedAt": "2023-08-17T10:35:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The verifier is trying to work out which triples should be added to the accepted claims set. Reworded.",
              "createdAt": "2023-08-17T10:35:11Z",
              "updatedAt": "2023-08-17T10:35:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fAt8F",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-24T16:33:10Z",
          "updatedAt": "2023-08-24T16:33:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I don't see updated wording. Is it stuck in a local repo possibly?",
              "createdAt": "2023-08-24T16:33:10Z",
              "updatedAt": "2023-08-24T16:33:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fA0LO",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-24T16:48:11Z",
          "updatedAt": "2023-08-24T16:48:12Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Consider the Attester being a graph where each node represents a TE. Appraisal of each TE will result in an isomorphic graph containing accepted claims for each TE. Some of the nodes may have an appraisal failure result.\r\nWhat is the expected behavior of the Verifier when preparing an AR? One possibility is there is an AR graph that is isomorphic to the evidence / accepted claims graphs. The concise attestation results (CAR) schema would allow each node in the graph to have an AR4SI result while the EAR schema would take the average of the graph. Presumably, the nodes containing failed appraisal results would essentially multiply the average by zero, a.k.a., contraindicated, causing the whole result to be a failure (contraindicated) state? Since the exact behavior of how Verifier produces attestation results isn't known, the verifier should maintain the integrity of the (accepted claims) graph and treat it as the input to the verifier's AR processing capability.\r\nPossibly, it makes sense to add a section following section 5 that describes attestation results processing?  ",
              "createdAt": "2023-08-24T16:48:11Z",
              "updatedAt": "2023-08-24T16:51:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fA4IN",
          "commit": {
            "abbreviatedOid": "65415f4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-24T16:58:49Z",
          "updatedAt": "2023-08-24T17:44:45Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nThis section describes how a Reference Value is matched against Evidence that has been added to the Accepted Claims\r\n```",
              "createdAt": "2023-08-24T16:58:50Z",
              "updatedAt": "2023-08-24T17:44:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gFVz1",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T22:04:24Z",
          "updatedAt": "2023-09-05T22:04:24Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I have changed this to lower case since it could refer to a reference value within conditional-endorsement-triple-record as well",
              "createdAt": "2023-09-05T22:04:24Z",
              "updatedAt": "2023-09-05T22:04:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gFXRq",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T22:11:23Z",
          "updatedAt": "2023-09-05T22:11:23Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "It is described in this document. Removed most mentions of special",
              "createdAt": "2023-09-05T22:11:23Z",
              "updatedAt": "2023-09-05T22:11:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gFYOm",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T22:15:59Z",
          "updatedAt": "2023-09-05T22:15:59Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Already reworded",
              "createdAt": "2023-09-05T22:15:59Z",
              "updatedAt": "2023-09-05T22:15:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gFY52",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T22:18:08Z",
          "updatedAt": "2023-09-05T22:18:08Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "This text was removed, but I think the entity which signed the CoRIM is irrelevant for most of the meaning of the CoRIM.",
              "createdAt": "2023-09-05T22:18:08Z",
              "updatedAt": "2023-09-05T22:18:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gFeH6",
          "commit": {
            "abbreviatedOid": "6775eb1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple",
          "createdAt": "2023-09-05T22:43:08Z",
          "updatedAt": "2023-09-06T00:58:26Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nClaims Set.\r\nIf any part of the processing indicates that the Reference Value does not match then the remaining steps in this section are skipped for that group.\r\n```",
              "createdAt": "2023-09-05T22:43:08Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 38,
              "body": "This seems to partially address the processing requirements as RVs and Evidence matching is a core concept. If RVs don't match ACs that are derived from Evidence, then those claims are removed from Accepted Claims.",
              "createdAt": "2023-09-05T23:49:07Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 41,
              "body": "The grouping construct should apply to all forms of claims (Endorsements, Evidence, RVs). The grouping construct isn't itself a conceptual message type. This language treats it like a CM which can be misleading.",
              "createdAt": "2023-09-05T23:50:45Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nThis section describes how a Reference Value is matched against Evidence in the Accepted\r\n```",
              "createdAt": "2023-09-05T23:51:07Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion Claims Set.\r\nIf any part of the processing indicates that the Reference Value does not match,\r\nthen the remaining steps in this section are skipped for that group.\r\n```",
              "createdAt": "2023-09-05T23:51:30Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nencoded objects.\r\n```",
              "createdAt": "2023-09-05T23:54:56Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 49,
              "body": "CBOR imposes byte order serialization. This is preserved even if CBOR tagging and other encoding are discarded by the parser. The language may need to be clear about what parts of the CBOR are necessary for \"matching\". If a data value is represented in a data structure in memory without CBOR metadata (such as whether it's an array or map), that shouldn't affect Verifier outcome.",
              "createdAt": "2023-09-05T23:59:03Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 86,
              "body": "Need forward references to the \"sub-sections below\"",
              "createdAt": "2023-09-06T00:09:12Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 90,
              "body": "need forward reference to \"below\"",
              "createdAt": "2023-09-06T00:09:55Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 91,
              "body": "\"CBOR encoded\" is ambiguous depending on how the parser represented the values. Possibly the focus is on the CBOR serialization (big endian)? In which case, we can just say that.",
              "createdAt": "2023-09-06T00:12:45Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 94,
              "body": "'specifications' seems nebulous. Can we say 'corim profiles'? Discussion moved to issue #141.",
              "createdAt": "2023-09-06T00:14:02Z",
              "updatedAt": "2023-09-06T18:27:39Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nthere is no way to extend the matching semantics of keys.\r\n```",
              "createdAt": "2023-09-06T00:24:12Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 96,
              "body": "Isn't it possible to add a CBOR tagged value without adding a new key? Note also that unless the CDDL describes the type as extensible ($xxx-type-choice) it isn't possible to modify the value using CBOR tagging. \r\nIf describing extensibility of keys, the only way way to do this is to add new keys (code points). Profiles defines which keys it must understand (already). \r\nI'm not sure what warning or advice the \"note\" is conveying that isn't already understood by profiles and CDDL.",
              "createdAt": "2023-09-06T00:30:46Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 99,
              "body": "Given all RVs are signed / authenticated, all RVs have an authorized-by context. The same is true for Evidence / ACS. All Evidence is signed / authenticated, hence has an authorized-by context. I don't think the conditional wording is needed, but rather to explain better the authorized-by context.",
              "createdAt": "2023-09-06T00:33:29Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nThe value stored under `measurement-values-map` key 2,\r\nor a value tagged with\r\n```",
              "createdAt": "2023-09-06T00:36:35Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 126,
              "body": "```suggestion\r\n#6.TBD is a digest entry.\r\nIt contains one or more digests, each measuring the\r\n```",
              "createdAt": "2023-09-06T00:36:54Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 126,
              "body": "I don't remember a decision to define a #6.TBD for `digests` value. Maybe worry about documenting it when we cross that bridge? Issue #139 tracks this conversation. The text `#6.TBD is a digest entry.` should be removed from PR #107 ",
              "createdAt": "2023-09-06T00:38:06Z",
              "updatedAt": "2023-09-06T18:08:11Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\ndigest in Evidence contains a single value with an algorithm and value\r\n```",
              "createdAt": "2023-09-06T00:38:47Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 129,
              "body": "Are we constantly referring to Evidence as Accepted Claims Set? I'm confused as to when it is appropriate to use one term over the other.",
              "createdAt": "2023-09-06T00:39:41Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nboth the Evidence and Reference Value then the digests calculated using all\r\n```",
              "createdAt": "2023-09-06T00:40:04Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 137,
              "body": "```suggestion\r\nIf the CBOR structure of the `digests` entry in the Reference Value or the\r\n```",
              "createdAt": "2023-09-06T00:40:32Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 137,
              "body": "Couldn't an implementation convert the CBOR array of `digests` into a linked list or some other memory structure and loose the CBOR encoding (so long as it preserves array position and byte order)?",
              "createdAt": "2023-09-06T00:43:31Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 145,
              "body": "```suggestion\r\nIf the hash algorithm identifier which is present in the Reference Value\r\n```",
              "createdAt": "2023-09-06T00:44:48Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 146,
              "body": "```suggestion\r\ndiffers from the hash algorithm identifier in the Accepted Claims Set entry then the Reference Value does not match.\r\n```",
              "createdAt": "2023-09-06T00:45:25Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 146,
              "body": "Note: IANA registry for hash algs allows multiple encodings: numeric (0,1,2,...), stringified numeric (\"0\", \"1\", \"2\",...) and strings \"sha-256\", \"sha-384\" etc. Should the description here point to the IANA registry and should the Verifier perform reasonable similarity checking, e.g.: \"1\" equals 1 equals \"sha-256\"?\r\n\r\nAdditionally, profiles can define their own alg ids (so long as they don't conflict with the IANA registry).",
              "createdAt": "2023-09-06T00:48:56Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            },
            {
              "originalPosition": 180,
              "body": "The TcbInfo TYPE is an OCTET STRING that can contain whatever form that `class-id` can take. I believe it supports tagged UUID and tagged int in addition to tagged OID. The Verifier reads the RV to know how to translate the Evidence OCTET STRING. This poses a problem for Verifiers that copy the Evidence into ACS without knowing the RV context. Possibly, they need a dirty bit that tells whether the schema translation has been applied?",
              "createdAt": "2023-09-06T00:54:56Z",
              "updatedAt": "2023-09-06T00:58:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK0HZ",
          "commit": {
            "abbreviatedOid": "6775eb1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:12:31Z",
          "updatedAt": "2023-09-06T14:12:31Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "following RFC9334: yes",
              "createdAt": "2023-09-06T14:12:31Z",
              "updatedAt": "2023-09-06T14:12:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK0YF",
          "commit": {
            "abbreviatedOid": "29a82ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:13:01Z",
          "updatedAt": "2023-09-06T14:13:01Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Sentences are lines: yes",
              "createdAt": "2023-09-06T14:13:01Z",
              "updatedAt": "2023-09-06T14:13:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK0xc",
          "commit": {
            "abbreviatedOid": "e53ba32"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:13:44Z",
          "updatedAt": "2023-09-06T14:13:44Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "yes",
              "createdAt": "2023-09-06T14:13:44Z",
              "updatedAt": "2023-09-06T14:13:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK1DA",
          "commit": {
            "abbreviatedOid": "cbc9511"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:14:15Z",
          "updatedAt": "2023-09-06T14:14:16Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "good enough",
              "createdAt": "2023-09-06T14:14:15Z",
              "updatedAt": "2023-09-06T14:14:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK1zr",
          "commit": {
            "abbreviatedOid": "184828d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:15:38Z",
          "updatedAt": "2023-09-06T14:15:38Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "following RFC9334: yes",
              "createdAt": "2023-09-06T14:15:38Z",
              "updatedAt": "2023-09-06T14:15:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK2rb",
          "commit": {
            "abbreviatedOid": "6df72f1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:17:11Z",
          "updatedAt": "2023-09-06T14:17:11Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "ah... this is associated with the next suggestion. Then yes",
              "createdAt": "2023-09-06T14:17:11Z",
              "updatedAt": "2023-09-06T14:17:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK3RC",
          "commit": {
            "abbreviatedOid": "10ab760"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:18:16Z",
          "updatedAt": "2023-09-06T14:18:17Z",
          "comments": [
            {
              "originalPosition": 146,
              "body": "yes on the suggestion (as above). @nedmsmith, maybe rescue your comment as an issue?",
              "createdAt": "2023-09-06T14:18:17Z",
              "updatedAt": "2023-09-06T14:18:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK3eX",
          "commit": {
            "abbreviatedOid": "2086e9c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:18:40Z",
          "updatedAt": "2023-09-06T14:18:40Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "okay",
              "createdAt": "2023-09-06T14:18:40Z",
              "updatedAt": "2023-09-06T14:18:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gK8nz",
          "commit": {
            "abbreviatedOid": "92f017f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T14:26:40Z",
          "updatedAt": "2023-09-06T14:26:40Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "to be addressed with issue #136",
              "createdAt": "2023-09-06T14:26:40Z",
              "updatedAt": "2023-09-06T14:26:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gLSky",
          "commit": {
            "abbreviatedOid": "92f017f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-09-06T15:01:25Z",
          "updatedAt": "2023-09-06T15:01:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85gMlrJ",
          "commit": {
            "abbreviatedOid": "92f017f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T17:50:07Z",
          "updatedAt": "2023-09-06T17:50:08Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "Created issue #138 ",
              "createdAt": "2023-09-06T17:50:08Z",
              "updatedAt": "2023-09-06T17:50:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gMrgK",
          "commit": {
            "abbreviatedOid": "92f017f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T18:05:44Z",
          "updatedAt": "2023-09-06T18:05:44Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Issue #139 tracks this discussion. ",
              "createdAt": "2023-09-06T18:05:44Z",
              "updatedAt": "2023-09-06T18:05:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gMwc3",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T18:19:24Z",
          "updatedAt": "2023-09-06T18:19:25Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "Tracked by issue #140 ",
              "createdAt": "2023-09-06T18:19:24Z",
              "updatedAt": "2023-09-06T18:19:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gMzak",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T18:27:47Z",
          "updatedAt": "2023-09-06T18:27:47Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Discussion moved to issue #141.",
              "createdAt": "2023-09-06T18:27:47Z",
              "updatedAt": "2023-09-06T18:27:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gM3JP",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T18:38:12Z",
          "updatedAt": "2023-09-06T18:38:12Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "This is tracked by issue #142",
              "createdAt": "2023-09-06T18:38:12Z",
              "updatedAt": "2023-09-06T18:38:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gM3qo",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T18:39:36Z",
          "updatedAt": "2023-09-06T18:39:37Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "See issues #141 and #142",
              "createdAt": "2023-09-06T18:39:36Z",
              "updatedAt": "2023-09-06T18:39:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gM36C",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-06T18:40:16Z",
          "updatedAt": "2023-09-06T19:37:59Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nDeterministic Encoding Requirements {{Section 4.2.1 of -cbor}} before performing the binary comparison.\r\n```",
              "createdAt": "2023-09-06T18:40:16Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 49,
              "body": "Tracked by issue #142",
              "createdAt": "2023-09-06T18:41:18Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nIf any part of the processing indicates that the Reference Value does not match, then the remaining steps in this section are skipped for that group.\r\n```",
              "createdAt": "2023-09-06T18:48:50Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nA Reference Value Claim consists of an environment, (e.g.,: `environment-map`) plus one or more measurements (e.g.: `measurement-map`). In the\r\n```",
              "createdAt": "2023-09-06T18:52:24Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nwhere multiple measurements may be represented by one environment.\r\n```",
              "createdAt": "2023-09-06T18:56:56Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-09-06T18:57:17Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 41,
              "body": "Tracked by issue #136",
              "createdAt": "2023-09-06T19:02:09Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            },
            {
              "originalPosition": 38,
              "body": "tracked by issue #143",
              "createdAt": "2023-09-06T19:08:38Z",
              "updatedAt": "2023-09-06T19:37:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gRJOh",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T10:18:08Z",
          "updatedAt": "2023-09-07T10:18:09Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n[^issue]: Need to complete the processing requirements, when partial matching occurs or a complete mis-match occurs. Tracked at https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/143\r\n```",
              "createdAt": "2023-09-07T10:18:08Z",
              "updatedAt": "2023-09-07T10:18:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gRwKO",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T11:59:19Z",
          "updatedAt": "2023-09-07T11:59:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Updated text has been pushed to the main repository, now at line 1431",
              "createdAt": "2023-09-07T11:59:19Z",
              "updatedAt": "2023-09-07T11:59:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gRzEb",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:06:54Z",
          "updatedAt": "2023-09-07T12:06:54Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I rewrote this, please check that the new text is acceptable, and propose better text if it is not",
              "createdAt": "2023-09-07T12:06:54Z",
              "updatedAt": "2023-09-07T12:06:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gRzOS",
          "commit": {
            "abbreviatedOid": "c11ecb2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:07:17Z",
          "updatedAt": "2023-09-07T12:07:17Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "I rewrote this, please check that the current text is acceptable",
              "createdAt": "2023-09-07T12:07:17Z",
              "updatedAt": "2023-09-07T12:07:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gRzxM",
          "commit": {
            "abbreviatedOid": "6775eb1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:08:42Z",
          "updatedAt": "2023-09-07T12:08:42Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I used your suggestion",
              "createdAt": "2023-09-07T12:08:42Z",
              "updatedAt": "2023-09-07T12:08:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR06V",
          "commit": {
            "abbreviatedOid": "6775eb1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:11:39Z",
          "updatedAt": "2023-09-07T12:11:40Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "Change applied.\r\nFor your second comment - It could, and I think that matches the earlier statement that any implementation which behaves the same as a reference implementation conforms to the standard.",
              "createdAt": "2023-09-07T12:11:39Z",
              "updatedAt": "2023-09-07T12:11:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR1XM",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:12:50Z",
          "updatedAt": "2023-09-07T12:12:50Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Is it a good idea to refer to sections in other documents? The other document might change and the reference then becomes outdated. I will link to the whole document",
              "createdAt": "2023-09-07T12:12:50Z",
              "updatedAt": "2023-09-07T12:12:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR2Y1",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:15:01Z",
          "updatedAt": "2023-09-07T12:15:02Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Your statement is true, but not what I am trying to say.\r\nWhen the next change goes in describing how to process conditional public key entry, it will talk about how to convert that claim into one or more reference values which are processed in sequence.",
              "createdAt": "2023-09-07T12:15:01Z",
              "updatedAt": "2023-09-07T12:15:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR2pk",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:15:38Z",
          "updatedAt": "2023-09-07T12:15:39Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I agree this is not beautiful, but I am not convinced yours is better",
              "createdAt": "2023-09-07T12:15:39Z",
              "updatedAt": "2023-09-07T12:15:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR207",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:16:07Z",
          "updatedAt": "2023-09-07T12:16:08Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "I don't think it makes sense if this is deleted. Maybe it is outdated.",
              "createdAt": "2023-09-07T12:16:07Z",
              "updatedAt": "2023-09-07T12:16:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gR5ej",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T12:22:34Z",
          "updatedAt": "2023-09-07T12:22:35Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I think we should discuss that issue separately and can add text here if it is needed for the handling of the issue.",
              "createdAt": "2023-09-07T12:22:34Z",
              "updatedAt": "2023-09-07T12:22:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTp2T",
          "commit": {
            "abbreviatedOid": "51a51f2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T15:54:03Z",
          "updatedAt": "2023-09-07T15:54:03Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "None of the statements are correct. As of CDDL in the current spec, a Reference Value triple has one `environment` and corresponding one `measurement-map` So considering this fact, I would re-word the statement as",
              "createdAt": "2023-09-07T15:54:03Z",
              "updatedAt": "2023-09-07T15:54:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTsqu",
          "commit": {
            "abbreviatedOid": "51a51f2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T15:59:16Z",
          "updatedAt": "2023-09-07T15:59:17Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "```suggestion\r\nReference Values pertaining to an environment are represented more compactly by collecting various types of measurements in a single `measurement-map`\r\n```",
              "createdAt": "2023-09-07T15:59:17Z",
              "updatedAt": "2023-09-07T15:59:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTtpq",
          "commit": {
            "abbreviatedOid": "51a51f2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T16:01:25Z",
          "updatedAt": "2023-09-07T16:01:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85gTwZ3",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:07:57Z",
          "updatedAt": "2023-09-07T16:07:57Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "> Is it a good idea to refer to sections in other documents? The other document might change and the reference then becomes outdated. I will link to the whole document\r\n\r\nRFCs don't change. They can be updated by another RFC.",
              "createdAt": "2023-09-07T16:07:57Z",
              "updatedAt": "2023-09-07T16:07:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTya3",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:11:48Z",
          "updatedAt": "2023-09-07T16:11:48Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "I don't know what a \"conditional public key entry\" is. Is it defined somewhere or is this shorthand notation for `conditional-endorsement-triples` containing `identity-key-triples` or something else?",
              "createdAt": "2023-09-07T16:11:48Z",
              "updatedAt": "2023-09-07T16:11:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT1VY",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:14:57Z",
          "updatedAt": "2023-09-07T16:14:58Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "It is reasonable to consider multiple triples having the same `environment-map` but using different triples to arrive at a set of measurements that belong to the environment. An internal representation would be described by an environment with multiple measurements.\r\n\r\nOverall, the reader is confused about what the internal representation is and how the Verifier processes it.",
              "createdAt": "2023-09-07T16:14:58Z",
              "updatedAt": "2023-09-07T16:15:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT2gy",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:17:45Z",
          "updatedAt": "2023-09-07T16:17:45Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "We should not use the word `triples` then. I was confused by the statement.\r\n\r\nI would re-phrase it then to:\r\n\r\nInternally the Verifier can combine all the measurements belonging to the same environment together or something similar",
              "createdAt": "2023-09-07T16:17:45Z",
              "updatedAt": "2023-09-07T16:17:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT2_s",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:18:58Z",
          "updatedAt": "2023-09-07T16:18:58Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "> I don't think it makes sense if this is deleted. Maybe it is outdated.\r\n\r\nThis is an artifact of previous suggested edits.",
              "createdAt": "2023-09-07T16:18:58Z",
              "updatedAt": "2023-09-07T16:18:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT5Uw",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:24:54Z",
          "updatedAt": "2023-09-07T16:24:54Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> We should not use the word `triples` then. I was confused by the statement.\r\n> \r\n> I would re-phrase it then to:\r\n> \r\n> Internally the Verifier can combine all the measurements belonging to the same environment together or something similar\r\n\r\nI agree that we should have conventions for describing the internal representation without referring to specific CDDL / encodings. The challenge is doing this without being nebulous. Possibly, a strategy is to describe the internal representation by describing the CDDL that instantiated it. e.g., \"...the environment (instantiated by `environment-map`)...\"",
              "createdAt": "2023-09-07T16:24:54Z",
              "updatedAt": "2023-09-07T16:24:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT7JV",
          "commit": {
            "abbreviatedOid": "51a51f2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:29:13Z",
          "updatedAt": "2023-09-07T16:29:14Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I think there are overlapping multi-line suggested changes. Can we close on this PR and manage changes using more focused issues? i.e., open an issue rather than suggest changes here.",
              "createdAt": "2023-09-07T16:29:13Z",
              "updatedAt": "2023-09-07T16:29:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT-Bs",
          "commit": {
            "abbreviatedOid": "51a51f2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:36:48Z",
          "updatedAt": "2023-09-07T16:36:48Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Tracked via issue #144 ",
              "createdAt": "2023-09-07T16:36:48Z",
              "updatedAt": "2023-09-07T16:36:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gUNBP",
          "commit": {
            "abbreviatedOid": "5595121"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T17:11:25Z",
          "updatedAt": "2023-09-07T17:11:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85gUNss",
          "commit": {
            "abbreviatedOid": "5595121"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "As all open issues are tracked via github, hence approving the PR!",
          "createdAt": "2023-09-07T17:12:33Z",
          "updatedAt": "2023-09-07T17:12:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85gUXQe",
          "commit": {
            "abbreviatedOid": "5595121"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:38:44Z",
          "updatedAt": "2023-09-07T17:38:44Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "does this thread of comments require an issue to be raised before merging?",
              "createdAt": "2023-09-07T17:38:44Z",
              "updatedAt": "2023-09-07T17:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gUXhS",
          "commit": {
            "abbreviatedOid": "5595121"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:39:28Z",
          "updatedAt": "2023-09-07T17:39:28Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "if this change is not contentious, we can add the suggestion before merging",
              "createdAt": "2023-09-07T17:39:28Z",
              "updatedAt": "2023-09-07T17:39:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gUZLM",
          "commit": {
            "abbreviatedOid": "6676808"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:44:21Z",
          "updatedAt": "2023-09-07T17:44:22Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> does this thread of comments require an issue to be raised before merging?\r\n\r\nNo. see issue #144 ",
              "createdAt": "2023-09-07T17:44:22Z",
              "updatedAt": "2023-09-07T17:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gUZ_v",
          "commit": {
            "abbreviatedOid": "5595121"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T17:46:54Z",
          "updatedAt": "2023-09-07T17:48:32Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "OK with me (obviously)",
              "createdAt": "2023-09-07T17:46:54Z",
              "updatedAt": "2023-09-07T17:48:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOH6-tI85WcA8L",
      "title": "Minor Tidy up",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/113",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixing some spelling typos and correcting github links",
      "createdAt": "2023-07-26T12:33:23Z",
      "updatedAt": "2023-07-26T18:52:25Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8c4fd648260511450ce19710292ea5aea3ac0931",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "minor-tidyup",
      "headRefOid": "1daccf118487bc79affe2a7016996e17b594ca1e",
      "closedAt": "2023-07-26T18:52:21Z",
      "mergedAt": "2023-07-26T18:52:21Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "0c4f8b824f6015fd1d772ac7c9af311a4a11570f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85cRFcU",
          "commit": {
            "abbreviatedOid": "1daccf1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-26T15:03:58Z",
          "updatedAt": "2023-07-26T15:03:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOH6-tI85XBE6g",
      "title": "Minor correction based on IETF RATS session feedback",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/114",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-02T14:32:32Z",
      "updatedAt": "2023-08-04T15:03:57Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "0c4f8b824f6015fd1d772ac7c9af311a4a11570f",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "corim-tidy",
      "headRefOid": "6aef9749ffbe7c4714f30d5c774bf6566bd96385",
      "closedAt": "2023-08-04T15:03:53Z",
      "mergedAt": "2023-08-04T15:03:53Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "7feb95ca47ea3d9095de5662e76f7db369b9437b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85dKdHe",
          "commit": {
            "abbreviatedOid": "de6f4c5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-04T14:38:41Z",
          "updatedAt": "2023-08-04T14:38:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85dKgWE",
          "commit": {
            "abbreviatedOid": "de6f4c5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-04T14:46:16Z",
          "updatedAt": "2023-08-04T14:46:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n# CoRIM-based Appraisal of Evidence\r\n```",
              "createdAt": "2023-08-04T14:46:16Z",
              "updatedAt": "2023-08-04T14:46:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85dKmO5",
          "commit": {
            "abbreviatedOid": "6aef974"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-04T15:00:28Z",
          "updatedAt": "2023-08-04T15:00:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 116,
      "id": "PR_kwDOH6-tI85XqKpx",
      "title": "add is-confidentiality-protected flag",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/116",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "added is-confidentiality-protected flag to flags-map.\r\nFixes issue #101 ",
      "createdAt": "2023-08-10T16:49:33Z",
      "updatedAt": "2023-08-16T14:24:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7feb95ca47ea3d9095de5662e76f7db369b9437b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "is-conf-protected",
      "headRefOid": "f60e6dfc48894cea80c52859c8393fb48a2c61d7",
      "closedAt": "2023-08-16T14:24:04Z",
      "mergedAt": "2023-08-16T14:24:04Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "2b7588b52a799a1d7dfb48e9f0147944167c0edd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85duUPc",
          "commit": {
            "abbreviatedOid": "7721592"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-10T17:45:02Z",
          "updatedAt": "2023-08-10T17:45:03Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n                / confidentiality-protected / 9 : true\r\n```",
              "createdAt": "2023-08-10T17:45:02Z",
              "updatedAt": "2023-08-10T17:45:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85duUab",
          "commit": {
            "abbreviatedOid": "7721592"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-08-10T17:45:32Z",
          "updatedAt": "2023-08-10T17:45:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eOGjD",
          "commit": {
            "abbreviatedOid": "f4bbb3d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T14:22:32Z",
          "updatedAt": "2023-08-16T14:22:32Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nthe sensitive values in memory are encrypted.\r\n```",
              "createdAt": "2023-08-16T14:22:32Z",
              "updatedAt": "2023-08-16T14:22:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eOFKR",
          "commit": {
            "abbreviatedOid": "f4bbb3d"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-16T14:19:56Z",
          "updatedAt": "2023-08-16T14:23:41Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "\"such as,\" might be better worded as \"for example\" ",
              "createdAt": "2023-08-16T14:19:56Z",
              "updatedAt": "2023-08-16T14:23:41Z"
            }
          ]
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOH6-tI85X7r1q",
      "title": "Accepted claims map changed to accepted claims set",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/118",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Changed uses of accepted claims map to accepted claims set to align with other uses of accepted claims set.",
      "createdAt": "2023-08-14T23:47:43Z",
      "updatedAt": "2023-08-16T14:08:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7feb95ca47ea3d9095de5662e76f7db369b9437b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "acc-claims-map-to-set",
      "headRefOid": "0457a47a34eb1f15f1b186c85b29f7733acc4761",
      "closedAt": "2023-08-16T14:08:06Z",
      "mergedAt": "2023-08-16T14:08:06Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "c6bd0a0cd312bcd1edf19ee1a32291362c36cd30"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Lets be consistent. If we decide to change to accepted claims map then we can change all occurances.",
          "createdAt": "2023-08-16T14:05:01Z",
          "updatedAt": "2023-08-16T14:05:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85eNgW9",
          "commit": {
            "abbreviatedOid": "0457a47"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm. Claims Set is the term to go with. Map would have been more precise, but that's where we are today :-)",
          "createdAt": "2023-08-16T13:22:28Z",
          "updatedAt": "2023-08-16T13:22:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eNiPc",
          "commit": {
            "abbreviatedOid": "0457a47"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-16T13:26:02Z",
          "updatedAt": "2023-08-16T13:26:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOH6-tI85X7y-T",
      "title": "adds DICE and SPDM references",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/119",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Adds references to TCG specs that are now public, cleans up broken references, and fixes descriptive text.",
      "createdAt": "2023-08-15T00:39:28Z",
      "updatedAt": "2023-08-16T14:14:54Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7feb95ca47ea3d9095de5662e76f7db369b9437b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "dice-spdm-refs",
      "headRefOid": "0165d24f71525b4d49402c7b867225d2a72f64f9",
      "closedAt": "2023-08-16T14:14:50Z",
      "mergedAt": "2023-08-16T14:14:50Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "2497070fee5b62b552edff7fcab4f4036b135247"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85eNjXJ",
          "commit": {
            "abbreviatedOid": "0165d24"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "> title: TCG DICE Concise Evidence Binding for SPDM\r\n\r\nFinally!\r\n\r\n:ship: it",
          "createdAt": "2023-08-16T13:28:10Z",
          "updatedAt": "2023-08-16T13:28:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eOCEh",
          "commit": {
            "abbreviatedOid": "0165d24"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-08-16T14:14:07Z",
          "updatedAt": "2023-08-16T14:14:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "PR_kwDOH6-tI85YAPYM",
      "title": "raw values type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/120",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added text to the Raw Values Type section. Fixes issue #9, partially",
      "createdAt": "2023-08-15T20:34:25Z",
      "updatedAt": "2023-08-16T14:42:59Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7feb95ca47ea3d9095de5662e76f7db369b9437b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "raw-value-type",
      "headRefOid": "bb2d758d94124a5099cd1f1c0fbf4f02c1621a72",
      "closedAt": "2023-08-16T14:42:56Z",
      "mergedAt": "2023-08-16T14:42:56Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "c026bb599c1673b61245bcccb809519cb5207d68"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85eNkjx",
          "commit": {
            "abbreviatedOid": "ce1ce1a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:30:25Z",
          "updatedAt": "2023-08-16T13:33:10Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nbetween the various semantics of type values.\r\n```",
              "createdAt": "2023-08-16T13:30:25Z",
              "updatedAt": "2023-08-16T13:33:10Z"
            },
            {
              "originalPosition": 11,
              "body": "This is a nit (but \"forms\"... \ud83d\ude43)",
              "createdAt": "2023-08-16T13:31:06Z",
              "updatedAt": "2023-08-16T13:33:10Z"
            },
            {
              "originalPosition": 8,
              "body": "> optional mask\r\n\r\nJust looking at this PR and not the whole document: is it clear what mask means here?",
              "createdAt": "2023-08-16T13:32:10Z",
              "updatedAt": "2023-08-16T13:33:10Z"
            },
            {
              "originalPosition": 14,
              "body": "See above. Does this text lead to implementable behavior? ",
              "createdAt": "2023-08-16T13:32:48Z",
              "updatedAt": "2023-08-16T13:33:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eOLFA",
          "commit": {
            "abbreviatedOid": "bb2d758"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T14:30:47Z",
          "updatedAt": "2023-08-16T14:30:47Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "issue #9 will be worked further",
              "createdAt": "2023-08-16T14:30:47Z",
              "updatedAt": "2023-08-16T14:30:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eOLa1",
          "commit": {
            "abbreviatedOid": "bb2d758"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-16T14:31:25Z",
          "updatedAt": "2023-08-16T14:31:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eOMwW",
          "commit": {
            "abbreviatedOid": "bb2d758"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Text in line 1003 could be better phrased, but this change is better than the previous document so approving",
          "createdAt": "2023-08-16T14:33:58Z",
          "updatedAt": "2023-08-16T14:33:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eOQll",
          "commit": {
            "abbreviatedOid": "bb2d758"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-08-16T14:41:04Z",
          "updatedAt": "2023-08-16T14:41:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "PR_kwDOH6-tI85YA5g9",
      "title": "Extensibility section updated",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/121",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added text to extensibility section - see issue #10",
      "createdAt": "2023-08-15T23:26:58Z",
      "updatedAt": "2023-09-27T14:25:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "48bdd67559ef7dbdee9f561981659f4bcfb8d715",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "extensibility",
      "headRefOid": "b0f5fa147ddae4580b9fc2aef55d0d5062db0ba5",
      "closedAt": "2023-09-27T14:24:53Z",
      "mergedAt": "2023-09-27T14:24:53Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "8314e957ab96ab3b64626000964a652bc07fb8a1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85eNnTF",
          "commit": {
            "abbreviatedOid": "864d519"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:34:21Z",
          "updatedAt": "2023-08-16T13:34:21Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "aka \"extension points\" for type-choices or group-choices",
              "createdAt": "2023-08-16T13:34:21Z",
              "updatedAt": "2023-08-16T13:34:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNn72",
          "commit": {
            "abbreviatedOid": "864d519"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:35:34Z",
          "updatedAt": "2023-08-16T13:35:35Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "$$foo is a an extension point for a group-choice\r\n$bar is an extension point for a type-choice\r\n\r\nNot sure if that level of detail is relevant here, but that is less ambiguous to me.",
              "createdAt": "2023-08-16T13:35:34Z",
              "updatedAt": "2023-08-16T13:36:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNosj",
          "commit": {
            "abbreviatedOid": "864d519"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:37:00Z",
          "updatedAt": "2023-08-16T13:37:01Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nTypically, map extension requires a convention for code point naming that avoids code-point reuse.\r\n```",
              "createdAt": "2023-08-16T13:37:00Z",
              "updatedAt": "2023-08-16T13:37:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNpXs",
          "commit": {
            "abbreviatedOid": "864d519"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T13:38:16Z",
          "updatedAt": "2023-08-16T13:38:17Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Ah. Here we go. I'd move the referrals and definitions to type- and group-choice to the top. And come back to it here. ",
              "createdAt": "2023-08-16T13:38:17Z",
              "updatedAt": "2023-08-16T13:38:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eNqeH",
          "commit": {
            "abbreviatedOid": "864d519"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "type-choice & group-choice should be introduced up-front",
          "createdAt": "2023-08-16T13:39:29Z",
          "updatedAt": "2023-08-16T13:39:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85eOWcw",
          "commit": {
            "abbreviatedOid": "c6d88ef"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T14:52:04Z",
          "updatedAt": "2023-08-16T14:52:05Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@henkbirkholz to work on this PR",
              "createdAt": "2023-08-16T14:52:05Z",
              "updatedAt": "2023-08-16T14:52:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85eN67G",
          "commit": {
            "abbreviatedOid": "c6d88ef"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T14:00:55Z",
          "updatedAt": "2023-09-14T23:33:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nCoRIM is described using CDDL {{-cddl}} which includes extensibility support for \"extension points\" (a.k.a., map structures)\r\n```",
              "createdAt": "2023-09-14T23:28:29Z",
              "updatedAt": "2023-09-14T23:33:26Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nand data types. CDDL map extension points have the form `($$NAME-extension)` where \"NAME\" is the name of the map and '$$' signifies map extensibility.\r\n```",
              "createdAt": "2023-09-14T23:30:08Z",
              "updatedAt": "2023-09-14T23:33:26Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nCDDL map extensibility enables a CoRIM profile to extend the base CoRIM definition.\r\n```",
              "createdAt": "2023-09-14T23:31:41Z",
              "updatedAt": "2023-09-14T23:33:26Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nMap and type extensions are permitted by the CoRIM schema where the above CDDL extensibility points are defined.\r\n```",
              "createdAt": "2023-09-14T23:32:42Z",
              "updatedAt": "2023-09-14T23:33:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iH2Cd",
          "commit": {
            "abbreviatedOid": "89e76e6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T11:19:24Z",
          "updatedAt": "2023-09-27T11:19:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "The whole structure of the section needs reorganising. I will suggest a better rewrite as an edit to this section!",
              "createdAt": "2023-09-27T11:19:24Z",
              "updatedAt": "2023-09-27T11:19:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iH958",
          "commit": {
            "abbreviatedOid": "89e76e6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T11:39:06Z",
          "updatedAt": "2023-09-27T11:39:06Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nThe base CORIM schema is described using CDDL {{-cddl}} that can be extended \r\nonly at specific allowed points known as \"extension points\"\r\n\r\nThe following types of extensions are supported in CoRIM\r\n\r\n## Map Extensions\r\nMap Extensions provides extensibility support to CoRIM Map structures.\r\nCDDL map extensibility enables a CoRIM profile to extend the base CoRIM definition.\r\nCDDL map extension points have the form `($$NAME-extension)` where \"NAME\" is the name of the map\r\nand '$$' signifies map extensibility. Typically, map extension requires a convention \r\nfor code point naming that avoids code-point reuse.\r\nWell-known code points may be in a registry, such as CoSWID {{-coswid-reg}}.\r\nAdditionally, a range of code points may be reserved for vendor-specific use such as negative integers.\r\n\r\n## Data Type Extensions\r\n\r\nData type extensibility has the form `($NAME-type-choice)` where \"NAME\" is the type name \r\nand '$' signifies type extensibility.\r\n\r\nSchema extensions (Map or Data Type) should be documented to facilitate interoperability. CoRIM profiles are best used to document vendor or industry defined extensions.\r\n```",
              "createdAt": "2023-09-27T11:39:06Z",
              "updatedAt": "2023-09-27T11:40:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJ2Yv",
          "commit": {
            "abbreviatedOid": "b0f5fa1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-09-27T14:23:20Z",
          "updatedAt": "2023-09-27T14:23:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85iJ2-Q",
          "commit": {
            "abbreviatedOid": "b0f5fa1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "will add CDDL lingo to extension types later",
          "createdAt": "2023-09-27T14:24:02Z",
          "updatedAt": "2023-09-27T14:24:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85iJ3mz",
          "commit": {
            "abbreviatedOid": "b0f5fa1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-27T14:24:46Z",
          "updatedAt": "2023-09-27T14:24:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "PR_kwDOH6-tI85YEgOZ",
      "title": "Address issue 96 multiple CoBOMs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/123",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "andrew-draper"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-16T14:17:21Z",
      "updatedAt": "2023-10-04T14:02:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "2497070fee5b62b552edff7fcab4f4036b135247",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "96-multiple-coboms",
      "headRefOid": "94e88f13ccb741735454b5e564d5edd38527af04",
      "closedAt": "2023-10-04T14:02:11Z",
      "mergedAt": "2023-10-04T14:02:11Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "a597257e393a376f1ac65c26710ee31055342501"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85gSPGU",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T13:09:46Z",
          "updatedAt": "2023-09-07T13:09:47Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "suggested rewrite based on f2f discussion:\r\n\r\n```suggestion\r\nThe Verifier processes all CoBOMs that are valid at the point in time verification occurs, and activates all tags referenced therein.\r\n\r\nNote that the Verifier may decide to discard some of the available, valid CoBOMs depending on any locally configured authorization policies.\r\n(Such policies model the trust relationships between the Verifier Owner and the relevant suppliers, and are out of scope of the present document.)\r\n\r\nFor example, a composite device ({{Section 3.3 of -rats-arch}}) is likely to be fully described by multiple CoRIMs, each signed by a different supplier.\r\nIn such case, the Verifier Owner may instruct the Verifier to discard tags activated by supplier CoBOMs that are not activated by the trusted integrator.\r\n```",
              "createdAt": "2023-09-07T13:09:46Z",
              "updatedAt": "2023-09-08T06:50:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTh8K",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T15:37:11Z",
          "updatedAt": "2023-09-07T15:37:46Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "c/authorisation/authorization\r\nWe discussed 'activation' as being something the supplier does as it means the cobom is the way the supplier describes the composition of the object (product). If there is a 2-stage activation, one part done by suppliers and a 2nd part done by verifiers, then this should be described more clearly.\r\nCan we agree on /supplier/supply chain entity/supply chain actor/ and consistently use the term while also being sensitive to readability?\r\nIt's more confusing to introduce \"leaf\" cobom then define what is meant by leaf. If the description is clear, that should be sufficient. But I don't think the description is clear. Maybe \"...discard tags activated by supplier CoBOMs that are not activated by the trusted integrator.\"",
              "createdAt": "2023-09-07T15:37:11Z",
              "updatedAt": "2023-09-07T15:37:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTln0",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T15:44:53Z",
          "updatedAt": "2023-09-07T15:44:53Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> c/authorisation/authorization\r\n\r\ndone with a sneak edit\r\n\r\n> Can we agree on /supplier/supply chain entity/supply chain actor/ and consistently use the term while also being sensitive to readability?\r\n\r\nI am ok with any in that list.  Which one should I use?  Is it \"supplier?\"",
              "createdAt": "2023-09-07T15:44:53Z",
              "updatedAt": "2023-09-07T15:44:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTsFB",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T15:58:00Z",
          "updatedAt": "2023-09-07T15:58:00Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "\"supplier\" is least verbose - hence my preference.",
              "createdAt": "2023-09-07T15:58:00Z",
              "updatedAt": "2023-09-07T15:58:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gTu6C",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:04:20Z",
          "updatedAt": "2023-09-07T16:04:20Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> \"supplier\" is least verbose - hence my preference.\r\n\r\ndone with yet another sneak edit \ud83d\ude04 ",
              "createdAt": "2023-09-07T16:04:20Z",
              "updatedAt": "2023-09-07T16:04:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT43Q",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:23:38Z",
          "updatedAt": "2023-09-07T16:23:39Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> [...] Maybe \"...discard tags activated by supplier CoBOMs that are not activated by the trusted integrator.\"\r\n\r\ngreat suggestion, and third sneak edit in a row.",
              "createdAt": "2023-09-07T16:23:39Z",
              "updatedAt": "2023-09-07T16:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gT7y9",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:30:52Z",
          "updatedAt": "2023-09-07T16:30:53Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> We discussed 'activation' as being something the supplier does as it means the cobom is the way the supplier describes the composition of the object (product). If there is a 2-stage activation, one part done by suppliers and a 2nd part done by verifiers, then this should be described more clearly.\r\n\r\nI have probably lost some of the discussion context, if so apologies.\r\n\r\nI don't think there are two stages of activation, in my head there's only one stage which is actioned by the verifier on the CoBOM signal coming from the supplier.\r\nThe only thing we are adding here is a hi-pass filter based on local policy that the Verifier Owner can inject in the CoBOM processing.",
              "createdAt": "2023-09-07T16:30:52Z",
              "updatedAt": "2023-09-07T16:30:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gYmCE",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-08T09:26:02Z",
          "updatedAt": "2023-09-08T09:26:02Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "@thomas-fossati I do not think the thought process you have in mind is reflected in the PR.\r\n\r\nThe original intent of the PR was: \r\n1) Can Multiple authorities allowed to issue CoBOM's ?\r\n\r\n2) If yes, then when they issue Delta from the old one, does the new one add to the old one or replaces the old ones.\r\n\r\n3. To me the Verifier processes/activates a CoBOM as soon as it receives it.",
              "createdAt": "2023-09-08T09:26:02Z",
              "updatedAt": "2023-09-08T09:26:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gZ5JM",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-08T12:41:31Z",
          "updatedAt": "2023-09-08T12:41:31Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I am slightly confused:\r\n\r\n> The original intent of the PR was:\r\n> \r\n> 1. Can Multiple authorities allowed to issue CoBOM's ?\r\n\r\nOK. The text I put forward says: yes.\r\n\r\n> 2. If yes, then when they issue Delta from the old one, does the new one add to the old one or replaces the old ones.\r\n\r\nI am not sure what a \"delta CoBOM\" and I don't think it was mentioned -- at least in the context of this PR.  Can you clarify?\r\n\r\n> 3. To me the Verifier processes/activates a CoBOM as soon as it receives it.\r\n\r\nWhat about the validity period?\r\n\r\n",
              "createdAt": "2023-09-08T12:41:31Z",
              "updatedAt": "2023-09-08T12:41:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gcnpm",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-08T19:16:51Z",
          "updatedAt": "2023-09-08T19:16:51Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Normally, the signer of a document is \"speaking\". The document contains the assertions asserted by the signer.  The signer asserts the validity as well as the bill of materials - which says these \"materials belong together\". There is contradictory text in the current description of CoBOM.\r\n\r\n> \"A Concise Bill of Material (CoBOM) object represents the signal for the Verifier to activate the listed tags. Data contained in a tag MUST NOT be used for appraisal until a CoBOM which activates that tag has been received and successfully processed.\"\r\n\r\nThe first sentence says the Verifier activates the CoBOM. The second sentence says the CoBOM activates the tag. CoBOMs are signed by RIM signers which can be suppliers. The second sentence says the Verifier can't use the CoBOM until the signature (signer) is \"processed\" which implies the Verifier authenticated the signer somehow. In essence, the Verifier's \"activation\" is simply accepting what the supplier said. \r\n\r\nThe appraisal processing question therefore is \"what if multiple suppliers say different things\" and the Verifier trusts multiple suppliers? How does the Verifier not get into an undecidability quandary? \r\n\r\nThis is the question that we should focus on.\r\n\r\nMost often, trust is qualified by \"trusted for what?\" If the Verifier is asked to appraise a laptop computer, then there should be a policy that identifies the laptop supplier. The signer of a CoRIM/CoBOM by the \"laptop supplier\" determines which CoBOM to trust when appraising a laptop.\r\n\r\nSince a composition (description logic) is expected to be hierarchical, the laptop description will contain other suppliers' components each qualified by the type of thing that it is e.g., \"motherboard supplier\" or \"NIC supplier\". The Verifier would rely on the policies having component / composition qualifiers to avoid undecidability cases.\r\n\r\nNote that since CoBOM relies on (comid?) tags as the unit of disambiguation, for what is in the BOM. The (comid?) tags cannot contain descriptions of multiple objects (say a NIC and a GPS) - that is unless the laptop supplier intended to include both NIC and GPS. Otherwise, there is no way for the laptop supplier to remove the GPS related triples using CoBOMs. \r\n\r\nA simple solution is to constrain (comid) tags to describe one logical thing such as a laptop, or a NIC, or a motherboard. If the NIC supplier doubles as a GPS supplier and it offers a product that is a combo NIC+GPS component, then this is an indivisible thing. If the laptop OEM doesn't want the GPS, then the supplier MUST create a tag for just the NIC.\r\n\r\nAppraisal needs to express the following logic:\r\n\r\n> \"If appraising a `model-X` `laptop` then use (activate?) the CoBOM signed by supplier Y\".",
              "createdAt": "2023-09-08T19:16:51Z",
              "updatedAt": "2023-09-08T19:26:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g1xH7",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T14:32:59Z",
          "updatedAt": "2023-09-13T14:33:00Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Slight change in wording:\r\n\r\n```suggestion\r\nThe Verifier processes all CoBOMs that are valid at the point in time appraisal of Evidence occurs, and activates all tags referenced therein.\r\n\r\nA Verifier may decide to discard some of the available and valid CoBOMs depending on any locally configured authorization policies.\r\n(Such policies model the trust relationships between the Verifier Owner and the relevant suppliers, and are out of scope of the present document.)\r\n\r\nFor example, a composite device ({{Section 3.3 of -rats-arch}}) is likely to be fully described by multiple CoRIMs, each signed by a different supplier.\r\nIn such case, the Verifier Owner may instruct the Verifier to discard tags activated by supplier CoBOMs that are not activated by the trusted integrator.\r\n```",
              "createdAt": "2023-09-13T14:33:00Z",
              "updatedAt": "2023-09-13T14:33:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g24Wb",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T16:43:32Z",
          "updatedAt": "2023-09-13T16:43:32Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I'm OK with this wording. Maybe a little verbose, but that can be fixed later.",
              "createdAt": "2023-09-13T16:43:32Z",
              "updatedAt": "2023-09-13T16:43:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g24fP",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-13T16:43:51Z",
          "updatedAt": "2023-09-13T16:43:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85hfDB2",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:33:51Z",
          "updatedAt": "2023-09-20T12:33:51Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "ack",
              "createdAt": "2023-09-20T12:33:51Z",
              "updatedAt": "2023-09-20T12:33:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfDNf",
          "commit": {
            "abbreviatedOid": "c559a26"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:34:16Z",
          "updatedAt": "2023-09-20T12:34:16Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "lgtm for today's merge interval",
              "createdAt": "2023-09-20T12:34:16Z",
              "updatedAt": "2023-09-20T12:34:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iguUR",
          "commit": {
            "abbreviatedOid": "fb01c65"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T13:23:46Z",
          "updatedAt": "2023-10-02T13:23:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe Verifier processes all CoBOMs that are valid at the point in time of Evidence Appraisal, and activates all tags referenced therein.\r\n```",
              "createdAt": "2023-10-02T13:23:46Z",
              "updatedAt": "2023-10-02T13:23:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85igugW",
          "commit": {
            "abbreviatedOid": "fb01c65"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "One minor comment, but in general LGTM!",
          "createdAt": "2023-10-02T13:24:11Z",
          "updatedAt": "2023-10-02T13:24:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85izTyW",
          "commit": {
            "abbreviatedOid": "94e88f1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "yes",
          "createdAt": "2023-10-04T14:00:54Z",
          "updatedAt": "2023-10-04T14:00:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 125,
      "id": "PR_kwDOH6-tI85YFoXk",
      "title": "Add suitable description for `authorized-by`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/125",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes issue #72",
      "createdAt": "2023-08-16T17:54:51Z",
      "updatedAt": "2023-08-30T15:46:51Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7e0815aef4c40049cc50288063889e390b10a1f8",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "issue-72",
      "headRefOid": "c7737b1b6ed26ca9f5101dcbd6a01edd8914ed98",
      "closedAt": "2023-08-30T15:46:47Z",
      "mergedAt": "2023-08-30T15:46:47Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "be1ec289b8fb852c824be1faae46ab7d25505da1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85ePvek",
          "commit": {
            "abbreviatedOid": "e10c040"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See inline suggested changes.",
          "createdAt": "2023-08-16T18:17:42Z",
          "updatedAt": "2023-08-16T18:20:50Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe supply chain entity that is responsible for providing reference or endorsed measurement values is, by default, the CoRIM signer. If a different entity is authorized to provide measurement values, the `authorized-by` statement can be supplied.\r\n```",
              "createdAt": "2023-08-16T18:17:42Z",
              "updatedAt": "2023-08-16T18:20:50Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe `authorized-by` statement is contained in `measurement-map`.\r\n```",
              "createdAt": "2023-08-16T18:18:54Z",
              "updatedAt": "2023-08-16T18:20:50Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n the designated authority for this measurement. For example, producer of the measurement or a delegated supplier.\r\n```",
              "createdAt": "2023-08-16T18:20:02Z",
              "updatedAt": "2023-08-16T18:20:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85faPs7",
          "commit": {
            "abbreviatedOid": "c7737b1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-29T15:24:25Z",
          "updatedAt": "2023-08-30T15:45:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiNaC",
          "commit": {
            "abbreviatedOid": "6c266cb"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:08:14Z",
          "updatedAt": "2023-08-30T14:08:14Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe supply chain entity that is responsible for providing the measurements (i.e. Reference Values or Endorsed Values)\r\n```",
              "createdAt": "2023-08-30T14:08:14Z",
              "updatedAt": "2023-08-30T14:08:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiOTz",
          "commit": {
            "abbreviatedOid": "be3420b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-30T14:09:53Z",
          "updatedAt": "2023-08-30T14:09:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiU33",
          "commit": {
            "abbreviatedOid": "be3420b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-08-30T14:21:36Z",
          "updatedAt": "2023-08-30T14:21:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 127,
      "id": "PR_kwDOH6-tI85Yaw8Q",
      "title": "Adds crypto key measurement type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/127",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #126  calls for a $crypto-key-type-choice measurement that isn't stereotyped for either identity or attestation, but can support a wide range of key usages. It also allows authorized-by context to be added and works with conditional endorsement.",
      "createdAt": "2023-08-21T18:58:53Z",
      "updatedAt": "2023-09-21T16:46:24Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "9855fd5b612744726c0dd71d10f4490429f46940",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "key-measurements",
      "headRefOid": "4fb673693beeda2c6173685a710420e7d746c1a7",
      "closedAt": "2023-09-21T16:46:19Z",
      "mergedAt": "2023-09-21T16:46:19Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "957931f2a8fdd51175c752aa2d97e71c2835eae2"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith we need more description of how this is relevant, what use cases and context this would be used!",
          "createdAt": "2023-09-13T14:44:13Z",
          "updatedAt": "2023-09-13T14:44:13Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> @nedmsmith we need more description of how this is relevant, what use cases and context this would be used!\r\n\r\nSee #126 discussion",
          "createdAt": "2023-09-15T21:07:54Z",
          "updatedAt": "2023-09-15T21:07:54Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: This PR is 17 commits behind main. Description of verifier behavior should be applied to sections introduced into main. Possibly need to rebase or apply this PR and add text via another PR.",
          "createdAt": "2023-09-15T21:09:40Z",
          "updatedAt": "2023-09-15T21:09:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "There's an interesting question around $crypto-key-type-choice measurements and traditional digest measurements in terms of whether the verifier should apply different appraisal behaviors to each. If a simple byte-wise compare is wanted, the key object could be digested and placed in a `digests` measurement. But as a key, it (should?) apply crypto key matching semantics. \r\nIf a cert chain is supplied, then the key could be in an alternate form (e.g., Subject Public Key in X.509) vs. say a digest of the key. The verifier may to cert path validation on the certificate to weed out invalid keys. (This seems equivalent to offline key verification checks called for by PR #135). \r\nNote that key as a measurement doesn't require the key to be exercised (as in signing evidence), but presumably, the key provenance found in the ACS is useful to RPs for downstream applications.",
          "createdAt": "2023-09-19T00:54:34Z",
          "updatedAt": "2023-09-19T00:54:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85fcFjf",
          "commit": {
            "abbreviatedOid": "e31de83"
          },
          "author": "jdbeaney",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-29T20:08:48Z",
          "updatedAt": "2023-08-29T20:08:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fj-Vu",
          "commit": {
            "abbreviatedOid": "e31de83"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T18:20:20Z",
          "updatedAt": "2023-08-30T18:20:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This is an array because there can be multiple keys that are protected by the environment. The verifier is checking that the same list of keys reported in Evidence is included in Reference Values. The Verifier will not use or verify the keys unless the RP or a downstream verifier instructs this. But we can say the same for any measurement (that RP or downstream verifier may post process the claims). The default Verifier action is to verify that for each RV key there is a matching Evidence key.",
              "createdAt": "2023-08-30T18:20:20Z",
              "updatedAt": "2023-09-01T19:39:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfFr-",
          "commit": {
            "abbreviatedOid": "e65bdd9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-09-20T12:39:36Z",
          "updatedAt": "2023-09-20T12:39:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85hoHnW",
          "commit": {
            "abbreviatedOid": "9759d9f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.  I've inlined a few, purely editorial, comments.",
          "createdAt": "2023-09-21T13:55:24Z",
          "updatedAt": "2023-09-21T14:01:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n  See {{sec-crypto-keys}} for the supported formats.\r\n```",
              "createdAt": "2023-09-21T13:55:24Z",
              "updatedAt": "2023-09-21T14:01:24Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n  An Attesting Environment determines that keys are protected as part of Claims collection.\r\n```",
              "createdAt": "2023-09-21T13:56:48Z",
              "updatedAt": "2023-09-21T14:01:24Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nMatching is described in {{sec-cryptokeys-matching}}.\r\n\r\n```",
              "createdAt": "2023-09-21T13:57:57Z",
              "updatedAt": "2023-09-21T14:01:24Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\n##### Comparison for cryptokeys entries {#sec-cryptokeys-matching}\r\n```",
              "createdAt": "2023-09-21T13:58:29Z",
              "updatedAt": "2023-09-21T14:01:24Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nIf all entries of the Reference Values array match a corresponding entry in the Accepted Claims Set array, then the `cryptokeys` Reference Value matches.\r\n```",
              "createdAt": "2023-09-21T14:00:35Z",
              "updatedAt": "2023-09-21T14:01:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 129,
      "id": "PR_kwDOH6-tI85Yt9Wj",
      "title": "updated wording for accepted claims set init",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/129",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Fixes issue #128. Reworded to make it clear that Evidence is copied into the ACS by default.",
      "createdAt": "2023-08-24T17:36:00Z",
      "updatedAt": "2023-09-01T19:49:37Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "c026bb599c1673b61245bcccb809519cb5207d68",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "nms-accepted-claims-set-init",
      "headRefOid": "5bdfd5b21e18f4b574d105db041546990dbb8d92",
      "closedAt": "2023-08-30T14:28:53Z",
      "mergedAt": "2023-08-30T14:28:53Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "7e0815aef4c40049cc50288063889e390b10a1f8"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes issue #128",
          "createdAt": "2023-09-01T19:49:37Z",
          "updatedAt": "2023-09-01T19:49:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85fCEnb",
          "commit": {
            "abbreviatedOid": "d1b1b6d"
          },
          "author": "jdbeaney",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-24T20:08:52Z",
          "updatedAt": "2023-08-24T20:08:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiPHr",
          "commit": {
            "abbreviatedOid": "d1b1b6d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:11:25Z",
          "updatedAt": "2023-08-30T14:11:26Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\ninto the Verifier's Accepted Claims Set.\r\n```",
              "createdAt": "2023-08-30T14:11:26Z",
              "updatedAt": "2023-08-30T14:11:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiQEb",
          "commit": {
            "abbreviatedOid": "f3c3738"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:12:48Z",
          "updatedAt": "2023-08-30T14:12:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe Accepted Claims Set is initialized by copying Evidence claims from the authenticated Attester's Target Environments into the Verifier's Accepted Claims Set.\r\n```",
              "createdAt": "2023-08-30T14:12:48Z",
              "updatedAt": "2023-08-30T14:12:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiQa7",
          "commit": {
            "abbreviatedOid": "f3c3738"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:13:26Z",
          "updatedAt": "2023-08-30T14:13:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n{{sec-dice-spdm}} provides information on how DICE and SPDM Evidence is reformatted into CoMID schema compliant expressions before being added to the Accepted Claims Set.\r\n```",
              "createdAt": "2023-08-30T14:13:26Z",
              "updatedAt": "2023-08-30T14:13:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiQzm",
          "commit": {
            "abbreviatedOid": "f3c3738"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:14:10Z",
          "updatedAt": "2023-08-30T14:14:10Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nOther Evidence formats may require format translation before being added to the Accepted Claims Set.\r\nA CoRIM profile, see {{sec-corim-map}}, may be used to define an Evidence translation function.\r\n```",
              "createdAt": "2023-08-30T14:14:10Z",
              "updatedAt": "2023-08-30T14:14:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiQ4i",
          "commit": {
            "abbreviatedOid": "d1b1b6d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:14:19Z",
          "updatedAt": "2023-08-30T14:14:19Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "+1\r\nInitialization Step should not include \"disallow\" step content ",
              "createdAt": "2023-08-30T14:14:19Z",
              "updatedAt": "2023-08-30T14:14:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiWFi",
          "commit": {
            "abbreviatedOid": "2b64e94"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:23:51Z",
          "updatedAt": "2023-08-30T14:23:52Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-08-30T14:23:52Z",
              "updatedAt": "2023-08-30T14:23:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiXEI",
          "commit": {
            "abbreviatedOid": "e1830c8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-30T14:25:40Z",
          "updatedAt": "2023-08-30T14:25:40Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nEvidence formats may require format translation before being added to the Accepted Claims Set.\r\nIf format translation is required, a CoRIM profile, see {{sec-corim-profile-types}}, defines an Evidence translation function.\r\n\r\n{{sec-dice-spdm}} provides information on how DICE and SPDM Evidence is reformatted into CoMID schema compliant expressions before being added to the Accepted Claims Set.\r\n```",
              "createdAt": "2023-08-30T14:25:40Z",
              "updatedAt": "2023-08-30T14:25:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85fiYCt",
          "commit": {
            "abbreviatedOid": "5bdfd5b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-08-30T14:27:29Z",
          "updatedAt": "2023-08-30T14:27:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiYMJ",
          "commit": {
            "abbreviatedOid": "5bdfd5b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-30T14:27:45Z",
          "updatedAt": "2023-08-30T14:27:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiYjo",
          "commit": {
            "abbreviatedOid": "5bdfd5b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-30T14:28:24Z",
          "updatedAt": "2023-08-30T14:28:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85fiYyC",
          "commit": {
            "abbreviatedOid": "5bdfd5b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-30T14:28:44Z",
          "updatedAt": "2023-08-30T14:28:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "PR_kwDOH6-tI85ZQa8q",
      "title": "fixed duplicate use of cbor tag 560",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/133",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "changed $crypto-keys-type-choice to use 561. Fixes issue #132 ",
      "createdAt": "2023-08-31T16:26:24Z",
      "updatedAt": "2023-09-04T16:48:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "be1ec289b8fb852c824be1faae46ab7d25505da1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "cbor-tag-560",
      "headRefOid": "6845bae9356e8e543da5706f328f34e018ef1d71",
      "closedAt": "2023-09-04T16:48:49Z",
      "mergedAt": "2023-09-04T16:48:49Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "4c817d6630d748b04a6da32a7934c659b342f5e8"
      },
      "comments": [
        {
          "author": "babongo",
          "authorAssociation": "NONE",
          "body": "Thanks @setrofim for spotting and @nedmsmith for the patch.\r\n\r\nI'd go further here and add a bit of logics to the pipeline to automatically check for duplications, so that we don't end up in the same situation in the future.\r\n",
          "createdAt": "2023-09-01T14:38:58Z",
          "updatedAt": "2023-09-01T14:38:58Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm open to suggestions for how to do that.",
          "createdAt": "2023-09-01T15:12:34Z",
          "updatedAt": "2023-09-01T15:12:34Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm open to suggestions for how to do that.\r\n\r\nWhenever we add a new tag we should re-run the `cbor-tags.txt` target to update the tags catalogue.\r\n\r\nWe could couple that with a check for duplicates in the `cbor-tags.txt` file, e.g.:\r\n```\r\ngrep -E -h -o '#6\\.[0-9]{3}' cbor-tags.txt | uniq -cd\r\n```\r\nand exit non-zero if there's at least one line.",
          "createdAt": "2023-09-01T16:06:20Z",
          "updatedAt": "2023-09-01T16:06:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2023-09-04T16:48:44Z",
          "updatedAt": "2023-09-04T16:48:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85f1wjF",
          "commit": {
            "abbreviatedOid": "f4c138e"
          },
          "author": "setrofim",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-02T06:23:24Z",
          "updatedAt": "2023-09-02T06:23:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85f52-u",
          "commit": {
            "abbreviatedOid": "f4c138e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for taking a stab!  I'll provide a couple of tweaks",
          "createdAt": "2023-09-04T08:16:59Z",
          "updatedAt": "2023-09-04T08:19:45Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I guess this target should depend explicitly on `cbor-tags.txt` -- this way L64 becomes redundant",
              "createdAt": "2023-09-04T08:16:59Z",
              "updatedAt": "2023-09-04T08:19:45Z"
            },
            {
              "originalPosition": 17,
              "body": "`$1` is a positional parameter, I don't think this will expand to anything useful.",
              "createdAt": "2023-09-04T08:18:53Z",
              "updatedAt": "2023-09-04T08:19:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85f6Dnl",
          "commit": {
            "abbreviatedOid": "6845bae"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-04T08:43:19Z",
          "updatedAt": "2023-09-04T08:43:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 134,
      "id": "PR_kwDOH6-tI85ZXlLB",
      "title": "Update corim-frags.mk",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/134",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "removed duplicate cose-label-and-value.cddl. fixes issue #131 ",
      "createdAt": "2023-09-01T19:46:46Z",
      "updatedAt": "2023-09-06T14:56:49Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "be1ec289b8fb852c824be1faae46ab7d25505da1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "fix-dup-frags",
      "headRefOid": "156e3228a0c03105b219ac8d9943127efa2ecec4",
      "closedAt": "2023-09-06T14:56:45Z",
      "mergedAt": "2023-09-06T14:56:45Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "90ea90bbbce24e96aed5ed97e149b2440d7adf39"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85gLPhV",
          "commit": {
            "abbreviatedOid": "156e322"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-09-06T14:56:35Z",
          "updatedAt": "2023-09-06T14:56:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85gLPjN",
          "commit": {
            "abbreviatedOid": "156e322"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-06T14:56:38Z",
          "updatedAt": "2023-09-06T14:56:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 135,
      "id": "PR_kwDOH6-tI85ZXsSA",
      "title": "Identity and attest key triples rewording",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/135",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "shouldfix"
      ],
      "body": "Issue #126 anticipates better clarification for identity and attest-key triples to disambiguate from keys as measurements.",
      "createdAt": "2023-09-01T20:20:39Z",
      "updatedAt": "2024-07-08T16:39:29Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "0032f832d43d33463a9ff748bc590977807e0824",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "ident-attest-key-wording",
      "headRefOid": "eb3e92b7684f761b128267e1555ad0a0f1761857",
      "closedAt": "2024-07-08T16:39:29Z",
      "mergedAt": "2024-07-08T16:39:29Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "e183357c3523024de14256261f798f9486d7c6dc"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated issue #126 with an alternative approach than this PR.",
          "createdAt": "2023-10-04T00:12:24Z",
          "updatedAt": "2023-10-04T00:12:24Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Ned to progress this on return!",
          "createdAt": "2024-04-10T14:53:07Z",
          "updatedAt": "2024-04-10T14:53:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I resolved most of the conversations due to outdated content. Revised text is provided in the most recent updates.",
          "createdAt": "2024-07-03T19:44:01Z",
          "updatedAt": "2024-07-03T19:44:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85f1z_R",
          "commit": {
            "abbreviatedOid": "d53e5f9"
          },
          "author": "setrofim",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-02T06:33:47Z",
          "updatedAt": "2023-09-02T06:38:13Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe usage context helps determine how Verifiers process each variant.\r\n```",
              "createdAt": "2023-09-02T06:33:47Z",
              "updatedAt": "2023-09-02T06:38:13Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nAdditionally, the deployment context may add new processing requirements, such as, proof of possession checking,\r\n```",
              "createdAt": "2023-09-02T06:34:16Z",
              "updatedAt": "2023-09-02T06:38:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g16GP",
          "commit": {
            "abbreviatedOid": "dd3a2ec"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T14:46:09Z",
          "updatedAt": "2023-09-13T14:46:09Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA `$crypto-key-type-choice` statement identifies a cryptographic key.\r\n```",
              "createdAt": "2023-09-13T14:46:09Z",
              "updatedAt": "2023-09-13T14:46:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g17jG",
          "commit": {
            "abbreviatedOid": "dd3a2ec"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "reviewing",
          "createdAt": "2023-09-13T14:48:48Z",
          "updatedAt": "2023-09-13T14:48:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85g2_x-",
          "commit": {
            "abbreviatedOid": "9c8d1c0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T17:02:20Z",
          "updatedAt": "2023-09-13T17:11:22Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA `$crypto-key-type-choice` identifies a cryptographic key.\r\n```",
              "createdAt": "2023-09-13T17:02:21Z",
              "updatedAt": "2023-09-13T17:11:22Z"
            },
            {
              "originalPosition": 15,
              "body": "I'd drop this para entirely as it introduces too much variability without effectively specifying any particular behaviour.  Either that or leave just the bare minimum, i.e.: _\"Additionally, the deployment context may add further processing requirements.  These are outside the scope of the present specification.\"_",
              "createdAt": "2023-09-13T17:08:48Z",
              "updatedAt": "2023-09-13T17:11:22Z"
            },
            {
              "originalPosition": 41,
              "body": "> at least one of the keys, as defined by `$crypto-key-type-choice`, authenticates the Attester\r\n\r\nShould it be renamed to \"Attester Identity Triple\" then?",
              "createdAt": "2023-09-13T17:10:28Z",
              "updatedAt": "2023-09-13T17:11:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85g3Kb5",
          "commit": {
            "abbreviatedOid": "1136b54"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T17:23:55Z",
          "updatedAt": "2023-09-13T18:20:01Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "> > at least one of the keys, as defined by `$crypto-key-type-choice`, authenticates the Attester\r\n> \r\n> Should it be renamed to \"Attester Identity Triple\" then?\r\n\r\nActually, I think this section should be re-titled to remove \"device\" and use \"environment\" instead. A device can have an identity key, but the device is described by an environment. Literally, the triple is saying \"this enviornment has these keys\". ",
              "createdAt": "2023-09-13T17:23:55Z",
              "updatedAt": "2023-09-13T18:20:01Z"
            },
            {
              "originalPosition": 41,
              "body": "Taken in context of PR #127, this triple differs from a reference / endorsement triple in that it expects the verifier will  treat it as an authentication key. Unlike ref/end triples, this triple doesn't specify which conceptual message type it is. Given the key uses ref/end triples (or concise-evidence) to assign the CM type. \r\nThis triple then applies additional semantics / instructs the Verifier to do additional processing. The additional processing can be stereotyped by the CM type. For example, as evidence, this triple may assert the Verifier should check that the keys validity such as CRL status or may assert it is used to authenticate the endpoint.\r\nAs a ref value, it may require the verifier to authenticate the environment with the key, and if it didn't, the appraisal should fail. \r\nAs an endorsement, it is less clear what additional semantics should apply. Possibly, that the Verifier does a validity check.\r\n\r\nI suggest breaking this PR into 2 or 3 PRs, this one that focuses on the `identity-triple-record` / `attest-key-triple-record` and another that focuses on description of `$crypto-type-type-choice`.",
              "createdAt": "2023-09-13T17:44:24Z",
              "updatedAt": "2023-09-14T22:54:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hDvQr",
          "commit": {
            "abbreviatedOid": "dd0c43b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM, thanks -- with a couple of sentences removed and a possible one-line clarification added (see inline)",
          "createdAt": "2023-09-15T07:32:40Z",
          "updatedAt": "2023-09-15T07:40:37Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This sentence should be in the Concise Evidence spec rather than here.",
              "createdAt": "2023-09-15T07:32:41Z",
              "updatedAt": "2023-09-15T07:40:37Z"
            },
            {
              "originalPosition": 38,
              "body": "This sentence should be in the Concise Evidence spec rather than here.",
              "createdAt": "2023-09-15T07:32:57Z",
              "updatedAt": "2023-09-15T07:40:37Z"
            },
            {
              "originalPosition": 7,
              "body": "Just a nit: maybe we could add a sentence to clarify the distinction between DI and AK triples?",
              "createdAt": "2023-09-15T07:39:41Z",
              "updatedAt": "2023-09-15T07:40:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hIrVe",
          "commit": {
            "abbreviatedOid": "dd0c43b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "tweaked wording to include offline key verification",
          "createdAt": "2023-09-15T20:17:45Z",
          "updatedAt": "2023-09-15T20:19:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nThe Verifier SHOULD perform offline verification of the key(s).\r\n```",
              "createdAt": "2023-09-15T20:17:45Z",
              "updatedAt": "2023-09-15T20:19:12Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nThe Verifier SHOULD perform offline verification of the key(s).\r\n```",
              "createdAt": "2023-09-15T20:18:21Z",
              "updatedAt": "2023-09-15T20:19:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hI0Bj",
          "commit": {
            "abbreviatedOid": "dd0c43b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-15T20:40:30Z",
          "updatedAt": "2023-09-15T20:49:11Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "> This sentence should be in the Concise Evidence spec rather than here.\r\n\r\nWhen a claim is added to the ACS, the semantics of the claim are asserted by the verifier. This specification should capture these semantics. If another spec defines evidence that is mapped into this schema. The mapping expects the semantics are the same since mapping different semantics can be challenging. Stating it here ensures the other evidence forms are semantically similar/same.\r\nFor example, the TCG concise evidence spec points to this spec for semantic definitions.",
              "createdAt": "2023-09-15T20:40:30Z",
              "updatedAt": "2023-09-20T18:40:48Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nNote: some keys can only be used for attestation purposes, hence should not be mistaken for device identities.\r\n```",
              "createdAt": "2023-09-15T20:49:00Z",
              "updatedAt": "2023-09-20T18:35:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hI2ev",
          "commit": {
            "abbreviatedOid": "dd0c43b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-15T20:50:30Z",
          "updatedAt": "2023-09-15T20:50:31Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> Just a nit: maybe we could add a sentence to clarify the distinction between DI and AK triples?\r\n\r\nsee suggested text at line 1158",
              "createdAt": "2023-09-15T20:50:30Z",
              "updatedAt": "2023-09-15T20:50:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfJ4F",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:47:55Z",
          "updatedAt": "2023-09-20T12:47:55Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "attest the Evidence on line 1147 is confusing and not really ties to any Cryptographic operation.\r\n\r\n",
              "createdAt": "2023-09-20T12:47:55Z",
              "updatedAt": "2023-09-20T12:47:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfML1",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:52:26Z",
          "updatedAt": "2023-09-20T12:52:26Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nThe attest key triple subject identifies an Attesting Environment whose object\r\nis an array of cryptographic keys used to validate the integrity of Evidence.\r\n```",
              "createdAt": "2023-09-20T12:52:26Z",
              "updatedAt": "2023-09-20T12:55:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfMjk",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:53:03Z",
          "updatedAt": "2023-09-20T12:53:03Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nThe predicate asserts that any of the key(s) (found in the triple object) can be used to validate integrity of Evidence.\r\n```",
              "createdAt": "2023-09-20T12:53:03Z",
              "updatedAt": "2023-09-20T12:55:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfNBK",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:53:54Z",
          "updatedAt": "2023-09-20T12:53:55Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "If I am not mistaken, I guess this section is already merged ?",
              "createdAt": "2023-09-20T12:53:55Z",
              "updatedAt": "2023-09-20T12:53:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hh5LI",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T18:33:54Z",
          "updatedAt": "2023-09-20T18:33:54Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "I rebased the PR which included previously merged content. I guess that is expected in a rebase, but not intuitive in a PR.",
              "createdAt": "2023-09-20T18:33:54Z",
              "updatedAt": "2023-09-20T18:33:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hh5h6",
          "commit": {
            "abbreviatedOid": "15e415d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T18:34:54Z",
          "updatedAt": "2023-09-20T18:34:54Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nwhose object is an array of cryptographic key(s) used to verify the integrity of Evidence.\r\n```",
              "createdAt": "2023-09-20T18:34:54Z",
              "updatedAt": "2023-09-20T18:34:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hh6ju",
          "commit": {
            "abbreviatedOid": "3690f5a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "accepted suggested text",
          "createdAt": "2023-09-20T18:37:46Z",
          "updatedAt": "2023-09-20T18:37:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85uhEdj",
          "commit": {
            "abbreviatedOid": "a0f5052"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T15:53:46Z",
          "updatedAt": "2024-01-31T15:53:46Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-31T15:53:46Z",
              "updatedAt": "2024-01-31T15:53:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uig4p",
          "commit": {
            "abbreviatedOid": "88d90af"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T18:30:44Z",
          "updatedAt": "2024-01-31T18:30:44Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "The statement seems ambiguous to me? Can you please clarify what does it means? Did you mean CRL checking or something ?",
              "createdAt": "2024-01-31T18:30:44Z",
              "updatedAt": "2024-01-31T18:30:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uii07",
          "commit": {
            "abbreviatedOid": "88d90af"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "In general LGTM, Some tidy up is required but this PR is very much relevant to define the semantics of the two triples which needs better explanation than the existing text",
          "createdAt": "2024-01-31T18:32:31Z",
          "updatedAt": "2024-01-31T18:39:40Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nAttesting Environment. The attest key triple subject is an Attesting\r\nEnvironment whose object is one or more cryptographic keys.\r\n```",
              "createdAt": "2024-01-31T18:32:31Z",
              "updatedAt": "2024-01-31T18:39:40Z"
            },
            {
              "originalPosition": 41,
              "body": "Here device is the application layer concept that is been mapped to a `Environment` for encoding.\r\n\r\nPerhaps, we can clarify better that the Device Identifier, either class of Device or specific Device instance, is expressed in the Environment in the subject of the triple",
              "createdAt": "2024-01-31T18:38:13Z",
              "updatedAt": "2024-01-31T18:39:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ukbzc",
          "commit": {
            "abbreviatedOid": "d999b67"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T23:04:26Z",
          "updatedAt": "2024-02-02T16:52:43Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nThe triple subject is a device identity used to name a device.\r\n```",
              "createdAt": "2024-01-31T23:04:26Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThe subject of a device identity triple uses an instance or class identifier to refer\r\n```",
              "createdAt": "2024-01-31T23:05:58Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nto a device, and cryptographic key objects.\r\nThe predicate asserts that\r\n```",
              "createdAt": "2024-01-31T23:07:01Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nat least one of the keys, as defined by `$crypto-key-type-choice`, authenticates the device.\r\n```",
              "createdAt": "2024-01-31T23:08:17Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-01-31T23:08:58Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nThe Verifier SHOULD perform offline verification of the key(s) that may include revocation, expiration, and certificate path validation checks.\r\n```",
              "createdAt": "2024-01-31T23:12:35Z",
              "updatedAt": "2024-02-02T16:52:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI851C14b",
          "commit": {
            "abbreviatedOid": "271a4cf"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-03-27T15:21:46Z",
          "updatedAt": "2024-03-27T15:24:16Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "Remove line break without new sentence",
              "createdAt": "2024-03-27T15:21:46Z",
              "updatedAt": "2024-03-27T15:24:16Z"
            },
            {
              "originalPosition": 42,
              "body": "Remove line break without new sentence",
              "createdAt": "2024-03-27T15:22:11Z",
              "updatedAt": "2024-03-27T15:24:16Z"
            },
            {
              "originalPosition": 32,
              "body": "Remove line break without new sentence.",
              "createdAt": "2024-03-27T15:22:21Z",
              "updatedAt": "2024-03-27T15:24:16Z"
            },
            {
              "originalPosition": 29,
              "body": "Remove line break without new sentence.",
              "createdAt": "2024-03-27T15:22:35Z",
              "updatedAt": "2024-03-27T15:24:16Z"
            },
            {
              "originalPosition": 23,
              "body": "What is the significance of the \"offline\" qualification?",
              "createdAt": "2024-03-27T15:23:37Z",
              "updatedAt": "2024-03-27T15:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ait0c",
          "commit": {
            "abbreviatedOid": "271a4cf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T14:16:30Z",
          "updatedAt": "2024-07-03T14:16:31Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-03T14:16:31Z",
              "updatedAt": "2024-07-03T14:16:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ai3iw",
          "commit": {
            "abbreviatedOid": "271a4cf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T14:31:47Z",
          "updatedAt": "2024-07-03T14:31:47Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "@nedmsmith to wordsmith this",
              "createdAt": "2024-07-03T14:31:47Z",
              "updatedAt": "2024-07-03T14:31:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ax9vK",
          "commit": {
            "abbreviatedOid": "a115c54"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T12:01:15Z",
          "updatedAt": "2024-07-05T12:09:13Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nA Device Identity triple endorses that the keys were securely provisioned to the named Target Environment.\r\n```",
              "createdAt": "2024-07-05T12:01:15Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 30,
              "body": "Should we say how? Or, if we do already, reference the place(s) that contain the relevant text.",
              "createdAt": "2024-07-05T12:03:19Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nIf a key has usage restrictions that limit its use to device identity challenges, Verifiers SHOULD check for key use that violates usage restrictions.\r\n```",
              "createdAt": "2024-07-05T12:04:20Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 51,
              "body": "Isn't this a MUST?  The overall security of the system depends on being able to validate evidence's signatures.",
              "createdAt": "2024-07-05T12:07:05Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nAttest Key triples endorse that the keys were securely provisioned to the named Attesting Environment.\r\n```",
              "createdAt": "2024-07-05T12:07:52Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 54,
              "body": "ditto (symmetric to identity keys)",
              "createdAt": "2024-07-05T12:08:25Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            },
            {
              "originalPosition": 58,
              "body": "To me this too is a MUST.",
              "createdAt": "2024-07-05T12:08:53Z",
              "updatedAt": "2024-07-05T12:09:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AyiDO",
          "commit": {
            "abbreviatedOid": "a115c54"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-05T13:28:55Z",
          "updatedAt": "2024-07-05T13:28:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86A02Rq",
          "commit": {
            "abbreviatedOid": "1bc158c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T00:44:13Z",
          "updatedAt": "2024-07-06T00:44:13Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "If the verifier decides not to do the check and therefore doesn't add a claim containing the verification results claim and the RP expects to find the claim, then the RP applies the enforcement decision and likely doesn't grant access to the resource requested by the Attester. This approach would not force the verifier into becoming an enforcement point if a deployment architecture didn't want that.",
              "createdAt": "2024-07-06T00:44:13Z",
              "updatedAt": "2024-07-06T00:44:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A02Yp",
          "commit": {
            "abbreviatedOid": "51186b5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T00:45:45Z",
          "updatedAt": "2024-07-06T00:45:45Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "I'm confused what action to take?",
              "createdAt": "2024-07-06T00:45:45Z",
              "updatedAt": "2024-07-06T00:45:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A02eq",
          "commit": {
            "abbreviatedOid": "51186b5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T00:46:24Z",
          "updatedAt": "2024-07-06T00:46:25Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "See answer to the previous question about MUST",
              "createdAt": "2024-07-06T00:46:24Z",
              "updatedAt": "2024-07-06T00:46:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1d9q",
          "commit": {
            "abbreviatedOid": "a115c54"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:39:03Z",
          "updatedAt": "2024-07-06T08:39:03Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I am not convinced that your argument justifies a SHOULD, but for the sake of the cut-off, this is good enough for now.",
              "createdAt": "2024-07-06T08:39:03Z",
              "updatedAt": "2024-07-06T08:39:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1eFt",
          "commit": {
            "abbreviatedOid": "51186b5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:42:22Z",
          "updatedAt": "2024-07-06T08:42:22Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Let's move that issue to -08",
              "createdAt": "2024-07-06T08:42:22Z",
              "updatedAt": "2024-07-06T08:42:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1ePl",
          "commit": {
            "abbreviatedOid": "51186b5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:48:46Z",
          "updatedAt": "2024-07-06T08:48:46Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n```\r\nCo-authored-by: Ned Smith <nedmsmith@users.noreply.github.com>\r\nnedmsmith  ",
              "createdAt": "2024-07-06T08:48:46Z",
              "updatedAt": "2024-07-06T08:48:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1eT_",
          "commit": {
            "abbreviatedOid": "075cbbc"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:51:41Z",
          "updatedAt": "2024-07-06T08:51:42Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nAttest Key triples endorse that the keys were securely provisioned to the named (identified via an Environment Map) Attesting Environment.\r\n```",
              "createdAt": "2024-07-06T08:51:41Z",
              "updatedAt": "2024-07-06T08:51:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1eWr",
          "commit": {
            "abbreviatedOid": "5ec8853"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:53:16Z",
          "updatedAt": "2024-07-06T08:53:16Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "If there should be additional symmetric text about identity key, that goes into -08",
              "createdAt": "2024-07-06T08:53:16Z",
              "updatedAt": "2024-07-06T08:53:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1eXv",
          "commit": {
            "abbreviatedOid": "5ec8853"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:53:59Z",
          "updatedAt": "2024-07-06T08:54:00Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-06T08:53:59Z",
              "updatedAt": "2024-07-06T08:54:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1eaG",
          "commit": {
            "abbreviatedOid": "4989d61"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "let's :ship: this for now",
          "createdAt": "2024-07-06T08:55:25Z",
          "updatedAt": "2024-07-06T09:33:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86A9ra0",
          "commit": {
            "abbreviatedOid": "4989d61"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T15:15:15Z",
          "updatedAt": "2024-07-08T15:21:45Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Is this the only key use limitation that should imply key usage checks? What key usage is associated with device identity challenges? Non-repudiation? I'm only considering x.509 key usage OIDs here. What else could you be referring to?",
              "createdAt": "2024-07-08T15:15:15Z",
              "updatedAt": "2024-07-08T15:21:45Z"
            },
            {
              "originalPosition": 36,
              "body": "We already know that a Verifier can add claims of whatever sort. What measurement-value-map code point are you talking about for these? If there is nothing specific, I think this is too vague to be a useful addition.",
              "createdAt": "2024-07-08T15:17:20Z",
              "updatedAt": "2024-07-08T15:21:45Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nAttest Key triples endorse that the keys were securely provisioned to the named (identified via an `environment-map`) Attesting Environment.\r\n```\r\n\r\nThe type is used throughout the document. I don't see capitalized usage.",
              "createdAt": "2024-07-08T15:20:26Z",
              "updatedAt": "2024-07-08T15:21:45Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nAdditional details about how a key was provisioned or is protected may be asserted using Endorsements such as `endorsed-triples`.\r\n```",
              "createdAt": "2024-07-08T15:20:45Z",
              "updatedAt": "2024-07-08T15:21:45Z"
            },
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nAdditional details about how a key was provisioned or is protected may be asserted using Endorsements such as `endorsed-triples`.\r\n```",
              "createdAt": "2024-07-08T15:20:59Z",
              "updatedAt": "2024-07-08T15:21:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A-W1Y",
          "commit": {
            "abbreviatedOid": "4989d61"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T16:28:22Z",
          "updatedAt": "2024-07-08T16:28:22Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "DICE and SPDM have additional key usage constraints.",
              "createdAt": "2024-07-08T16:28:22Z",
              "updatedAt": "2024-07-08T16:28:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 145,
      "id": "PR_kwDOH6-tI85Z4Ze8",
      "title": "Add verifier behaviour for conditional triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/145",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-08T13:59:46Z",
      "updatedAt": "2024-01-10T15:43:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "48bdd67559ef7dbdee9f561981659f4bcfb8d715",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "80-matching-conditional-endorsements",
      "headRefOid": "c3bf056cbe33a285cf3a65188f30cf48b3628d44",
      "closedAt": "2024-01-10T15:43:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced by #175",
          "createdAt": "2024-01-10T15:43:10Z",
          "updatedAt": "2024-01-10T15:43:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85gbnmt",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple comments",
          "createdAt": "2023-09-08T16:31:07Z",
          "updatedAt": "2023-09-08T16:59:50Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I think \"Accepted Claims Set\"  is ambiguous given the above statement that ACS may contain Endorsements as well as Evidence. The algorithm for accepting Evidence applies to Reference Values. If the Attester supplies no Evidence that is vetted by Reference Values, then no Endorsed values should be attributed IMO. Simple example, if Attester asserts it is an HSM, but no Ref Vals substantiate this, and a FIPS certifying body produces an Endorsement that says HSM is EAL4+, then the Attester has successfully achieved privilege escalation. ",
              "createdAt": "2023-09-08T16:31:08Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 118,
              "body": "I still think this is too narrowly stated. If taken literally, the identity-triples, attest-key-triples, conditional triples and coswid-triples have to be discarded because their \"measurements\" aren't describes as `measurement-map`. ",
              "createdAt": "2023-09-08T16:34:41Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 109,
              "body": "What are some use cases for Ref Values matching Endorsements?",
              "createdAt": "2023-09-08T16:36:33Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 101,
              "body": "It could be if the stateful-environment-record mentions endorsement claims that were added via a reference triple.",
              "createdAt": "2023-09-08T16:38:02Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 71,
              "body": "I think this is misstated. The series claims are endorsed values, of which one in the series is selected for inclusion in the ACS. The RVs are not a \"series\" but a stateful environment.",
              "createdAt": "2023-09-08T16:41:41Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nEndorsed Value.\r\nThe Verifier adds the first Endorsed Value in the series that matches the stateful environment.\r\n```",
              "createdAt": "2023-09-08T16:43:50Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 73,
              "body": "```suggestion\r\nThe stateful enviroment acts like a Reference Value which matches Claims contained in the Accepted Claims Set.\r\n```",
              "createdAt": "2023-09-08T16:44:42Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 75,
              "body": "I don't know what these two lines are trying to say, but it seems incorrect.",
              "createdAt": "2023-09-08T16:45:42Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nThe triple's `stateful-environment-record` field constitutes the Reference Value which contains both `environment-map` and `measurement-map` Claims.\r\n```",
              "createdAt": "2023-09-08T16:48:03Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nencoding of a Reference Value that describes the result of previously accepted Claims as the condition for accepting additional Endorsed Values.\r\n```",
              "createdAt": "2023-09-08T16:53:17Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 57,
              "body": "This looks incorrect. The triple object is `measurement-values-map` not an environment-map.",
              "createdAt": "2023-09-08T16:54:54Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nFor each Conditional Endorsement Triple, the verifier SHALL match the\r\n```",
              "createdAt": "2023-09-08T16:56:20Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nReference Value, consisting of a `stateful-environment-record`, against entries in the Accepted Claims Set (see {{sec-match-one-ref-val}}).\r\n```",
              "createdAt": "2023-09-08T16:57:00Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            },
            {
              "originalPosition": 66,
              "body": "It can be if the reference-triple-record contains claims that are in the stateful-environment-record. The expectation is the reference-triples are processed before the conditional triples. (I think).",
              "createdAt": "2023-09-08T16:59:14Z",
              "updatedAt": "2023-09-08T16:59:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfpxD",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T20:50:43Z",
          "updatedAt": "2023-09-10T20:50:43Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "We should probably discuss this more. My take is that Evidence is automatically added to the ACS with the authorization of the attester. Or more precisely with the authority key which authorized the attester (eg Intel DICE root if the verifier trusts that key).\r\nFor most relying parties, that evidence means nothing without a CoRIM to add a conditional endorsement. The FIPS certifying body could say that an entity with measurements A=A1 and B=B1 authorized by key K is FIPS certified.\r\nAs we discussed, I think authorized by deserves its own section.",
              "createdAt": "2023-09-10T20:50:43Z",
              "updatedAt": "2023-09-10T20:50:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfp1l",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T20:54:02Z",
          "updatedAt": "2023-09-10T20:54:02Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "As you see below I think the spec needs a name for `environment-map` plus `measurement-map` when it appears in conditional triples as well as when it appears in reference-values-triple-record.\r\nI am quite happy to use a new name for EM+MM.\r\nWhat should it be?",
              "createdAt": "2023-09-10T20:54:02Z",
              "updatedAt": "2023-09-10T20:54:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfp-5",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:00:05Z",
          "updatedAt": "2023-09-10T21:00:05Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "The main use case is hierarchical CoRIMs. \r\n- CoMID A has reference values which are expected to match against measurements A and B, if they match it adds endorsement E. \r\n- CoMID C contains reference values which are expected to match against measurements C and D, and another which is expected to match against endorsement E if authorized by A. If all match then it adds endorsement F.\r\n- The relying party is looking for endorsement F.\r\nI'll put this in a separate PR",
              "createdAt": "2023-09-10T21:00:05Z",
              "updatedAt": "2023-09-10T21:00:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfqyq",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:06:02Z",
          "updatedAt": "2023-09-10T21:06:02Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "I agree that the reference value part of Conditional Endorsement Series Triple could match against an endorsement added by an earlier group.\r\nI guess what I was asking is whether CEST is in a group or not. If it's in a group then a mismatched reference value in that group could stop it from being processed. That seems odd to me, so I would rather say that CEST is not in a group, but I want to make sure everyone is happy with what I'm writing.",
              "createdAt": "2023-09-10T21:06:02Z",
              "updatedAt": "2023-09-10T21:06:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfsSi",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:30:52Z",
          "updatedAt": "2023-09-10T21:30:52Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "The is the introductory description of what the triple does, IMHO it should describe the rest of the section in informative words so that a reader knows what is coming next.\r\nI used the word \"series\" because the verifier processes them in order.\r\nI haven't found a non-circular definition of \"stateful environment\" so I don't think that is a good term to use instead. It might be if we define it appropriately. Perhaps what I called \"Reference Value\" is what you think of as \"stateful environment\"?",
              "createdAt": "2023-09-10T21:30:52Z",
              "updatedAt": "2023-09-10T21:30:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfsYW",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:33:46Z",
          "updatedAt": "2023-09-10T21:33:46Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I am wondering whether to do s/Reference Value/stateful environment/ or something like that throughout the whole diff",
              "createdAt": "2023-09-10T21:33:46Z",
              "updatedAt": "2023-09-10T21:33:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfsaG",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:35:03Z",
          "updatedAt": "2023-09-10T21:35:03Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "I may be misunderstanding your expectations for CET",
              "createdAt": "2023-09-10T21:35:03Z",
              "updatedAt": "2023-09-10T21:35:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfs0o",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:40:36Z",
          "updatedAt": "2023-09-10T21:40:36Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I think a change similar to what you propose is good, but it depends on which name we use to replace \"Reference Value\"",
              "createdAt": "2023-09-10T21:40:36Z",
              "updatedAt": "2023-09-10T21:40:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfs2m",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:41:35Z",
          "updatedAt": "2023-09-10T21:41:36Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "The next couple of lines say that, so I don't think it needs to say it here as well.",
              "createdAt": "2023-09-10T21:41:35Z",
              "updatedAt": "2023-09-10T21:41:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gfs7q",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:44:51Z",
          "updatedAt": "2023-09-10T21:44:52Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "We need to add the MVM to an EM somewhere. As I understand it, the MVM is added to the same EM as the one in the stateful-environment-record.",
              "createdAt": "2023-09-10T21:44:51Z",
              "updatedAt": "2023-09-10T21:44:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gftTi",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:46:27Z",
          "updatedAt": "2023-09-10T21:46:28Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "agree",
              "createdAt": "2023-09-10T21:46:27Z",
              "updatedAt": "2023-09-10T21:46:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gftXX",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-10T21:48:37Z",
          "updatedAt": "2023-09-10T21:48:37Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Again, I am asking about whether CET is a group of its own or is part of another group",
              "createdAt": "2023-09-10T21:48:37Z",
              "updatedAt": "2023-09-10T21:48:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gltOO",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T17:32:00Z",
          "updatedAt": "2023-09-11T17:32:01Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I will address this as part of the patch for issue #140 ",
              "createdAt": "2023-09-11T17:32:00Z",
              "updatedAt": "2023-09-11T17:32:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85glw_j",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T17:42:35Z",
          "updatedAt": "2023-09-11T17:42:36Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Possible suggestions:\r\nenvironment-measurement-pair\r\nclaim tuple\r\n",
              "createdAt": "2023-09-11T17:42:35Z",
              "updatedAt": "2023-09-11T17:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85gmG4r",
          "commit": {
            "abbreviatedOid": "c3bf056"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T18:42:58Z",
          "updatedAt": "2023-09-11T18:42:59Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "> environment-measurement-pair\r\n\r\nFine! but probably would not use hyphens with pair. E.g.: \"... an environment-measurement pair...\" or \"... an environment-measurement pairing...\" ",
              "createdAt": "2023-09-11T18:42:59Z",
              "updatedAt": "2023-09-11T18:42:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 148,
      "id": "PR_kwDOH6-tI85aV16t",
      "title": "Add description of processing of authorized-by",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/148",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes issue #140 ",
      "createdAt": "2023-09-14T13:02:28Z",
      "updatedAt": "2023-10-02T12:26:53Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "c425f7e872d9c9a079d1ba3219f01e7934581d5a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "140-authorized-by",
      "headRefOid": "42cc83e4548c866a55be6536caf8841d8887aa99",
      "closedAt": "2023-10-02T12:26:05Z",
      "mergedAt": "2023-10-02T12:26:05Z",
      "mergedBy": "andrew-draper",
      "mergeCommit": {
        "oid": "a86496e5ff6c7f727905b62441c02f7bfe1ab609"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Build fails. I ran fix-lint but found no obvious issues.",
          "createdAt": "2023-09-27T21:17:49Z",
          "updatedAt": "2023-09-27T21:17:49Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "> added wording describing conditions for when claims can be removed from ACS.\r\n\r\nClaims are not removed from ACS. I have updated the wording to try to avoid this interpretation.",
          "createdAt": "2023-10-02T08:18:23Z",
          "updatedAt": "2023-10-02T08:18:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85iHMVV",
          "commit": {
            "abbreviatedOid": "5157add"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T09:39:57Z",
          "updatedAt": "2023-09-27T09:39:57Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nThe `evidence-triples` field contains Evidence (from Attesters) and Endorsements\r\n```",
              "createdAt": "2023-09-27T09:39:57Z",
              "updatedAt": "2023-09-27T09:39:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iHOPq",
          "commit": {
            "abbreviatedOid": "5157add"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T09:44:12Z",
          "updatedAt": "2023-09-27T09:44:12Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nthe Verifier SHALL set the `authorized-by` field in that Evidence to the\r\n```",
              "createdAt": "2023-09-27T09:44:12Z",
              "updatedAt": "2023-09-27T09:44:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iKJHG",
          "commit": {
            "abbreviatedOid": "5f6e249"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T14:43:50Z",
          "updatedAt": "2023-09-27T14:43:51Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\nIn the Evidence collection phase the Verifier communicates with attesters to\r\n```",
              "createdAt": "2023-09-27T14:43:50Z",
              "updatedAt": "2023-09-27T14:43:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iKPHp",
          "commit": {
            "abbreviatedOid": "5f6e249"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T14:50:28Z",
          "updatedAt": "2023-09-27T14:50:28Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Please create an issue as to how Endorsement matching instead of Evidence is relevant here.",
              "createdAt": "2023-09-27T14:50:28Z",
              "updatedAt": "2023-09-27T14:50:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iKTAa",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-27T14:54:17Z",
          "updatedAt": "2023-09-27T14:54:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85g__P3",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "There are several pending comments that should be resolved before accepting the PR.",
          "createdAt": "2023-09-14T17:02:30Z",
          "updatedAt": "2023-09-27T23:12:10Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Discarding accepted claims seems wrong. Any claim that is accepted is accepted under the authority of some key, whether it is an Attesting Env or RVP or Endorser. Appraisal policy should be used to define which authorities are acceptable for which claims. A wildcard could be used to imply any claim (hence the policy is just an authority). If a policy expects claim C1 to be accepted under the authority of an RVP key, then the existence of the Claim under the authority of the Attester key isn't justification to remove it. It just means the policy hasn't be satisfied yet. If at the conclusion of appraisal, there are unsatisfied appraisal policies, then those claims can be discarded. It may be this wording can be interpreted correctly, it can also be misinterpreted.",
              "createdAt": "2023-09-14T17:02:31Z",
              "updatedAt": "2023-09-28T21:07:13Z"
            },
            {
              "originalPosition": 108,
              "body": "Given all key-value statements have similar matching rules - e.g., if CBOR tagged then ..., there should be a standalone section that describes these details. They shouldn't be needed in this / other sections that focus on higher level appraisal semantics.",
              "createdAt": "2023-09-14T17:06:48Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nTypically, an entity is authoritative when it makes Claims that are inside its area\r\n```",
              "createdAt": "2023-09-14T17:10:40Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nof competence. The Verifier keeps track of the authorities that assert Claims so that it can\r\n```",
              "createdAt": "2023-09-14T17:12:46Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nfilter out claims from entities that do not satisfy appraisal policies.\r\n```",
              "createdAt": "2023-09-14T17:13:21Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nWhen adding Evidence to the Accepted Claims Set, the\r\n```",
              "createdAt": "2023-09-14T17:16:03Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nVerifier uses the key that signed the claim as the authority. The Verifier SHALL verify the signature over the Claim. If successful, the Verifier SHALL associate the key with a Claim by adding the key to the `authorized-by` field for  the record containing the Claim. The\r\n```",
              "createdAt": "2023-09-14T17:26:12Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nauthority key may be at the head of a certificate chain containing the key which signed the Evidence. This\r\n```",
              "createdAt": "2023-09-14T17:29:14Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nkey depends on the validity of the other keys in the chain, hence the Verifier SHALL verify the validity of the certificate chain before accepting the Claim. The Verifier relies on trust anchor policies that terminate certificate chain verification.\r\n```",
              "createdAt": "2023-09-14T17:32:35Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nIf multiple authorities approve the same Evidence Claim, for example if multiple key chains\r\n```",
              "createdAt": "2023-09-14T17:33:13Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 61,
              "body": "Why not SHALL/MUST?",
              "createdAt": "2023-09-14T17:33:48Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 62,
              "body": "\"authorities\" is ambiguous given a cert chain has multiple CAs and given multiple Endorsers/RVPs could have asserted the same claim (each potentially having a their specific cert chains)",
              "createdAt": "2023-09-14T17:35:41Z",
              "updatedAt": "2023-09-27T23:12:10Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nthe Verifier SHALL update the `authorized-by` field for that Claim in the Accepted Claims Set with the\r\n```",
              "createdAt": "2023-09-14T17:37:20Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\ntrusted authority key that is at the head of the key chain that signed the CoRIM\r\n```",
              "createdAt": "2023-09-14T17:37:59Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\n.\r\n```",
              "createdAt": "2023-09-14T17:40:32Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nWhen adding Endorsement Claims to the Accepted Claims Set that resulted from CoRIM processing (see {{sec-add-to-acs}})\r\n```",
              "createdAt": "2023-09-14T17:42:04Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nWhen comparing a Reference Value Claim against\r\n```",
              "createdAt": "2023-09-14T19:34:49Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\na Claim in the Accepted Claims Set, the Verifier SHALL match\r\n```",
              "createdAt": "2023-09-14T19:35:28Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nthe authority for the Reference Value Claim with the authority for the Claim in the Accepted Claims Set. The keys present in the Reference Value authority\r\n```",
              "createdAt": "2023-09-14T19:38:21Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nmust also be present in the Accepted Claims Set for the Claim being matched.\r\n```",
              "createdAt": "2023-09-14T19:38:59Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 72,
              "body": "Note earlier text needs to say that \"authority\" can be asserted either by signing the claim or by populating `authorized-by`.",
              "createdAt": "2023-09-14T19:40:21Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 75,
              "body": "Why?",
              "createdAt": "2023-09-14T19:40:56Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 76,
              "body": "The CoRIM spec should explain how to compare all variants of $crypto-key-type-choice.",
              "createdAt": "2023-09-14T19:41:56Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 33,
              "body": "Labeling accepted claims as `evidence-triples` when it is more than Evidence results in descriptive text that is misleading or hard to follow. If we rely on CDDL expressions for describing internal representations, the naming should be more carefully chosen. For example, `evidence-triples` could be `actual-state-triples`. ",
              "createdAt": "2023-09-27T21:27:31Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nasserts that the actual state of the Target Environment, as identified by `environment-map` values,\r\n```",
              "createdAt": "2023-09-27T21:29:04Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nand has the associated measurement values from a `measurement-values-map`.\r\n```",
              "createdAt": "2023-09-27T21:33:08Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nEach EMT entry has measurement values (i.e., `measurement-values-map`) that were obtained from Evidence or Endorsement inputs that\r\n```",
              "createdAt": "2023-09-27T21:36:11Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nIf EMTs from different sources are identical, except for their authority, the EMTs can be merged.\r\nHowever, the source authorities are maintained by the resulting EMT.\r\n```",
              "createdAt": "2023-09-27T21:44:14Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 80,
              "body": "```suggestion\r\n#### Accepted Claims Set Initialization {#sec-acs-initialization}\r\n```",
              "createdAt": "2023-09-27T21:48:09Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\ndescribe measurements that are associated with the environment, as identified in\r\n```",
              "createdAt": "2023-09-27T22:48:28Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nAn Attester can provide multiple EMTs. For example, each `environment-map` could have a\r\n```",
              "createdAt": "2023-09-27T22:51:37Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nmultiple `measurement-values-map` entries; or a combination of\r\n```",
              "createdAt": "2023-09-27T22:52:36Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nAn ACS appraisal group can consist of multiple EMTs (e.g., `evidence-triples`).\r\nThere can be multiple entries in `evidence-triples` which have the\r\n```",
              "createdAt": "2023-09-27T22:57:11Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nsame `environment-map` but with different authority as represented by an `authorized-by` field (see {{sec-authorized-by}}).\r\n```",
              "createdAt": "2023-09-27T22:58:37Z",
              "updatedAt": "2023-09-27T23:12:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iVL2t",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "added wording describing conditions for when claims can be removed from ACS.",
          "createdAt": "2023-09-28T21:14:25Z",
          "updatedAt": "2023-09-28T21:23:49Z",
          "comments": [
            {
              "originalPosition": 151,
              "body": "```suggestion\r\nIf the Reference Value claims under the authority of the RVP match claims under the authority of the Attester then the Verifier\r\nSHALL track these claims in the ACS under the authority of both asserters.\r\nIf the Verifier has an exclusive appraisal policy that specifies an authority to trust for these claims, the untrusted authorities SHOULD be removed.\r\nIf removal of an authority results in claims having no authority, the claims SHOULD be removed.\r\nSee the `authorized-by`\r\n```",
              "createdAt": "2023-09-28T21:14:25Z",
              "updatedAt": "2023-09-28T21:23:49Z"
            },
            {
              "originalPosition": 152,
              "body": "```suggestion\r\nsection {{sec-authorized-by}} for more details.\r\n```",
              "createdAt": "2023-09-28T21:15:07Z",
              "updatedAt": "2023-09-28T21:25:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iVQ0u",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "added additional comments",
          "createdAt": "2023-09-28T21:31:46Z",
          "updatedAt": "2023-09-28T21:33:11Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "```suggestion\r\nare available, then the ACS `authorized-by` field MUST be updated to include the key used by\r\n```",
              "createdAt": "2023-09-28T21:31:47Z",
              "updatedAt": "2023-09-28T21:33:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iY7S8",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T12:41:32Z",
          "updatedAt": "2023-09-29T12:41:34Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I have changed it to state-triples. I think actual-state-triples is too long.",
              "createdAt": "2023-09-29T12:41:33Z",
              "updatedAt": "2023-09-29T12:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iY75_",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T12:43:09Z",
          "updatedAt": "2023-09-29T12:43:11Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Reworded",
              "createdAt": "2023-09-29T12:43:10Z",
              "updatedAt": "2023-09-29T12:43:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iY-_q",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T12:51:25Z",
          "updatedAt": "2023-09-29T12:51:27Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Can you file the issue? I am not sure what you would like to see changed.",
              "createdAt": "2023-09-29T12:51:25Z",
              "updatedAt": "2023-09-29T12:51:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZA7p",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T12:56:16Z",
          "updatedAt": "2023-09-29T12:56:18Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "We haven't defined EMT yet (that is in the PR #145). This paragraph and the next are really about defining names and values. I will reword to try and say that better.",
              "createdAt": "2023-09-29T12:56:17Z",
              "updatedAt": "2023-09-29T13:08:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZKzF",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:20:02Z",
          "updatedAt": "2023-09-29T13:20:05Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I rewrote the paragraph to better convey the intended meaning (I hope)",
              "createdAt": "2023-09-29T13:20:03Z",
              "updatedAt": "2023-09-29T13:20:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZPnh",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:30:44Z",
          "updatedAt": "2023-09-29T13:30:46Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Text added",
              "createdAt": "2023-09-29T13:30:45Z",
              "updatedAt": "2023-09-29T13:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZQBk",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:31:38Z",
          "updatedAt": "2023-09-29T13:31:40Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I think this text should go elsewhere. It is not describing ACS",
              "createdAt": "2023-09-29T13:31:39Z",
              "updatedAt": "2023-09-29T13:31:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZSkz",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:36:50Z",
          "updatedAt": "2023-09-29T13:36:52Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "?",
              "createdAt": "2023-09-29T13:36:51Z",
              "updatedAt": "2023-09-29T13:36:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZVEM",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:42:12Z",
          "updatedAt": "2023-09-29T13:42:12Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Thanks for the improved text. Replaced.",
              "createdAt": "2023-09-29T13:42:12Z",
              "updatedAt": "2023-09-29T13:42:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZXHy",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:46:29Z",
          "updatedAt": "2023-09-29T13:46:29Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I think we need to be precise about what is an authority. Can you provide alternative text which tells the verifier exactly what to do?",
              "createdAt": "2023-09-29T13:46:29Z",
              "updatedAt": "2023-09-29T13:46:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZaTm",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:53:34Z",
          "updatedAt": "2023-09-29T13:53:34Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "#158 ",
              "createdAt": "2023-09-29T13:53:34Z",
              "updatedAt": "2023-09-29T13:53:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iZaph",
          "commit": {
            "abbreviatedOid": "a6e50c1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-29T13:54:09Z",
          "updatedAt": "2023-09-29T13:54:10Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "There is some work to be done to fulfil the explanation which will be covered by issue #158 ",
              "createdAt": "2023-09-29T13:54:09Z",
              "updatedAt": "2023-09-29T13:54:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iaaKP",
          "commit": {
            "abbreviatedOid": "a970133"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-09-29T16:01:30Z",
          "updatedAt": "2023-09-29T16:01:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85igJhK",
          "commit": {
            "abbreviatedOid": "42cc83e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-10-02T11:54:44Z",
          "updatedAt": "2023-10-02T11:54:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85igTJA",
          "commit": {
            "abbreviatedOid": "42cc83e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-02T12:23:15Z",
          "updatedAt": "2023-10-02T12:23:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 151,
      "id": "PR_kwDOH6-tI85aePcs",
      "title": "Added crypto-key as an environment identifier",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/151",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Adds $crypto-key-type-choice as a possible environment-map instance identifier.\r\nAddresses Issue #146 ",
      "createdAt": "2023-09-15T20:11:39Z",
      "updatedAt": "2023-09-27T14:32:35Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "48bdd67559ef7dbdee9f561981659f4bcfb8d715",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "crypto-key-as-env",
      "headRefOid": "189b5c2f94acdc036baed6406a96f7fadae39bfb",
      "closedAt": "2023-09-27T14:32:21Z",
      "mergedAt": "2023-09-27T14:32:21Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "b4a6284057297f94bc3cf5597d88c8213c0c05e4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85hIzvn",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "vinscarlata",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-15T20:39:23Z",
          "updatedAt": "2023-09-15T20:39:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85hI1Ey",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "jdbeaney",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-15T20:44:38Z",
          "updatedAt": "2023-09-15T20:44:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85iJS-v",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-27T13:45:42Z",
          "updatedAt": "2023-09-27T13:46:16Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "kudos for the self-explanatory base64-url encoded value :-)",
              "createdAt": "2023-09-27T13:45:42Z",
              "updatedAt": "2023-09-27T13:46:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJ6mC",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-09-27T14:28:00Z",
          "updatedAt": "2023-09-27T14:28:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85iJ6zd",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Need to add matching rules, I will open an issue",
          "createdAt": "2023-09-27T14:28:14Z",
          "updatedAt": "2023-09-27T14:28:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85iJ8mz",
          "commit": {
            "abbreviatedOid": "189b5c2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Issue #155 describes the need for enhancement of matching rules",
          "createdAt": "2023-09-27T14:30:12Z",
          "updatedAt": "2023-09-27T14:30:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 152,
      "id": "PR_kwDOH6-tI85ae8Rg",
      "title": "Added verifier abstraction section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/152",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added definition of verifier abstractions for describing verifier internals.",
      "createdAt": "2023-09-16T00:39:53Z",
      "updatedAt": "2023-09-20T20:09:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "48bdd67559ef7dbdee9f561981659f4bcfb8d715",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "verifier-abstraction",
      "headRefOid": "c3ec9b90380ecd17d73b9d8e2aab7ceea7c1b94d",
      "closedAt": "2023-09-20T20:08:48Z",
      "mergedAt": "2023-09-20T20:08:48Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "9855fd5b612744726c0dd71d10f4490429f46940"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85hRkz4",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "jdbeaney",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-18T21:18:39Z",
          "updatedAt": "2023-09-18T21:18:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85hTL9I",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Awesome and much needed stuff.\r\nI have inlined a few editorial suggestions.",
          "createdAt": "2023-09-19T04:54:48Z",
          "updatedAt": "2023-09-19T05:13:14Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "spurious comma\r\n```suggestion\r\n* actual state: Claims that describe a snapshot of the state of a Target Environment instance.\r\n```",
              "createdAt": "2023-09-19T04:54:48Z",
              "updatedAt": "2023-09-20T14:33:25Z"
            },
            {
              "originalPosition": 18,
              "body": "I guess by \"network connection\" we mean \"established secure channel between Attester and Verifier\"?",
              "createdAt": "2023-09-19T04:57:02Z",
              "updatedAt": "2023-09-19T05:13:14Z"
            },
            {
              "originalPosition": 24,
              "body": "_(non-native speaker comment)_\r\n\r\nI am not sure I understand \"Provenance\" in and by itself.  Maybe: \"Provenance statement\" or \"Provenance assertion\".",
              "createdAt": "2023-09-19T05:02:43Z",
              "updatedAt": "2023-09-19T05:13:14Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nfollowing the appraisal process. The ACS describes the actual state of an Attester that has been vetted by Appraisal Policy. The ACS also keeps track of a Claim's authority.\r\n```",
              "createdAt": "2023-09-19T05:08:42Z",
              "updatedAt": "2023-09-19T05:13:14Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n* Appraisal Policy: A description of the conditions that, if met, allow acceptance\r\n```",
              "createdAt": "2023-09-19T05:10:49Z",
              "updatedAt": "2023-09-19T05:13:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfB31",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:31:19Z",
          "updatedAt": "2023-09-20T12:31:19Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Thank you for the text. I am wondering perhaps this paragraph fits more logically at start (i.e. Line 1284) before we start enumerating phases of Verification ?",
              "createdAt": "2023-09-20T12:31:19Z",
              "updatedAt": "2023-09-20T12:31:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfD8V",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T12:35:50Z",
          "updatedAt": "2023-09-20T12:35:51Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nReference Values Claims are typically attributes of the Target Environment that describe various possible states due to versioning,\r\n```",
              "createdAt": "2023-09-20T12:35:50Z",
              "updatedAt": "2023-09-20T12:35:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hfEm4",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I have left some comments for you to have a look and consider implementing them.\r\n\r\nIn general they are `non-blocking` hence I am approving the code review.",
          "createdAt": "2023-09-20T12:37:18Z",
          "updatedAt": "2023-09-20T12:37:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85hfo61",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T13:43:02Z",
          "updatedAt": "2023-09-20T13:50:46Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Seems a bit too vague for my taste (allows for a lot of interpretation)",
              "createdAt": "2023-09-20T13:43:02Z",
              "updatedAt": "2023-09-20T13:50:47Z"
            },
            {
              "originalPosition": 10,
              "body": "Blocking issue: this must be RFC 9334 definitions where possible/feasible",
              "createdAt": "2023-09-20T13:45:40Z",
              "updatedAt": "2023-09-20T13:50:47Z"
            },
            {
              "originalPosition": 14,
              "body": "Maybe should inherit `intended state` here? (there can be various allowed intended states) ",
              "createdAt": "2023-09-20T13:47:15Z",
              "updatedAt": "2023-09-20T13:50:47Z"
            },
            {
              "originalPosition": 17,
              "body": "Maybe current `operational state`?\r\n\r\nBorrowing from https://www.rfc-editor.org/rfc/rfc8342.html#section-3 could possibly help here, in general.",
              "createdAt": "2023-09-20T13:50:30Z",
              "updatedAt": "2023-09-20T13:50:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hf9ox",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:18:55Z",
          "updatedAt": "2023-09-20T14:18:55Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n* Group: A set of Evidence, Reference Values, Endorsed Values and Appraisal Policies\r\nwhich are processed together.\r\n```",
              "createdAt": "2023-09-20T14:18:55Z",
              "updatedAt": "2023-09-20T14:19:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hf-dV",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:20:20Z",
          "updatedAt": "2023-09-20T14:20:20Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "In the editor's discussion today, incorporating terminology from https://www.ietf.org/archive/id/draft-dthaler-rats-endorsements-02.html was brought up as a prominent option. This requires a sync with Dave.",
              "createdAt": "2023-09-20T14:20:20Z",
              "updatedAt": "2023-09-20T14:20:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hgAU6",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:23:36Z",
          "updatedAt": "2023-09-20T14:23:37Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "We can use this \"Group definition\" as a placeholder for now. Andrew noted that a better term is needed.",
              "createdAt": "2023-09-20T14:23:36Z",
              "updatedAt": "2023-09-20T14:23:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hgBMl",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:25:10Z",
          "updatedAt": "2023-09-20T14:25:10Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> A piece of asserted information, often in the form of a name/value pair. Claims make up the usual structure of Evidence and other RATS conceptual messages. Compare: claim [[RFC7519](https://datatracker.ietf.org/doc/html/rfc7519)].",
              "createdAt": "2023-09-20T14:25:10Z",
              "updatedAt": "2023-09-20T14:25:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hSKHU",
          "commit": {
            "abbreviatedOid": "104fc2b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple",
          "createdAt": "2023-09-18T23:49:42Z",
          "updatedAt": "2023-09-20T14:27:55Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Note: if there are multiple conditional EMTs, there is a question of whether ordering of conditional EMT evaluation produces the same result. To ensure consistency, it may be best to constrain CEMT evaluation to only the ACS state before any CEMT is evaluated.",
              "createdAt": "2023-09-18T23:53:02Z",
              "updatedAt": "2023-09-20T14:27:55Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n* Authority: The entity asserting that a claim is true.\r\n```",
              "createdAt": "2023-09-20T14:26:38Z",
              "updatedAt": "2023-09-20T14:27:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hgGkq",
          "commit": {
            "abbreviatedOid": "07e8092"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:34:23Z",
          "updatedAt": "2023-09-20T14:34:24Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-09-20T14:34:23Z",
              "updatedAt": "2023-09-20T14:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hgORb",
          "commit": {
            "abbreviatedOid": "104fc2b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T14:48:09Z",
          "updatedAt": "2023-09-20T14:48:09Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n* Claim: A piece of information, in the form of a key-value pair.\r\n```",
              "createdAt": "2023-09-20T14:48:09Z",
              "updatedAt": "2023-09-20T14:53:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hgWe6",
          "commit": {
            "abbreviatedOid": "468109a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T15:02:51Z",
          "updatedAt": "2023-09-20T15:02:51Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "See below: following Dave's wording for now.",
              "createdAt": "2023-09-20T15:02:51Z",
              "updatedAt": "2023-09-20T15:02:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhps6",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T17:52:25Z",
          "updatedAt": "2023-09-20T17:52:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Either location works for me",
              "createdAt": "2023-09-20T17:52:25Z",
              "updatedAt": "2023-09-20T17:52:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhrZg",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T17:56:46Z",
          "updatedAt": "2023-09-20T17:56:47Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Claims are attributes already. Restating the definition is needlessly verbose. However, the restatement is incorrect as Claims are always attributes (not typically attributes). The current wording is not saying that Claims are states, rather Claims describe states. I think the current text is better.",
              "createdAt": "2023-09-20T17:56:46Z",
              "updatedAt": "2023-09-20T17:56:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhsoN",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T17:59:57Z",
          "updatedAt": "2023-09-20T17:59:58Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Resolving the conversation based on today's discussion. The current text aligns with the first sentence in 9334. It is reasonable to substitute 'key' for 'name'. Since we use 'key-value' already in other parts it makes sense to be consistent.",
              "createdAt": "2023-09-20T17:59:58Z",
              "updatedAt": "2023-09-20T17:59:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhtja",
          "commit": {
            "abbreviatedOid": "468109a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T18:02:29Z",
          "updatedAt": "2023-09-20T18:02:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n* reference state: Claims that describe various alternative forms of a Target Environment.\r\n```",
              "createdAt": "2023-09-20T18:02:29Z",
              "updatedAt": "2023-09-20T18:02:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhxrk",
          "commit": {
            "abbreviatedOid": "8839147"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T18:12:59Z",
          "updatedAt": "2023-09-20T18:12:59Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n* reference state: Claims that describe various alternative states of a Target Environment.\r\n```",
              "createdAt": "2023-09-20T18:12:59Z",
              "updatedAt": "2023-09-20T18:12:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hhzd1",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T18:17:51Z",
          "updatedAt": "2023-09-20T18:17:51Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "draft-dthaler-rats-endorsements also uses 'point in time' in the definition. It uses \"the \"Attester\" language which implies an entity instance. Maybe that is good enough here too?",
              "createdAt": "2023-09-20T18:17:51Z",
              "updatedAt": "2023-09-20T18:17:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hiRIp",
          "commit": {
            "abbreviatedOid": "1b9b3b2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T19:41:19Z",
          "updatedAt": "2023-09-20T19:41:19Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "> draft-dthaler-rats-endorsements also uses 'point in time' in the definition. It uses \"the \"Attester\" language which implies an entity instance. Maybe that is good enough here too?\r\n\r\nI'm happy aligning with draft-thaler.  I'd also be happy with something like:\r\n\r\n> _actual state: Claims that describe a Target Environment instance at a given point in time._\r\n\r\n",
              "createdAt": "2023-09-20T19:41:19Z",
              "updatedAt": "2023-09-20T19:41:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85hiZwj",
          "commit": {
            "abbreviatedOid": "0051664"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T20:06:18Z",
          "updatedAt": "2023-09-20T20:06:19Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n* actual state: Claims that describe a Target Environment instance at a given point in time.\r\n```",
              "createdAt": "2023-09-20T20:06:18Z",
              "updatedAt": "2023-09-20T20:06:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 153,
      "id": "PR_kwDOH6-tI85bUpyw",
      "title": "Add explaination for 0-N CoBOM requirement",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/153",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "Fixes #147 ",
      "createdAt": "2023-09-27T10:47:44Z",
      "updatedAt": "2023-10-05T14:30:35Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a597257e393a376f1ac65c26710ee31055342501",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "1-n-cobom",
      "headRefOid": "76e577b46dc5b42e3fc04c3901ec03bb67450ee1",
      "closedAt": "2023-10-05T14:30:35Z",
      "mergedAt": "2023-10-05T14:30:35Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "f3a8c699fd3d0f757f5b80bb7a51ad28c69acf85"
      },
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "IMHO this change is insufficient to close the issue. We also need to make changes similar to those in PR #123.",
          "createdAt": "2023-09-27T12:51:18Z",
          "updatedAt": "2023-09-27T12:51:18Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper The original intent is to refer to the multiple CoBOM Handling section (which Thomas is working on) from here. I do not want to do a repeat of the same text here!",
          "createdAt": "2023-09-27T12:56:40Z",
          "updatedAt": "2023-09-27T12:56:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> @andrew-draper The original intent is to refer to the multiple CoBOM Handling section (which Thomas is working on) from here. I do not want to do a repeat of the same text here!\r\n\r\nThis text sets the context for handling multiple CoBOM case described by PR  #123",
          "createdAt": "2023-10-02T13:17:44Z",
          "updatedAt": "2023-10-02T13:17:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Several suggested changes.\r\n\r\n@nedmsmith: Thank you for comments. I believe they have all been addressed",
          "createdAt": "2023-10-02T13:25:31Z",
          "updatedAt": "2023-10-02T13:25:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85iIXlp",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T12:35:47Z",
          "updatedAt": "2023-09-27T12:35:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Appraisal Policy for Evidence determines whether CoBOMs are required, this decision is made based on the complexity and nature of the supply chain eco-system.\r\n```",
              "createdAt": "2023-09-27T12:35:47Z",
              "updatedAt": "2023-09-27T23:16:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iIchJ",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T12:43:45Z",
          "updatedAt": "2023-09-27T12:43:45Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nSome Verifier Owners will have a policy that CoBOM's are not required.\r\nA Verifier Owner may consider that the signature chain over each CoRIM is sufficient authorization, and may not require additional authorization via CoBOM. This Verifier Owner\r\nwould set the Verifier policy to activate all tags immediately, skipping CoBOM checks.\r\n```",
              "createdAt": "2023-09-27T12:43:45Z",
              "updatedAt": "2023-09-27T23:27:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iIePB",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T12:46:36Z",
          "updatedAt": "2023-09-27T12:46:36Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nAlternatively, a Verifier Owner may choose to delegate approval of CoRIM tags to a supplier.\r\nThe Verifier would be configured so that it only activates CoRIM tags which have been explicitly\r\napproved by a CoBOM issued by the configured supplier.\r\n```",
              "createdAt": "2023-09-27T12:46:36Z",
              "updatedAt": "2023-09-27T12:49:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJHQ5",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T13:33:53Z",
          "updatedAt": "2023-09-27T13:33:53Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "This is inconsistent with the requirement in L1257-1258.",
              "createdAt": "2023-09-27T13:33:53Z",
              "updatedAt": "2023-09-27T13:33:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJKvd",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T13:37:24Z",
          "updatedAt": "2023-09-27T13:37:24Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Good catch, we need to word-smith L1257-1258 to state that when a Verifier policy requires CoBOM then,  Data contained in a tag MUST NOT be used\r\nfor appraisal until a CoBOM which activates that tag has been received and successfully processed.",
              "createdAt": "2023-09-27T13:37:24Z",
              "updatedAt": "2023-09-27T13:37:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJLGj",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T13:37:42Z",
          "updatedAt": "2023-09-27T13:37:42Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I will make the change!",
              "createdAt": "2023-09-27T13:37:42Z",
              "updatedAt": "2023-09-27T13:37:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iJQqz",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-27T13:43:16Z",
          "updatedAt": "2023-09-27T13:43:17Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "For that I think it is sufficient to relax the `MUST NOT` in L1257 to a `SHOULD NOT`",
              "createdAt": "2023-09-27T13:43:17Z",
              "updatedAt": "2023-09-27T13:43:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iNboO",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Several changes are suggested.",
          "createdAt": "2023-09-27T23:17:36Z",
          "updatedAt": "2023-09-27T23:23:49Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nReference Values and Endorsements from multiple Reference Value providers and Endorsers respectively.\r\n```",
              "createdAt": "2023-09-27T23:19:27Z",
              "updatedAt": "2023-09-27T23:23:49Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nIn such cases, an integrator or a supplier authority may be designated to issue a single CoBOM\r\n```",
              "createdAt": "2023-09-27T23:20:08Z",
              "updatedAt": "2023-09-27T23:23:49Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-09-27T23:21:23Z",
              "updatedAt": "2023-09-27T23:35:23Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nAn Appraisal Policy for Evidence may dictate how multiple CoBOM's are to be processed within the Verifier.\r\n```",
              "createdAt": "2023-09-27T23:22:46Z",
              "updatedAt": "2023-09-27T23:23:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iNdwr",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Several suggested changes.",
          "createdAt": "2023-09-27T23:29:31Z",
          "updatedAt": "2023-09-27T23:36:37Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nthe use case.\r\n```",
              "createdAt": "2023-09-27T23:29:32Z",
              "updatedAt": "2023-09-27T23:36:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85igo7e",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T13:11:18Z",
          "updatedAt": "2023-10-02T13:11:18Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Ok, I have done in the new revision!",
              "createdAt": "2023-10-02T13:11:18Z",
              "updatedAt": "2023-10-02T13:11:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85igqAe",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T13:13:46Z",
          "updatedAt": "2023-10-02T13:13:46Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "@andrew-draper I have taken good parts of your feedback and kept the conversation `use-case` driven. ",
              "createdAt": "2023-10-02T13:13:46Z",
              "updatedAt": "2023-10-02T13:13:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85igqRL",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T13:14:25Z",
          "updatedAt": "2023-10-02T13:14:25Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Re-worded and tidied up as per Andrew's suggestion!",
              "createdAt": "2023-10-02T13:14:25Z",
              "updatedAt": "2023-10-02T13:14:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85igqzB",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T13:15:38Z",
          "updatedAt": "2023-10-02T13:15:39Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Again the focus is on describing the use case situation rather than the result which drives the Policy, hence retained and tidied the existing text.",
              "createdAt": "2023-10-02T13:15:38Z",
              "updatedAt": "2023-10-02T13:15:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ihgQq",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-02T15:07:19Z",
          "updatedAt": "2023-10-02T15:07:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85ihnoX",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T15:23:20Z",
          "updatedAt": "2023-10-02T15:47:08Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe number of CoBOMs required in a given supply chain ecosystem is dependent on\r\n```",
              "createdAt": "2023-10-02T15:23:20Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 5,
              "body": "The conditions under which the recommendation can be skipped should be listed adjacent to the `SHOULD NOT`.",
              "createdAt": "2023-10-02T15:29:51Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 11,
              "body": "It is not clear to me what the _\"which\"_ references?\r\n\r\nIs it the policy or the number of CoBOMs?\r\n",
              "createdAt": "2023-10-02T15:32:20Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 14,
              "body": "What is _\"limited CoRIMs\"_?\r\n\r\nIf it's \"limited number of CoRIMs\" why should it be a factor?",
              "createdAt": "2023-10-02T15:35:39Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 15,
              "body": "s/signature chain/the signature/\r\n\r\nIt is not clear to me what we mean by _\"sufficient authorization\"_?\r\n",
              "createdAt": "2023-10-02T15:37:51Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 16,
              "body": "AFAIU CoBOMs don't do any authorisation, they do filtering / selection.",
              "createdAt": "2023-10-02T15:38:53Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nare activated immediately and treated valid for appraisal.\r\n```",
              "createdAt": "2023-10-02T15:39:05Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nHowever, a more common case is one where the Verifier receives multiple CoRIMs containing\r\n```",
              "createdAt": "2023-10-02T15:39:22Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 21,
              "body": "It's not clear what a _\"supplier authority\"_ is.  I reckon \"integrator\" is enough to convey the idea.\r\n\r\n```suggestion\r\nReference Values and Endorsements from multiple Reference Value providers and Endorsers.  An integrator may be designated to\r\n```",
              "createdAt": "2023-10-02T15:40:04Z",
              "updatedAt": "2023-10-02T15:47:08Z"
            },
            {
              "originalPosition": 22,
              "body": "CoBOMs do not activate CoRIMs.\r\n\r\n```suggestion\r\nissue a singleton, authoritative CoBOM covering the set of candidate CoRIM tags.\r\n```",
              "createdAt": "2023-10-02T15:46:04Z",
              "updatedAt": "2023-10-02T15:59:46Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nIn a more complex case, there may be multiple authorities that issue CoBOMs at different points in time.\r\n```",
              "createdAt": "2023-10-02T15:46:20Z",
              "updatedAt": "2023-10-02T15:57:18Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nAn Appraisal Policy for Evidence may dictate how multiple CoBOMs are to be processed within the Verifier.\r\n```",
              "createdAt": "2023-10-02T15:46:53Z",
              "updatedAt": "2023-10-02T15:56:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ih4Mq",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T15:55:45Z",
          "updatedAt": "2023-10-02T15:55:46Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "The examples from lines 1266 to 1277 are too \"value judgement\" focused as evidenced by terms like \"common\" and \"more complex\".",
              "createdAt": "2023-10-02T15:55:45Z",
              "updatedAt": "2023-10-02T15:55:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ih7HV",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:02:42Z",
          "updatedAt": "2023-10-02T16:02:42Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "> The examples from lines 1266 to 1277 are too \"value judgement\" focused as evidenced by terms like \"common\" and \"more complex\".\r\n\r\nYes, this is required as to provide some clarity as to why there are cases, when no CoBOM, 1 CoBOM and N CoBOM are relevant.\r\n\r\nElse, it is hard for a reader to grasp the real requirement or applicability of the CoBOM.",
              "createdAt": "2023-10-02T16:02:42Z",
              "updatedAt": "2023-10-02T16:02:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ih-O1",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:10:45Z",
          "updatedAt": "2023-10-02T16:10:46Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I think it is quite clear the which refers to Policy? Isn't it..",
              "createdAt": "2023-10-02T16:10:45Z",
              "updatedAt": "2023-10-02T16:10:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ih_w5",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:14:51Z",
          "updatedAt": "2023-10-02T16:14:51Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think, CoBOM does  provide authority over CoMID/CoSWID tags, as without CoBOM's (in a policy where CoBOMs are required) the tags are meaningless",
              "createdAt": "2023-10-02T16:14:51Z",
              "updatedAt": "2023-10-02T16:14:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiBKw",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:18:20Z",
          "updatedAt": "2023-10-02T16:18:20Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think, the original line 1271 does makes sense, though I should use the comma to stress the use case.",
              "createdAt": "2023-10-02T16:18:20Z",
              "updatedAt": "2023-10-02T16:18:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiCAA",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:20:35Z",
          "updatedAt": "2023-10-02T16:20:35Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "> It's not clear what a _\"supplier authority\"_ is. I reckon \"integrator\" is enough to convey the idea.\r\n\r\nI have no hard views on this, I added supplier authority as per Ned's suggestion. Keeping supplier authority does not hurt, as it may not necessarily be the integrator but can also be an authority ",
              "createdAt": "2023-10-02T16:20:35Z",
              "updatedAt": "2023-10-02T16:20:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiCSj",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:21:24Z",
          "updatedAt": "2023-10-02T16:21:24Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "> CoBOMs do not activate CoRIMs.\r\n\r\nYes, I said CoRIM tags, may be I will say tags within CoRIMs",
              "createdAt": "2023-10-02T16:21:24Z",
              "updatedAt": "2023-10-02T16:21:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiFnt",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:28:55Z",
          "updatedAt": "2023-10-02T16:28:55Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "> Yes, this is required as to provide some clarity as to why there are cases, when no CoBOM, 1 CoBOM and N CoBOM are relevant.\r\n> \r\n> Else, it is hard for a reader to grasp the real requirement or applicability of the CoBOM.\r\n\r\nThe explanation doesn't describe the 0,1,** property, rather it tries to describe it in exemplary terms. Maybe it should describe the considerations for 0,1,** and the algorithm for processing them. Exemplary text can add concreteness in terms of a use case. But the description of the use case doesn't need to imply what is common or simple etc.\r\nI imagine something like the following:\r\n- When no CoBOMs exist, the Verifier does ...\r\n- When 1 CoBOM exists, the Verifier does ...\r\n- When multiple CoBOMs exist, the Verifier does ...\r\n\r\n",
              "createdAt": "2023-10-02T16:28:55Z",
              "updatedAt": "2023-10-02T16:31:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiKO0",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:41:45Z",
          "updatedAt": "2023-10-02T16:41:45Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Changed it to the required authorization",
              "createdAt": "2023-10-02T16:41:45Z",
              "updatedAt": "2023-10-02T16:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiLI5",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:44:20Z",
          "updatedAt": "2023-10-02T16:44:20Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "> > Yes, this is required as to provide some clarity as to why there are cases, when no CoBOM, 1 CoBOM and N CoBOM are relevant.\r\n> > Else, it is hard for a reader to grasp the real requirement or applicability of the CoBOM.\r\n> \r\n> The explanation doesn't describe the 0,1,** property, rather it tries to describe it in exemplary terms. Maybe it should describe the considerations for 0,1,** and the algorithm for processing them. Exemplary text can add concreteness in terms of a use case. But the description of the use case doesn't need to imply what is common or simple etc. I imagine something like the following:\r\n> \r\n> * When no CoBOMs exist, the Verifier does ...\r\n> * When 1 CoBOM exists, the Verifier does ...\r\n> * When multiple CoBOMs exist, the Verifier does ...\r\n\r\nI have done shorter version now and focused more on what Verifier does, when no CoBOM, one CoBOM and multiple CoBOM is the case!",
              "createdAt": "2023-10-02T16:44:20Z",
              "updatedAt": "2023-10-02T16:44:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85iiO8A",
          "commit": {
            "abbreviatedOid": "009313a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T16:55:08Z",
          "updatedAt": "2023-10-02T16:55:08Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think, I have made it clear that when CoBOMs are required, then this should apply.\r\n\r\nIf we read the entire para, it makes more clarity on the context!",
              "createdAt": "2023-10-02T16:55:08Z",
              "updatedAt": "2023-10-02T16:55:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85izWp7",
          "commit": {
            "abbreviatedOid": "4cdad6a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T14:05:51Z",
          "updatedAt": "2023-10-04T14:05:52Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nVerifier Owner's Appraisal Policy for Evidence. Corresponding policies are often driven by the complexity and nature of the use case.\r\n```",
              "createdAt": "2023-10-04T14:05:51Z",
              "updatedAt": "2023-10-04T14:05:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85izXMj",
          "commit": {
            "abbreviatedOid": "ffdf588"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "good to go with current suggestions applied.",
          "createdAt": "2023-10-04T14:06:50Z",
          "updatedAt": "2023-10-04T14:21:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85izsvg",
          "commit": {
            "abbreviatedOid": "ae94c6f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T14:44:22Z",
          "updatedAt": "2023-10-04T14:44:22Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nVerifier to activate the listed tags. Verifier policy determines whether CoBOMs are required.\r\n\r\nWhen CoBOMs are required, each tag MUST be activated by a CoBOM before being processed.\r\nAll the tags listed in the CoBOM MUST be activated in\r\n```",
              "createdAt": "2023-10-04T14:44:22Z",
              "updatedAt": "2023-10-04T14:44:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85izvWx",
          "commit": {
            "abbreviatedOid": "5cbee97"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T14:49:07Z",
          "updatedAt": "2023-10-04T14:49:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nAll the tags listed in the CoBOM MUST be activated atomically. If any tag activated by a CoBOM is not available to the Verifier, the entire CoBOM is rejected.\r\n```",
              "createdAt": "2023-10-04T14:49:07Z",
              "updatedAt": "2023-10-04T14:49:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0CiH",
          "commit": {
            "abbreviatedOid": "696e821"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:01:54Z",
          "updatedAt": "2023-10-04T15:01:55Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nA Verifier Owner has a policy that does not require CoBOM, tags within a CoRIM received by a Verifier\r\nare activated immediately and treated valid for appraisal.\r\n```",
              "createdAt": "2023-10-04T15:01:54Z",
              "updatedAt": "2023-10-04T15:01:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0TyV",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:10:49Z",
          "updatedAt": "2023-10-04T15:10:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "resolved in PR",
              "createdAt": "2023-10-04T15:10:49Z",
              "updatedAt": "2023-10-04T15:10:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0V1P",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:12:21Z",
          "updatedAt": "2023-10-04T15:12:22Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "resolved",
              "createdAt": "2023-10-04T15:12:21Z",
              "updatedAt": "2023-10-04T15:12:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0WR1",
          "commit": {
            "abbreviatedOid": "b482a04"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:12:58Z",
          "updatedAt": "2023-10-04T15:12:59Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "resolved",
              "createdAt": "2023-10-04T15:12:59Z",
              "updatedAt": "2023-10-04T15:12:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0ZJN",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:17:48Z",
          "updatedAt": "2023-10-04T15:17:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "resolved even better in PR",
              "createdAt": "2023-10-04T15:17:48Z",
              "updatedAt": "2023-10-04T15:17:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0aE9",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:19:26Z",
          "updatedAt": "2023-10-04T15:19:26Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "resolved due to new text in PR",
              "createdAt": "2023-10-04T15:19:26Z",
              "updatedAt": "2023-10-04T15:19:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0bZe",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:21:57Z",
          "updatedAt": "2023-10-04T15:21:58Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "@thomas-fossati this was not accepted in the PR",
              "createdAt": "2023-10-04T15:21:57Z",
              "updatedAt": "2023-10-04T15:21:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0bv2",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:22:38Z",
          "updatedAt": "2023-10-04T15:22:38Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "resolved due to other changes in this PR",
              "createdAt": "2023-10-04T15:22:38Z",
              "updatedAt": "2023-10-04T15:22:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0qhZ",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:52:14Z",
          "updatedAt": "2023-10-04T15:52:14Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "> Keeping supplier authority does not hurt as it may not necessarily be the integrator but can also be an authority\r\n\r\nI guess I'm having a hard time to digest the \"authority\" bit, because the integrator *is* an \"authority\" too given it signs the CoRIM...\r\n\r\nMaybe: _\"[...] In such cases, an integrator or a specific supplier may be designated to [...]\"_\r\n",
              "createdAt": "2023-10-04T15:52:14Z",
              "updatedAt": "2023-10-04T15:52:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0t5h",
          "commit": {
            "abbreviatedOid": "af77010"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:58:55Z",
          "updatedAt": "2023-10-04T15:58:55Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIf a Verifier Owner has a policy that does not require CoBOM, tags within a CoRIM received by a Verifier\r\n```",
              "createdAt": "2023-10-04T15:58:55Z",
              "updatedAt": "2023-10-04T15:58:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0uRE",
          "commit": {
            "abbreviatedOid": "af77010"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T15:59:40Z",
          "updatedAt": "2023-10-04T15:59:40Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nThere may be cases when Verifier receives CoRIMs from multiple\r\n```",
              "createdAt": "2023-10-04T15:59:40Z",
              "updatedAt": "2023-10-04T15:59:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0wQ-",
          "commit": {
            "abbreviatedOid": "af77010"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T16:03:56Z",
          "updatedAt": "2023-10-04T16:03:57Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nReference Value providers and Endorsers. In such cases, an integrator or a given supplier\r\nmay be designated to issue a single CoBOM to activate the relevant tags among those received by the Verifier.\r\n```",
              "createdAt": "2023-10-04T16:03:56Z",
              "updatedAt": "2023-10-04T16:03:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i0whv",
          "commit": {
            "abbreviatedOid": "af77010"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T16:04:29Z",
          "updatedAt": "2023-10-04T16:04:29Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nIn a more complex case, there may be multiple authorities that issue CoBOMs at different points in time.\r\n```",
              "createdAt": "2023-10-04T16:04:29Z",
              "updatedAt": "2023-10-04T16:04:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i00er",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T16:10:07Z",
          "updatedAt": "2023-10-04T16:10:08Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "> > Keeping supplier authority does not hurt as it may not necessarily be the integrator but can also be an authority\r\n> \r\n> I guess I'm having a hard time to digest the \"authority\" bit, because the integrator _is_ an \"authority\" too given it signs the CoRIM...\r\n> \r\n> Maybe: _\"[...] In such cases, an integrator or a specific supplier may be designated to [...]\"_\r\n\r\nAuthority (in this document) refers to the key used to sign (assert) conceptual messages or the key designated by an appraisal policy as the entity authorized to make assertions about a class of claims. The former case is relevant when no policy exists, but is ineffectual (overridden) if a policy does exist.",
              "createdAt": "2023-10-04T16:10:08Z",
              "updatedAt": "2023-10-04T16:11:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i00j7",
          "commit": {
            "abbreviatedOid": "af77010"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Further comments!",
          "createdAt": "2023-10-04T16:10:17Z",
          "updatedAt": "2023-10-04T16:10:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85i05Y6",
          "commit": {
            "abbreviatedOid": "e8148d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-04T16:20:36Z",
          "updatedAt": "2023-10-04T16:20:36Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Thinking a bit more, perhaps we can retain supplier authority and make it like below:\r\n\r\n In such cases, a supplier authority (for example, an integrator) may be designated to\r\n",
              "createdAt": "2023-10-04T16:20:36Z",
              "updatedAt": "2023-10-04T16:20:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i8Yow",
          "commit": {
            "abbreviatedOid": "318c9bc"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T14:19:55Z",
          "updatedAt": "2023-10-05T14:19:55Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nThere may be cases when Verifier receives CoRIMs from multiple\r\nReference Value providers and Endorsers. In such cases, a supplier (or other authorities, such as integrators)\r\nmay be designated to issue a single CoBOM to activate all the tags submitted to the Verifier\r\n```",
              "createdAt": "2023-10-05T14:19:55Z",
              "updatedAt": "2023-10-05T14:27:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85i8gJC",
          "commit": {
            "abbreviatedOid": "76e577b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "good enough to merge. there will be a consistency pass later",
          "createdAt": "2023-10-05T14:29:48Z",
          "updatedAt": "2023-10-05T14:29:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 160,
      "id": "PR_kwDOH6-tI85bqkn4",
      "title": "Add description of authorized-by",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/160",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-02T11:54:07Z",
      "updatedAt": "2023-10-02T11:54:15Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "c425f7e872d9c9a079d1ba3219f01e7934581d5a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "yd-trial-on-top-of-andrew",
      "headRefOid": "2f5987fea97c10b0dcfca12130405f9a283fd4e8",
      "closedAt": "2023-10-02T11:54:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 164,
      "id": "PR_kwDOH6-tI85b7SYj",
      "title": "Adds extension point to validity-map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/164",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith",
        "henkbirkholz"
      ],
      "labels": [
        "wontfix"
      ],
      "body": "Adds extension point to validity-map",
      "createdAt": "2023-10-04T17:41:15Z",
      "updatedAt": "2024-07-10T14:11:43Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a597257e393a376f1ac65c26710ee31055342501",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "161-validity-map",
      "headRefOid": "3055dcdf5a32732e05da2c2b8f371daac6a683bf",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am a bit confused by this PR (next to style & syntax).\r\n\r\nThis seems to break the straight forward semantics of current validity map. But more importantly, I cannot see how Epoch Markers (that were the example in #161 would solve a problem here. Do they really?",
          "createdAt": "2023-10-13T12:51:19Z",
          "updatedAt": "2023-10-13T12:51:19Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am a bit confused by this PR (next to style & syntax).\r\n> \r\n> This seems to break the straight forward semantics of current validity map. But more importantly, I cannot see how Epoch Markers (that were the example in #161 would solve a problem here. Do they really?\r\n\r\nThe validity period assumes verifier has trusted time. I'm looking for a solution that doesn't require trusted time. Epoch markers could be used in this sort of environment.",
          "createdAt": "2023-10-13T13:57:33Z",
          "updatedAt": "2023-10-13T13:57:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This branch was rebased to pick up changes in main that fixes ghpages build errors.",
          "createdAt": "2024-01-19T23:00:26Z",
          "updatedAt": "2024-01-19T23:01:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Besides, since this introduces an extension point, we need a new IANA sub-registry.\r\n\r\nWe can tolerate not having an IANA sub-registry until there is interest in standardizing extensions. In the meantime, a vendor may leverage a profile context to define a vendor-specific approach using negative code points. \r\n\r\nThe lack of a defined registry creates a friction point that limits use of the extention point for standard use, thereby limiting possible backwards compatibility issues should another approach become preferred.",
          "createdAt": "2024-01-19T23:08:07Z",
          "updatedAt": "2024-01-19T23:08:07Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Move to \"won't fix\" based on the justification that an alternative form of validity can be added by extending at the corim-map and opting not to use validity? ",
          "createdAt": "2024-04-26T16:59:00Z",
          "updatedAt": "2024-04-26T16:59:00Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Sgrm",
          "createdAt": "2024-04-26T19:50:16Z",
          "updatedAt": "2024-04-26T19:50:16Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Awaiting some actions in EPOCH markers draft to introduce an Extensibility points. @Henk to follow up on this and then only close this Pull Request!",
          "createdAt": "2024-07-10T14:11:42Z",
          "updatedAt": "2024-07-10T14:11:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85j0MjU",
          "commit": {
            "abbreviatedOid": "5c60a98"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-10-12T16:35:01Z",
          "updatedAt": "2023-10-12T16:35:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85j4KnJ",
          "commit": {
            "abbreviatedOid": "5c60a98"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "The semantics of this must be documented in \u00a71.3.3 -- and possibly in all the places it is `validity-map` is reused.\r\n\r\nBesides, since this introduces an extension point, we need a new IANA sub-registry.\r\n\r\nBut more generally, I don't think this is the right design.  (See https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/161#issuecomment-1760732672 for the rationale.)",
          "createdAt": "2023-10-13T04:13:24Z",
          "updatedAt": "2023-10-13T04:13:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85tR2ga",
          "commit": {
            "abbreviatedOid": "5c60a98"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This looks good, but I think it also needs text which says that if a verifier doesn't understand any of the fields within validity-map then that map is not valid.",
          "createdAt": "2024-01-19T18:13:00Z",
          "updatedAt": "2024-01-19T18:13:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 166,
      "id": "PR_kwDOH6-tI85cp1X9",
      "title": "Minor correction on Extensions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/166",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-12T16:27:58Z",
      "updatedAt": "2023-10-12T16:59:50Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "f3a8c699fd3d0f757f5b80bb7a51ad28c69acf85",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "ext-correction",
      "headRefOid": "2a3678e36fdde4511013d83f0e4384c088c8eda7",
      "closedAt": "2023-10-12T16:59:43Z",
      "mergedAt": "2023-10-12T16:59:43Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "8d7f85affabf990b0471f143f87c33ea615d2349"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85j0RRS",
          "commit": {
            "abbreviatedOid": "2a3678e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-12T16:42:21Z",
          "updatedAt": "2023-10-12T16:42:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 167,
      "id": "PR_kwDOH6-tI85c071m",
      "title": "Define matching rules for raw-value",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/167",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "mustfix"
      ],
      "body": "This fixes issue #124 and part of issue #71",
      "createdAt": "2023-10-15T10:04:50Z",
      "updatedAt": "2024-07-03T14:10:51Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "124-untagged-raw-value",
      "headRefOid": "542fabd428b1399009a270aea9558451e71d679c",
      "closedAt": "2024-07-03T14:10:51Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This is supposed to be Draft, @andrew-draper to work on this.",
          "createdAt": "2024-04-17T14:18:48Z",
          "updatedAt": "2024-04-17T14:18:48Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Added `mustfix` label to align with priority of #71 \r\nClosing this PR closes issue #71 ",
          "createdAt": "2024-05-07T19:26:45Z",
          "updatedAt": "2024-05-07T19:26:45Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "07/03/2024 - we agreed @andrew-draper would come up with a new PR for issues #71 and #124.",
          "createdAt": "2024-07-03T14:10:51Z",
          "updatedAt": "2024-07-03T14:10:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85kM3zY",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple comments",
          "createdAt": "2023-10-16T23:26:07Z",
          "updatedAt": "2023-10-17T00:03:07Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nA raw value measurement is a BSTR, preceded by a CBOR tag.\r\n```",
              "createdAt": "2023-10-16T23:26:07Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 7,
              "body": "Unless the plan is to change the CDDL \r\n```\r\ntagged-bytes = #6.560(bytes)\r\n$raw-value-type-choice /= tagged-bytes\r\n```\r\ndoesn't permit a bstr without a CBOR tag.",
              "createdAt": "2023-10-16T23:27:08Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nIn a Reference Value `raw-value`, the CBOR tag on a `raw-value` describes the algorithm\r\n```",
              "createdAt": "2023-10-16T23:28:47Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nAdditional CBOR tags can be defined for raw value. In a CBOR tagged `raw-value` entry within Evidence or Endorsement, the CBOR tag describes the structure of the data within\r\n```",
              "createdAt": "2023-10-16T23:29:25Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nEvidence or Endorsement `raw-value`, but extensions profiles may assign meaning to it.\r\n```",
              "createdAt": "2023-10-16T23:29:53Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\n mask. The mask, if present, is stored under `measurement-values-map` key 5.\r\n```",
              "createdAt": "2023-10-16T23:34:55Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nBoth `raw-value` and `raw-value-mask` must have type BSTR.\r\n```",
              "createdAt": "2023-10-16T23:35:56Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 56,
              "body": "I'm not certain both raw-value and mask have to be of type bstr. The CBOR tag may contain semantics for performing the comparison. For example, if the raw value is a tstr. The raw-value-mask could be a bstr containing a regular expression. This wording seems to add furthur constraint to what was described above.",
              "createdAt": "2023-10-16T23:38:24Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nWithin a Reference Value, a `measurement-values-map` entry of type BSTR with CBOR tag #6.560, is a raw-value entry with optional mask.\r\n```",
              "createdAt": "2023-10-16T23:40:48Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-10-16T23:41:34Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nsize as the Reference Value `raw-value`.\r\n```",
              "createdAt": "2023-10-16T23:41:59Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\nthe Reference Value `raw-value` has value h'1234', and there is no\r\n```",
              "createdAt": "2023-10-16T23:42:45Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\ncorresponding mask, then a mask is created with value h'FFFFFF'.\r\n```",
              "createdAt": "2023-10-16T23:43:06Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 73,
              "body": "I don't think there are 3 BSTRs.",
              "createdAt": "2023-10-16T23:45:07Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nFor example, if the Accepted Claims Set `raw-value` has value h'123456',\r\n```",
              "createdAt": "2023-10-16T23:45:45Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 73,
              "body": "I don't think the verifier should modify the `raw-value`. Rather the mask can be modified to add zero as mask bits if the mask is shorter than the `raw-value`. This masks off any buffer overflow scenario that didn't properly limit the length of the raw value. If the raw value is shorter than the mask length, and the mask beyond the length of the raw value is not zero (false) then the true bits are set to false to prevent appending junk to the raw value.",
              "createdAt": "2023-10-16T23:51:31Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nFor example, if the Reference `raw-value` has value h'1234' and the Accepted Claims Set `raw-value` is h'123456' then the Reference `raw-value` is extended to h'123400'.\r\n```",
              "createdAt": "2023-10-16T23:53:25Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 75,
              "body": "I don't think line 1799 semantics is correct. If reference is 1234 and ACS is 123456 then these are different values that don't match.  I don't think Verifier should modify ref values/evidence values in terms of changing its length. If the reference is 1234 and the ACS has a mask of FFFF00. Then the two zeros mask off the ACS '56' resulting in a match. Similarly, if Reference is 1234 and reference mask is FFFF00. Then reference mask masks '56' of the ACS resulting in a match.",
              "createdAt": "2023-10-16T23:56:37Z",
              "updatedAt": "2023-10-17T00:20:32Z"
            },
            {
              "originalPosition": 81,
              "body": "The semantics for processing the mask should be higher up in the document IMHO. Maybe around line 1787.",
              "createdAt": "2023-10-16T23:57:33Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nThe CBOR tag on the Accepted Claims Set `raw-value` does not affect\r\n```",
              "createdAt": "2023-10-16T23:59:04Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-10-17T00:00:55Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            },
            {
              "originalPosition": 87,
              "body": "The cddl `? ( <raw value group stuff> )` ensures that if a `raw-value` is omitted, so will the `raw-value-mask` be omitted.",
              "createdAt": "2023-10-17T00:01:51Z",
              "updatedAt": "2023-10-17T00:03:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kbysc",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T12:57:11Z",
          "updatedAt": "2023-10-18T12:57:12Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The PR also changes the CDDL\r\nMeasurements, for example those generated by DICE or SPDM might not have a tag, and this CDDL change allows that.",
              "createdAt": "2023-10-18T12:57:11Z",
              "updatedAt": "2023-10-18T12:57:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kb1zr",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T13:02:56Z",
          "updatedAt": "2023-10-18T13:02:58Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "The CDDL says that the raw-value has to be of type BSTR. I guess it has an extension point but I think extending it with something that isn't a tagged bstr would probably cause problems.",
              "createdAt": "2023-10-18T13:02:57Z",
              "updatedAt": "2023-10-18T13:02:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kb2Y3",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T13:04:00Z",
          "updatedAt": "2023-10-18T13:04:00Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Isn't the mask optional?",
              "createdAt": "2023-10-18T13:04:00Z",
              "updatedAt": "2023-10-18T13:04:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kd3kB",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:24:42Z",
          "updatedAt": "2023-10-18T16:24:42Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Yes. I thought it was redundant to say \"optional\" and \"if present\".  The section that describes the cddl structure says it is optional already. This section is describing verifier behavior for  \"if present\". ",
              "createdAt": "2023-10-18T16:24:42Z",
              "updatedAt": "2023-10-18T16:25:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85keAaq",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:34:48Z",
          "updatedAt": "2023-10-18T16:34:48Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "> The CDDL says that the raw-value has to be of type BSTR. I guess it has an extension point but I think extending it with something that isn't a tagged bstr would probably cause problems.\r\n\r\nAgree. It seems safest if the typing always requires a CBOR tag. Plus changing it now will impact code, examples and so forth.",
              "createdAt": "2023-10-18T16:34:48Z",
              "updatedAt": "2023-10-18T16:34:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855jCCC",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-04T04:03:05Z",
          "updatedAt": "2024-05-04T04:03:05Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I think this is the only `measurement-values-map` entry that isn't independent. Can we put the mask and raw value together in a single compound value so its semantics can be self-contained so a single key?",
              "createdAt": "2024-05-04T04:03:05Z",
              "updatedAt": "2024-05-04T04:03:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8551HvZ",
          "commit": {
            "abbreviatedOid": "542fabd"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-07T19:12:42Z",
          "updatedAt": "2024-05-07T19:12:43Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "If there is interest in restructuring, I suggest looking more closely at the Intel Profile which places the value and the mask in a record structure:\r\n```\r\nmask-eq = 1\r\nmask-operator = mask-eq\r\nmask-type = bstr\r\nmask-expression = [ mask-operator, value: mask-type, mask: mask-type ]\r\ntagged-mask-expression = #6.60010( mask-expression )\r\n```\r\nIt also includes a mask-operator that facilitates verifier behavior. But that is more than base corim is doing. \r\n\r\nHowever, we should retain backward compatibility with 4 and 5, so they shouldn't be redefined. They should move to `reserved` status.\r\n\r\nOtherwise, the text describing how the verifier processes these values seems reasonable. I don't think this is a high priority to \"fix\" beyond the suggested wording changes in the PR. ",
              "createdAt": "2024-05-07T19:12:42Z",
              "updatedAt": "2024-05-07T19:16:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 168,
      "id": "PR_kwDOH6-tI85dQJVO",
      "title": "Group Membership & MEC Endorsment",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/168",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #136 ",
      "createdAt": "2023-10-19T10:27:55Z",
      "updatedAt": "2024-01-10T15:41:58Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "group-n-mec",
      "headRefOid": "69a494b8cfb9752b33a0582594ff68460df00863",
      "closedAt": "2024-01-10T15:41:58Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think this needs work before we commit it. I have a similar proposal.\r\n\r\nYes, Me and Andrew today precisely worked on a better improved version of the same `Conditional Endorsement Triple`\r\n\r\nI would let Andrew come up with the First Draft and then we can review it together in the coming meeting!",
          "createdAt": "2023-10-19T12:52:09Z",
          "updatedAt": "2023-10-19T12:52:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I think this needs work before we commit it. I have a similar proposal.\r\n> \r\n> Yes, Me and Andrew today precisely worked on a better improved version of the same `Conditional Endorsement Triple`\r\n> \r\n> I would let Andrew come up with the First Draft and then we can review it together in the coming meeting!\r\n\r\nIf the only difference is the array around `val` I think this can be trivially accommodated within this PR.  At least I would be happy to.",
          "createdAt": "2023-10-19T13:23:47Z",
          "updatedAt": "2023-10-19T13:23:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think this needs work before we commit it. I have a similar proposal.\r\n\r\nI don't see the value in having multiple competing PRs. If there isn't consensus for how to solve a problem, then the issue is still in progress and not ready for a PR.\r\n\r\nLet's discard both PR #168 and #169 as these are competing PRs for an issue #136 that hasn't been closed.",
          "createdAt": "2023-10-19T16:34:17Z",
          "updatedAt": "2023-10-19T16:40:01Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I have closed PR #169 - I don't think we have reached agreement on the goals. If we rush for a change before the deadline then we may make mistakes.",
          "createdAt": "2023-10-20T19:04:30Z",
          "updatedAt": "2023-10-20T19:04:30Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "#177 now points to a wiki page illustrating the approach.",
          "createdAt": "2024-01-10T15:41:38Z",
          "updatedAt": "2024-01-10T15:41:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85klprB",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T12:34:11Z",
          "updatedAt": "2023-10-19T12:34:11Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I think this doesn't work when different revisions of CoMID have different definitions of what is in an environment",
              "createdAt": "2023-10-19T12:34:11Z",
              "updatedAt": "2023-10-19T12:34:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85klqof",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T12:35:27Z",
          "updatedAt": "2023-10-19T12:35:28Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "I have a version of this which adds multiple conditional endorsements (with the same condition for each). I think that is likely to be widely used, and for the cost of 1 additional byte is probably worthwhile.",
              "createdAt": "2023-10-19T12:35:27Z",
              "updatedAt": "2023-10-19T12:35:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85klsNg",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think this needs work before we commit it. I have a similar proposal.",
          "createdAt": "2023-10-19T12:37:25Z",
          "updatedAt": "2023-10-19T12:37:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85kn7WM",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T16:30:44Z",
          "updatedAt": "2023-10-19T16:30:44Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "> I think this doesn't work when different revisions of CoMID have different definitions of what is in an environment\r\n\r\nWhat doesn't work?",
              "createdAt": "2023-10-19T16:30:44Z",
              "updatedAt": "2023-10-19T16:30:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kxv_O",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:05:52Z",
          "updatedAt": "2023-10-20T19:05:52Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I hadn't realised that this is just a rename of domain-membership-triple-record to group-membership-triple-record. I am not convinced that rename makes the document better.",
              "createdAt": "2023-10-20T19:05:52Z",
              "updatedAt": "2023-10-20T19:05:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85oK792",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-24T10:24:44Z",
          "updatedAt": "2023-11-24T10:24:45Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "tentatively renamed to \"environment bundle\"",
              "createdAt": "2023-11-24T10:24:45Z",
              "updatedAt": "2023-11-24T10:24:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85oK8MB",
          "commit": {
            "abbreviatedOid": "fca9005"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-24T10:25:20Z",
          "updatedAt": "2023-11-24T10:25:20Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "added multiple cardinality to `val`",
              "createdAt": "2023-11-24T10:25:20Z",
              "updatedAt": "2023-11-24T10:25:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85oo2XI",
          "commit": {
            "abbreviatedOid": "69a494b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-29T15:22:41Z",
          "updatedAt": "2023-11-29T15:22:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nmulti-env-conditional-endorsement-triple-record = [\r\n  cond: [ + stateful-environment-record ]\r\n  env: environment-map\r\n  ends: [ + measurement-values-map ]\r\n]\r\n```",
              "createdAt": "2023-11-29T15:22:41Z",
              "updatedAt": "2023-11-29T15:23:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 169,
      "id": "PR_kwDOH6-tI85dSfzy",
      "title": "Add Multi Conditional Endorsement Triple",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/169",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-19T15:28:00Z",
      "updatedAt": "2023-10-20T18:56:43Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "136-group-reference-value-matching",
      "headRefOid": "6317194d1f99ec400f31fdeb247fd32bdbf52d93",
      "closedAt": "2023-10-20T18:56:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's discard both PR #168 and #169 as these are competing PRs for an issue #136  that hasn't been closed.",
          "createdAt": "2023-10-19T16:36:56Z",
          "updatedAt": "2023-10-19T16:36:56Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "This is premature, dropping for now",
          "createdAt": "2023-10-20T18:56:42Z",
          "updatedAt": "2023-10-20T18:56:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85kneHK",
          "commit": {
            "abbreviatedOid": "5636e93"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:36:15Z",
          "updatedAt": "2023-10-19T15:36:16Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n  cond: [ + stateful-environment-record], ; a series of stateful environments to be matched against evidence \r\n```",
              "createdAt": "2023-10-19T15:36:16Z",
              "updatedAt": "2023-10-19T15:36:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85kne2X",
          "commit": {
            "abbreviatedOid": "5636e93"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:37:42Z",
          "updatedAt": "2023-10-19T15:37:42Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\n  end:  [ + stateful-environment-record] ; a series of endorsements to be accepted upon matching the subject `cond`\r\n```",
              "createdAt": "2023-10-19T15:37:42Z",
              "updatedAt": "2023-10-19T15:37:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85knf7y",
          "commit": {
            "abbreviatedOid": "5636e93"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:39:51Z",
          "updatedAt": "2023-10-19T15:39:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I think the first statement is not strictly true if you revisit the definition of conditional-endorsement-triple-record. There the First reference value matching stop the matching process. However in this triple, we expect to match All the Subject conditions prior to accepting the series.",
              "createdAt": "2023-10-19T15:39:51Z",
              "updatedAt": "2023-10-19T15:39:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85knpg8",
          "commit": {
            "abbreviatedOid": "5636e93"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:53:07Z",
          "updatedAt": "2023-10-19T15:53:07Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "The conditional endorsement **series** triple has the stop on match function.\r\n\r\nI'm comparing against the single conditional-endorsement-triple.",
              "createdAt": "2023-10-19T15:53:07Z",
              "updatedAt": "2023-10-19T15:53:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 170,
      "id": "PR_kwDOH6-tI85dsE1m",
      "title": "Updates to Reference Value and Endorsed Values",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/170",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "Added relevant issue #171 ",
      "createdAt": "2023-10-24T22:16:20Z",
      "updatedAt": "2024-08-28T15:40:48Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "updates",
      "headRefOid": "b3ff13976e38a56f2a481e5a7c30f6d17b1e7c03",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I created issue #194 that makes suggestions for how to approach updates. The x-triples section should probably be moved to a new top level section dealing with update processing. Some of the update processing goals are not unique to x-triples, hence can be described in a way that applies broadly to updates regardless of which update vehicle is used.",
          "createdAt": "2024-01-19T19:55:19Z",
          "updatedAt": "2024-01-19T19:55:19Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Given it is a non-goal for CoRIM to bias a particular update mechanism / process, we should disposition this PR the same as other approaches by excluding it from the \"base\" spec. It could be defined behind a profile, or as an extension to the base by a companion I-D. \r\n\r\nI suggest we label this \"wontfix\".",
          "createdAt": "2024-05-07T19:31:17Z",
          "updatedAt": "2024-05-07T19:32:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85lFsUt",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-24T22:29:12Z",
          "updatedAt": "2023-10-24T22:29:12Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nThe CCDL below, provides a schema for removing Reference Values and/or Endorsed Values from a Verifier.\r\n```",
              "createdAt": "2023-10-24T22:29:12Z",
              "updatedAt": "2023-10-24T22:29:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85l08Gg",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T14:44:47Z",
          "updatedAt": "2023-11-01T14:44:47Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "Why call it `mval` if it means \"object\"? ",
              "createdAt": "2023-11-01T14:44:47Z",
              "updatedAt": "2023-11-01T14:44:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85l1DMH",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T14:58:44Z",
          "updatedAt": "2023-11-01T15:01:34Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The semantics are unclear. Does it mean if the `sub` statement (with authority `authorized-by`) matches a statement in the ACS, the object `mval` modifies the object statements for all the triples named in the `sub` statement? \r\n\r\nNote: If the goal is to replace the triple that matched, including the parts used for matching, then the object seems insufficient (as it needs to replace the environment / stateful environment). Alternatively, a two-step approach could work, where an x-triple removes the triple to be updated and a new triple is added. Note, this operation should be done atomically since the matching condition in the x-triple represents the state / justification for adding the updated triple. \r\nI'm generally concerned that applying an update will cause indeterminate behavior depending on the sequence in which these triples are applied because endorsement triples also depend on the ACS state. These triples might have to be re-processed in order to get the intended (correct) stateful outcome.",
              "createdAt": "2023-11-01T14:58:44Z",
              "updatedAt": "2023-11-01T15:01:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85l2YSh",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-01T18:01:54Z",
          "updatedAt": "2023-11-01T18:01:54Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "@nedmsmith : The goal of `$update-action-type-choice /= add` is NOT to remove anything from the Verifier, but to increment.\r\n\r\nHowever, as we are using a `common` `update-triple` for any Reference Value and Endorsed Value we  have two options:\r\n\r\n(a) Specify what is that is been updated by specifying the type - RefVal/EndVal/CondEnd pertaining to the Subject\r\n\r\n(b) Rely on the Supply Chain to exactly issue the same `triple` (like RefVal Triple) OR an EndVal Triple with the new `&(action: 3) => $update-action-type-choice` and \r\nindicate whether it is an `ADD` or a `REPLACE`\r\n\r\n**Choice:**\r\nOption-a: Verifier matches `subj` and based on the `type` attaches the new `triple` to the same `subj` \r\n\r\nOption - b: is `Neater` but implies modifying every triple where we need an update, to set the action\r\n\r\nI would request we focus on the `intent` of the action and then agree whether to go with option `a` or option `b`\r\n\r\n",
              "createdAt": "2023-11-01T18:01:54Z",
              "updatedAt": "2023-11-01T18:01:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85l_bNh",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-02T19:53:59Z",
          "updatedAt": "2023-11-02T19:53:59Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": ">I would request we focus on the intent of the action and then agree whether to go with option a or option b\r\n\r\nMaybe this part of the discussion should happen in issue #171 since the conclusion would affect the PR definition.",
              "createdAt": "2023-11-02T19:53:59Z",
              "updatedAt": "2023-11-02T19:54:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85114Pg",
          "commit": {
            "abbreviatedOid": "b3ff139"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:42:50Z",
          "updatedAt": "2024-04-03T14:42:51Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "because that is triple speak? If not, that's a good question.",
              "createdAt": "2024-04-03T14:42:50Z",
              "updatedAt": "2024-04-03T14:42:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 174,
      "id": "PR_kwDOH6-tI85g5btf",
      "title": "MEC Endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/174",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The MEC-E part of #168 including a new record type for the conditions.",
      "createdAt": "2023-12-01T13:08:31Z",
      "updatedAt": "2023-12-06T15:57:13Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "only-mec",
      "headRefOid": "6424545e13a20cc804b7dee21f73f7cc7597ae84",
      "closedAt": "2023-12-06T15:57:09Z",
      "mergedAt": "2023-12-06T15:57:09Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d546b10160832e500a3db9e6cfa18e74ef55a384"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85o6EAJ",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-01T15:34:15Z",
          "updatedAt": "2023-12-01T15:34:16Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "typo:\r\n```suggestion\r\n  ? &(condition-triples: 11) =>\r\n```\r\n\r\nbut also: I am not sure why is this needed as a top-level triple?",
              "createdAt": "2023-12-01T15:34:15Z",
              "updatedAt": "2023-12-01T15:40:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85o6FsO",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-01T15:38:10Z",
          "updatedAt": "2023-12-01T15:38:10Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "IIRC we agreed this would be the other way round, i.e.: the condition expressed in terms of a bunch of stateful-environments, the \"actions\" as EMTs.",
              "createdAt": "2023-12-01T15:38:10Z",
              "updatedAt": "2023-12-01T15:38:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85o6F_b",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-01T15:38:53Z",
          "updatedAt": "2023-12-01T15:38:54Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "this needs to be explicitly added to the CDDL fragments' list to be visible",
              "createdAt": "2023-12-01T15:38:54Z",
              "updatedAt": "2023-12-01T15:38:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85o6HIr",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-01T15:41:28Z",
          "updatedAt": "2023-12-01T15:41:28Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "these two should be dropped",
              "createdAt": "2023-12-01T15:41:28Z",
              "updatedAt": "2023-12-01T15:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pVAng",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T09:40:52Z",
          "updatedAt": "2023-12-06T09:40:53Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "fixed in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/174/commits/b01b05f2fde707938d9c25814d3866fd500ecf9d",
              "createdAt": "2023-12-06T09:40:52Z",
              "updatedAt": "2023-12-06T09:40:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pVCy1",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T09:45:30Z",
          "updatedAt": "2023-12-06T09:45:31Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "addressed in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/174/commits/f553dd364fc1dea0e1663f183555c45e92c96103",
              "createdAt": "2023-12-06T09:45:31Z",
              "updatedAt": "2023-12-06T09:45:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pVDCU",
          "commit": {
            "abbreviatedOid": "1ddc942"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T09:46:03Z",
          "updatedAt": "2023-12-06T09:46:04Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "Maybe. Let's fix that nit in the next call.",
              "createdAt": "2023-12-06T09:46:03Z",
              "updatedAt": "2023-12-06T09:46:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pVHNy",
          "commit": {
            "abbreviatedOid": "c261262"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T09:54:01Z",
          "updatedAt": "2023-12-06T09:54:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "so I thought.... actually fixed in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/174/commits/c261262fcadb5c76e62b648a0d030cfeea80d19a",
              "createdAt": "2023-12-06T09:54:01Z",
              "updatedAt": "2023-12-06T09:54:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXX38",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:34:45Z",
          "updatedAt": "2023-12-06T14:34:45Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Would it be better to add this after Conditional Endorsement Triple?\r\nThis triple is a more complex version of that one, so describing the simpler triple first might help readers.\r\n\r\n(Mind you, if we are doing simplest first then CET should come before conditional-endorsement-series-triple.)",
              "createdAt": "2023-12-06T14:34:45Z",
              "updatedAt": "2023-12-06T14:48:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXa-v",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:40:09Z",
          "updatedAt": "2023-12-06T14:40:09Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "\ud83d\udc4d done in [ce64489](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/174/commits/ce644890719a18ad7759ee1449ef436dbed6bf42)",
              "createdAt": "2023-12-06T14:40:09Z",
              "updatedAt": "2023-12-06T14:40:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXbHG",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:40:22Z",
          "updatedAt": "2023-12-06T14:40:23Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n> \"IF accepted state matches all `cond` values, THEN every `endorsements` value is added to the accepted state\"\r\n```",
              "createdAt": "2023-12-06T14:40:23Z",
              "updatedAt": "2023-12-06T14:40:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXcT9",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:42:32Z",
          "updatedAt": "2023-12-06T14:42:32Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "good catch.  fixed in 6d01bbc",
              "createdAt": "2023-12-06T14:42:32Z",
              "updatedAt": "2023-12-06T14:42:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXcuE",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:43:15Z",
          "updatedAt": "2023-12-06T14:43:16Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I have a feeling that there might be some edge cases where a verifier needs the ability to use a more complex algorithm than topological sorting.\r\nWould it be better to make this a SHOULD?",
              "createdAt": "2023-12-06T14:43:15Z",
              "updatedAt": "2023-12-06T14:43:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXerF",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:45:20Z",
          "updatedAt": "2023-12-06T14:45:21Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "This note makes me think about a lot of different questions:\r\n* Is there a case where other conditions might partly describe the expected context?\r\n* What problems occur if the CoRIM author chooses to only partly describe the context?\r\n* Why is this triple different from other triples, for example conditional-endorsement-triple-record?",
              "createdAt": "2023-12-06T14:45:20Z",
              "updatedAt": "2023-12-06T14:45:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXgtw",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:47:05Z",
          "updatedAt": "2023-12-06T14:47:05Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n* A single MEC triple can be used to make an endorsement conditional on multiple environments across layers or in different modules.\r\n```",
              "createdAt": "2023-12-06T14:47:05Z",
              "updatedAt": "2023-12-06T14:47:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXkwy",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T14:53:40Z",
          "updatedAt": "2023-12-06T14:53:40Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "> This note makes me think about a lot of different questions:\r\n> \r\n> * Is there a case where other conditions might partly describe the expected context?\r\n> * What problems occur if the CoRIM author chooses to only partly describe the context?\r\n> * Why is this triple different from other triples, for example conditional-endorsement-triple-record?\r\nAgree 100% on your last point, we need to make edits to optimise and only put forward one triple, instead of these two which are effectively singular and plural instances of doing the same thing!\r\n",
              "createdAt": "2023-12-06T14:53:40Z",
              "updatedAt": "2023-12-06T14:53:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXrrd",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:04:20Z",
          "updatedAt": "2023-12-06T15:04:20Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "there must be no ambiguity in the processing rules.\r\nIf there are cases where topo-sorting is not the unique criterion (or a completely different criterion is used) we need to describe the steps clearly.",
              "createdAt": "2023-12-06T15:04:20Z",
              "updatedAt": "2023-12-06T15:04:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pXuNW",
          "commit": {
            "abbreviatedOid": "12d4d91"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:08:36Z",
          "updatedAt": "2023-12-06T15:08:37Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "> This note makes me think about a lot of different questions:\r\n> \r\n> * Is there a case where other conditions might partly describe the expected context?\r\n\r\nhmm, what kind of implicit matching are you thinking of?\r\n\r\n> * What problems occur if the CoRIM author chooses to only partly describe the context?\r\n\r\nYou'd get false positives.\r\n\r\n> * Why is this triple different from other triples, for example, conditional-endorsement-triple-record?\r\n\r\nThis is a superset of conditional-endorsement-triple-record. As such, it makes the other redundant, at a small increase in the serialisation cost.\r\n\r\nThe \"series\" one is a bit of a different beast: it does some sort of short-circuited OR, so in terms of condition-matching rules it's substantially different.\r\n\r\n\r\n\r\n",
              "createdAt": "2023-12-06T15:08:36Z",
              "updatedAt": "2023-12-06T15:08:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pX0Pk",
          "commit": {
            "abbreviatedOid": "1fdbe84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:18:45Z",
          "updatedAt": "2023-12-06T15:18:45Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n    [ + mec-endorsement-triple-record ]\r\n```",
              "createdAt": "2023-12-06T15:18:45Z",
              "updatedAt": "2023-12-06T15:18:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pX0be",
          "commit": {
            "abbreviatedOid": "1fdbe84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:19:06Z",
          "updatedAt": "2023-12-06T15:19:06Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "```suggestion\r\nmec-endorsement-triple-record = [\r\n```",
              "createdAt": "2023-12-06T15:19:06Z",
              "updatedAt": "2023-12-06T15:19:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pRHNh",
          "commit": {
            "abbreviatedOid": "1fdbe84"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-05T20:57:26Z",
          "updatedAt": "2023-12-06T15:22:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Until we resolve the discussion on grouping / appraisal context, the scope of the condition-triple-record is (possibly) ambiguous as the condition scope could, in principal, refer to EMTs from a different appraisal context from the context in which the action is to be applied.",
              "createdAt": "2023-12-05T20:57:26Z",
              "updatedAt": "2023-12-06T15:22:10Z"
            },
            {
              "originalPosition": 25,
              "body": "This explanation seems incomplete or incorrect.",
              "createdAt": "2023-12-05T21:03:28Z",
              "updatedAt": "2023-12-06T15:22:10Z"
            },
            {
              "originalPosition": 47,
              "body": "The implication of a scope that covers all grouping / appraisal contexts is the EMT expressions must have some aspect that is globally unique (at least within the expected scope).  EMT scope should be described as part of the EMT construction and not as a footnote to a particular triple construction.",
              "createdAt": "2023-12-05T21:09:03Z",
              "updatedAt": "2023-12-06T15:22:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pYFQt",
          "commit": {
            "abbreviatedOid": "c3fd39d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:43:18Z",
          "updatedAt": "2023-12-06T15:43:19Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n> \"IF accepted state matches all `conds` values, THEN every  entry in the `endorsements` is added to the accepted state\"\r\n```",
              "createdAt": "2023-12-06T15:43:19Z",
              "updatedAt": "2023-12-06T15:43:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85pYIlm",
          "commit": {
            "abbreviatedOid": "b01b05f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-06T15:45:28Z",
          "updatedAt": "2023-12-06T15:45:29Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "> The implication of a scope that covers all grouping / appraisal contexts is the EMT expressions must have some aspect that is globally unique (at least within the expected scope). EMT scope should be described as part of the EMT construction and not as a footnote to a particular triple construction.\r\n\r\nSee Issue https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/176",
              "createdAt": "2023-12-06T15:45:29Z",
              "updatedAt": "2023-12-06T15:45:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 175,
      "id": "PR_kwDOH6-tI85hQ6OV",
      "title": "Describe case where env-map has class & instance",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/175",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Enhance description of matching rules for `environment-map` to permit richer behavior when both `class` and `instance` fields are present.\r\nThis fixes issue #172 and is part of the solution to issue #173.\r\nIt also fixes #136 (removing the term \"group\") and #80.\r\nIt also fixes #175",
      "createdAt": "2023-12-06T06:56:36Z",
      "updatedAt": "2024-01-18T16:04:36Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8d7f85affabf990b0471f143f87c33ea615d2349",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "172-enhance-envmap-match",
      "headRefOid": "17c9723b5a0d2ab8fbf3fb642ed88405f179e03e",
      "closedAt": "2024-01-18T16:04:36Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Need to consider how this works with the `group` field.\r\nThis field is intended to be used by DAA, as described in https://www.ietf.org/id/draft-ietf-rats-daa-04.html ",
          "createdAt": "2023-12-06T16:02:14Z",
          "updatedAt": "2023-12-06T16:02:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR should apply to the entire section on reference values matching so that the section reads consistently. ",
          "createdAt": "2023-12-06T19:33:43Z",
          "updatedAt": "2023-12-06T19:33:43Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "> Need to consider how this works with the `group` field. This field is intended to be used by DAA, as described in https://www.ietf.org/id/draft-ietf-rats-daa-04.html\r\n\r\nI checked the DAA draft and as I understand it the DAA `group` field behaves in a similar way to the `instance` field (but is allocated differently). This change specifies that the Verifier should handle the `group` field in the same way as the `instance` field which matches that interpretation.",
          "createdAt": "2024-01-09T10:07:41Z",
          "updatedAt": "2024-01-09T10:07:41Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> This change specifies that the Verifier should handle the `group` field in the same way as the `instance` field which matches that interpretation.\r\n\r\nI looked for language that mentions 'group' (ps shouldn't we use back quotes to mean artifacts that are in the CoRIM schema - e.g., `group-id`) but couldn't find any. Maybe I missed it but unless the prose specifically mentions `group-id` the reader may be confused as to what is the processing behavior. Same goes for `instance-id` and `class-map`.",
          "createdAt": "2024-01-09T22:27:13Z",
          "updatedAt": "2024-01-09T22:27:13Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "> > This change specifies that the Verifier should handle the `group` field in the same way as the `instance` field which matches that interpretation.\r\n> \r\n> I looked for language that mentions 'group' (ps shouldn't we use back quotes to mean artifacts that are in the CoRIM schema - e.g., `group-id`) but couldn't find any. Maybe I missed it but unless the prose specifically mentions `group-id` the reader may be confused as to what is the processing behavior. Same goes for `instance-id` and `class-map`.\r\n\r\nThe text relating to binary comparison of fields within `environment-map` is this:\r\n> A stateful environment `environment-map` is a subset of an ACS entry `environment-map` if each field (for example `class`, `instance` etc.) which is present in the stateful environment `environment-map` is also present in the ACS entry, and the CBOR encoded field values in the stateful environment and ACS entry are binary identical.\r\n\r\nThis text applies the same processing to `class`, `instance` and other fields.",
          "createdAt": "2024-01-10T14:49:43Z",
          "updatedAt": "2024-01-10T14:49:43Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "The exact changes described in this PR were applied using PR #193",
          "createdAt": "2024-01-18T16:04:36Z",
          "updatedAt": "2024-01-18T16:04:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85pZsqv",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple",
          "createdAt": "2023-12-06T18:24:27Z",
          "updatedAt": "2023-12-06T19:32:25Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "\"compatible\" seems ambiguous. Isn't this goal to match environment-maps?",
              "createdAt": "2023-12-06T18:24:27Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 8,
              "body": "'candidate claims' also seems ambiguous without explanitory text.",
              "createdAt": "2023-12-06T18:26:08Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 15,
              "body": "Does it make sense to define 'matching' somewhere, that includes the meaning of 'binary identical', so that the spec can use 'match' terminology unambiguously without having to qualify it every time?\r\n\r\nNote that authority may also be part of the matching logic. For example, if a statement with matching logic included `authorized-by`, then the authority applies to the EMT (both the environment-map and the measurement-values-map). This topic is captured in issue #159 but has not been closed yet.\r\n\r\nGiven the definition of matching at line 1667, line 1664 may not add significantly to the definition.",
              "createdAt": "2023-12-06T18:31:28Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIf the Reference Value `environment-map` fields are a subset of or equal to the ACS `environment-map` then the reference `environment-map` matches.\r\n```",
              "createdAt": "2023-12-06T18:46:38Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Verifier first looks for entries in the Accepted Claims Set (ACS) with an\r\n```",
              "createdAt": "2023-12-06T18:51:29Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 1,
              "body": "This statement is inaccurate. Only the `reference-triple-record` and `coswid-triple-record` contain Reference Values. The coswid triple has multiple objects for a common subject, but it isn't a `measurement-map`. ",
              "createdAt": "2023-12-06T19:03:57Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 14,
              "body": "Lines 1659 - 1667 could be replaced with:\r\n```suggestion\r\nA Verifier searches the ACS for environments that match the reference environment in a Reference Value triple such as `reference-triple-record` or `coswid-triple-record`. The reference environment may contain a combination of environment fields (i.e., `class-map`, `instance-id`, `group-id`). If the Reference Value `environment-map` fields are the same or a subset of the ACS `environment-map` then the reference `environment-map` matches.\r\n```\r\n",
              "createdAt": "2023-12-06T19:17:06Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nPrior to matching, the Verifier SHOULD convert `environment-map` fields into a form which meets CBOR Core\r\n```\r\nAlternatively, this phrase could be moved before the matching phrase(s) as it captures matching pre-conditions.",
              "createdAt": "2023-12-06T19:20:57Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            },
            {
              "originalPosition": 22,
              "body": "The authorized-by behavior seems incorrect since it is a goal of the verifier to keep track of who said what. Removing claims isn't needed (desired). \r\n\r\nThe following replaces lines 1672 - 1677\r\n\r\n```suggestion\r\nIf the Reference Value contains an `authorized-by` field then the Verifier checks the ACS authority for the matching Reference Values to see if the `authorized-by` authority exists. If not, the Reference Values do not match.\r\n```\r\nAt line 1720 add:\r\n```\r\nIf the Reference Values match, the authority of the RVP is added to the matched claims in the ACS.\r\n```",
              "createdAt": "2023-12-06T19:28:48Z",
              "updatedAt": "2023-12-06T19:32:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qFpDj",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-13T15:09:20Z",
          "updatedAt": "2023-12-13T15:09:21Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Compatible is described two paragraphs later",
              "createdAt": "2023-12-13T15:09:20Z",
              "updatedAt": "2023-12-13T15:09:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qvnxy",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:13:24Z",
          "updatedAt": "2023-12-20T13:13:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The first proposed text deletes a lot of text and makes later paragraphs less clear. I am ok with the second proposed change.",
              "createdAt": "2023-12-20T13:13:24Z",
              "updatedAt": "2023-12-20T13:13:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qvxk6",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:36:50Z",
          "updatedAt": "2023-12-20T13:36:52Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "I will change Reference Value to stateful environment when fixing [#80](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/80)",
              "createdAt": "2023-12-20T13:36:51Z",
              "updatedAt": "2023-12-20T13:36:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qvykK",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:39:10Z",
          "updatedAt": "2023-12-20T13:39:12Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I have rewritten the text to remove the forward reference",
              "createdAt": "2023-12-20T13:39:11Z",
              "updatedAt": "2023-12-20T13:39:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qv5dv",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:53:14Z",
          "updatedAt": "2023-12-20T13:53:14Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Processing of `authorized-by` is described later in the section.",
              "createdAt": "2023-12-20T13:53:14Z",
              "updatedAt": "2023-12-20T13:53:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qv8Sv",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:59:20Z",
          "updatedAt": "2023-12-20T13:59:20Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I have rewritten this text",
              "createdAt": "2023-12-20T13:59:20Z",
              "updatedAt": "2023-12-20T13:59:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qv8nM",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T13:59:59Z",
          "updatedAt": "2023-12-20T13:59:59Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I rewrote this para with subset language similar to that provided above.",
              "createdAt": "2023-12-20T13:59:59Z",
              "updatedAt": "2023-12-20T13:59:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qv9cY",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T14:01:48Z",
          "updatedAt": "2023-12-20T14:01:48Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I have updated the text using text similar to that proposed",
              "createdAt": "2023-12-20T14:01:48Z",
              "updatedAt": "2023-12-20T14:01:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qwXVd",
          "commit": {
            "abbreviatedOid": "ec1ba6a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T14:55:28Z",
          "updatedAt": "2023-12-20T14:55:29Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "The verifier removes claims with incorrect authorized-by values from the candidate claims, which means that the stateful environment won't have anything to match against.\r\nThis text describes \"Reference Value\" with the meaning stateful environment, we should have a different subsection with the meaning of \"Reference Value\" you are using.",
              "createdAt": "2023-12-20T14:55:28Z",
              "updatedAt": "2023-12-20T14:55:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qx91P",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T18:50:36Z",
          "updatedAt": "2023-12-20T18:51:03Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nif each field (for example `class-map`, `instance-id` etc.) which is present in the\r\n```",
              "createdAt": "2023-12-20T18:50:36Z",
              "updatedAt": "2023-12-20T18:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rbAPn",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T14:27:19Z",
          "updatedAt": "2024-01-03T14:27:20Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The fields in `environment-map` are named `class`, `instance` and `group` so I think using these names is correct.",
              "createdAt": "2024-01-03T14:27:19Z",
              "updatedAt": "2024-01-03T14:27:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rb_d0",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T15:52:37Z",
          "updatedAt": "2024-01-03T15:52:38Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nAccepted Claims Set (ACS) where the stateful environment `environment-map` is a subset\r\n```",
              "createdAt": "2024-01-03T15:52:37Z",
              "updatedAt": "2024-01-03T15:52:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rc7Du",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T17:12:37Z",
          "updatedAt": "2024-01-03T18:36:45Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nIn `conditional-endorsement-triple-record`, `conditional-endorsement-series-triple-record`, and `mec-endorsement-triple-record` the `stateful-environment-record` combines `environment-map` with `measurement-map`.\r\n```",
              "createdAt": "2024-01-03T17:12:37Z",
              "updatedAt": "2024-01-03T18:39:12Z"
            },
            {
              "originalPosition": 43,
              "body": "Which triples does this refer to? I couldn't find any.\r\n\r\nAfter reviewing this again, I don't think lines 1661 - 1663 are needed. Esp. considering the preamble I added to the beginning.",
              "createdAt": "2024-01-03T17:14:14Z",
              "updatedAt": "2024-01-03T18:36:45Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nA conditional endorsement specifies the condition within the Accepted Claims Set (ACS) that must exist\r\nbefore the endorsement can be applied to the ACS.\r\nThe condition is either an `environment-map`, in the case of `endoresement-triple-record`,\r\nor `stateful-environment-record`, in the case of `conditional-endorsement-triple-record`, `conditional-endorsement-series-triple-record`, and `mec-endorsement-triple-record`. This section describes conditional matching given a `stateful-environment-record` as the condition.\r\n```",
              "createdAt": "2024-01-03T17:26:04Z",
              "updatedAt": "2024-01-03T18:41:40Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nA stateful environment `environment-map` is a subset of a candidate ACS entry\r\n```",
              "createdAt": "2024-01-03T17:46:06Z",
              "updatedAt": "2024-01-03T18:36:45Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nif each `environment-map` field (i.e., `class-map`, `instance-id`, or `group-id`) in the\r\n```",
              "createdAt": "2024-01-03T17:48:23Z",
              "updatedAt": "2024-01-03T18:36:45Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion \r\nstateful environment `environment-map` is also present in the candidate ACS entry,\r\n```",
              "createdAt": "2024-01-03T17:49:15Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nThe stateful environment `environment-map` fields must match a subset of the candidate ACS entry `environment-map` fields.\r\nIn other words, the candidate ACS entry `environment-map` fields can be a superset of the condition entry.\r\n```",
              "createdAt": "2024-01-03T18:04:46Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n`measurement-values-map` field within the candidate ACS stateful environment `measurement-values-map`.\r\n```",
              "createdAt": "2024-01-03T18:10:41Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nThe ACS stateful environment entry is compared against each of the candidate entries.\r\n```",
              "createdAt": "2024-01-03T18:12:12Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nThe Verifier initializes a temporary \"candidate\" entries variable where the `environment-map` fields from\r\nthe endorsement condition's `stateful-environment-record` is a subset of the `environment-map`\r\nfields in the ACS `environment-map` records.\r\n```",
              "createdAt": "2024-01-03T18:23:06Z",
              "updatedAt": "2024-01-05T11:28:05Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nIf there are no candidate entries then the endorsement triple containing the stateful environment does not match.\r\n```",
              "createdAt": "2024-01-03T18:25:48Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nand the CBOR encoded field values are binary identical.\r\n```",
              "createdAt": "2024-01-03T18:29:09Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nIf none of the candidate entries match\r\n```",
              "createdAt": "2024-01-03T18:33:33Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\nthe stateful environment entry, then the stateful environment condition does not match.\r\n```",
              "createdAt": "2024-01-03T18:34:21Z",
              "updatedAt": "2024-01-03T18:36:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rdgQN",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Various inline comments aimed at improving readability and flow.",
          "createdAt": "2024-01-03T18:46:19Z",
          "updatedAt": "2024-01-03T18:46:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85rocej",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T11:14:50Z",
          "updatedAt": "2024-01-05T11:14:51Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I think this will not render as you may expect :-)\r\n\r\n```suggestion\r\n> There were two interpretations of the meaning of `Reference Value` and the adopted meaning does not match the version in the current text. I will submit a further PR to replace most uses of \"Reference Value\" in section 5 with \"stateful environment\".  [^tracked-at] https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/178\r\n```",
              "createdAt": "2024-01-05T11:14:50Z",
              "updatedAt": "2024-01-05T11:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rodKP",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T11:17:13Z",
          "updatedAt": "2024-01-05T11:17:13Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "editorial note: we agreed to not insert arbitrary line breaks and have instead one sentence per line.",
              "createdAt": "2024-01-05T11:17:13Z",
              "updatedAt": "2024-01-05T11:19:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85roe0k",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T11:22:42Z",
          "updatedAt": "2024-01-05T11:22:42Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I agree with Ned's suggestion, but then L1655-1658 also need to be rearranged as part of creating the reader's context.",
              "createdAt": "2024-01-05T11:22:42Z",
              "updatedAt": "2024-01-05T11:22:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rofIl",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T11:23:45Z",
          "updatedAt": "2024-01-05T11:23:45Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "* US English\r\n* we reserve the reverse tick quoting for CDDL data items\r\n\r\n```suggestion\r\nThe Verifier initializes its temporary \"candidate\" entries variable with all entries in the\r\n```",
              "createdAt": "2024-01-05T11:23:45Z",
              "updatedAt": "2024-01-05T11:27:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rponc",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T14:35:28Z",
          "updatedAt": "2024-01-05T14:35:30Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I expect to delete this paragraph in the next change, happy to remove it in this one if you prefer",
              "createdAt": "2024-01-05T14:35:28Z",
              "updatedAt": "2024-01-05T14:35:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rpo_o",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T14:36:23Z",
          "updatedAt": "2024-01-05T14:36:26Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "ok",
              "createdAt": "2024-01-05T14:36:24Z",
              "updatedAt": "2024-01-05T14:36:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r447n",
          "commit": {
            "abbreviatedOid": "3e08bc5"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T21:43:25Z",
          "updatedAt": "2024-01-08T21:43:27Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "ok",
              "createdAt": "2024-01-08T21:43:26Z",
              "updatedAt": "2024-01-08T21:43:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFK4z",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:01:37Z",
          "updatedAt": "2024-01-10T14:01:38Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nTags/triples which match are accepted, and the Accepted Claims Set is extended using Endorsements from the accepted tags.\r\n```",
              "createdAt": "2024-01-10T14:01:38Z",
              "updatedAt": "2024-01-10T14:01:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFOV9",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:08:03Z",
          "updatedAt": "2024-01-10T14:08:03Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "@andrew-draper To my impression: This PR is still as Work In progress, if I read Line 1614: ",
              "createdAt": "2024-01-10T14:08:03Z",
              "updatedAt": "2024-01-10T14:08:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFP1Q",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:10:25Z",
          "updatedAt": "2024-01-10T14:10:25Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "```suggestion\r\nThe second step iterates through the `conditional-series-record`s in order, comparing each of them against the ACS, using a temporary stateful environment created from the `environment-map` in step one and the `refv` field.\r\n```",
              "createdAt": "2024-01-10T14:10:25Z",
              "updatedAt": "2024-01-10T14:10:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFT1V",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:16:30Z",
          "updatedAt": "2024-01-10T14:16:31Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "The whole second step needs to be clarified!\r\n\r\nI would attempt to rephrase it, see if you like it then take it\r\n\r\nThe second step iterates through the `conditional-series-record`s in order, comparing the `reference-value` in the record against the `reference-value` in the ACS. Once a match is detected, the matching procedure is terminated.",
              "createdAt": "2024-01-10T14:16:30Z",
              "updatedAt": "2024-01-10T14:17:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFZyT",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:27:49Z",
          "updatedAt": "2024-01-10T14:27:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"extension\" is a bit overloaded.  Can we use a synonym instead?  E.g., \"augmentation\".",
              "createdAt": "2024-01-10T14:27:49Z",
              "updatedAt": "2024-01-10T14:27:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFcf-",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:32:56Z",
          "updatedAt": "2024-01-10T14:32:57Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The title of the section has removed \"tags\".  The same should apply to the contents.\r\n\r\n```suggestion\r\nIn the Accepted Claims Set extension phase, a CoRIM Appraisal Context and an Evidence Appraisal Policy are used by the Verifier to find CoMID triples which match the ACS.\r\n```",
              "createdAt": "2024-01-10T14:32:56Z",
              "updatedAt": "2024-01-10T14:32:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFei1",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:36:49Z",
          "updatedAt": "2024-01-10T14:36:50Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "ditto\r\n\r\n```suggestion\r\nTriples which match are accepted and the ACS is extended with the associated endorsed values.\r\n```",
              "createdAt": "2024-01-10T14:36:49Z",
              "updatedAt": "2024-01-10T14:36:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFgRx",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:40:03Z",
          "updatedAt": "2024-01-10T14:40:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "not sure what _\"ACS extensions in that triple\"_ refers to",
              "createdAt": "2024-01-10T14:40:03Z",
              "updatedAt": "2024-01-10T14:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFhDx",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:41:29Z",
          "updatedAt": "2024-01-10T14:41:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Maybe:\r\n\r\n```suggestion\r\nAny triple within the CoRIM Appraisal Context that does not match the Accepted Claims Set does not contribute to ACS extensions.\r\n```",
              "createdAt": "2024-01-10T14:41:29Z",
              "updatedAt": "2024-01-10T14:41:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFh0N",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:42:54Z",
          "updatedAt": "2024-01-10T14:42:54Z",
          "comments": [
            {
              "originalPosition": 139,
              "body": "Line 1660 is not clear! What do you mean by `processed separately`",
              "createdAt": "2024-01-10T14:42:54Z",
              "updatedAt": "2024-01-10T14:42:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFh_3",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:43:15Z",
          "updatedAt": "2024-01-10T14:43:15Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "This just restates L1599, we can be drop it.",
              "createdAt": "2024-01-10T14:43:15Z",
              "updatedAt": "2024-01-10T14:43:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFjMQ",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:45:27Z",
          "updatedAt": "2024-01-10T14:45:27Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "```suggestion\r\nThe algorithm used to match the measurement values map code points is described in this section.\r\n```",
              "createdAt": "2024-01-10T14:45:27Z",
              "updatedAt": "2024-01-10T14:45:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFkpn",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:47:54Z",
          "updatedAt": "2024-01-10T14:47:54Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "```suggestion\r\nThis specification defines the matching algorithm for some codepoints and CBOR tagged values, which are described in sub-sections below. `Please add a reference to the sub-sections`\r\n```",
              "createdAt": "2024-01-10T14:47:54Z",
              "updatedAt": "2024-01-10T14:48:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFm7u",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:51:40Z",
          "updatedAt": "2024-01-10T14:51:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ok",
              "createdAt": "2024-01-10T14:51:41Z",
              "updatedAt": "2024-01-10T14:51:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFnXy",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:52:29Z",
          "updatedAt": "2024-01-10T14:52:31Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "thanks, missed that one",
              "createdAt": "2024-01-10T14:52:29Z",
              "updatedAt": "2024-01-10T14:52:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFnzc",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:53:16Z",
          "updatedAt": "2024-01-10T14:53:16Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "This is security-relevant, it can't be a SHOULD.  It has to be a well-defined MUST.  IIRC, I had previously added some text to that effect (i.e., to ensure topo-sorting).\r\n\r\n```suggestion\r\nThe Verifier SHOULD ensure that it processes triples in the correct order (for example by processing all triples which match against a particular ACS entry or environment after that ACS entry has been modified).\r\n```",
              "createdAt": "2024-01-10T14:53:16Z",
              "updatedAt": "2024-01-10T14:55:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFqXw",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:57:57Z",
          "updatedAt": "2024-01-10T14:57:57Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nA Reference Value Provider (RVP) publishes Reference Values that are matched against the Accepted Claims Set (ACS).\r\n```",
              "createdAt": "2024-01-10T14:57:57Z",
              "updatedAt": "2024-01-10T14:57:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFq7a",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:58:56Z",
          "updatedAt": "2024-01-10T14:58:58Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I think I prefer keeping this line and dropping the line before",
              "createdAt": "2024-01-10T14:58:57Z",
              "updatedAt": "2024-01-10T14:58:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFrV0",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:59:41Z",
          "updatedAt": "2024-01-10T14:59:43Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think this line is better than the one below, so would prefer to drop this one",
              "createdAt": "2024-01-10T14:59:41Z",
              "updatedAt": "2024-01-10T14:59:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFrYW",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:59:44Z",
          "updatedAt": "2024-01-10T14:59:47Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think this line is better than the one below, so would prefer to drop this one",
              "createdAt": "2024-01-10T14:59:45Z",
              "updatedAt": "2024-01-10T14:59:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFraJ",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:59:47Z",
          "updatedAt": "2024-01-10T14:59:50Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think this line is better than the one below, so would prefer to drop this one",
              "createdAt": "2024-01-10T14:59:48Z",
              "updatedAt": "2024-01-10T14:59:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFsIk",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T15:01:05Z",
          "updatedAt": "2024-01-10T15:01:07Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I think it is ok to make this MUST, but I expect the result of processing in the wrong order to be an attestation failure so this will fail safe.",
              "createdAt": "2024-01-10T15:01:06Z",
              "updatedAt": "2024-01-10T15:01:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sFsWI",
          "commit": {
            "abbreviatedOid": "e6ce2f7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T15:01:26Z",
          "updatedAt": "2024-01-10T15:01:26Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nThe Verifier compares each `reference-triple-record` against ACS entries as described in {{sec-match-one-se}}, using a `stateful-environment-record` created from the fields in `reference-triple-record`.\r\n```",
              "createdAt": "2024-01-10T15:01:26Z",
              "updatedAt": "2024-01-10T15:01:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sTXrr",
          "commit": {
            "abbreviatedOid": "89f865a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple edits.",
          "createdAt": "2024-01-11T23:31:40Z",
          "updatedAt": "2024-01-12T01:38:13Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nTriples interface with the ACS by either adding new ACS entries or by matching existing ACS entries before updating the ACS.\r\n```",
              "createdAt": "2024-01-11T23:31:40Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nIn the Accepted Claims Set (ACS) augmentation phase, the Appraisal Context and an Appraisal Policy are used by the Verifier to find CoMID triples that may augment the ACS.\r\n```",
              "createdAt": "2024-01-11T23:36:39Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 36,
              "body": "\"Appraisal Context\" isn't defined above as an upper case pronoun hence it shouldn't be capitalized here. Possibly, it should be added to the Verifier Abstraction section? Technically, the Verifier can accept supply chain inputs in other formats besides CoRIM, hence it is overly constrained to include \"CoRIM\". The description of Appraisal Context might assert that an internal representation of Appraisal Context will map Endorsement and Reference Value inputs to a CoMID schema representation for consistent verifier behavior.\r\nThe description of Appraisal Policy above should explain that it includes Appraisal Policy for Evidence (hence qualifying it with \"evidence\" here isn't necessary). ",
              "createdAt": "2024-01-11T23:49:11Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nTriples that specify an ACS matching condition will augment the ACS with Endorsements if the condition is met.\r\n```",
              "createdAt": "2024-01-11T23:59:53Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nEach triple is processed independently of other triples. However, the ACS state may change as a result of processing a triple.\r\n```",
              "createdAt": "2024-01-12T00:01:44Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nIf a triple condition does not match then the triple is discarded, and the Verifier processes the next triple.\r\n```",
              "createdAt": "2024-01-12T00:03:20Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nTriples either have an explicit matching condition, such as `stateful-environment-record`, or use an `environment-map` statement to select the ACS entries to be modified.\r\n```",
              "createdAt": "2024-01-12T00:11:34Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nThe order of triples processing is important. Processing a triple may result in ACS modifications that affect matching behavior for subsequently processed triples.\r\n```",
              "createdAt": "2024-01-12T00:22:10Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 21,
              "body": "Note: The Appraisal Context initialization and Evidence Collection sections don't adequately describe that Evidence updates the ACS. This should be explained before the sections describing ACS augmentation.",
              "createdAt": "2024-01-12T00:40:02Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nThe Verifier MUST ensure that a triple's matching condition is processed after any other triple that modifies or adds an ACS entry. Typically, the `environment-map` or `stateful-environment-record` are used to match ACS entries. The `reference-triple-record` uses both `environment-map` and `measurement-map` for matching ACS entries.\r\n```",
              "createdAt": "2024-01-12T00:52:52Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nVerifiers achieve consistent ACS state change by sorting the triples before processing, by repeating processing of some triples after ACS modifications or by other algorithms.\r\n```",
              "createdAt": "2024-01-12T00:55:18Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nReference Value Providers (RVP) publish Reference Values triples that are matched against ACS entries.\r\nReference Values may describe multiple acceptable states for Attesters; hence \"matching\" determines that Evidence (contained in the ACS) satisfies an appropriate subset of the available Reference Values.\r\nIf the appropriate subset matches, the authority of the RVP is added to the appropriate ACS entries.\r\n```",
              "createdAt": "2024-01-12T01:04:54Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\nThe Verifier compares each `reference-triple-record` against ACS entries as described in {{sec-match-one-se}}, where the `reference-triple-record` takes the place of a `stateful-environment-record`.\r\n```",
              "createdAt": "2024-01-12T01:07:40Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nIf all fields of the `reference-triple-record` match the ACS, then the Verifier MUST add the RVP authority to each matching ACS field.\r\n```",
              "createdAt": "2024-01-12T01:10:25Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nIf any `reference-triple-record` in the Reference Value triple does not match, the entire triple is ignored and the Appraisal Context is consulted to see if other Reference Values are appropriate.\r\nIf all remaining appropriate Reference Value triples have been exhausted without matching, then the ACS state is unchanged.\r\nIf a matching Reference Value triple contains the `authorized-by` field. The authority contained in this field is added to the ACS.\r\n```",
              "createdAt": "2024-01-12T01:15:27Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nAn Endorser may use CoMID tags to publish Conditional Endorsements, which are added to the Accepted Claims Set only if specified conditions are satisfied.\r\n```",
              "createdAt": "2024-01-12T01:21:58Z",
              "updatedAt": "2024-01-12T01:38:13Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nIf the stateful environment matches, then the Verifier MUST add an Endorsement entry to the ACS (see {{sec-add-to-acs}}).\r\n```",
              "createdAt": "2024-01-12T01:22:47Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 119,
              "body": "```suggestion\r\nThe Endorsement consists of the `measurement-values-map` field in the triple, plus the authority of the entity that signed the conditional endorsement triple.\r\n```",
              "createdAt": "2024-01-12T01:27:00Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nIf every stateful environment matches a corresponding ACS entry, then the Verifier MUST add an Endorsement entry to the ACS (see {{sec-add-to-acs}}) for each `endorsed-triple-record` in the `endorsements` field.\r\n```",
              "createdAt": "2024-01-12T01:31:24Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 133,
              "body": "```suggestion\r\nEach endorsement from the `endorsed-triple-record` contains the authority of the entity that signed the MEC endorsement triple.\r\n```",
              "createdAt": "2024-01-12T01:33:27Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\nIf one of the temporary records matches then the Verifier MUST add the `endv` Endorsement entry to the ACS.\r\n```",
              "createdAt": "2024-01-12T01:35:12Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            },
            {
              "originalPosition": 159,
              "body": "Is this line needed? It seems to restate the matching algorithm described above. A simple change to line 1653 seems sufficient to describe the nature of the endorsement value added.",
              "createdAt": "2024-01-12T01:37:16Z",
              "updatedAt": "2024-01-12T01:38:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85tE9TK",
          "commit": {
            "abbreviatedOid": "17c9723"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-18T15:47:43Z",
          "updatedAt": "2024-01-18T15:47:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 181,
      "id": "PR_kwDOH6-tI85h7W97",
      "title": "First initial Proposal for adding multiple measurement maps to a Reference Triple",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/181",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[WIP] Multiple Measurements in a Reference Triple",
      "createdAt": "2023-12-13T18:45:59Z",
      "updatedAt": "2024-08-28T15:40:00Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fd67b62321ec9b4259e436f06ea66db596b5f980",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "mutli-meas-per-env",
      "headRefOid": "5fe49df77aacdf4a622bd75d3985023240c171fb",
      "closedAt": "2024-08-28T15:39:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I will update examples for the PR to compile properly, once we have evaluated the `impact`",
          "createdAt": "2023-12-13T19:02:49Z",
          "updatedAt": "2023-12-13T19:02:49Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Are we revisiting this topic? If my memory does not fail me, didn't we go for \"only one object in the triple\" choosing simplicity over conciseness in this case?",
          "createdAt": "2023-12-14T15:25:54Z",
          "updatedAt": "2023-12-14T15:25:54Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are we revisiting this topic? If my memory does not fail me, didn't we go for \"only one object in the triple\" choosing simplicity over conciseness in this case?\r\n\r\n`Yes` we are revisiting this topic. I believe this will be beneficial, as many use cases exists today where this change will help the users of the specification. ",
          "createdAt": "2023-12-14T15:39:46Z",
          "updatedAt": "2023-12-14T15:39:46Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this PR as the alternative proposal is progressed via discussions on \r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189",
          "createdAt": "2024-01-10T13:57:23Z",
          "updatedAt": "2024-01-10T13:57:23Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "We're revisiting this as of 2024-08-14 so we can account for single evidence objects that measure multiple things, each with data type representations that fit with the standard codepoints in measurement-values-map.\r\n\r\nThe mkey use for \"subcomponents\" I think needs environment-map representation. There are different requirements here. Any inclusion of mkey should come with measurement-map multiplicity. If there's any multiplicity, then every element must have an mkey value, and they must be distinct.",
          "createdAt": "2024-08-14T15:57:57Z",
          "updatedAt": "2024-08-14T15:57:57Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by PR#257",
          "createdAt": "2024-08-28T15:39:59Z",
          "updatedAt": "2024-08-28T15:39:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 187,
      "id": "PR_kwDOH6-tI85iS94r",
      "title": "changed cryptokeys code point to 13",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/187",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "code point 12 is already used by concise-evidence spec for spdm indirect.",
      "createdAt": "2023-12-18T19:05:12Z",
      "updatedAt": "2023-12-18T19:27:31Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d546b10160832e500a3db9e6cfa18e74ef55a384",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "move-code-point-12",
      "headRefOid": "d0401864f8a798f1f4b437c68233403afde0f95e",
      "closedAt": "2023-12-18T19:27:25Z",
      "mergedAt": "2023-12-18T19:27:25Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "ec6b7da8b3b1ba6c9e636ab9b0049a66e410d495"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> in hindsight it'd have been better to offset the CoEv registration range\r\n\r\nAgree.",
          "createdAt": "2023-12-18T19:27:18Z",
          "updatedAt": "2023-12-18T19:27:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85qjBQy",
          "commit": {
            "abbreviatedOid": "d040186"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "in hindsight it'd have been better to offset the CoEv registration range",
          "createdAt": "2023-12-18T19:23:45Z",
          "updatedAt": "2023-12-18T19:23:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 188,
      "id": "PR_kwDOH6-tI85iekYZ",
      "title": "extend the use of tagged-bytes to identifiers",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/188",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #184",
      "createdAt": "2023-12-20T14:35:05Z",
      "updatedAt": "2024-01-08T16:30:40Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "ec6b7da8b3b1ba6c9e636ab9b0049a66e410d495",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "opaque-id",
      "headRefOid": "6fee7e39d2eaa8cf792443ede914bfcf53d8b71a",
      "closedAt": "2024-01-08T16:30:32Z",
      "mergedAt": "2024-01-08T16:30:32Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "7af90a6577564336571b4d8b6c585137ed21c02d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85qwRTm",
          "commit": {
            "abbreviatedOid": "50f2fe0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Minor .nit but LGTM!",
          "createdAt": "2023-12-20T14:43:14Z",
          "updatedAt": "2023-12-20T14:43:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85qww2p",
          "commit": {
            "abbreviatedOid": "f6b97ba"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-20T15:37:29Z",
          "updatedAt": "2023-12-20T15:37:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85qwxOo",
          "commit": {
            "abbreviatedOid": "f6b97ba"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-20T15:37:54Z",
          "updatedAt": "2023-12-20T15:37:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85qwynu",
          "commit": {
            "abbreviatedOid": "f6b97ba"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-20T15:39:20Z",
          "updatedAt": "2023-12-20T15:39:26Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Agreed to omit this suggestion.",
              "createdAt": "2023-12-20T15:39:21Z",
              "updatedAt": "2023-12-20T15:39:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qwzgh",
          "commit": {
            "abbreviatedOid": "f6b97ba"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T15:40:13Z",
          "updatedAt": "2023-12-20T15:40:14Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nWhen used as an identifier the responsible allocator entity SHOULD ensure uniqueness.\r\n```",
              "createdAt": "2023-12-20T15:40:13Z",
              "updatedAt": "2023-12-20T15:42:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qx9FB",
          "commit": {
            "abbreviatedOid": "b1f4810"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T18:48:17Z",
          "updatedAt": "2023-12-20T18:48:43Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "the scope of uniqueness should be defined.",
              "createdAt": "2023-12-20T18:48:17Z",
              "updatedAt": "2023-12-20T18:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qx-d-",
          "commit": {
            "abbreviatedOid": "b1f4810"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T18:52:33Z",
          "updatedAt": "2023-12-20T18:52:33Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "You mean something like:\r\n\r\n> _\"[...] ensure uniqueness within the usage scope.\"_",
              "createdAt": "2023-12-20T18:52:33Z",
              "updatedAt": "2023-12-20T18:58:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qyAzq",
          "commit": {
            "abbreviatedOid": "b1f4810"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T18:59:41Z",
          "updatedAt": "2023-12-20T19:02:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIts semantics are defined by the context in which it is found, and by the overarching CoRIM profile.\r\n```",
              "createdAt": "2023-12-20T18:59:41Z",
              "updatedAt": "2023-12-20T19:02:06Z"
            },
            {
              "originalPosition": 9,
              "body": "> You mean something like:\r\n> \r\n> > _\"[...] ensure uniqueness within the usage scope.\"_\r\n\r\nOK",
              "createdAt": "2023-12-20T19:01:34Z",
              "updatedAt": "2023-12-20T19:02:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qyL0J",
          "commit": {
            "abbreviatedOid": "269c024"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T19:34:18Z",
          "updatedAt": "2023-12-20T19:34:18Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nWhen used as an identifier the responsible allocator entity SHOULD ensure uniqueness within the usage scope.\r\n```",
              "createdAt": "2023-12-20T19:34:18Z",
              "updatedAt": "2023-12-20T19:34:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85qyMBw",
          "commit": {
            "abbreviatedOid": "b1f4810"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-20T19:34:59Z",
          "updatedAt": "2023-12-20T19:34:59Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "cool, see [9757398](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/188/commits/9757398627525052f2b0bf3d2dd2c36affd790a8)",
              "createdAt": "2023-12-20T19:34:59Z",
              "updatedAt": "2023-12-20T19:34:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85q2Oeq",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-12-21T09:43:38Z",
          "updatedAt": "2023-12-21T09:43:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85rbpXO",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T15:23:03Z",
          "updatedAt": "2024-01-03T15:23:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nWhen used as an identifier the responsible allocator entity SHOULD ensure global uniqueness.\r\n```",
              "createdAt": "2024-01-03T15:23:03Z",
              "updatedAt": "2024-01-03T15:23:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rb8IV",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T15:48:10Z",
          "updatedAt": "2024-01-03T15:48:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I don't think _global_ uniqueness is needed here.  It is sufficient that the tagged bytes unambiguously identify an entity within a given scope.  The same `560(h'01')` may refer to instance \"1\" or to class \"1\" without ambiguity.",
              "createdAt": "2024-01-03T15:48:11Z",
              "updatedAt": "2024-01-03T15:48:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rcskR",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T16:50:53Z",
          "updatedAt": "2024-01-03T16:50:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The other examples of `instance-id` have implied global uniqueness properties.  The motivation for adding `bytes` was that some felt ueid might not be big enough to ensure global uniqueness. The verifier doesn't have additional context to know what scope to apply to disambiguate scope-A:bytes from scope-B:bytes. We shouldn't overload class properties in `instance-id` since `class-id` is intended accommodate class-based identifiers. \r\n\r\nThe problem is there is one section for describing the semantics of the tag 560 () but it is used in all three `environment-map` options where each has different scope (class, instance, or group). 560 means different things depending on class, instance, or group context. Descriptive text should be specific to each context.",
              "createdAt": "2024-01-03T16:50:54Z",
              "updatedAt": "2024-01-03T16:57:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rcyys",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T16:59:59Z",
          "updatedAt": "2024-01-03T17:00:42Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nWhen used as an identifier the responsible allocator entity SHOULD ensure uniqueness within the context that it is used.\r\n```",
              "createdAt": "2024-01-03T17:00:00Z",
              "updatedAt": "2024-01-03T17:00:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rc50c",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T17:10:43Z",
          "updatedAt": "2024-01-03T17:10:43Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Clarifying why I do not agree with Andy's suggestion: the word _global_ to me implies _across contexts_, which is not what we should require from the allocator for the reason I've tried to describe above.\r\n\r\n> Descriptive text should be specific to each context.\r\n\r\nDo you have any suggestions?  ISTM that the exact semantics will be profile-specific, i.e., out-of-scope of base CoRIM -- except if DICE has anything to say about `#6.560`.",
              "createdAt": "2024-01-03T17:10:43Z",
              "updatedAt": "2024-01-03T17:10:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rdi8-",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T18:53:22Z",
          "updatedAt": "2024-01-03T18:53:22Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Discussion today resolved that 560 is to be interpreted within the CDDL context in which it occurs. This PR proposes 3 additional contexts from the current raw-value-group context. The description of the CDDL for each context should describe the expected properties.\r\n\r\nIn the case, of `environment-map` there are other issue #176 observes the lack of meaningful scoping discussion for each of the fields (class, instance, group). If we resolve #176, then this thread becomes mute.",
              "createdAt": "2024-01-03T18:53:22Z",
              "updatedAt": "2024-01-03T18:53:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85rd9-J",
          "commit": {
            "abbreviatedOid": "9757398"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T20:22:52Z",
          "updatedAt": "2024-01-03T20:22:52Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "> Discussion today resolved that 560 is to be interpreted within the CDDL context in which it occurs.\r\n\r\nYes\r\n\r\n> This PR proposes 3 additional contexts from the current raw-value-group context.\r\n\r\nI don't understand this.\r\n\r\n> The description of the CDDL for each context should describe the expected properties.\r\n\r\nYes\r\n\r\n> In the case, of `environment-map` there are other issue #176 observes the lack of meaningful scoping discussion for each of the fields (class, instance, group). If we resolve #176, then this thread becomes mute.\r\n\r\nWFM",
              "createdAt": "2024-01-03T20:22:52Z",
              "updatedAt": "2024-01-03T20:22:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r1XPb",
          "commit": {
            "abbreviatedOid": "c3f0dee"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T13:51:33Z",
          "updatedAt": "2024-01-08T13:51:33Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Please either add a reference to tagged bytes or describe profile specific behaviour dependency here!",
              "createdAt": "2024-01-08T13:51:33Z",
              "updatedAt": "2024-01-08T13:51:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r1XcH",
          "commit": {
            "abbreviatedOid": "c3f0dee"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T13:51:57Z",
          "updatedAt": "2024-01-08T13:51:57Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Similar entry is needed in the class identifier as well!",
              "createdAt": "2024-01-08T13:51:57Z",
              "updatedAt": "2024-01-08T13:51:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r1XeF",
          "commit": {
            "abbreviatedOid": "c3f0dee"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T13:52:01Z",
          "updatedAt": "2024-01-08T13:52:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "done in [6fee7e3](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/188/commits/6fee7e39d2eaa8cf792443ede914bfcf53d8b71a)",
              "createdAt": "2024-01-08T13:52:01Z",
              "updatedAt": "2024-01-08T13:52:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r1Xk9",
          "commit": {
            "abbreviatedOid": "c3f0dee"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-08T13:52:16Z",
          "updatedAt": "2024-01-08T13:52:16Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "see [6fee7e3](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/188/commits/6fee7e39d2eaa8cf792443ede914bfcf53d8b71a)",
              "createdAt": "2024-01-08T13:52:16Z",
              "updatedAt": "2024-01-08T13:52:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85r24Iz",
          "commit": {
            "abbreviatedOid": "6fee7e3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "We may still need to open an issue to document scope assumptions with used with `instance-id` and `group-id`.  #176 seems to be specific to `class-map`. ",
          "createdAt": "2024-01-08T16:27:50Z",
          "updatedAt": "2024-01-08T16:27:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 189,
      "id": "PR_kwDOH6-tI85ieyr0",
      "title": "add integrity registers",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #185",
      "createdAt": "2023-12-20T15:03:53Z",
      "updatedAt": "2024-02-02T17:03:22Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "32f7c64b04efc5b470bc10d56bbc5f512852f283",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "integrity-registers",
      "headRefOid": "57cec3a3cdff65ae132b8fa54a8ccd9f9a43df1c",
      "closedAt": "2024-02-02T17:03:19Z",
      "mergedAt": "2024-02-02T17:03:19Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "fe0d0d88e557fbd55b8d6110f49767e1ff7bc246"
      },
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Please add a section immediately below \"Comparison for cryptokeys entries\" which describes how a stateful environment (needs Reference Value) is matched against the ACS.",
          "createdAt": "2023-12-20T15:59:17Z",
          "updatedAt": "2023-12-20T18:21:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Please add a section immediately below \"Comparison for cryptokeys entries\" which describes how a stateful environment (nee Reference Value) is matched against the ACS.\r\n\r\ndone, see [260e909](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/260e909875d462a67c84c5cadc47bc5078d3b40f)",
          "createdAt": "2023-12-20T16:37:14Z",
          "updatedAt": "2023-12-20T16:37:14Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I have few concerns on the `way` we express the CDDL in the specification for `Integrity registers`\r\n\r\nI will state that so that we can consider this during our meeting tomorrow (10/Jan)\r\n\r\nI would prefer we keep the encoding `simple` as below:\r\n\r\n```\r\n$register-id-type-choice /= uint\r\n$register-id-type-choice /= text\r\n\r\nintegrity-register = {\r\n  &(id:0) => register-id-type-choice\r\n  &(digests:1) => [+digest]\r\n}\r\n\r\nmeasurement-values-map = non-empty<{\r\n  ? &(version: 0) => version-map\r\n  ? &(svn: 1) => svn-type-choice\r\n  ? &(digests: 2) => [ + digest ]\r\n  ? &(flags: 3) => flags-map\r\n  ? (\r\n      &(raw-value: 4) => $raw-value-type-choice,\r\n      ? &(raw-value-mask: 5) => raw-value-mask-type\r\n    )\r\n  ? &(mac-addr: 6) => mac-addr-type-choice\r\n  ? &(ip-addr: 7) =>  ip-addr-type-choice\r\n  ? &(serial-number: 8) => text\r\n  ? &(ueid: 9) => ueid-type\r\n  ? &(uuid: 10) => uuid-type\r\n  ? &(name: 11) => text\r\n  ? &(cryptokeys: 13) => [ + $crypto-key-type-choice ]\r\n  ? &(integrity-registers: 14) => [+integrity-register] \r\n   $$measurement-values-map-extension\r\n}>\r\n```\r\n\r\nWhat are the benefits:\r\n1. The expression allows flexibility in type expansion\r\n2. More clear and simple semantics\r\n3. This is more readable \r\n\r\nDisadvantages:\r\n1. May not be as optimised as the proposed solution in the PR\r\n\r\nFor the current PR proposal:\r\nThe flexibility of encoding a register-id as a compound type.\r\nEven if we express that it will be very hard to understand to the reader!\r\nHard to comprehend (at least to me for sure!)\r\n\r\nI would like to seek feedback on how other authors feel about this and then we decide as a team\r\n\r\n",
          "createdAt": "2024-01-09T10:43:35Z",
          "updatedAt": "2024-01-09T11:10:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I would like to seek feedback on how other authors feel about this and then we decide as a team\r\n\r\nhmm, we already had that discussion in #185.\r\n",
          "createdAt": "2024-01-09T11:19:01Z",
          "updatedAt": "2024-01-09T11:19:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I would prefer we keep the encoding simple as below:\r\n\r\nI don't get what about the PR isn't aligned with what is cited as the \"simple\" encoding. Isn't this restating what is in the PR?\r\n",
          "createdAt": "2024-01-09T18:30:22Z",
          "updatedAt": "2024-01-09T18:30:37Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I would prefer we keep the encoding simple as below:\r\n> \r\n> I don't get what about the PR isn't aligned with what is cited as the \"simple\" encoding. Isn't this restating what is in the PR?\r\n\r\nNo it is slightly different, if I understand correctly (@thomas-fossati can correct if this is mis-interpreted).  Please check the examples.\r\nIn the proposed PR, the code point is encoded as the Register ID. \r\n\r\nWhile I am suggesting an explicit allocation of register-id. The benefit is that the register-id can be a composite identity without losing clarity!",
          "createdAt": "2024-01-09T18:38:56Z",
          "updatedAt": "2024-01-09T18:40:56Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> No it is slightly different, if I understand correctly (@thomas-fossati can correct if this is mis-interpreted). Please check the examples. In the proposed PR, the code point is encoded as the Register ID.\r\n\r\nThere is no semantic difference.\r\n\r\nWhat your proposal does is re-encoding a map as an array of (k, v) tuples.\r\n\r\nEchoing Ned, I don't understand how that would result in a clearer, simpler and more readable representation.",
          "createdAt": "2024-01-09T18:49:16Z",
          "updatedAt": "2024-01-09T18:49:16Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> > I would like to seek feedback on how other authors feel about this and then we decide as a team\r\n> \r\n> hmm, we already had that discussion in #185.\r\n\r\n@yogeshbdeshpande, so you are saying that nesting two redundant quantities (1st layer [+integrity-register], and then 2nd layer [+digest]) is more simple and readable? I am having a hard time a.) ignoring the established consensus based on #185 and b.) to see the actual improvement here? Maybe I am missing something obvious, but I like the changes in this PR and am perplexed by the new suggestion (also using the suggestion feature in the files changed tab would have saved me some time spotting the differences in the CDDL :wink:)",
          "createdAt": "2024-01-09T18:52:24Z",
          "updatedAt": "2024-01-09T18:55:13Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > I would like to seek feedback on how other authors feel about this and then we decide as a team\r\n> > \r\n> > \r\n> > hmm, we already had that discussion in #185.\r\n> \r\n> @yogeshbdeshpande, so you are saying that nesting two redundant quantities (1st layer [+integrity-register], and then 2nd layer [+digest]) is more simple and readable? I am having a hard time a.) ignoring the established consensus based on #185 and b.) to see the actual improvement here? Maybe I am missing something obvious, but I like the changes in this PR and am perplexed by the new suggestion (also using the suggestion feature in the files changed tab would have saved me some times spotting the differences in the CDDL \ud83d\ude09)\r\n\r\nI do not see this as a two layer thing, why you say that?\r\n\r\nIt is an array representation with an Id and a Value. My point was that if one need to associate with Composite ID, instead of an int/text, then how this can be manifested in the existing PR ?",
          "createdAt": "2024-01-09T18:56:35Z",
          "updatedAt": "2024-01-09T18:56:35Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Okay. Let me rephrase my question.\r\n\r\nWhat problem do you solve with your suggestion?",
          "createdAt": "2024-01-09T19:01:40Z",
          "updatedAt": "2024-01-09T19:01:40Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> The benefit is that the register-id can be a composite identity without losing clarity!\r\n\r\n> My point was that if one need to associate with Composite ID\r\n\r\nWhat issue do think are you fixing?",
          "createdAt": "2024-01-09T19:04:17Z",
          "updatedAt": "2024-01-09T19:04:17Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > The benefit is that the register-id can be a composite identity without losing clarity!\r\n> \r\n> > My point was that if one need to associate with Composite ID\r\n> \r\n> What issue do think are you fixing?\r\n\r\nThe solution should be such that it should lend flexibility in the Identity we associate with the set of digests.\r\n\r\nI am not clear, how in the current proposal if we want to associate an ID (example a composite ID like a Class ID), can we do that neatly, is the question?",
          "createdAt": "2024-01-09T19:09:11Z",
          "updatedAt": "2024-01-09T19:09:11Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is an array representation with an Id and a Value. My point was that if one need to associate with Composite ID, instead of an int/text, then how this can be manifested in the existing PR ?\r\n\r\nOK, we complicate the serialisation to solve a problem that does not exist :-)\r\n",
          "createdAt": "2024-01-09T19:11:09Z",
          "updatedAt": "2024-01-09T19:11:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am not clear, how in the current proposal if we want to associate an ID (example a composite ID like a Class ID), can we do that neatly, is the question?\r\n\r\nyes.\r\n",
          "createdAt": "2024-01-09T19:16:09Z",
          "updatedAt": "2024-01-09T19:16:09Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > It is an array representation with an Id and a Value. My point was that if one need to associate with Composite ID, instead of an int/text, then how this can be manifested in the existing PR ?\r\n> \r\n> OK, we complicate the serialisation to solve a problem that does not exist :-)\r\n\r\nWhy is the serialisation complex? I do not agree! \r\n\r\nAs we are modelling Digests, it is a perfectly valid point to keep in mind future extensibility.  In-fact if we do not think properly, in future it may not be very easily usable, for all the possible use cases!",
          "createdAt": "2024-01-09T19:18:04Z",
          "updatedAt": "2024-01-09T19:18:04Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I am not clear, how in the current proposal if we want to associate an ID (example a composite ID like a Class ID), can we do that neatly, is the question?\r\n> \r\n> yes.\r\n\r\nok, can you please cite some examples, how the encoding will look like in a composite ID ?",
          "createdAt": "2024-01-09T19:19:12Z",
          "updatedAt": "2024-01-09T19:19:12Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > I am not clear, how in the current proposal if we want to associate an ID (example a composite ID like a Class ID), can we do that neatly, is the question?\r\n> > \r\n> > \r\n> > yes.\r\n> \r\n> ok, can you please cite some examples, how the encoding will look like in a composite ID ?\r\n\r\nIn CBOR you can do things like:\r\n\r\n```\r\nmap-with-map-keys = {\r\n { 1 => 2 } => [ \"pippo\", \"pluto\" ]\r\n}\r\n```",
          "createdAt": "2024-01-09T19:22:40Z",
          "updatedAt": "2024-01-09T19:22:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > > I am not clear, how in the current proposal if we want to associate an ID (example a composite ID like a Class ID), can we do that neatly, is the question?\r\n> > > \r\n> > > \r\n> > > yes.\r\n> > \r\n> > \r\n> > ok, can you please cite some examples, how the encoding will look like in a composite ID ?\r\n> \r\n> In CBOR you can do things like:\r\n> \r\n> ```\r\n> map-with-map-keys = {\r\n>  { 1 => 2 } => [ \"pippo\", \"pluto\" ]\r\n> }\r\n> ```\r\n\r\nBut again, this is for pure curiosity, since we are not solving that problem here.\r\n",
          "createdAt": "2024-01-09T19:23:28Z",
          "updatedAt": "2024-01-09T19:24:21Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> OK, we complicate the serialization to solve a problem that does not exist :-)\r\n\r\nI think I agree with Thomas. If there is a need to associate the digest with a composite ID (e.g., `class-map`) then use of the triple / stateful-environment already does that. In a real-world use case of a TPM, the TPM module is the environment and the array of `integrity-register` is the PCRs. TPM uses a scalar (0-15) to name the PCRs (not a composite identifier). Another possibility is TPM-NV is used for integrity in this case some set of NV indexes will be carved from the NV addresses as integrity registers. These might be numeric or given pet names by the spec that assigns the NV indexes. In which case, the pet name (tstr) or the index id (uint) is sufficient to identify the register. \r\n\r\n",
          "createdAt": "2024-01-09T19:23:43Z",
          "updatedAt": "2024-01-09T19:23:43Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> I do not see this as a two layer thing, why you say that?\r\n\r\nAnd to address that question: because this seems to introduce yet another quantity of one-or-more. There is already a one-or-more on the digest level. What do you gain from the added array? (other than bringing a mix of register-ids into a measurement-values-map instead of using separate measurement-values-map instances, which to me seems to go against the simple triple layout)\r\n\r\nI am also at a loss why we need more \"flexibility in type expansion\", but that is a separate confusion. Preemptively, I am suggesting that we try to clear anyone's confusion here before trying to fix confusion in calls, okay?",
          "createdAt": "2024-01-09T19:25:26Z",
          "updatedAt": "2024-01-09T19:25:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I do not see this as a two layer thing, why you say that?\r\n> \r\n> And to address that question: because this seems to introduce yet another quantity of one-or-more. There is already a one-or-more on the digest level. What do you gain from the added array? (other than bringing a mix of register-ids into a measurement-values-map instead of using separate measurement-values-map instances, which to me seems to go against the simple triple layout)\r\n> \r\n> I am also at a loss why we need more \"flexibility in type expansion\", but that is a separate confusion. Preemptively, I am suggesting that we try to clear anyone's confusion here before trying to fix confusion in calls, okay?\r\n\r\nI think the PR also proposes a two level array, it is just that it not clearly evident in the CDDL?\r\nWe have an array/multiplicity of integrity-registers using the +symbol, I have not suggested anything different, but more clear expression. I find the existing CDDL `terse` as far as understanding is concerned\r\n",
          "createdAt": "2024-01-09T23:32:30Z",
          "updatedAt": "2024-01-09T23:33:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @thomas-fossati @henkbirkholz and @nedmsmith been patient with me \r\n\r\nIn addition to above I see another issue with the changes proposed...\r\n\r\nThe encoding of the CDDL in the base specification relies on the Profile specific \r\nsettings. Specifically, on line 4, of integrity-registers.cddl an encoder will assign a tag/code point based on\r\nthe specific register-id settings. The Receiver cannot natively decide the\r\ncode point for digest, unless it is aware of the profile specific information, i.e. which profile to apply?\r\nand to expect what code point?\r\n\r\nThis is against the principles of Base Schema where always deterministic type setting is expected\r\nfor each type based on the well-known code point, given in the specification?\r\n\r\nAlso I am not sure that the order is guaranteed for each encoding, so not sure how this would work, at the receiver ?\r\n\r\nCan anyone help me clarify this aspect?",
          "createdAt": "2024-01-09T23:35:51Z",
          "updatedAt": "2024-01-09T23:35:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I find the existing CDDL `terse`\r\n\r\nAgree. The CDDL could make better use of optional tagging, e.g., [ + mytag: mycontent ]\r\nAfter looking at the CDDL again, its subtle that `integrity-registers` is an array of integrity register.\r\n```\r\nintegrity-registers = {\r\n  + integrity-register-id => [ + digest ]\r\n}\r\n```\r\nUsing maps to model an array seems unintuitive (though legal). \r\nI personally dislike CDDL convention that refers to \"[\", \"]\" as an \"array\". It should be called a \"record\".  That way *arrays* can be described as either maps or records having multiple members (using the \"*\" or \"+\" operators). ",
          "createdAt": "2024-01-09T23:58:46Z",
          "updatedAt": "2024-01-10T00:23:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am not sure that the order is guaranteed for each encoding\r\n\r\nThe intent is that order should not matter. Verifier considers the codepoint value for each entry and finds the matching codepoint in the reference value; if they are the same, then compare the digest array values. It may be ambiguous if the digest array (e.g.: `[ + digest ]`) can be compared byte-by-byte or if the parser walks each array entry. Maybe it's an implementation choice.",
          "createdAt": "2024-01-10T00:04:10Z",
          "updatedAt": "2024-01-10T00:04:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> each type based on the well-known code point\r\n\r\nThe goal is universal interoperability of Verifiers for appraisal (only) processing. Since the goal is to represent digests that belong to systems that are not defined by this spec, Verifiers are not expected to do additional processing that, for example, knows about which components are not supposed to be extended into PCR4. As long as the `integrity-register-id` is unique to the `integrity-registers` set, the verifier shouldn't need additional context to do the compare operation.",
          "createdAt": "2024-01-10T00:12:47Z",
          "updatedAt": "2024-01-10T00:12:47Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The encoding of the CDDL in the base specification relies on the Profile specific settings. Specifically, on line 4, of integrity-registers.cddl an encoder will assign a tag/code point based on the specific register-id settings. The Receiver cannot natively decide the code point for digest, unless it is aware of the profile specific information, i.e. which profile to apply? and to expect what code point?\r\n> \r\n> This is against the principles of Base Schema where always deterministic type setting is expected for each type based on the well-known code point, given in the specification?\r\n\r\ncodepoint 14 means \"integrity-registers\", I don't see anything _\"[a]gainst the principles of Base Schema always deterministic type setting is expected for each type based on the well-known code point, given in the specification\"_.\r\n\r\nNote that this is not different from other objects in our info model (e.g., the recently added \"tagged bytes\".)\r\n\r\n> Also I am not sure that the order is guaranteed for each encoding, so not sure how this would work, at the receiver ?\r\n\r\nIntegrity registers are explicitly named.  Order, i.e., implicit naming, is irrelevant.",
          "createdAt": "2024-01-10T08:06:23Z",
          "updatedAt": "2024-01-10T08:06:23Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the PR also proposes a two level array,\r\n\r\nNo, it doesn't.\r\n\r\n> it is just that it not clearly evident in the CDDL?\r\n\r\nNope.\r\n\r\nThe core of your proposal is to replace a representation that uses *one* native type (i.e., a map):\r\n\r\n```\r\na = {\r\n  + $key-type => $val-type\r\n}\r\n```\r\n\r\nwith one that reimplements the _same_ semantics using a two-level construction that serialises the associative array as a list of tuples:\r\n\r\n```\r\na = [\r\n  + [ k: $key-type, v: $val-type ]\r\n]\r\n```\r\n\r\n> We have an array/multiplicity of integrity-registers using the +symbol, I have not suggested anything different, but more clear expression.\r\n\r\nComparing the two constructions above I struggle to understand how the latter would be clearer than the former.\r\n\r\n> I find the existing CDDL `terse` as far as understanding is concerned\r\n\r\nIt's terse exactly because it uses a native (i.e., natural) type for representing the concept, which (to me) is a great plus.\r\n\r\n",
          "createdAt": "2024-01-10T10:42:41Z",
          "updatedAt": "2024-01-10T10:43:03Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > The encoding of the CDDL in the base specification relies on the Profile specific settings. Specifically, on line 4, of integrity-registers.cddl an encoder will assign a tag/code point based on the specific register-id settings. The Receiver cannot natively decide the code point for digest, unless it is aware of the profile specific information, i.e. which profile to apply? and to expect what code point?\r\n> > This is against the principles of Base Schema where always deterministic type setting is expected for each type based on the well-known code point, given in the specification?\r\n> \r\n> codepoint 14 means \"integrity-registers\", I don't see anything _\"[a]gainst the principles of Base Schema always deterministic type setting is expected for each type based on the well-known code point, given in the specification\"_.\r\n> \r\n> Note that this is not different from other objects in our info model (e.g., the recently added \"tagged bytes\".)\r\n> \r\n> > Also I am not sure that the order is guaranteed for each encoding, so not sure how this would work, at the receiver ?\r\n> \r\n> Integrity registers are explicitly named. Order, i.e., implicit naming, is irrelevant.\r\n\r\nI am not referring to Code Point 14, but to the code point of the digests. With the proposed changes in the PR, within the base schema, the encoding for [+digest] is dependent on the specific `profile` setting the [+digest].  With the tagged bytes, we always use a fixed tag (to encode the provided bytes from the user). I am not sure, how can one assume at the receiver side, whether the code point is encoded as an integer or a string (text) unless one has the profile information ?",
          "createdAt": "2024-01-10T12:21:57Z",
          "updatedAt": "2024-01-10T12:21:57Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [h]ow can one assume at the receiver side, whether the code point is encoded as an integer or a string (text) unless one has the profile information ?\r\n\r\nText string and unsigned integer are CBOR types.\r\n\r\n",
          "createdAt": "2024-01-10T12:27:55Z",
          "updatedAt": "2024-01-10T12:27:55Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I think the PR also proposes a two level array,\r\n> \r\n> No, it doesn't.\r\n> \r\n> > it is just that it not clearly evident in the CDDL?\r\n> \r\n> Nope.\r\n> \r\n> The core of your proposal is to replace a representation that uses _one_ native type (i.e., a map):\r\n> \r\n> ```\r\n> a = {\r\n>   + $key-type => $val-type\r\n> }\r\n> ```\r\n> \r\n> with one that reimplements the _same_ semantics using a two-level construction that serialises the associative array as a list of tuples:\r\n> \r\n> ```\r\n> a = [\r\n>   + [ k: $key-type, v: $val-type ]\r\n> ]\r\n> ```\r\n> \r\n> > We have an array/multiplicity of integrity-registers using the +symbol, I have not suggested anything different, but more clear expression.\r\n> \r\n> Comparing the two constructions above I struggle to understand how the latter would be clearer than the former.\r\n> \r\n> > I find the existing CDDL `terse` as far as understanding is concerned\r\n> \r\n> It's terse exactly because it uses a native (i.e., natural) type for representing the concept, which (to me) is a great plus.\r\n\r\nI think the correct representation for what I am proposing is like below:\r\n\r\n ```\r\n a = [\r\n   + { k: $key-type, v: $val-type }\r\n ]\r\n ```",
          "createdAt": "2024-01-10T13:18:53Z",
          "updatedAt": "2024-01-10T13:18:53Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "If one sees the same elements in CBOR Diag, it is not hugely different:\r\n\r\n```\r\n  / measurement-map / {\r\n        / comid.mval / 1 : {\r\n          / comid.integrity-registers / 14 : [\r\n            {\r\n\t\t\t   /id / 0, 26\r\n\t\t\t   / digests/, 1: [\r\n               [\r\n                / hash-alg-id / 1, / sha256 /\r\n                / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n              ],\r\n              [\r\n                / hash-alg-id / \"my-alg-id\",\r\n                / hash-value / h'deadbeef'\r\n              ]\r\n\t\t\t]\r\n            },\r\n            {\r\n\t\t\t   /id / 0, 2\r\n\t\t\t   / digests/, 1: [\r\n               [\r\n                / hash-alg-id / 1, / sha256 /\r\n                / hash-value / h'50aa341af9cb20a879440e58dd6581c14fa14bccafb75f488259262d6ea3a4d9'\r\n              ],\r\n              [\r\n                / hash-alg-id / \"my-alg-id\",\r\n                / hash-value / h'fefefafa'\r\n              ]\r\n\t\t\t]\r\n            }\r\n          ]\r\n        }\r\n      }\r\n```",
          "createdAt": "2024-01-10T13:20:21Z",
          "updatedAt": "2024-01-10T13:20:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the correct representation for what I am proposing is like below:\r\n> \r\n> ```\r\n> a = [\r\n>   + { k: $key-type, v: $val-type }\r\n> ]\r\n> ```\r\n\r\nthere is no material difference between the two, it's a logical tuple.",
          "createdAt": "2024-01-10T13:40:12Z",
          "updatedAt": "2024-01-10T13:40:12Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> If one sees the same elements in CBOR Diag, it is not hugely different:\r\n> \r\n> ```\r\n> [...]\r\n> ```\r\n\r\nYou have not managed to convince us that your last-minute change proposal is an improvement over what this PR (and the associated issue) put forward.\r\n\r\nI think that continuing this discussion to the last reply is not a productive use of our time and energy.",
          "createdAt": "2024-01-10T13:42:12Z",
          "updatedAt": "2024-01-10T13:42:12Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> It's terse exactly because it uses a native (i.e., natural) type for representing the concept, which (to me) is a great plus.\r\n\r\nThe `terse` CDDL is making me nervous and I would prefer to go with more clarity rather than optimising the CDDL.\r\n",
          "createdAt": "2024-01-10T13:54:30Z",
          "updatedAt": "2024-01-10T13:54:30Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> The `terse` CDDL\r\n\r\nThe diag file is helpful in visualizing the list of digests. Although, it would help to include a tstr codepoint example as in \"myIR\" : [ ... ] \r\n\r\nThis thread is turning into style differences which usually isn't productive.",
          "createdAt": "2024-01-10T16:11:03Z",
          "updatedAt": "2024-01-10T16:13:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The diag file is helpful in visualizing the list of digests. Although, it would help to include a tstr codepoint example as in \"myIR\" : [ ... ]\r\n\r\nGood point.  Done in [43c73dc](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/43c73dc84a80cb117e089a2570885543975b2edd)\r\n\r\n> This thread is turning into style differences which usually isn't productive.\r\n\r\nMassive \ud83d\udc4d \r\n",
          "createdAt": "2024-01-10T16:15:29Z",
          "updatedAt": "2024-01-10T16:15:29Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > The diag file is helpful in visualizing the list of digests. Although, it would help to include a tstr codepoint example as in \"myIR\" : [ ... ]\r\n> \r\n> Good point. Done in [43c73dc](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/43c73dc84a80cb117e089a2570885543975b2edd)\r\n> \r\n> > This thread is turning into style differences which usually isn't productive.\r\n> \r\n> Massive \ud83d\udc4d\r\n\r\nThis is super confusing, I guess, in one of the payload (CoMID ref-measurement-value) we can only have one type of Register ID?\r\nHow can we mix `uint` and `text` in the same diag?",
          "createdAt": "2024-01-10T16:50:58Z",
          "updatedAt": "2024-01-10T16:50:58Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > The diag file is helpful in visualizing the list of digests. Although, it would help to include a tstr codepoint example as in \"myIR\" : [ ... ]\r\n> > \r\n> > \r\n> > Good point. Done in [43c73dc](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/43c73dc84a80cb117e089a2570885543975b2edd)\r\n> > > This thread is turning into style differences which usually isn't productive.\r\n> > \r\n> > \r\n> > Massive \ud83d\udc4d\r\n> \r\n> This is super confusing, I guess, in one of the payload (CoMID ref-measurement-value) we can only have one type of Register ID? How can we mix `uint` and `text` in the same diag?\r\n\r\nSure in that case, I would produce two diags one  exemplifying the usage of  `text` and the other `uint`.\r\n\r\nI would not prefer to produce wrong examples, if mixing is not applicable",
          "createdAt": "2024-01-10T17:01:41Z",
          "updatedAt": "2024-01-10T17:01:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I would not prefer to produce wrong examples, if mixing is not applicable\r\n\r\nWrong example?  Where do we state that the keys have to be homogeneous?\r\n\r\n",
          "createdAt": "2024-01-10T17:09:45Z",
          "updatedAt": "2024-01-10T17:09:45Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I would not prefer to produce wrong examples, if mixing is not applicable\r\n> \r\n> Wrong example? Where do we state that the keys have to be homogeneous?\r\n\r\nI am yet to grapple with the fact both type of encoding in the same measurement-value-map is a possibility for a same `profile`",
          "createdAt": "2024-01-10T17:21:43Z",
          "updatedAt": "2024-01-10T17:21:43Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "hi @andrew-draper, you had comments at the very beginning, which I think I have addressed.  Could you have a look and confirm you are OK with the current wording?",
          "createdAt": "2024-01-25T09:14:57Z",
          "updatedAt": "2024-01-25T09:14:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85qx4DL",
          "commit": {
            "abbreviatedOid": "260e909"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-20T18:34:12Z",
          "updatedAt": "2023-12-20T18:34:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85riROY",
          "commit": {
            "abbreviatedOid": "260e909"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-04T13:20:11Z",
          "updatedAt": "2024-01-04T13:20:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85r5fyE",
          "commit": {
            "abbreviatedOid": "260e909"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-09T00:31:31Z",
          "updatedAt": "2024-01-09T00:31:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85sE_v6",
          "commit": {
            "abbreviatedOid": "260e909"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T13:39:40Z",
          "updatedAt": "2024-01-10T13:39:41Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n* `integrity-registers` (index 14):  Multiple registers with one or more banks containing measurements associated with the environment.  Described in {{sec-comid-integrity-registers}}.\r\n```",
              "createdAt": "2024-01-10T13:39:40Z",
              "updatedAt": "2024-01-10T13:39:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sG3BX",
          "commit": {
            "abbreviatedOid": "43c73dc"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:24:28Z",
          "updatedAt": "2024-01-10T17:24:29Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Should not this be \r\nintegrity-register-id-type-choice as per the convention:\r\nhttps://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#name-cddl-typographical-conventi",
              "createdAt": "2024-01-10T17:24:28Z",
              "updatedAt": "2024-01-10T17:24:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sG8kF",
          "commit": {
            "abbreviatedOid": "43c73dc"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:32:58Z",
          "updatedAt": "2024-01-10T17:32:59Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "done in [425d5f4](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/425d5f4189b32cb0876c315abb2912468aac041e)",
              "createdAt": "2024-01-10T17:32:59Z",
              "updatedAt": "2024-01-10T17:32:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sI8wT",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T22:11:53Z",
          "updatedAt": "2024-01-10T22:11:54Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIntegrity registers are a group of one or more named measurements.\r\n```",
              "createdAt": "2024-01-10T22:11:54Z",
              "updatedAt": "2024-01-10T22:14:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sJADv",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T22:20:33Z",
          "updatedAt": "2024-01-10T22:20:34Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nIntegrity registers can be used to model the PCRs in a TPM or vTPM ( in which case the identifier is the register index), or can model vendor-specific \"Integrity Registers\".\r\n```",
              "createdAt": "2024-01-10T22:20:34Z",
              "updatedAt": "2024-01-10T22:23:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sJA2W",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T22:23:21Z",
          "updatedAt": "2024-01-10T22:23:21Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "It is not clear from line 117 in the change whether we are using `This type` to refer to the identifier or Integrity register specifically. Hence I tried to word smith it to add better clarity, however feel free to improve it further, if need be!",
              "createdAt": "2024-01-10T22:23:21Z",
              "updatedAt": "2024-01-10T22:23:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sJCze",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T22:30:04Z",
          "updatedAt": "2024-01-10T22:30:04Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nFor each Integrity Register entry in Evidence, the Verifier will use the associated identifier to look up the matching Integrity Register entry in the Reference Value. It is expected that the `type` of identifier in the Evidence is same as the one set in the Reference Values, as dictated by the profile.  Otherwise the comparison is undefined behaviour.\r\n```",
              "createdAt": "2024-01-10T22:30:04Z",
              "updatedAt": "2024-01-10T22:30:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sJDFn",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Some more clarifications",
          "createdAt": "2024-01-10T22:31:10Z",
          "updatedAt": "2024-01-10T22:31:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85r_fkp",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T19:01:11Z",
          "updatedAt": "2024-01-10T22:34:29Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "The \"one or more associated digests\" phrase doesn't clarify whether a plurality of digests means that each digest is over the same object (similar to how `digests` claim is defined) or if each digest is for a different object. TPM assumes the former and I assumed the former, but it is best not to assume.",
              "createdAt": "2024-01-09T19:01:11Z",
              "updatedAt": "2024-01-10T22:34:29Z"
            },
            {
              "originalPosition": 18,
              "body": "Somewhere in this section it might make sense to describe verifier behavior. I believe it is somewhat like ASN.1 SETS (vs. SEQUENCE) in that an entry \"PCR5\" at position 0 in the list should match a reference value even if the reference placed \"PCR5\" at position n>0. \r\n\r\nMaybe it goes without saying that verifier will not do type translation. That is if evidence has an entry `'5' : [...]` and reference values has an entry `5 : [...]` there is no ascii-to-numeric / numeric-to-ascii translation. What do you think?",
              "createdAt": "2024-01-10T22:34:15Z",
              "updatedAt": "2024-01-10T22:35:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sO1xr",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T15:11:56Z",
          "updatedAt": "2024-01-11T15:11:57Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "reworded in [0daa574](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/0daa57453d485e1ad42dd2d338868d0b3d389fcd)",
              "createdAt": "2024-01-11T15:11:56Z",
              "updatedAt": "2024-01-11T15:11:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sO14F",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T15:12:07Z",
          "updatedAt": "2024-01-11T15:12:07Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "reworded in [0daa574](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/0daa57453d485e1ad42dd2d338868d0b3d389fcd)",
              "createdAt": "2024-01-11T15:12:07Z",
              "updatedAt": "2024-01-11T15:12:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sO1-n",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T15:12:19Z",
          "updatedAt": "2024-01-11T15:12:19Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "reworded in [0daa574](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/0daa57453d485e1ad42dd2d338868d0b3d389fcd)",
              "createdAt": "2024-01-11T15:12:19Z",
              "updatedAt": "2024-01-11T15:12:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sO2OC",
          "commit": {
            "abbreviatedOid": "425d5f4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T15:12:45Z",
          "updatedAt": "2024-01-11T15:12:46Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "reworded in [0daa574](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/0daa57453d485e1ad42dd2d338868d0b3d389fcd)",
              "createdAt": "2024-01-11T15:12:45Z",
              "updatedAt": "2024-01-11T15:12:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sO2V3",
          "commit": {
            "abbreviatedOid": "260e909"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-11T15:12:58Z",
          "updatedAt": "2024-01-11T15:12:59Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "reworded in [0daa574](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189/commits/0daa57453d485e1ad42dd2d338868d0b3d389fcd)",
              "createdAt": "2024-01-11T15:12:59Z",
              "updatedAt": "2024-01-11T15:12:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85sPWRx",
          "commit": {
            "abbreviatedOid": "0daa574"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2024-01-11T16:12:26Z",
          "updatedAt": "2024-01-11T16:12:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85sQYWi",
          "commit": {
            "abbreviatedOid": "0daa574"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-01-11T18:20:43Z",
          "updatedAt": "2024-01-11T18:20:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85uUmy9",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T11:02:12Z",
          "updatedAt": "2024-01-30T11:02:12Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nFor each Integrity Register entry in the Reference Value, the Verifier will use the associated identifier to look up the matching Integrity Register entry in Evidence.\r\n```",
              "createdAt": "2024-01-30T11:02:12Z",
              "updatedAt": "2024-01-30T11:02:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uUnBL",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T11:02:42Z",
          "updatedAt": "2024-01-30T11:02:43Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nNote that it is not required for all the entries in Evidence to be used during matching: the Reference Value could consist of a \"quote\" (in TPM parlance) of just a subset of the register space.\r\n```",
              "createdAt": "2024-01-30T11:02:43Z",
              "updatedAt": "2024-01-30T11:02:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uUok4",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T11:05:28Z",
          "updatedAt": "2024-01-30T11:05:28Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "For other types of measurement, the reference value chooses which values to compare. Can this comparison work the same way?\r\nDiffs below suggesting what the text would look like if this suggestion is adopted.",
              "createdAt": "2024-01-30T11:05:28Z",
              "updatedAt": "2024-01-30T11:05:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uUwFb",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T11:20:35Z",
          "updatedAt": "2024-01-30T11:20:35Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "> For other types of measurement, the reference value chooses which values to compare. Can this comparison work the same way?\r\n\r\nI guess the crucial point is whether we want the integrity registers to support \"quote\" semantics a la TPM, i.e., we allow evidence to be a user-defined subset of the complete state of the attester's IRs.  If so, evidence dictates the direction of matching.  If not, i.e., if we can assume that the quote is always _complete_, then we can flip the direction.",
              "createdAt": "2024-01-30T11:20:35Z",
              "updatedAt": "2024-01-30T11:20:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uYfYU",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T17:17:23Z",
          "updatedAt": "2024-01-30T17:17:23Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "The question is whether (a) the IR array should be considered an atomic measurement or (b) should each array member be atomic? If (b), then an IR as evidence could contain a superset of members contained in an RV array. The verifier should apply subset matching. If (a), then the matching semantic should be set equivalence. I don't feel strongly either way. If (a), then a second IR measurement can be used in evidence. However, if (b), the verifier would separate the IR into multiple IRs, and keep track of authority differences.",
              "createdAt": "2024-01-30T17:17:23Z",
              "updatedAt": "2024-01-30T17:17:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uhSFK",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T16:15:19Z",
          "updatedAt": "2024-01-31T16:15:19Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "Going back to our F2F discussion: *if* it can be assumed that a relying party cannot request a quote from the attester *independently* of the verifier - i.e., the RP cannot decide autonomously the geometry of the quote - then I am OK with @andrew-draper's proposed text.",
              "createdAt": "2024-01-31T16:15:19Z",
              "updatedAt": "2024-01-31T16:15:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uhe2C",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T16:34:10Z",
          "updatedAt": "2024-01-31T16:34:10Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Given the extensible semantics of the word \"matching\", I would recommend referencing {{sec-cmp-digests}} here instead of 2 sentences from now for the definition of \"matching [...] entry\".\r\n\r\nFor each Integrity Register entry `id => digests_{ref}` in the Reference Value, the Verifier will claim a \"match\" with Evidence only if the Evidence has an integrity register entry `id => digests_{ev}` and `digests_{ref}` compares positively with `digests_{ev}` using the method defined in {{sec-cmp-digests}}.",
              "createdAt": "2024-01-31T16:34:10Z",
              "updatedAt": "2024-01-31T16:41:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uidCY",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T18:24:26Z",
          "updatedAt": "2024-01-31T18:24:26Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "@nedmsmith : We would await a new version of suggested `text` from your side and then we can proceed here!",
              "createdAt": "2024-01-31T18:24:26Z",
              "updatedAt": "2024-01-31T18:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ujblM",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested texts",
          "createdAt": "2024-01-31T20:33:15Z",
          "updatedAt": "2024-01-31T22:56:27Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nNote that it is not required for all the Evidence entries in an Integrity Register array to be used during matching: Evidence could consist of a Target Environment's complete register space, while the Integrity Register array in Reference Values could consist of a subset of the Target Environment's register space.\r\n```",
              "createdAt": "2024-01-31T20:33:15Z",
              "updatedAt": "2024-01-31T22:56:27Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nWhen asserted as Evidence, the Verifier accepts each Integrity Register entry into the ACS.\r\nWhen asserted as Reference Values, all of the Integrity Register entries of the matching EMT MUST have a corresponding Integrity Register entry in the ACS Evidence.\r\nAdditionally, the Verifier will use the associated Integrity Register label (i.e.,`integrity-register-id-type-choice`) to match the label in a corresponding Integrity Register entry in the ACS.\r\nThe Verifier compares the labels which MUST exactly match.\r\nIf the labels match, then the Integrity Register digest arrays are compared (see {{sec-comid-integrity-registers}} and {{sec-comparison-for-digests-entries}}).\r\n```\r\nNote: {#sec-comparison-for-digets-entries} needs to be added.",
              "createdAt": "2024-01-31T22:54:40Z",
              "updatedAt": "2024-01-31T22:58:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uox-D",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T10:58:17Z",
          "updatedAt": "2024-02-01T10:58:18Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "I am ok, with the suggested text from Ned, as it makes the matching constraints more crisp and consistent. ",
              "createdAt": "2024-02-01T10:58:17Z",
              "updatedAt": "2024-02-01T10:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uo3Jw",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T11:09:11Z",
          "updatedAt": "2024-02-01T11:09:12Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "@nedmsmith : This text is not clear. We should keep it at a high level describing just the Evidence and Reference Value requirements. Bringing EMT and ACS into mix has made it more complicated, given that we are towards simplification, so this is too much detail without adding much value",
              "createdAt": "2024-02-01T11:09:12Z",
              "updatedAt": "2024-02-01T11:09:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uo51N",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T11:14:28Z",
          "updatedAt": "2024-02-01T11:14:28Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "I am happy with @andrew-draper suggested `text` here. It is also `sort` of aligned with RATS specification: As mentioned in * Section  8.3 of RFC 9334\r\n`8.3.  Reference Values: Reference Values used in appraisal procedures come from a Reference\r\n Value Provider and are then used by the Verifier to compare to\r\n Evidence.  Reference Values with matching Evidence produce acceptable\r\n Claims.  Additionally, an appraisal policy may play a role in\r\n determining the acceptance of Claims.`",
              "createdAt": "2024-02-01T11:14:28Z",
              "updatedAt": "2024-02-01T11:15:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85usRNQ",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T17:26:45Z",
          "updatedAt": "2024-02-01T17:26:45Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "> We should keep it at a high level\r\n\r\nWe already document the high level rules in earlier sections. It doesn't add value to repeat it here. The reader is potentially uncertain how a verifier will process the array of measurements as each measurement could be processed independently. Alternatively, the collection of measurements could be processed as a singleton measurement. The current text provides no insight or guidance that resolves the reader's confusion. ",
              "createdAt": "2024-02-01T17:26:45Z",
              "updatedAt": "2024-02-01T17:26:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85usaOx",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T17:44:16Z",
          "updatedAt": "2024-02-01T17:44:17Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "I quite liked the crisp nature of text @deeglaze added, so tried to modify her text slightly to specify more clarity on \r\nmatching semantics and attempted purely to see how this expresses. See https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/198/files",
              "createdAt": "2024-02-01T17:44:16Z",
              "updatedAt": "2024-02-01T17:44:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85usjOm",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T17:58:25Z",
          "updatedAt": "2024-02-01T17:58:26Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "```suggestion\r\n##### Comparison for Integrity Registers {#sec-cmp-integrity-registers}\r\nFor each Integrity Register entry in the Reference Value, identified as: id => digests_{ref}, the Verifier will claim a \"match\" with Evidence only if the Evidence has an Integrity Register entry, identified as: id => digests_{ev} such that the `id` in Evidence and Reference Value both have the same type and value and the digests matches using the method defined in {{sec-cmp-digests}}.\r\n\r\nIf no entry is found, the Reference Value does not match.\r\n\r\nNote that it is not required for all the Evidence entries in an Integrity Register array to be used during matching: Evidence could consist of a Target Environment's complete register space, while the Integrity Register array in Reference Values could consist of a subset of the Target Environment's register space.\r\n```",
              "createdAt": "2024-02-01T17:58:25Z",
              "updatedAt": "2024-02-01T17:58:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85usjvU",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T17:59:37Z",
          "updatedAt": "2024-02-01T17:59:37Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "@nedmsmith : See if this check is enough to un-block this ?",
              "createdAt": "2024-02-01T17:59:37Z",
              "updatedAt": "2024-02-01T17:59:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ussvl",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T18:15:02Z",
          "updatedAt": "2024-02-01T18:15:02Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "> > We should keep it at a high level\r\n> \r\n> We already document the high level rules in earlier sections. It doesn't add value to repeat it here. The reader is potentially uncertain how a verifier will process the array of measurements as each measurement could be processed independently. Alternatively, the collection of measurements could be processed as a singleton measurement. The current text provides no insight or guidance that resolves the reader's confusion.\r\n\r\n@nedmsmith : I do not think, we have so far introduced any section as to how `Contents` within Integrity Registers (within Evidence and Reference Values) are to be compared. All I was stating was that: We should not describe the loading of Evidence and  RefValue into ACS specific actions here  and just describe the direct matching semantics of the Registers. \r\n",
              "createdAt": "2024-02-01T18:15:02Z",
              "updatedAt": "2024-02-01T18:15:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85us-er",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T18:41:32Z",
          "updatedAt": "2024-02-01T18:41:32Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "> We should not describe the loading of Evidence and RefValue into ACS\r\n\r\nLine 1869 of my proposed edit could be removed based on this objective. Lines 1870-1873 are aimed at describing the direct matching semantics. Possibly there is better wording, but it seems to say what we want it to say.",
              "createdAt": "2024-02-01T18:41:32Z",
              "updatedAt": "2024-02-01T18:41:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85utF-B",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T18:49:03Z",
          "updatedAt": "2024-02-01T18:49:03Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "> id => digests_{ev}\r\n\r\nThis nomenclature is confusing as it doesn't refer to the actual CDDL. Substitute `id` with `integrity-register-id-type-choice` and ` => digests_{ev}` with ` => [ + digest ]` and it would be more clear. Alternatively, include the aliased terms in the CDDL definition. E.g.:\r\n```\r\nintegrity-registers = {\r\n  + id: integrity-register-id-type-choice => digests: [ + digest ]\r\n}\r\n```\r\nThen it would be OK to use `id` and `digests`. (but not sure this is correct CDDL)",
              "createdAt": "2024-02-01T18:49:03Z",
              "updatedAt": "2024-02-01T18:49:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85utM1u",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:00:03Z",
          "updatedAt": "2024-02-01T19:00:03Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": ">the Verifier will claim a \"match\" with Evidence only if the Evidence has an Integrity Register entry\r\n\r\nThis wording is confusing because \"Claim\" has special meaning but it is used in the verb form. Other parts of the document use \"match\" in the verb form already. Maybe it's better to stay with this convention. \r\n\r\nNevertheless, the matching semantic is misrepresented by the sentence. The Verifier doesn't match evidence per se, as it accepts it simply because the (authenticated) Attester asserted it. \r\n\r\nThe Ref Val is accepted only if it is a subset of the Evidence. \r\n\r\nThe question that needs to be answered is whether or not the Ref Val subset requirements are applied to the IR array too. I think the answer should be yes.\r\n\r\nThe text I supplied seems to work in terms of describing applying the subset matching semantics to the IR array.",
              "createdAt": "2024-02-01T19:00:03Z",
              "updatedAt": "2024-02-01T19:00:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uvBoL",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T22:40:31Z",
          "updatedAt": "2024-02-01T22:40:31Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "> > the Verifier will claim a \"match\" with Evidence only if the Evidence has an Integrity Register entry\r\n> \r\n> This wording is confusing because \"Claim\" has special meaning but it is used in the verb form. Other parts of the document use \"match\" in the verb form already. Maybe it's better to stay with this convention.\r\n> \r\n> Nevertheless, the matching semantic is misrepresented by the sentence. The Verifier doesn't match evidence per se, as it accepts it simply because the (authenticated) Attester asserted it.\r\n> \r\n> The Ref Val is accepted only if it is a subset of the Evidence.\r\n> \r\n> The question that needs to be answered is whether or not the Ref Val subset requirements are applied to the IR array too. I think the answer should be yes.\r\n> \r\n> The text I supplied seems to work in terms of describing applying the subset matching semantics to the IR array.\r\n\r\nI agree we should use the term `match` only not mis-use the word claim. ",
              "createdAt": "2024-02-01T22:40:31Z",
              "updatedAt": "2024-02-01T22:40:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uvD2j",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T22:42:57Z",
          "updatedAt": "2024-02-01T22:42:57Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "In order to progress this, I would prefer we split the PR into two. One which advances the data model, which we all have agreed. We can merge it as we have a consensus in the CDDL. This will un-block me.\r\n\r\nWe raise a new issue to describe the matching semantics for IR's. There we can discuss at length.\r\n\r\n",
              "createdAt": "2024-02-01T22:42:57Z",
              "updatedAt": "2024-02-01T22:42:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uvepF",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:49:44Z",
          "updatedAt": "2024-02-01T23:49:44Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": ">split the PR into two. One which advances the data model\r\n\r\n+1",
              "createdAt": "2024-02-01T23:49:44Z",
              "updatedAt": "2024-02-01T23:50:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uyNxL",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T08:30:00Z",
          "updatedAt": "2024-02-02T08:30:01Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "TL;DR the RP cannot decide autonomously the geometry of the quote and Andy's text is fine\r\n\r\nI've been raising the question to the TCG IWG. There was a clear answer: the RP does not meddle with the geometry of the quote. The only usage scenario where that implicitly could be the case is where Attester owner and RP owner are collapsed roles and the local configuration of an Attester is required by certain RPs. In these cases the RP owner (which is also the Attester Owner) would also take on the role of Endorser and produce a CoRIM for the Verifier to take care of \"the RP's needs\". So, in the end the requirement would be again be addressed by the de-facto Endorser and not the RP.",
              "createdAt": "2024-02-02T08:30:00Z",
              "updatedAt": "2024-02-02T08:30:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uyTz7",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T08:42:49Z",
          "updatedAt": "2024-02-02T08:42:50Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "> The question that needs to be answered is whether or not the Ref Val subset requirements are applied to the IR array too. I think the answer should be yes.\r\n\r\nGiven @henkbirkholz https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/189#discussion_r1475724199 I am OK too.\r\n\r\n> The text I supplied seems to work in terms of describing applying the subset matching semantics to the IR array.\r\n\r\nLGTM\r\n",
              "createdAt": "2024-02-02T08:42:49Z",
              "updatedAt": "2024-02-02T08:42:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uytv8",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T09:36:44Z",
          "updatedAt": "2024-02-02T09:36:44Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "I suggest we accept Andy's proposed text and merge this.  As suggested by Yogesh, we can track the refinement put forward by Ned in a separate PR.",
              "createdAt": "2024-02-02T09:36:44Z",
              "updatedAt": "2024-02-02T09:36:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uyuEh",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T09:37:27Z",
          "updatedAt": "2024-02-02T09:37:28Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "This works with me +1",
              "createdAt": "2024-02-02T09:37:27Z",
              "updatedAt": "2024-02-02T09:37:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uzaXg",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T11:04:57Z",
          "updatedAt": "2024-02-02T11:04:57Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "@nedmsmith : We have raised a new issue #199 to address your comments. We can discuss this in the incoming meeting. In the mean time, we intend to apply suggestions from @andrew-draper after clarification from @henkbirkholz  and acceptance from @thomas-fossati. I hope this is ok, with you.\r\n\r\nPlease reply with +1 if you agree so that we can un-block it today.",
              "createdAt": "2024-02-02T11:04:57Z",
              "updatedAt": "2024-02-02T11:05:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85u2NdA",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T16:52:23Z",
          "updatedAt": "2024-02-02T16:52:24Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "+1",
              "createdAt": "2024-02-02T16:52:24Z",
              "updatedAt": "2024-02-02T16:52:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85u2P7P",
          "commit": {
            "abbreviatedOid": "fa9ee53"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T16:54:15Z",
          "updatedAt": "2024-02-02T16:54:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 192,
      "id": "PR_kwDOH6-tI85kUt0d",
      "title": "[please ignore] enable diagnostic",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/192",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-17T15:06:08Z",
      "updatedAt": "2024-01-25T09:10:35Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "32f7c64b04efc5b470bc10d56bbc5f512852f283",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "investigate-failure",
      "headRefOid": "96003cf09f4bd064668e34d606e98bb0cec13c01",
      "closedAt": "2024-01-25T09:10:34Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 193,
      "id": "PR_kwDOH6-tI85kcQW4",
      "title": "Update description of triple processing, describe case where env-map has class & instance",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/193",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Enhance description of matching rules for environment-map to permit richer behavior when both class and instance fields are present.\r\nThis fixes #136 (removing the term \"group\"), #80 and #178.\r\n\r\nAdd description of case where env-map has class & instance.\r\nThis fixes issue #172 and is part of the solution to issue #173.\r\n\r\nThe changes made by this PR are an exact copy of the changes in PR #175 and branch 172-enhance-envmap-match, please refer to the discussion in that PR for details of the approvals.\r\n\r\n",
      "createdAt": "2024-01-18T16:02:43Z",
      "updatedAt": "2024-01-18T16:03:20Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "e7587a48c79eac85fa3042f0279b265e3b13d704",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "172-enhance-envmap-match-v2",
      "headRefOid": "e035b9f27272fc1ecbca2fac6314d7f25c8a0c38",
      "closedAt": "2024-01-18T16:03:20Z",
      "mergedAt": "2024-01-18T16:03:20Z",
      "mergedBy": "andrew-draper",
      "mergeCommit": {
        "oid": "daf987e2a2b30360e774988991fc84966bccdbdb"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 196,
      "id": "PR_kwDOH6-tI85lKJeA",
      "title": "editorial pass of \u00a75 up to 5.3.2",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/196",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* various reformatting\r\n* edits for clarity & conciseness\r\n* added missing \"Evidence Appraisal\" subsection\r\n* removed \"group\" from the glossary because it wasn't used",
      "createdAt": "2024-01-26T13:17:57Z",
      "updatedAt": "2024-03-04T21:31:12Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "daf987e2a2b30360e774988991fc84966bccdbdb",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "section-5-editorial-pass",
      "headRefOid": "541d4c3118230a2ef67646cbbcc0a61bb579103e",
      "closedAt": "2024-03-04T21:31:11Z",
      "mergedAt": "2024-03-04T21:31:11Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "40732d1932131305ac842f6396563369ffd13787"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "While doing the editorial pass, I realised I didn't get the intended scope of \u00a75.1 \"Verifier Abstraction\", at least given its current contents which can be categorised into two buckets:\r\n1. a restate of the last paragraph of \u00a75\r\n2. definitions of many useful terms\r\n\r\nThe former can probably be dropped (or merged with what we already have in \u00a75), while the latter needs to move to the terminology section (\u00a71.1)\r\n\r\nGiven that, we'd be left with an empty section :-)\r\n\r\nIf we want to leave it, then I guess we might want to put a picture similar to https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki/verification-schematic and add some prose around it.",
          "createdAt": "2024-01-26T13:44:43Z",
          "updatedAt": "2024-01-26T13:48:52Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Another observation I have is that this section should be the entry point of the document.  From here we would have references to the sections describing the data structures used.",
          "createdAt": "2024-01-26T14:04:18Z",
          "updatedAt": "2024-01-26T14:04:37Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Conditionally approved given line 1488 is reworded to distinguish it as a second example or possibly remove it for now.\r\n\r\nSee if [541d4c3](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/196/commits/541d4c3118230a2ef67646cbbcc0a61bb579103e) works for you.",
          "createdAt": "2024-03-04T17:05:57Z",
          "updatedAt": "2024-03-04T17:05:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85uBNmI",
          "commit": {
            "abbreviatedOid": "b204e0f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-26T14:01:36Z",
          "updatedAt": "2024-01-26T14:01:36Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nLater stages will further select the CoRIMs appropriate to the Evidence Appraisal stage.\r\n```",
              "createdAt": "2024-01-26T14:01:36Z",
              "updatedAt": "2024-01-26T14:01:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uHBsC",
          "commit": {
            "abbreviatedOid": "7bf7aed"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see comments inline",
          "createdAt": "2024-01-27T23:57:12Z",
          "updatedAt": "2024-01-28T00:00:05Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\nFor instance, in DICE, a proof of liveness is carried out on the final key in the certificate chain (a.k.a., the alias certificate).\r\n```",
              "createdAt": "2024-01-27T23:58:42Z",
              "updatedAt": "2024-01-28T00:00:05Z"
            },
            {
              "originalPosition": 213,
              "body": "Should this text be moved to the PSA profile?",
              "createdAt": "2024-01-27T23:59:33Z",
              "updatedAt": "2024-01-28T00:00:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uHyg0",
          "commit": {
            "abbreviatedOid": "7bf7aed"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-28T13:21:13Z",
          "updatedAt": "2024-01-28T13:21:13Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "RFC2119 terms are for interop requirements.  This one is an implementation choice instead.",
              "createdAt": "2024-01-28T13:21:13Z",
              "updatedAt": "2024-01-28T13:21:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uHyqr",
          "commit": {
            "abbreviatedOid": "7bf7aed"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-28T13:25:07Z",
          "updatedAt": "2024-01-28T13:25:08Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "I am not against dropping this.  However, it provides a concrete example of how different profiles may plug in their logic.",
              "createdAt": "2024-01-28T13:25:07Z",
              "updatedAt": "2024-01-28T13:25:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85uPVWz",
          "commit": {
            "abbreviatedOid": "be0d16a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-29T18:36:28Z",
          "updatedAt": "2024-01-29T18:37:35Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "Lines 1485-1487 appear to apply to a DICE example. Line 1488 doesn't begin with enough descriptive text to highlight it as a second example, vs. an extension to a DICE example. As a second example, it needs more development to make it understandable. I didn't want to spend too much time in this document reviewing content that applies to a different audience. Possibly, a reference to the psa document is sufficient for an interested reader to go there to obtain the well-described example?",
              "createdAt": "2024-01-29T18:36:28Z",
              "updatedAt": "2024-01-29T18:37:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIhTu",
          "commit": {
            "abbreviatedOid": "be0d16a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Conditionally approved given line 1488 is reworded to distinguish it as a second example or possibly remove it for now.",
          "createdAt": "2024-03-04T16:59:17Z",
          "updatedAt": "2024-03-04T16:59:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yIkok",
          "commit": {
            "abbreviatedOid": "be0d16a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:04:09Z",
          "updatedAt": "2024-03-04T17:04:10Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "```suggestion\r\nAs a second example, in PSA {{-psa-token}} the verification public key is looked up in the appraisal context using the `ueid` claim found in the PSA claims-set.\r\n```",
              "createdAt": "2024-03-04T17:04:09Z",
              "updatedAt": "2024-03-04T17:04:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIoTT",
          "commit": {
            "abbreviatedOid": "541d4c3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-04T17:11:36Z",
          "updatedAt": "2024-03-04T17:11:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yKo0Z",
          "commit": {
            "abbreviatedOid": "541d4c3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T21:29:59Z",
          "updatedAt": "2024-03-04T21:29:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 198,
      "id": "PR_kwDOH6-tI85luyLD",
      "title": "Corim integrity register new text",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/198",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-01T17:41:41Z",
      "updatedAt": "2024-02-01T19:01:16Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "daf987e2a2b30360e774988991fc84966bccdbdb",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "corim-integrity-register-new-text",
      "headRefOid": "79e766920ac456e11590518e3e56e5acf5ebfc17",
      "closedAt": "2024-02-01T17:57:35Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm confused why there are competing PRs. Can we decide to use #189 or #198 but not both?",
          "createdAt": "2024-02-01T17:52:59Z",
          "updatedAt": "2024-02-01T17:52:59Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm confused why there are competing PRs. Can we decide to use #189 or #198 but not both?\r\n\r\nNo intention to confuse anybody. This was just a draft for you to check how the text aligns. I will delete #198 immediately.\r\n\r\nBetter I add a suggestion in the main PR. But I wanted to avoid too many commennts, hence thought of aligning this way",
          "createdAt": "2024-02-01T17:55:43Z",
          "updatedAt": "2024-02-01T17:55:43Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Will be addressed by #189 ONLY hence deleting this!",
          "createdAt": "2024-02-01T17:57:35Z",
          "updatedAt": "2024-02-01T17:57:35Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 200,
      "id": "PR_kwDOH6-tI85l3C4O",
      "title": "integrity registers, misc wordsmithing ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/200",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Fixed erroneous wording related to TPMs and added clarity that cross-product equivalence should be applied before applying the `digests` comparison algorithm. Added reference to the cddl that defines what an \"identifier\" is.",
      "createdAt": "2024-02-02T17:41:31Z",
      "updatedAt": "2024-03-04T17:37:56Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fe0d0d88e557fbd55b8d6110f49767e1ff7bc246",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "199-address-integrity-register-comparison-comments",
      "headRefOid": "838dba0886082b8da8f770a68d259a328a30ccf7",
      "closedAt": "2024-03-04T16:53:11Z",
      "mergedAt": "2024-03-04T16:53:11Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "3abeb2ab669b564cef605cbd869c3acb115786f4"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "@Yogesh ***@***.***> \u2013 can you capture an issue describing the concern with the language?\r\n\r\nFrom: Yogesh Deshpande ***@***.***>\r\nReply-To: ietf-rats-wg/draft-ietf-rats-corim ***@***.***>\r\nDate: Monday, March 4, 2024 at 8:45\u202fAM\r\nTo: ietf-rats-wg/draft-ietf-rats-corim ***@***.***>\r\nCc: \"Smith, Ned\" ***@***.***>, Assign ***@***.***>\r\nSubject: Re: [ietf-rats-wg/draft-ietf-rats-corim] integrity registers, misc wordsmithing (PR #200)\r\n\r\n\r\n@yogeshbdeshpande commented on this pull request.\r\n\r\n________________________________\r\n\r\nIn draft-ietf-rats-corim.md<https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/200#discussion_r1511463621>:\r\n\r\n>  If no entry is found, the Reference Value does not match.\r\n\r\n-Instead, if an entry is found, the digest comparison proceeds as defined in {{sec-cmp-digests}}.\r\n\r\n-Note that it is not required for all the entries in Evidence to be used during matching: the Reference Value could consist of a \"quote\" (in TPM parlance) of just a subset of the register space.\r\n\r\n+Instead, if an entry is found, the digest comparison proceeds as defined in {{sec-cmp-digests}} after the cross-product equivalence has been found according to {{sec-comid-integrity-registers}}.\r\n\r\nIs it possible to simplify this language, before we merge?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/200#pullrequestreview-1914804708>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSGQ5FCYIJHOIOILQQDYWSQJBAVCNFSM6AAAAABCXBXJN6VHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTSMJUHAYDINZQHA>.\r\nYou are receiving this because you were assigned.Message ID: ***@***.***>\r\n",
          "createdAt": "2024-03-04T17:04:31Z",
          "updatedAt": "2024-03-04T17:04:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "See PR #209 \r\nNote that the referenced section uses \"cross-product\" to describe the process. I'm not changing that wording.",
          "createdAt": "2024-03-04T17:37:55Z",
          "updatedAt": "2024-03-04T17:37:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85u3Qlc",
          "commit": {
            "abbreviatedOid": "0cf1933"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-02-02T17:43:42Z",
          "updatedAt": "2024-02-02T17:43:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85u7Jhx",
          "commit": {
            "abbreviatedOid": "0cf1933"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM, modulo a bit more wordsmithing",
          "createdAt": "2024-02-03T11:09:46Z",
          "updatedAt": "2024-02-03T11:19:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nFor each Integrity Register entry in the Reference Value, the Verifier will use the associated identifier (i.e., `integrity-register-id-type-choice`) to look up the matching Integrity Register entry in Evidence.\r\n```",
              "createdAt": "2024-02-03T11:09:47Z",
              "updatedAt": "2024-02-03T11:19:19Z"
            },
            {
              "originalPosition": 9,
              "body": "also not sure about wording choices:\r\n* \"equivalence\", and\r\n* \"found\"\r\n```suggestion\r\nInstead, if an entry is found, the digest comparison proceeds as defined in {{sec-cmp-digests}} after the cross-product equivalence has been found according to {{sec-comid-integrity-registers}}.\r\n```",
              "createdAt": "2024-02-03T11:18:27Z",
              "updatedAt": "2024-02-03T11:19:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85vOgiM",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "accepted Thomas's suggestions",
          "createdAt": "2024-02-06T18:44:06Z",
          "updatedAt": "2024-02-06T18:44:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yIXVl",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-03-04T16:40:41Z",
          "updatedAt": "2024-03-04T16:40:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yIZnk",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T16:44:52Z",
          "updatedAt": "2024-03-04T16:44:52Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Is it possible to simplify this language, before we merge?",
              "createdAt": "2024-03-04T16:44:52Z",
              "updatedAt": "2024-03-04T16:44:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIdpJ",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T16:52:23Z",
          "updatedAt": "2024-03-04T16:52:23Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "is it necessary? Today is cut-off day. And I am okay enough with the proposal",
              "createdAt": "2024-03-04T16:52:23Z",
              "updatedAt": "2024-03-04T16:52:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIqeu",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:15:53Z",
          "updatedAt": "2024-03-04T17:15:53Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I find there is some disconnect in the statement!\r\n\r\nthe digest comparison proceeds as defined in {{}} after the cross-product equivalence of what?\r\n\r\nDo you want to say a set of entries or what ?",
              "createdAt": "2024-03-04T17:15:53Z",
              "updatedAt": "2024-03-04T17:15:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIvhH",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:26:29Z",
          "updatedAt": "2024-03-04T17:26:29Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Section {{sec-comid-integrity-registers}} describes the process. I didn't want to restate it here. Maybe just remove \"cross-product\"?",
              "createdAt": "2024-03-04T17:26:29Z",
              "updatedAt": "2024-03-04T17:26:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIwMv",
          "commit": {
            "abbreviatedOid": "838dba0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:27:54Z",
          "updatedAt": "2024-03-04T17:27:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Works for me! Creates confusion otherwise!",
              "createdAt": "2024-03-04T17:27:54Z",
              "updatedAt": "2024-03-04T17:27:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 201,
      "id": "PR_kwDOH6-tI85mED88",
      "title": "Theory of operation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/201",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "documentation"
      ],
      "body": "Added section 5.2 describing the verifier theory of operation",
      "createdAt": "2024-02-05T19:17:01Z",
      "updatedAt": "2024-07-03T14:35:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fe0d0d88e557fbd55b8d6110f49767e1ff7bc246",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "theory-of-operation",
      "headRefOid": "f14293f2b23065707a096211f2352721f62c9c47",
      "closedAt": "2024-07-03T14:35:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Regarding today's discussion about conditionals' semantics, if we assume that all claims are conjunctive, then the problem becomes HORNSAT, which has linear time complexity. If there are claims that represent disjunctions or negations of other claims, then we get into general propositional satisfiability. Given that I haven't seen any discussion of deeper interpretation of claims other than positive propositional literals, and a conditional-endorsement-triple's RHS is a measurement-values-map that is essentially a large conjunction of non-overlapping claims, then I can abide the proposed semantics.",
          "createdAt": "2024-02-07T16:45:08Z",
          "updatedAt": "2024-02-07T16:45:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">if we assume that all claims are conjunctive, then the problem becomes HORNSAT\r\n\r\nThe conditional series triple is possibly the most complex, which is a 2-step condition, but both steps are conjunctive. The idea of an update form that is a function could become problematic if the function somehow introduces negation or disjunction. But the anticipated use with identity-key and attest-key triples doesn't do this. At most, the function result is a conjunction that adds new claims to ACS. Most likely it produces a nil result. ",
          "createdAt": "2024-02-07T17:09:34Z",
          "updatedAt": "2024-02-07T17:11:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "superseded by #197 ",
          "createdAt": "2024-07-03T14:35:08Z",
          "updatedAt": "2024-07-03T14:35:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85vWA_2",
          "commit": {
            "abbreviatedOid": "b0ef2b5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T15:04:46Z",
          "updatedAt": "2024-02-07T15:04:46Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "sp",
              "createdAt": "2024-02-07T15:04:46Z",
              "updatedAt": "2024-02-07T15:04:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yIRJq",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2024-03-04T16:29:40Z",
          "updatedAt": "2024-03-04T16:29:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yzOPB",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-09T00:16:29Z",
          "updatedAt": "2024-03-09T00:16:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I'm a little stuck on the theory of operation for how we'll be able to practically sign our ACPI table data. Given that MMIO addresses are a part of it, and there's a good amount of variability across VM shapes\r\n\r\nFrom what I understand, since I'm not an expert in ACPI, we build asl files offline to a particular shape of machine. We don't want to rewrite asl files and run a compiler at VM creation time. We treat these asl binaries not as all the tables, but as table templates. At VM creation time, we use VM instance creation request data to rewrite very specific areas of the built templates as a way to configure that specific VM.\r\n\r\nThe EV_POST_CODE event that is measured into the TPM or CCEL is a digest of the tables after this template-substitution operation. We thus don't have a reference value that \"matches\" the digests in the measurement-values-map key 2 or tagged digest value comparison algorithm.\r\n\r\nWhat we _can_ do is require that the lead attester send the acpidump or specially-trimmed dump to find just the substituted positions for the verifier to plug into the template and compute the digest that one would expect for the ACPI EV_POST_CODE event.\r\n\r\nIf TCG were to have a profile for how to appraise TPM 2.0 quotes with their event logs, I don't imagine they'd have something this specific. I can't revise the official profile with a different profile for this supplemental ACPI table evidence. It seems like I'd be able to have \"authorized-by\" tag this extra ACPI table evidence, but not the TPM evidence.",
              "createdAt": "2024-03-09T00:16:30Z",
              "updatedAt": "2024-03-09T00:16:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yzWi3",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-09T01:35:53Z",
          "updatedAt": "2024-03-09T01:35:53Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I've discussed this more with the engineer working on ACPI tables, and we may be able to pre-generate and store the digests but not the tables since the combinatorial explosion of UART count, CPU count, and PCI root bus count is prohibitive space-wise when copying whole tables. This does get into the many allowable digests problem that Andy has been trying to solve though.",
              "createdAt": "2024-03-09T01:35:53Z",
              "updatedAt": "2024-03-09T01:35:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yzY4j",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-09T02:24:58Z",
          "updatedAt": "2024-03-09T02:24:59Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "The \"tables of measurements\" approach seems to resonate with what Chris Fenner has described in other forums. The basic approach for working with table of measurements is the `environment-map` refers to the table of measurements and the `measurement-values-map` contains a `digests` or `integrity-register` with the digest of the table of measurements. \r\n\r\nThe table of measurements seems to be something that is outside the spec however.  Though, it seems possible to use `integrity-register` as a way to represent the table of measurements in a reference value - at least at a high level it seems possible.",
              "createdAt": "2024-03-09T02:24:59Z",
              "updatedAt": "2024-03-09T02:24:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yzZR7",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-09T02:31:04Z",
          "updatedAt": "2024-03-09T02:31:05Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Another possibility to consider is the CCEL digest (which is dynamically generated on the Attester - if I'm not mistaken) could be reported as an `instance-id` in the `environment-map` of the evidence. This allows reference values that relate to measurments that are in a reference manifest to be matched without getting hung up on the CCEL digest not having a reference value. (I'm not close enough to the use case to know if the CCEL digest has security properties however). ",
              "createdAt": "2024-03-09T02:31:05Z",
              "updatedAt": "2024-03-09T02:31:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85y7_Uv",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-11T16:23:29Z",
          "updatedAt": "2024-03-11T16:23:29Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I'm unfamiliar with Chris Fenner's hashed table of measurements approach. Do you have a link?\r\n\r\nI'm still unclear how profiles for interpreting evidence into an ACS are meant to match up with profiles for reference values. It seems like there is no such thing as a profile for reference values, and that you have to use the same profile as the evidence, which leads to this problem. \"A profile allows the base CoRIM schema to be customised to fit a specific Attester\", not \"A profile allows the base CoRIM CDDL to be customised to fit a specific Attester, Reference Value Provider, or Endorser\".\r\n\r\nIf I'm understanding you correctly, an attester should only use class-id and optionally group in an environment to not conflict with an RVP's use of `instance` to delineate which of the allowed sets of measurements may match a particular family of target environments. That sounds like you still need the Attester profile to account for all the ways that an RVP wants to allow for variability in its CoRIMs, correct?\r\n\r\nSpecific PCR bank subsets correspond to boot layers kinda, so PCR 0 is the launch measurement, 1 and 7 (RTMR 0) for firmware, PCRs 2-6 in RTMR 1 for UEFI driver and host platform-specific measurements (e.g., GRUB2), PCRs 8-15 in RTMR 2 for static OS. In practice 8, 9 are used by GRUB2 to measure the kernel and kernel cmdline, so 10-15 are more for Linux IMA. If the kernel build comes from Canonical and the kernel modules come from NVIDIA, and other sources, then we have a very hard time combining expected reference values into signed RVs due to the way NVIDIA has chosen to architect their attestation verification service, specifically for driver reference values. You can't easily have an indexed event log signed by a single principle, even if the boot is sliced and diced to different environments for different sets of integrity registers.\r\n\r\nIdeally one would like the event log composition to be analyzed by the Verifier against a policy of which specific events are allowed, so that the combined replay into the PCR bank in the quote is acceptable. Again we have multiple approvers for pieces of a single measurement, just like in Issue#202. If the final value of an integrity register has to be signed by a single principle, then we're going to get into the habit of the Verifier itself signing these values as a composite measurement approver. Is that the expected outcome?",
              "createdAt": "2024-03-11T16:23:29Z",
              "updatedAt": "2024-03-11T19:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85y_yaS",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-11T21:13:32Z",
          "updatedAt": "2024-03-11T21:13:32Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": ">It seems like there is no such thing as a profile for reference values, and that you have to use the same profile as the evidence, which leads to this problem. \"A profile allows the base CoRIM schema to be customised to fit a specific Attester\", not \"A profile allows the base CoRIM CDDL to be customised to fit a specific Attester, Reference Value Provider, or Endorser\".\r\n\r\nCoRIM defines a profile, see `corim-map`. Likewise, evidence can have a profile too (see EAT `profile-label` and `spdm-toc-map` in https://trustedcomputinggroup.org/wp-content/uploads/TCG-DICE-Concise-Evidence-Binding-for-SPDM-Version-1.0-Revision-54_pub.pdf. \r\n\r\nThere could be a single profile for all of them with sections that are specific to a conceptual message or one profile could be a master profile that describes which other profiles are used for say evidence. If the CoRIM profile is selected as the master profile, then the statement \"...CoRIM CDDL to be customized to fit a specific Attester, Reference Value Provider, or Endorser\" could be reasonable.",
              "createdAt": "2024-03-11T21:13:32Z",
              "updatedAt": "2024-03-11T21:13:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85zAkyI",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-11T22:13:21Z",
          "updatedAt": "2024-03-11T22:13:21Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": ">If the final value of an integrity register has to be signed by a single principle, then we're going to get into the habit of the Verifier itself signing these values as a composite measurement approver. Is that the expected outcome?\r\n\r\nGiven the use case uses multiple verifiers (say one at each layer of the boot sequence), then each layer can be evaluated according to the `integrity-registers` measurement for that layer. \r\nIf each layer verifier uses a different key to assert the results, and given the results are asserted as a digest back into an `integrity-registers` structure. Then each layer is a principal that signs a partial attestation result (for each layer). A downstream / remote verifier can verify the intermediate layer results and arrive at an overall result (according to what the last Verifier / RP / use case expects). ",
              "createdAt": "2024-03-11T22:13:21Z",
              "updatedAt": "2024-03-11T22:18:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85zKFf6",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T18:36:18Z",
          "updatedAt": "2024-03-12T18:36:19Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "There are way too many measurements specified for the TPM PC Client platform firmware profile, and as such the measurements of binaries that themselves have build provenance signatures (like in-toto) can combine in a single PCR. This is why our current attestation verification service doesn't rely on expected PCRs and instead uses PCRs as an integrity check on the event log, and we evaluate each event in the event log against policy.",
              "createdAt": "2024-03-12T18:36:18Z",
              "updatedAt": "2024-03-12T18:36:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85zKQ6T",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T18:51:02Z",
          "updatedAt": "2024-03-12T18:51:03Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "That's essentially what I'm suggesting. \r\nGiven this longish thread, are there wording changes you would like to see in the above proposed text?",
              "createdAt": "2024-03-12T18:51:03Z",
              "updatedAt": "2024-03-12T18:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85zLGrZ",
          "commit": {
            "abbreviatedOid": "f14293f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T19:56:48Z",
          "updatedAt": "2024-03-12T19:56:48Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Remove the term until it's used somewhere. There are no other uses of the term \"reference state\" and the definition that it means \"various alternative states of a Target Environment\" doesn't match up with what I understand what a CoRIM can represent. Are all these varieties only expressible within separate tags? The term is hard to interpret on its own.",
              "createdAt": "2024-03-12T19:56:48Z",
              "updatedAt": "2024-03-12T19:56:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 203,
      "id": "PR_kwDOH6-tI85mph0-",
      "title": "Assign tag for digests",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/203",
      "state": "CLOSED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #154 notes that there is no tag assigned for a digests measurement when it appears at a local codepoint (for example at measurement-values-map codepoint -42).\r\n\r\nThis diff allocates the next available codepoint to inform the verifier that it should use the digests type.",
      "createdAt": "2024-02-12T15:31:58Z",
      "updatedAt": "2024-07-03T14:37:42Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fe0d0d88e557fbd55b8d6110f49767e1ff7bc246",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "154-assign-tag-for-digest",
      "headRefOid": "985723adcba5a837bbe30c50c8dfd1e64b57dbed",
      "closedAt": "2024-07-03T14:37:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am afraid I don't understand the goal of this PR. The issue too is quite cryptic.\r\n\r\nThere are 3 ways to disambiguate semantics of a right-hand-side (RHS) expression. Profiles, code points (LHS), CBOR tags (RHS). Profiles, code points, and CBOR tags all have vendor-specific alternatives, that if used, require vendor-specific updates to Verifiers. Given the goal of a universal verifier is to avoid vendor-specific updates, standard profiles (e.g., DICE / base CoMID), positive code points, and standard CBOR tags `#6.<0..32767>` must be used.\r\n\r\nA while back we argued ourselves out of `[ + measurement-values-map ]` multiplicity. However, if there is a need for multiple measurements of the same type e.g., `digests`. There are 4 ways to do that. \r\n(1) multiple triple entries where the `environment-map` is repeated for each different `measurement-map`.\r\n(2) use multiple but different code points.\r\n(3) define a new measurement type that includes multiplicity on the RHS i.e., `[ + RHS ]`, e.g., `integrity-registers`. \r\n(4) add back multiplicity around `measurement-values-map`.\r\n\r\nOption (1) seems to create bloat by repeating the `environment-map` multiple times. But verifiers might not preserve ordering, hence could get the entries reversed. So, not a realistic option.\r\nOption (4) still requires positional logic to disambiguate individual instances. Hence, some other form of index value is needed that is recognized by universal verifiers. So, not a realistic option.\r\nOption (3) requires an update to a standard for each new instance of the measurement. Flexibility could be an issue.\r\nOption (2) was discussed a few times and there seemed to be consensus for its use. But non-vendor specific CBOR tags are needed for the RHS to ensure a universal verifier can process multiples. Nevertheless, (unless I'm mistaken) the CDDL that defines the negative code points has to be defined, possibly via a profile? \r\nBut more generally, it could be defined by reserving a few LHS code points that expect `#6.<0..32767>(any)` or maybe `#6.<500..599>(any)` as the RHS value?  E.g.:\r\n```\r\nmeasurement-values-map = {\r\n    ? < -25..-1 > => #6.<500..599>(any)\r\n}\r\n```\r\n\r\n",
          "createdAt": "2024-02-17T19:48:07Z",
          "updatedAt": "2024-02-17T19:48:07Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> ```\r\n> measurement-values-map = {\r\n>     ? < -25..-1 > => #6.<500..599>(any)\r\n> }\r\n> ```\r\n\r\nEven so, you'd need a profile to tell the verifier what -25 and 599 mean.",
          "createdAt": "2024-02-19T12:55:34Z",
          "updatedAt": "2024-02-19T12:55:34Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The CBOR code point defines a standardized structure such as \u2018digests\u2019.\r\n\r\nSent from my iPhone\r\n\r\nOn Feb 19, 2024, at 4:55\u202fAM, Thomas Fossati ***@***.***> wrote:\r\n\r\n\ufeff\r\n\r\nmeasurement-values-map = {\r\n    ? < -25..-1 > => #6.<500..599>(any)\r\n}\r\n\r\n\r\nEven so, you'd need a profile to tell the verifier what -25 and 599 mean.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/203#issuecomment-1952395060>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSGB4WWWKMTLDLYZFE3YUNDVDAVCNFSM6AAAAABDE5VJ2KVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNJSGM4TKMBWGA>.\r\nYou are receiving this because your review was requested.Message ID: ***@***.***>\r\n",
          "createdAt": "2024-02-19T18:25:01Z",
          "updatedAt": "2024-02-19T18:25:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Await Ned's return and we progress then!",
          "createdAt": "2024-04-10T14:49:11Z",
          "updatedAt": "2024-04-10T14:49:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Section 1.3.8 contains a description of a singleton digest but also says `A measurement can be obtained using different hash algorithms. A digests-type can be used to collect multiple digest values obtained by applying different hash algorithms on the same input.` Arguably, this statement could be moved to section 3.1.4.1.5.2 measurement-values-map where the semantics of code point 2 are described because the multiple digests describe the same object. But possibly `integrity-registers` intended this semantic also? \r\n\r\nCode point 2 was defined with algorithm agility in mind, where some implementations may use one hash algorithm while others may use another. \r\n\r\nGiven there is another use case for multiple digests. Typically, the code point assignment documents the semantics of RHS Claim. Additionally, it might make sense for the second usage to require algorithm agility properties, in which case the structure might need to be an array of arrays? (e.g. `integrity-registers`).\r\n\r\nOtherwise, this PR becomes a request for an extensibility point on code point 2 which seems nuanced and subtle when taken in the context of all the other possible ways to extend corim.",
          "createdAt": "2024-05-01T18:09:22Z",
          "updatedAt": "2024-05-01T18:24:52Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper to file an issue discussing extension points and data types, that can be discussed before a new PR is created.",
          "createdAt": "2024-07-03T14:37:42Z",
          "updatedAt": "2024-07-03T14:37:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85wGObw",
          "commit": {
            "abbreviatedOid": "985723a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-02-14T15:58:24Z",
          "updatedAt": "2024-02-14T15:58:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85wGePP",
          "commit": {
            "abbreviatedOid": "985723a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T16:27:39Z",
          "updatedAt": "2024-02-16T19:01:02Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Shouldn't the semantics of the tagged digest be explained? Or if the semantics are the same, explain why both are needed?",
              "createdAt": "2024-02-14T16:27:39Z",
              "updatedAt": "2024-02-16T19:01:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wZ4Xo",
          "commit": {
            "abbreviatedOid": "985723a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-16T19:09:39Z",
          "updatedAt": "2024-02-16T19:09:45Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe `digests-type-choice` measurement is either an untagged array of `digest` or the same array tagged with the CBOR tag `#6.562`.\r\nIf a usage of `digests` differs from the semantics described for `#6.562`, then a different CBOR tag value MUST be used that defines the different semantics such that Verifiers can apply consistent processing behavior.\r\n```",
              "createdAt": "2024-02-16T19:09:39Z",
              "updatedAt": "2024-02-16T19:11:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wcpCO",
          "commit": {
            "abbreviatedOid": "985723a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I am afraid I don't understand the goal of this PR.\r\nThe issue too is quite cryptic.",
          "createdAt": "2024-02-17T12:12:05Z",
          "updatedAt": "2024-02-17T12:12:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 204,
      "id": "PR_kwDOH6-tI85m4z7B",
      "title": "Link to Profile section at first use",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/204",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The first use is in tagged bytes, but the meaningful first use is changed here not only to link to the fuller definition, but also to clarify that the interpretation cannot be arbitrary.\r\n\r\nGiven there are multiple references to \"base CoRIM schema\" in the profile definition, I've renamed the \"Full CoRIM CDDL\" appendix to more clearly denote the base schema concept.",
      "createdAt": "2024-02-14T17:50:35Z",
      "updatedAt": "2024-03-27T15:17:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "c6df0f1144d25f93b6c040c7cf5493e207c3b843",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "profile",
      "headRefOid": "6d466fa375b8316fa6cc1c0b85098e143b6c3e25",
      "closedAt": "2024-03-27T15:17:03Z",
      "mergedAt": "2024-03-27T15:17:03Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "f700c632d9a767fe71c40d2ca782a82f0c308c88"
      },
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "@andrew-draper this long jump without implied extra meaning is where I read into the arbitrariness.",
          "createdAt": "2024-02-14T18:19:25Z",
          "updatedAt": "2024-02-14T18:19:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85wHKWT",
          "commit": {
            "abbreviatedOid": "acba0ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Suggest adding line breaks.",
          "createdAt": "2024-02-14T17:57:52Z",
          "updatedAt": "2024-02-14T17:58:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n* A profile identifier, which is used to interpret the information contained in the enclosed tags.\r\nA profile allows the base CoRIM schema to be customised to fit a specific Attester, though it MUST NOT alter the base CoRIM schema's syntax and semantics.\r\nFor more, see {{sec-corim-profile-types}},\r\n```",
              "createdAt": "2024-02-14T17:57:52Z",
              "updatedAt": "2024-02-14T17:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85w3RYZ",
          "commit": {
            "abbreviatedOid": "24ade22"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-21T15:31:44Z",
          "updatedAt": "2024-02-21T15:31:44Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nA profile allows the base CoRIM schema to be customised to fit a specific Attester, though it MUST NOT alter the base CoRIM CDDL syntax and semantics.\r\n```",
              "createdAt": "2024-02-21T15:31:44Z",
              "updatedAt": "2024-02-21T15:31:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85w3VPY",
          "commit": {
            "abbreviatedOid": "24ade22"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-21T15:38:11Z",
          "updatedAt": "2024-02-21T15:38:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "fixing #208\r\n\r\nHow about this?\r\n\r\n```suggestion\r\nA profile allows the base CoRIM CDDL definition to be customized to fit a specific Attester by augmenting the base CDDL data definition via the specified extension points or by constraining types defined. A profile MUST NOT change the base CoRIM CDDL definition's semantics, which including not changing or overloading names and numbers registered at the IANA registries specified by this document.\r\n```",
              "createdAt": "2024-02-21T15:38:11Z",
              "updatedAt": "2024-02-21T15:38:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85w3WYB",
          "commit": {
            "abbreviatedOid": "24ade22"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-21T15:40:04Z",
          "updatedAt": "2024-02-21T15:40:04Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "#208 implies the need for more text changes for consistency. The suggestion above is also a proposal how that consistency can look like.",
              "createdAt": "2024-02-21T15:40:04Z",
              "updatedAt": "2024-02-21T15:40:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85zT9HL",
          "commit": {
            "abbreviatedOid": "f86155d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested edits.",
          "createdAt": "2024-03-13T16:04:53Z",
          "updatedAt": "2024-03-13T16:06:17Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nA profile MUST NOT change the base CoRIM CDDL definition's semantics, which includes not changing or overloading names and numbers registered at IANA registries used by this document.\r\n```",
              "createdAt": "2024-03-13T16:04:53Z",
              "updatedAt": "2024-03-13T16:06:17Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nFor more detail, see {{sec-corim-profile-types}},\r\n```",
              "createdAt": "2024-03-13T16:05:36Z",
              "updatedAt": "2024-03-13T16:06:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI851CyMP",
          "commit": {
            "abbreviatedOid": "6d466fa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-03-27T15:16:29Z",
          "updatedAt": "2024-03-27T15:16:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 205,
      "id": "PR_kwDOH6-tI85m40gi",
      "title": "Remove bad line break and add comma",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/205",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft guidelines say to keep sentences on an unbroken line. A list of three or more objects should have commas after each element for clearer parsability (Oxford comma).",
      "createdAt": "2024-02-14T17:52:30Z",
      "updatedAt": "2024-02-21T15:08:39Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fe0d0d88e557fbd55b8d6110f49767e1ff7bc246",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "oxfordcomma",
      "headRefOid": "543ee9f880ad95c337741afd53801a0d5afb1518",
      "closedAt": "2024-02-21T15:08:38Z",
      "mergedAt": "2024-02-21T15:08:38Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "891e60381777b1e377fc955e8d281e239887ac97"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85wHJuB",
          "commit": {
            "abbreviatedOid": "543ee9f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-14T17:56:20Z",
          "updatedAt": "2024-02-14T17:56:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85w2_nE",
          "commit": {
            "abbreviatedOid": "543ee9f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-21T15:06:47Z",
          "updatedAt": "2024-02-21T15:06:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85w3AkL",
          "commit": {
            "abbreviatedOid": "543ee9f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-21T15:08:23Z",
          "updatedAt": "2024-02-21T15:08:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 206,
      "id": "PR_kwDOH6-tI85m44gs",
      "title": "Clarify \"standard CoRIM type\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/206",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There's a base schema and there's a standard type, so we ought to define the separate concepts.",
      "createdAt": "2024-02-14T18:04:34Z",
      "updatedAt": "2024-03-06T15:26:39Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "2991dc2f899011f89593e078f9987686d086ee41",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "baseorstandard",
      "headRefOid": "5731911ac18a032c3f0ff4a99725d8392299c3ac",
      "closedAt": "2024-03-06T15:26:38Z",
      "mergedAt": "2024-03-06T15:26:38Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "1f9b06225d8825690a922ddb3b85685c99153505"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@Henk to raise another PR to add another section of linking profiles to extensibility.",
          "createdAt": "2024-02-21T15:27:41Z",
          "updatedAt": "2024-02-21T15:27:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85wHOr1",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Added relevant standards.",
          "createdAt": "2024-02-14T18:08:31Z",
          "updatedAt": "2024-02-14T18:09:05Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA \"standard CoRIM type\" references definitions in {{sec-corim-cddl}} and any further definitions in relevant standards or IANA registries.\r\n```",
              "createdAt": "2024-02-14T18:08:31Z",
              "updatedAt": "2024-02-14T18:09:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wHnD8",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T19:02:28Z",
          "updatedAt": "2024-02-14T19:02:28Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Is this assumed to be IETF standard, or is there a list of expected standards bodies that extensions could come from?",
              "createdAt": "2024-02-14T19:02:28Z",
              "updatedAt": "2024-02-14T19:02:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wHpP4",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T19:07:22Z",
          "updatedAt": "2024-02-14T19:07:22Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "There could be other I-D from IETF or even other standards organizations could extend. There are some control surfaces in terms of IANA registries for code points and CBOR tagging, but IANA doesn't constrain itself to IETF-only standards. \r\n\r\nI'm not entirely clear on why this kind of wording in needed in the first place however. Is the \"standard CoRIM type\" terminology used elsewhere in the document?",
              "createdAt": "2024-02-14T19:07:22Z",
              "updatedAt": "2024-02-14T19:07:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wHrn7",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T19:13:38Z",
          "updatedAt": "2024-02-14T19:13:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "It's used in the document without definition, so unless you want to replace the current use to something clearer, we should add a definition. There's a \"standard CoRIM extension\" later referencing CoTS, but that seems like a different notion of extension than the map codepoint extensions.",
              "createdAt": "2024-02-14T19:13:38Z",
              "updatedAt": "2024-02-14T19:13:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wHspo",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T19:16:23Z",
          "updatedAt": "2024-02-14T19:16:23Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I would expect that any number in IANA registries would link to the standard document that introduced it and gives it meaning, which is why I just used the IANA registry. That's the one authority that can assign numbers that are used in these extension points, no?",
              "createdAt": "2024-02-14T19:16:23Z",
              "updatedAt": "2024-02-14T19:16:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85wM7qA",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T10:47:48Z",
          "updatedAt": "2024-02-15T10:47:48Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I think \"standard CoRIM type\" is referring to the codepoints within `measurement-values-map` but this isn't very clear from the text.\r\n\r\nI wonder whether it would be better to say something along the lines of \"a profile SHALL not redefine anything in this document, but it can add to it\", which is what I think the current text is trying to say.",
              "createdAt": "2024-02-15T10:47:48Z",
              "updatedAt": "2024-02-15T10:47:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ycZNm",
          "commit": {
            "abbreviatedOid": "ed9892a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-06T15:17:42Z",
          "updatedAt": "2024-03-06T15:17:42Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-03-06T15:17:42Z",
              "updatedAt": "2024-03-06T15:17:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ycdau",
          "commit": {
            "abbreviatedOid": "89dd379"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-06T15:23:31Z",
          "updatedAt": "2024-03-06T15:23:31Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-03-06T15:23:31Z",
              "updatedAt": "2024-03-06T15:23:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85ycdn_",
          "commit": {
            "abbreviatedOid": "d5a3c8d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-06T15:23:48Z",
          "updatedAt": "2024-03-06T15:23:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 209,
      "id": "PR_kwDOH6-tI85onm99",
      "title": "Removed cross-product wording",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/209",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "removed \"the cross-product\" in section in PR #200",
      "createdAt": "2024-03-04T17:35:13Z",
      "updatedAt": "2024-03-04T17:41:09Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "3abeb2ab669b564cef605cbd869c3acb115786f4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "cross-product",
      "headRefOid": "8f2d1d116f7f203e036c981ac9249ad87db11bd3",
      "closedAt": "2024-03-04T17:41:01Z",
      "mergedAt": "2024-03-04T17:41:01Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "6a02e4641d8c95c82edba7b10b218c88e9452149"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yI07E",
          "commit": {
            "abbreviatedOid": "8f2d1d1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-03-04T17:37:47Z",
          "updatedAt": "2024-03-04T17:37:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 210,
      "id": "PR_kwDOH6-tI85opRtn",
      "title": "Nits -04",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/210",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-04T22:03:02Z",
      "updatedAt": "2024-03-06T15:07:51Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "40732d1932131305ac842f6396563369ffd13787",
      "headRepository": "cabo/draft-ietf-rats-corim",
      "headRefName": "nits-04",
      "headRefOid": "fae9f6656a141276a6279cd9e44e764dfabaaba3",
      "closedAt": "2024-03-06T15:07:51Z",
      "mergedAt": "2024-03-06T15:07:51Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "2991dc2f899011f89593e078f9987686d086ee41"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yK21K",
          "commit": {
            "abbreviatedOid": "c9582e2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-04T22:06:49Z",
          "updatedAt": "2024-03-04T22:06:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yM9XJ",
          "commit": {
            "abbreviatedOid": "fae9f66"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-03-05T06:57:47Z",
          "updatedAt": "2024-03-05T06:57:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yORPX",
          "commit": {
            "abbreviatedOid": "fae9f66"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!\r\nThanks!",
          "createdAt": "2024-03-05T09:22:54Z",
          "updatedAt": "2024-03-05T09:22:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 213,
      "id": "PR_kwDOH6-tI85o8r4i",
      "title": "Change usage rules for the Named Info registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/213",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-07T10:33:21Z",
      "updatedAt": "2024-03-27T15:22:34Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "f700c632d9a767fe71c40d2ca782a82f0c308c88",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "digest-fix",
      "headRefOid": "ddd1bcba3dd1af1e43a1639ad65c360ebf34bf00",
      "closedAt": "2024-03-27T15:22:34Z",
      "mergedAt": "2024-03-27T15:22:34Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "cf0d1ac034d85e7d76371cd78198ea9cd2589078"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yn6bY",
          "commit": {
            "abbreviatedOid": "0f345a0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-07T17:18:08Z",
          "updatedAt": "2024-03-08T16:05:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yn8Za",
          "commit": {
            "abbreviatedOid": "0f345a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-03-07T17:22:14Z",
          "updatedAt": "2024-03-08T16:05:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85ywbef",
          "commit": {
            "abbreviatedOid": "0f345a0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Is it the wrong one, though?",
          "createdAt": "2024-03-08T16:37:59Z",
          "updatedAt": "2024-03-08T16:37:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85ywsLz",
          "commit": {
            "abbreviatedOid": "90892b5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-08T17:05:41Z",
          "updatedAt": "2024-03-08T17:05:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nWhenever possible, using the `int` encoding is RECOMMENDED.\r\n```",
              "createdAt": "2024-03-08T17:05:41Z",
              "updatedAt": "2024-03-08T17:05:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yx4bq",
          "commit": {
            "abbreviatedOid": "ddd1bcb"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-08T19:21:51Z",
          "updatedAt": "2024-03-27T15:18:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85y7sIO",
          "commit": {
            "abbreviatedOid": "ddd1bcb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-11T16:01:10Z",
          "updatedAt": "2024-03-27T15:18:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "PR_kwDOH6-tI85o-btX",
      "title": "Clarify `[+digest]` semantic",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/215",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #214",
      "createdAt": "2024-03-07T14:47:45Z",
      "updatedAt": "2024-04-03T14:18:24Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "cf0d1ac034d85e7d76371cd78198ea9cd2589078",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "digests-semantic",
      "headRefOid": "f24ce278ca539ab45f2fed583274dbee378c721f",
      "closedAt": "2024-04-03T14:18:20Z",
      "mergedAt": "2024-04-03T14:18:20Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "8061f248df823e605e5bcc822ea2447f30ebb44f"
      },
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "There is text in 5.5.4.5.2 which is incompatible with this text.\r\nTo prevent downgrade attacks, the requirement is that all entries in the digest which are present in both reference value and ACS entry and whose hash algorithm is understood by both parties must match.",
          "createdAt": "2024-03-08T10:30:04Z",
          "updatedAt": "2024-03-08T10:30:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> There is text in 5.5.4.5.2 which is incompatible with this text. To prevent downgrade attacks, the requirement is that all entries in the digest which are present in both reference value and ACS entry and whose hash algorithm is understood by both parties must match.\r\n\r\nSorry, I don't understand what this text means.",
          "createdAt": "2024-03-08T10:36:25Z",
          "updatedAt": "2024-03-08T10:36:25Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > There is text in 5.5.4.5.2 which is incompatible with this text. To prevent downgrade attacks, the requirement is that all entries in the digest which are present in both reference value and ACS entry and whose hash algorithm is understood by both parties must match.\r\n> \r\n> Sorry, I don't understand what this text means.\r\n\r\nBut besides that, is the term _\"acceptable state\"_ that is incompatible?  If we used _\"reference state\"_ would that work for you?",
          "createdAt": "2024-03-08T10:39:37Z",
          "updatedAt": "2024-03-08T10:39:37Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The text proposed here leaves open the possibility that there are two entries with the same algorithm and different values, which will not match with the 5.5.4.5.2 algorithm.\r\n\r\nI am not sure how the _same_ measured object (e.g., a specific instance of a FW blob) can be hashed to different values using the same hash function.\r\n",
          "createdAt": "2024-03-08T10:44:48Z",
          "updatedAt": "2024-03-08T10:44:48Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> I agree that this text needs to be clarified, but I think what is written here doesn't match 5.5.4.5.2. That section assumes that all entries in a `stateful-environment` digest array are measurements of the same object using different digest algorithms. The text proposed here leaves open the possibility that there are two entries with the same algorithm and different values, which will not match with the 5.5.4.5.2 algorithm. The 5.5.4.5.2 algorithm is written the way it is to prevent downgrade attacks. We need to decide what happens if a digests array contains multiple different values with the same algorithm. This text suggests a match if one of them matches. The 5.5.4.5.2 text will not match.\r\n\r\nOh, I see. I agree with Andrew that the change could allow for different states expressed via the same algorithm (and not only same state with different algorithm). Was that the intent?",
          "createdAt": "2024-03-08T11:30:15Z",
          "updatedAt": "2024-03-08T11:30:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I have made some small refactoring, introducing an explicit `digests-type` with precise semantics that is reused by both `digests` and `integrity-registers`.",
          "createdAt": "2024-03-08T15:23:43Z",
          "updatedAt": "2024-03-08T15:23:43Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The updated definition seems to parallel the semantics of a TPM PCR. If modeling a full TPM, there would need to be 24 instances of `integrity-register`. How should this be accomplished? Should there be a different `environment-map` for each PCR. Maybe use the `index` value to disambiguate PCR number?",
          "createdAt": "2024-03-08T17:10:49Z",
          "updatedAt": "2024-03-08T17:10:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The updated definition seems to parallel the semantics of a TPM PCR. If modeling a full TPM, there would need to be 24 instances of `integrity-register`. How should this be accomplished? Should there be a different `environment-map` for each PCR. Maybe use the `index` value to disambiguate PCR number?\r\n\r\nThat was not my intention.\r\n\r\nI guess the problem is in the use of \"environment\" in _\"[A]n **environment** can be measured using different hash algorithms.\"_ ?\r\n\r\nWhat if we said: _\"A measurement can be obtained using different hash algorithms.\"_ instead?\r\n\r\n",
          "createdAt": "2024-03-08T17:19:25Z",
          "updatedAt": "2024-03-08T17:19:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">That was not my intention.\r\n\r\nBut it is a reasonable intention of someone. I'm just wondering how someone should complete the exercise. \r\n\r\nIf the goal is to define `digests` and `integrity-register` similarly, then they seem to be solving the same problem. Only one has a label and the other one doesn't.\r\n",
          "createdAt": "2024-03-08T17:23:59Z",
          "updatedAt": "2024-03-08T17:23:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I guess the problem is in the use of \"environment\" \r\n\r\nTechnically, using `index` in environment map makes it a different environment. So, the current wording would still be correct. ",
          "createdAt": "2024-03-08T17:26:56Z",
          "updatedAt": "2024-03-08T17:26:56Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > That was not my intention.\r\n> \r\n> But it is a reasonable intention of someone. I'm just wondering how someone should complete the exercise.\r\n> \r\n> If the goal is to define `digests` and `integrity-register` similarly, then they seem to be solving the same problem. Only one has a label and the other one doesn't.\r\n\r\nI hate to say this ... but one could use `mkey` of type `uint` \ud83e\udd72 ",
          "createdAt": "2024-03-08T17:29:01Z",
          "updatedAt": "2024-03-08T17:30:02Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > That was not my intention.\r\n> > \r\n> > \r\n> > But it is a reasonable intention of someone. I'm just wondering how someone should complete the exercise.\r\n> > If the goal is to define `digests` and `integrity-register` similarly, then they seem to be solving the same problem. Only one has a label and the other one doesn't.\r\n> \r\n> I hate to say this ... but one could use `mkey` of type `uint` \ud83e\udd72\r\n\r\nThat said, once you have integrity registers why complicate your life?",
          "createdAt": "2024-03-08T17:33:39Z",
          "updatedAt": "2024-03-08T17:33:39Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> That said, once you have integrity registers why complicate your life?\r\n\r\nIs this how you would model a TPM PCR bank using integrity registers?\r\n```\r\n/ integrity registers / 14 : {\r\n\t/ pcr 0 / 0 : [ [\u201csha1\u201d, h\u20190001\u2019], [\u201csha256\u201d, h\u20190002\u2019]],\r\n\t/ pcr 1 / 1 : [ [\u201csha1\u201d, h\u20190001\u2019], [\u201csha256\u201d, h\u20190002\u2019]],\r\n\t/etc/\r\n\t/ pcr 24 / 24 : [ [\u201csha1\u201d, h\u20190001\u2019], [\u201csha256\u201d, h\u20190002\u2019]],\r\n}\r\n```\r\n\r\nyes\r\n",
          "createdAt": "2024-03-08T17:43:37Z",
          "updatedAt": "2024-03-08T17:47:52Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> yes\r\n\r\nIf modeling a complex object that consists for several sub-components?\r\n```\r\n/ integrity registers / 14 : {\r\n\t/ my sub-component 0 / \"Frodo\" : [ [\u201csha1\u201d, h\u20190001\u2019]],\r\n\t/ my sub-component 1 / \"Bilbo\" : [ [\u201csha1\u201d, h\u20190001\u2019]],\r\n\t/etc/\r\n\t/ my sub-component 24 / \"Smog\" : [ [\u201csha1\u201d, h\u20190001\u2019]]\r\n}\r\n```",
          "createdAt": "2024-03-08T17:59:42Z",
          "updatedAt": "2024-03-08T17:59:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > yes\r\n> \r\n> If modeling a complex object that consists for several sub-components?\r\n> \r\n> ```\r\n> / integrity registers / 14 : {\r\n> \t/ my sub-component 0 / \"Frodo\" : [ [\u201csha1\u201d, h\u20190001\u2019]],\r\n> \t/ my sub-component 1 / \"Bilbo\" : [ [\u201csha1\u201d, h\u20190001\u2019]],\r\n> \t/etc/\r\n> \t/ my sub-component 24 / \"Smog\" : [ [\u201csha1\u201d, h\u20190001\u2019]]\r\n> }\r\n> ```\r\n\r\nYes, if your measurements' metadata is limited to a \"name\".",
          "createdAt": "2024-03-08T18:07:46Z",
          "updatedAt": "2024-03-08T18:07:46Z"
        },
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for making the changes to remove the downgrade attack. I am ok with the replacement text.",
          "createdAt": "2024-04-03T13:49:34Z",
          "updatedAt": "2024-04-03T13:49:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yttHn",
          "commit": {
            "abbreviatedOid": "e6f8286"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I agree that this text needs to be clarified, but I think what is written here doesn't match 5.5.4.5.2. That section assumes that all entries in a `stateful-environment` digest array are measurements of the same object using different digest algorithms.\r\nThe text proposed here leaves open the possibility that there are two entries with the same algorithm and different values, which will not match with the 5.5.4.5.2 algorithm.\r\nThe 5.5.4.5.2 algorithm is written the way it is to prevent downgrade attacks.\r\nWe need to decide what happens if a digests array contains multiple different values with the same algorithm. This text suggests a match if one of them matches. The 5.5.4.5.2 text will not match.",
          "createdAt": "2024-03-08T10:37:38Z",
          "updatedAt": "2024-03-08T10:37:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yuEPp",
          "commit": {
            "abbreviatedOid": "e6f8286"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Clarifying change. LGTM",
          "createdAt": "2024-03-08T11:27:26Z",
          "updatedAt": "2024-03-08T11:27:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yvzJt",
          "commit": {
            "abbreviatedOid": "d2f92c6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-08T15:29:58Z",
          "updatedAt": "2024-03-08T15:29:58Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nAn environment can be measured using different hash algorithms.\r\nA `digests-type` can be used to collect multiple digest values obtained by applying different hash algorithms on the same input.\r\nEach entry in the `digests-type` MUST have a unique `alg` value.\r\n```",
              "createdAt": "2024-03-08T15:29:58Z",
              "updatedAt": "2024-03-08T15:29:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yv2oR",
          "commit": {
            "abbreviatedOid": "2ab2b13"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-08T15:36:58Z",
          "updatedAt": "2024-03-08T15:36:59Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nAny digests associated with a measured object represent an acceptable state for the object.\r\nTherefore, if multiple digests are provided, the acceptable state is their cross-product.\r\n```",
              "createdAt": "2024-03-08T15:36:58Z",
              "updatedAt": "2024-03-08T15:36:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yxAlV",
          "commit": {
            "abbreviatedOid": "6be4120"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-08T17:41:25Z",
          "updatedAt": "2024-03-08T17:41:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA measurement can be obtained using different hash algorithms.\r\n```",
              "createdAt": "2024-03-08T17:41:25Z",
              "updatedAt": "2024-03-08T17:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yn-1m",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-07T17:27:33Z",
          "updatedAt": "2024-03-08T17:46:13Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This semantic departs from TPM PCR semantics if a \"state\" refers to the measured component vs. the same object but hashed under a different algorithm.\r\n\r\nIf an \"object\" has multiple \"states\" that can be measured, then a description of how the multiple \"states\" shall be disambiguated is needed. For example, the order in which each state appears in the `[ digest ]` array matters. A verifier must compare the \"state\" at position 0 in Evidence to the \"state\" at position 0 in Reference Values.  Etc...\r\n\r\nNote: If the semantics for whether the `[ digest ]` array are left unspecified, the label `integrity-register-id-type-choice` can be used to determine how the `[ digest ]` array interprets \"states\". The verifier may still follow array position rules for checking purposes, but it doesn't need to know semantics of \"states\". If a relying party has an appraisal policy that recognizes `integrity-register-id-type-choice` semantics, then it can apply logic that considers whether a state is appropriate. A profile may or may not be useful to the RP for interpretation of the `integrity-register-id-type-choice` value. This spec (should?) leaves it out of scope. It is reasonable for some other specification to define a registry and so forth. For example, the TCG PC Client specs might associate IR position 0 with a TPM PCR 0, and array position 0 of `[ digest ]` with the first hash algorithm of PCR 0 and array position 1 of `[ digest ]` with the second hash algorithm, etc..\r\n\r\nA different spec / profile might use array position to refer to different \"states\" of an object where the object may change over time and where a new digest is calculated at each state change. \r\n\r\nA third spec / profile might use array position to describe a composite object that has n sub-components at array positions 0 - (n -1) etc.\r\n\r\nThe main consideration for this spec is whether or not these semantics can be safely ignored by a Verifier. They can so long as verifier behavior clearly describes comparison is by array position. The object that the digest refers to can remain opaque to the Verifier.  (I believe these are the desired semantics for IR).",
              "createdAt": "2024-03-07T17:27:33Z",
              "updatedAt": "2024-03-08T17:46:13Z"
            },
            {
              "originalPosition": 5,
              "body": "LGTM",
              "createdAt": "2024-03-08T17:46:02Z",
              "updatedAt": "2024-03-08T17:46:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85yx2fs",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-08T19:15:47Z",
          "updatedAt": "2024-03-08T19:15:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85zJzcG",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "The `text` and usages of `digest` is much clear now!\r\n\r\nLGTM!",
          "createdAt": "2024-03-12T18:13:44Z",
          "updatedAt": "2024-03-12T18:13:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI851C8oB",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-27T15:30:49Z",
          "updatedAt": "2024-03-27T15:30:49Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "nit: \"semantics\" since I never see \"semantic\" describing program behavior.",
              "createdAt": "2024-03-27T15:30:49Z",
              "updatedAt": "2024-03-27T15:30:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI851C893",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-27T15:31:17Z",
          "updatedAt": "2024-03-27T15:31:17Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Squash single sentence into 1 line.",
              "createdAt": "2024-03-27T15:31:17Z",
              "updatedAt": "2024-03-27T15:31:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8511Pik",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-03T13:48:58Z",
          "updatedAt": "2024-04-03T13:48:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI8511flu",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:10:02Z",
          "updatedAt": "2024-04-03T14:10:03Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "This will be done in future PR.",
              "createdAt": "2024-04-03T14:10:02Z",
              "updatedAt": "2024-04-03T14:10:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8511gIv",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:10:38Z",
          "updatedAt": "2024-04-03T14:10:39Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe digests use `digests-type` semantics ({{sec-common-hash-entry}}).\r\n```",
              "createdAt": "2024-04-03T14:10:38Z",
              "updatedAt": "2024-04-03T14:10:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8511gJx",
          "commit": {
            "abbreviatedOid": "2181c3e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:10:39Z",
          "updatedAt": "2024-04-03T14:10:40Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I'll let Henk who volunteered to make a pass over the whole document to \"onelinearise\" it ",
              "createdAt": "2024-04-03T14:10:40Z",
              "updatedAt": "2024-04-03T14:10:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8511hUX",
          "commit": {
            "abbreviatedOid": "f24ce27"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-03T14:12:03Z",
          "updatedAt": "2024-04-03T14:12:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 216,
      "id": "PR_kwDOH6-tI85o_Yjr",
      "title": "update thofos's affil",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/216",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-07T16:52:04Z",
      "updatedAt": "2024-03-07T17:59:59Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "1f9b06225d8825690a922ddb3b85685c99153505",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "thofos-affil",
      "headRefOid": "050e437deef0a7b716933d94fbbbb508ef9048c1",
      "closedAt": "2024-03-07T17:59:56Z",
      "mergedAt": "2024-03-07T17:59:56Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "c6df0f1144d25f93b6c040c7cf5493e207c3b843"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Welcome to Linaro!\r\n\r\nYeah, it took a while to realize I had switched employer \ud83e\udd23 ",
          "createdAt": "2024-03-07T16:57:54Z",
          "updatedAt": "2024-03-07T16:57:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yntnB",
          "commit": {
            "abbreviatedOid": "050e437"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Welcome to Linaro!",
          "createdAt": "2024-03-07T16:53:56Z",
          "updatedAt": "2024-03-07T16:53:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85yoReW",
          "commit": {
            "abbreviatedOid": "050e437"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-07T17:55:13Z",
          "updatedAt": "2024-03-07T17:55:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 217,
      "id": "PR_kwDOH6-tI85pEUN2",
      "title": "change measurement-value-map to measurement-values-map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/217",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-08T10:44:30Z",
      "updatedAt": "2024-04-03T14:38:46Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "1cb1c35ecc78ab15eaee4661c0052cb63700b24f",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "fix-mvm-spelling",
      "headRefOid": "76854cf69c632c8c04d4c98235d913332f599950",
      "closedAt": "2024-04-03T14:38:43Z",
      "mergedAt": "2024-04-03T14:38:43Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "ee96477148848e4edc6f9564c4539fb51e20a0f2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI85yx-NS",
          "commit": {
            "abbreviatedOid": "fa65cbb"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple suggestions",
          "createdAt": "2024-03-08T19:31:57Z",
          "updatedAt": "2024-03-08T19:49:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm wondering if this case can never happen given it follows cddl. CDDL shouldn't let you have `state-triples` where the `measurement-values-map` contains duplicate code points. I wonder if we really need to describe \"merging\" since the case above describes redundant copies of an EMT.  If so, you can just delete redundant duplicate EMTs. No need to describe deeper \"merging\" semantics.",
              "createdAt": "2024-03-08T19:31:57Z",
              "updatedAt": "2024-03-08T19:49:52Z"
            },
            {
              "originalPosition": 10,
              "body": "ditto previous comment.",
              "createdAt": "2024-03-08T19:36:18Z",
              "updatedAt": "2024-03-08T19:49:53Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nIf the stateful environment is not tagged and the `measurement-values-map` key is a value with handling described in the sub-sections below, then the algorithm appropriate to that key is used to match the entries.\r\n```",
              "createdAt": "2024-03-08T19:48:58Z",
              "updatedAt": "2024-03-08T19:49:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI851C4Pu",
          "commit": {
            "abbreviatedOid": "76854cf"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-03-27T15:24:59Z",
          "updatedAt": "2024-04-03T14:37:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85110fJ",
          "commit": {
            "abbreviatedOid": "76854cf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-04-03T14:37:04Z",
          "updatedAt": "2024-04-03T14:37:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85110iQ",
          "commit": {
            "abbreviatedOid": "76854cf"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "for consistency!",
          "createdAt": "2024-04-03T14:37:07Z",
          "updatedAt": "2024-04-03T14:37:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 219,
      "id": "PR_kwDOH6-tI85q7y3A",
      "title": "Merge MEC and conditional endorsements triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/219",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-27T14:12:02Z",
      "updatedAt": "2024-07-05T09:51:50Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8a150bb9d96ce8d9825ea5565291e47fc9448cbc",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "tidyup-triples",
      "headRefOid": "8b169ef4a50c32bc3befca087ad36e62cf0d4325",
      "closedAt": "2024-07-05T09:51:47Z",
      "mergedAt": "2024-07-05T09:51:47Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "0032f832d43d33463a9ff748bc590977807e0824"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "All, Removed Duplicate Triple and renamed the MEC to a more general triple name as discussed during the last week call!",
          "createdAt": "2024-04-10T17:24:21Z",
          "updatedAt": "2024-04-10T17:24:21Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this a breaking change? Do existing examples break?\r\nWe should not break existing work but rather deprecate anything that could be regarded as adding unnecessary complexity.\r\n\r\nA possibly better way to handle deprecated code points is to not clobber '9' but mark it as reserved. \r\n\r\nAlso, avoid breaking repos that depend on corim schema by keeping the cddl for code point 9 but exclude it from the I-D. Possibly, the repo should have a folder for deprecated cddl? At some point in time in the future, when it is safe to remove deprecated features the repo can be updated to delete it? ",
          "createdAt": "2024-04-26T17:03:12Z",
          "updatedAt": "2024-04-26T18:10:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande to fix the associated tests.",
          "createdAt": "2024-07-03T14:53:22Z",
          "updatedAt": "2024-07-03T14:53:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [...] code point 9 should be marked as \"reserved\" in IANA considerations.\r\n\r\ngood point.  Except we don't have the IANA section in place at the moment.  I have added a note to #15 \r\n\r\n",
          "createdAt": "2024-07-04T09:29:13Z",
          "updatedAt": "2024-07-04T09:31:20Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati I have now addressed your comments, please check once, if you have any more comments?",
          "createdAt": "2024-07-04T11:10:35Z",
          "updatedAt": "2024-07-04T11:10:35Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> @thomas-fossati I have now addressed your comments, please check once,\\\r\n\r\nThanks.\r\n\r\n> if you have any more comments?\r\n\r\nStill puzzled by the renaming strategy but I can live with it.",
          "createdAt": "2024-07-04T11:21:19Z",
          "updatedAt": "2024-07-04T11:21:19Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @thomas-fossati , I will await for @henkbirkholz and @nedmsmith  to approve before merging!",
          "createdAt": "2024-07-04T11:23:30Z",
          "updatedAt": "2024-07-04T11:23:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI8511st1",
          "commit": {
            "abbreviatedOid": "c8d777b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:25:06Z",
          "updatedAt": "2024-04-03T14:25:06Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Rename this to `conditional-endorsement-triples`",
              "createdAt": "2024-04-03T14:25:06Z",
              "updatedAt": "2024-04-03T14:25:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI853k77w",
          "commit": {
            "abbreviatedOid": "0d7d26e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I agree with the idea that we should merge the previous MEC triple with the previous Conditional Endorsement Triple as the latter is a strict subset of the former.\r\nThis change does this correctly, as far as I can see.",
          "createdAt": "2024-04-17T14:12:03Z",
          "updatedAt": "2024-04-17T14:12:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855OKTL",
          "commit": {
            "abbreviatedOid": "0d7d26e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T14:45:38Z",
          "updatedAt": "2024-05-01T14:45:38Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n  ? &(conditional-endorsement-triples: 10) =>\r\n```",
              "createdAt": "2024-05-01T14:45:38Z",
              "updatedAt": "2024-05-01T14:45:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855O-mW",
          "commit": {
            "abbreviatedOid": "0d7d26e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T16:57:04Z",
          "updatedAt": "2024-05-01T16:57:04Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "+1",
              "createdAt": "2024-05-01T16:57:04Z",
              "updatedAt": "2024-05-01T16:57:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855O_Q-",
          "commit": {
            "abbreviatedOid": "0d7d26e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "+1 on Andy's suggested change to use code point 10 instead of 9 and that code point 9 should be marked as \"reserved\" in IANA considerations.",
          "createdAt": "2024-05-01T16:58:58Z",
          "updatedAt": "2024-05-01T16:58:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86ApwKN",
          "commit": {
            "abbreviatedOid": "61fea70"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T09:19:46Z",
          "updatedAt": "2024-07-04T09:25:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "no reason to abbreviate one and not the other\r\n\r\n```suggestion\r\n  conditions: [ + stateful-environment-record ]\r\n```",
              "createdAt": "2024-07-04T09:19:46Z",
              "updatedAt": "2024-07-04T09:25:56Z"
            },
            {
              "originalPosition": 5,
              "body": "it looks like we are doing this half way.\r\n\r\nSince we are happy to allocate a new code point, why not picking 11 and deprecating 9 and 10.  While this may not be strictly needed in this case, I think it's a good way to put in place \"best practices\"\r\n",
              "createdAt": "2024-07-04T09:24:47Z",
              "updatedAt": "2024-07-04T09:25:56Z"
            },
            {
              "originalPosition": 1,
              "body": "We are removing some existing testing harness.  Have we got equivalent coverage for the \"merged\" triple?",
              "createdAt": "2024-07-04T09:25:48Z",
              "updatedAt": "2024-07-04T09:25:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ap5xF",
          "commit": {
            "abbreviatedOid": "61fea70"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T09:33:03Z",
          "updatedAt": "2024-07-04T09:33:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@thomas-fossati : it is not like that : code point 10 was already used by MEC, so will continue, using this code point. It just make code point 9 redundant! No need to mint code point 11 here!",
              "createdAt": "2024-07-04T09:33:03Z",
              "updatedAt": "2024-07-04T09:33:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AqON7",
          "commit": {
            "abbreviatedOid": "61fea70"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:10:23Z",
          "updatedAt": "2024-07-04T10:10:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "To summarise:\r\n* On `main`: 9=CET and 10=MEC.\r\n* On `tidyup-triples`: 9=/dev/null and 10=MEC, but it's now called CET \ud83e\udee8",
              "createdAt": "2024-07-04T10:10:23Z",
              "updatedAt": "2024-07-04T10:10:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AqRvh",
          "commit": {
            "abbreviatedOid": "61fea70"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T10:17:35Z",
          "updatedAt": "2024-07-04T10:17:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Correct ! Got it 100% right ",
              "createdAt": "2024-07-04T10:17:35Z",
              "updatedAt": "2024-07-04T10:17:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AqrtF",
          "commit": {
            "abbreviatedOid": "61fea70"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T11:10:03Z",
          "updatedAt": "2024-07-04T11:10:03Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Yes done now, please check!",
              "createdAt": "2024-07-04T11:10:03Z",
              "updatedAt": "2024-07-04T11:10:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AqwpY",
          "commit": {
            "abbreviatedOid": "8b169ef"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T11:21:31Z",
          "updatedAt": "2024-07-04T11:21:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86AtkTa",
          "commit": {
            "abbreviatedOid": "8b169ef"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T19:22:25Z",
          "updatedAt": "2024-07-04T19:22:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 220,
      "id": "PR_kwDOH6-tI85q8kr4",
      "title": "Change domain type wording for issue#182",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/220",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-27T15:45:40Z",
      "updatedAt": "2024-04-03T14:59:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "ee96477148848e4edc6f9564c4539fb51e20a0f2",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "issue182",
      "headRefOid": "74d54adfe867f340f497f91e2c8288f337b2a6a9",
      "closedAt": "2024-04-03T14:59:10Z",
      "mergedAt": "2024-04-03T14:59:10Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "e6f31f7f61d123224a49dde58f2b8938077572c4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI8511tda",
          "commit": {
            "abbreviatedOid": "b256c84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-04-03T14:26:14Z",
          "updatedAt": "2024-04-03T14:26:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI8511wGu",
          "commit": {
            "abbreviatedOid": "b256c84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:30:16Z",
          "updatedAt": "2024-04-03T14:30:17Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThe following domain types are initially defined.\r\n```",
              "createdAt": "2024-04-03T14:30:16Z",
              "updatedAt": "2024-04-03T14:30:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8511yoi",
          "commit": {
            "abbreviatedOid": "b256c84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-03T14:34:12Z",
          "updatedAt": "2024-04-03T14:34:12Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe `uint` and `text` types MUST NOT be used for global scope.\r\n```",
              "createdAt": "2024-04-03T14:34:12Z",
              "updatedAt": "2024-04-03T14:34:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI851133l",
          "commit": {
            "abbreviatedOid": "e5a7a22"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-04-03T14:42:18Z",
          "updatedAt": "2024-04-03T14:42:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI85113-8",
          "commit": {
            "abbreviatedOid": "e5a7a22"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-04-03T14:42:26Z",
          "updatedAt": "2024-04-03T14:42:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI851140N",
          "commit": {
            "abbreviatedOid": "74d54ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": ":ship: it",
          "createdAt": "2024-04-03T14:43:45Z",
          "updatedAt": "2024-04-03T14:43:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 221,
      "id": "PR_kwDOH6-tI85q8m_X",
      "title": "Use COSE field name in protected header map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/221",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC9052 uses alg and not alg-id.\r\n\r\nThis covers point 1 of issue #182",
      "createdAt": "2024-03-27T15:50:16Z",
      "updatedAt": "2024-04-03T14:21:26Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "8061f248df823e605e5bcc822ea2447f30ebb44f",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "issue182b",
      "headRefOid": "ae394764f9186fac1e9bbe3245983e8da6190587",
      "closedAt": "2024-04-03T14:21:26Z",
      "mergedAt": "2024-04-03T14:21:26Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "1cb1c35ecc78ab15eaee4661c0052cb63700b24f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI8511l9h",
          "commit": {
            "abbreviatedOid": "ae39476"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-04-03T14:18:00Z",
          "updatedAt": "2024-04-03T14:18:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI8511l_f",
          "commit": {
            "abbreviatedOid": "ae39476"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": ":+1:",
          "createdAt": "2024-04-03T14:18:02Z",
          "updatedAt": "2024-04-03T14:18:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI8511mt2",
          "commit": {
            "abbreviatedOid": "ae39476"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-04-03T14:18:40Z",
          "updatedAt": "2024-04-03T14:18:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 224,
      "id": "PR_kwDOH6-tI85r8XJR",
      "title": "Remove validity-map from core and remove meta-map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/224",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The validity of a document should be determined by the signing key's expiration. Any other form of validity should be an extension to the base.\r\n\r\nSince the meta-map only had the signer-map in it, I've collapsed that indirection. If the overall corim validity-map is still desired, we can add that as a standard extension as per issue #223\r\n\r\nCloses Issue #222",
      "createdAt": "2024-04-07T20:16:10Z",
      "updatedAt": "2024-05-23T15:10:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "e6f31f7f61d123224a49dde58f2b8938077572c4",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "novalidity",
      "headRefOid": "ba2ba5a65d75b9951e3e865bd80914e3142a0aa0",
      "closedAt": "2024-05-23T15:10:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with the direction this PR is taking.",
          "createdAt": "2024-04-10T14:25:56Z",
          "updatedAt": "2024-04-10T14:25:56Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I've added a document about signing and validity. @yogeshbdeshpande @thomas-fossati @andrew-draper @nedmsmith \r\n",
          "createdAt": "2024-04-22T18:13:57Z",
          "updatedAt": "2024-04-22T18:13:57Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm confused as to the intended audience is for theory-of-validity.md. Is it intended as a section in the corim RFC? ",
          "createdAt": "2024-04-22T18:32:34Z",
          "updatedAt": "2024-04-22T18:32:34Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The intended audience is y'all, since there was hesitation about removing the validity-map. I'm not sure how supplemental explainers are meant to be associated with the reference material that is an RFC.",
          "createdAt": "2024-04-22T18:42:20Z",
          "updatedAt": "2024-04-22T18:42:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm not sure how supplemental explainers are meant to be associated with the reference material that is an RFC.\r\n\r\nWe have a \"musings\" wiki https://github.com/ietf-rats-wg/draft-ietf-rats-corim/wiki that has supplemental or explanatory content. It's also fine to add it to the issue itself. The GitHub repo doesn't go away AFAIK. Hence, anyone who is interested can discover justifications for various decisions made.",
          "createdAt": "2024-04-22T18:52:32Z",
          "updatedAt": "2024-04-22T18:52:32Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I can move the document there now, but I put it in the PR for line-by-line comments in case folks want to discuss.",
          "createdAt": "2024-04-22T19:04:15Z",
          "updatedAt": "2024-04-22T19:04:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I put it in the PR for line-by-line comments in case folks want to discuss.\r\n\r\nIt's unfortunate that GitHub dosn't support line-by-line discussion threads on wiki pages and so forth. However, I find it confusing to put ancillary discussion threads in the build image.",
          "createdAt": "2024-04-22T19:11:53Z",
          "updatedAt": "2024-04-22T19:11:53Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "My understanding is that removing the validity map at this point is a non-option. I'll close this and open an issue to create a lifecycle management section that describes lifecycle management a bit more holistically in such a way that it's clear that validity-map is an option but not prescriptive for lifecycle management.",
          "createdAt": "2024-05-23T15:10:11Z",
          "updatedAt": "2024-05-23T15:10:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI852uWpj",
          "commit": {
            "abbreviatedOid": "62be8b6"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-10T14:27:09Z",
          "updatedAt": "2024-04-10T14:27:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Please don't renumber existing map keys as that makes existing files invalid.",
              "createdAt": "2024-04-10T14:27:09Z",
              "updatedAt": "2024-04-10T14:27:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI854Ih-X",
          "commit": {
            "abbreviatedOid": "62be8b6"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-22T18:13:10Z",
          "updatedAt": "2024-04-22T18:13:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Done.",
              "createdAt": "2024-04-22T18:13:10Z",
              "updatedAt": "2024-04-22T18:13:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI854I-TX",
          "commit": {
            "abbreviatedOid": "ba2ba5a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See inline comments",
          "createdAt": "2024-04-22T19:14:52Z",
          "updatedAt": "2024-04-22T19:27:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This change will affect TCG DICE Endorsement Arch. Given it's use is optional and suggested that if it's use is desired that it could be added back via a profile. It may be less disruptive to leave it as is and rely on the profile to define whether it should be used.",
              "createdAt": "2024-04-22T19:14:52Z",
              "updatedAt": "2024-04-22T19:27:03Z"
            },
            {
              "originalPosition": 3,
              "body": "I believe use of validity here is only as a hint to parsers who would have to parse the payload if a security relevant decision is being made as corim-meta-map is part of the COSE unprotected header. But given there may be implementations already that use corim-signer-map, maybe it is best to leave it as is? Note, that the freshness mechanism in corim (as is or as an extension to the corim-map) implies the hint in the unprotected header should parallel what is in the payload. Hence, corim-meta-map should be similarly extensible.  Given there may be existing use, leaving it as is and relying on profiles to define its use is less disruptive. I don't think collapsing corim-meta-map into corim-signer-map for simplification is that significant (esp. if the goal of the hint is to parallel what is included in the payload).  ",
              "createdAt": "2024-04-22T19:26:26Z",
              "updatedAt": "2024-04-22T19:27:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 226,
      "id": "PR_kwDOH6-tI85tf79r",
      "title": "Change Measurement to Property where appropriate",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/226",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "A property is either a reference value or endorsed value, so the code points used and nomenclature in the document are overly constrained in points.\r\n\r\nCloses Issue#225",
      "createdAt": "2024-04-23T16:40:06Z",
      "updatedAt": "2024-10-23T13:59:38Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "20fe75ebd7cb0b79c3b295b09bc59c0891f39247",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "claimsmap",
      "headRefOid": "91f2783faa3a321cf498695dd5a8b1cf2f041b4a",
      "closedAt": "2024-10-23T13:59:38Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems this PR is doing a global replace of the word measurement with claim while leaving the semantics in place. Is that correct?",
          "createdAt": "2024-04-23T17:21:14Z",
          "updatedAt": "2024-04-23T17:21:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Id did a quick review of 9334. It seems measurement and claim can be interchangeable. For example:\r\n \"Measurements can describe a variety\r\n   of attributes of system components, such as hardware, firmware, BIOS,\r\n   software, etc., and how they are hardened.\"\r\nand\r\n\"Endorsement:  A secure statement that an Endorser vouches for the\r\n      integrity of an Attester's various capabilities, such as Claims\r\n      collection and Evidence signing.\"\r\nI don't think use of measurement instead of claim is technically incorrect. ",
          "createdAt": "2024-04-23T17:44:51Z",
          "updatedAt": "2024-04-23T17:44:51Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The semantics stay in place, correct.\r\n\r\nRFC9334 states that a claim appears to be synonymous with evidence, which is different from how claims are treated in the theory of verification and the notion of Claim Sets. It then points at Claim from RFC7519, which defines claim as \"A piece of information asserted about a subject.\"\r\n\r\nEndorsements and reference measurements are claims of security attributes and authenticity for the claim values they embody.\r\n\r\nIt's confusing to use \"measurement\" to describe unmeasurable qualities, such as \"certified EAL4\".",
          "createdAt": "2024-04-23T19:39:25Z",
          "updatedAt": "2024-04-23T19:39:25Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that the current definition of \"Claim: A piece of information, in the form of a key-value pair.\" is very broad and open ended. Pretty much any map or record expressed in CDDL fits this definition. The use of Claim in ECT is intended to be more focused on the properties that are associated with environments. I prefer using something different such as Environment-Properties-Tuple (EPT). \r\n\r\nIt is OK to talk about claims in the abstract such as when describing CMs as consisting of \"claims\". \r\n\r\nThe history behind the term being used in RATS is that it intends to follow the definition originated by JWT. It is a non-goal that ECT imply there's a JWT embedded in an ECT.",
          "createdAt": "2024-05-23T16:01:27Z",
          "updatedAt": "2024-05-23T16:01:27Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The `C`laim in `ECT` came up several times. The generic use of Claims (as defined in JWT) and the increasingly specific use in RFC 9334 and then here seem to create more confusion than necessary.\r\n\r\nWe are considering changing Claim to a less overloaded synonym, such as property or characteristic. In the end it is just naming and I'd typically refrain from doing name changes at this stage. Then again, the topic starts to eat time and maybe it is better to go with a synonym for now?",
          "createdAt": "2024-05-29T13:32:54Z",
          "updatedAt": "2024-05-29T13:32:54Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR doesn't fully address the terminology differences between measurement and claim as the `mkey` and `mval` members borrow `m` from measurement. \r\nAdditionally, the 9334 definition of claim is at a higher level of abstraction and applies equally to `enviornment-map` as it does `measurement-map` or some other CDDL expression. \r\nMy preference is to leave \"claim\" as an abstract term and come up with different vocabulary to refer to the values not in environment-map. \r\nMaybe use properties `properties-map` instead of `claims-map`? \r\nThis would suggest `mval` would change to `pval` and `mkey` to `pkey`. \r\nI guess I'm indifferent whether `claim-values-map` changes to `property-values-map` if the bounding structure is called `properties-map`.\r\n\r\nThis implies ECT becomes EPT.\r\n",
          "createdAt": "2024-06-20T22:00:08Z",
          "updatedAt": "2024-06-20T22:00:08Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I've updated the text to used \"property\" instead.",
          "createdAt": "2024-06-24T15:02:48Z",
          "updatedAt": "2024-06-24T15:02:48Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Lets wait for @nedmsmith to come back and we can settle with something which is liked by majority!",
          "createdAt": "2024-08-21T14:53:31Z",
          "updatedAt": "2024-08-21T14:53:31Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "In the August 21 meeting, we all shared our thoughts that Claim is more consistent with RFC 9334 and preferable to Property. @nedmsmith if you could please explain more your desire for \"property\" that would help us make a decision.",
          "createdAt": "2024-08-21T14:54:46Z",
          "updatedAt": "2024-08-21T14:54:46Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "We will retain 'Claim', waiting for all editors to agree on that.",
          "createdAt": "2024-08-28T15:41:37Z",
          "updatedAt": "2024-08-28T15:41:37Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> We will retain 'Claim', waiting for all editors to agree on that.\r\n\r\nThanks, just let me know when and I'll revert the claim->property commit of this PR.",
          "createdAt": "2024-09-04T02:40:46Z",
          "updatedAt": "2024-09-04T02:40:46Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we give up and just change ACS to AMS and ECT to EMT to keep internal consistency?",
          "createdAt": "2024-09-10T22:45:17Z",
          "updatedAt": "2024-09-10T22:45:17Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Unanimously Agreed that property is not sutable, but claims is more suitable, hence closing this PR!",
          "createdAt": "2024-10-23T13:59:38Z",
          "updatedAt": "2024-10-23T13:59:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI854Rdb9",
          "commit": {
            "abbreviatedOid": "0196a34"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "LGTM",
          "createdAt": "2024-04-23T17:18:55Z",
          "updatedAt": "2024-06-20T21:52:55Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "\"claimable\" isn't a term that has meaning. If reverting to a standard english definition, the term goes in the wrong direction as it is defined as an assertion that goes without evidence or proof. But in corim context a measurement / claim is the evidence / proof. So, the change seems to lessen clarity more than add clarity.\r\n\r\nUpon rereading this line, it seems more understandable if \"measurable\" is deleted. The next sentence clarifies what may be asserted as a claim value.",
              "createdAt": "2024-04-23T17:18:56Z",
              "updatedAt": "2024-05-01T17:42:37Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nmeasurement/endorsement value. Claims can have class, instance or group scope.  This is\r\n```",
              "createdAt": "2024-04-24T15:59:04Z",
              "updatedAt": "2024-05-01T17:42:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85-37vE",
          "commit": {
            "abbreviatedOid": "28d3322"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-19T15:21:53Z",
          "updatedAt": "2024-06-19T15:21:53Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Trying to recover a suggestion that got lost in the discussion.\r\n```suggestion\r\nA Claim represents a single piece of actual or reference state.\r\nA Claim may either be a measurement that can be directly compared with attestation evidence, or it can be an endorsement of a quality that is not directly comparable with evidence.\r\n```\r\nThere was a further suggestion to s/measurement/reference value/ in L848",
              "createdAt": "2024-06-19T15:21:53Z",
              "updatedAt": "2024-06-19T15:21:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85-5U-p",
          "commit": {
            "abbreviatedOid": "37ec10a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nI've left a couple of purely editorial comments.",
          "createdAt": "2024-06-19T19:48:10Z",
          "updatedAt": "2024-06-19T20:05:54Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nA Reference Value triple can be expressed as a conditional Endorsement, indicating that if the Attester makes certain Claims, then the RVP also makes those Claims.\r\n```",
              "createdAt": "2024-06-19T19:48:10Z",
              "updatedAt": "2024-06-19T20:05:54Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nThe triple\u2019s environment defines the scope of a Claim.\r\n```",
              "createdAt": "2024-06-19T20:04:34Z",
              "updatedAt": "2024-06-19T20:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85-_KUP",
          "commit": {
            "abbreviatedOid": "cdc332d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-20T13:46:19Z",
          "updatedAt": "2024-06-20T13:46:20Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "[\"key-value pair\"](https://en.wikipedia.org/wiki/Name\u2013value_pair)",
              "createdAt": "2024-06-20T13:46:19Z",
              "updatedAt": "2024-06-20T13:46:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85_C2Z6",
          "commit": {
            "abbreviatedOid": "cdc332d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-20T22:05:51Z",
          "updatedAt": "2024-06-20T22:05:51Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "If we're following the endorsements draft terminology it would read something like: \"A Claim is a key-value pair that in CoRIM represents a single piece of actual or possible state.",
              "createdAt": "2024-06-20T22:05:51Z",
              "updatedAt": "2024-06-20T22:05:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKKlk",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:28:12Z",
          "updatedAt": "2024-08-21T13:28:12Z",
          "comments": [
            {
              "originalPosition": 386,
              "body": "Here the Property and the Claim definition that RFC9334 inherits collide a bit. Maybe something like:\r\n\r\n```suggestion\r\n: A piece of information, in the form of a Claim as specified in {{-rats-arch}} where the name of the name/value pair is always an integer with an annotated text string name.\r\n```",
              "createdAt": "2024-08-21T13:28:12Z",
              "updatedAt": "2024-08-21T13:28:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKOwz",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:34:37Z",
          "updatedAt": "2024-08-21T13:34:37Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "Is now unfortunately defined in a list of terms later in the document. Maybe:\r\n\r\n```suggestion\r\nA Property in CoRIM represents a single piece of actual state or a possible state (see {{sec-verifier-abstraction}} below).\r\n```",
              "createdAt": "2024-08-21T13:34:37Z",
              "updatedAt": "2024-08-21T13:34:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKPn_",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:35:59Z",
          "updatedAt": "2024-08-21T13:35:59Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\nA Property from an Attester is conveyed via Evidence.\r\n```",
              "createdAt": "2024-08-21T13:35:59Z",
              "updatedAt": "2024-08-21T13:35:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKRaj",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:38:40Z",
          "updatedAt": "2024-08-21T13:38:40Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "Does the list in [5.1.4 Triples](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-5.1.4) fit that statement?",
              "createdAt": "2024-08-21T13:38:40Z",
              "updatedAt": "2024-08-21T13:38:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKaqm",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:52:17Z",
          "updatedAt": "2024-08-21T13:52:17Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "LGTM. Highlighting the in-line comment so we can address it here.",
              "createdAt": "2024-08-21T13:52:17Z",
              "updatedAt": "2024-08-21T13:52:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKcZC",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:54:55Z",
          "updatedAt": "2024-08-21T13:54:55Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "Is the use of `expectations` trying to combine the meanings of reference values and endorsed values?",
              "createdAt": "2024-08-21T13:54:55Z",
              "updatedAt": "2024-08-21T13:54:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKd_I",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:57:17Z",
          "updatedAt": "2024-08-21T13:57:18Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "I assume that property and claim have to switch places here.\r\n\r\n```suggestion\r\nA Property may be called an assertion, claim, measurement, or many other classifications based on its role in Evidence appraisal.\r\n```\r\nAnd then, why do we say that here in the first place? Should that go to the definition of Property?",
              "createdAt": "2024-08-21T13:57:18Z",
              "updatedAt": "2024-08-21T13:57:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKgtf",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T14:01:10Z",
          "updatedAt": "2024-08-21T14:01:10Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "```suggestion\r\nmembers of a `property-values-map` can represent class or instance\r\n```",
              "createdAt": "2024-08-21T14:01:10Z",
              "updatedAt": "2024-08-21T14:01:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKg8y",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T14:01:27Z",
          "updatedAt": "2024-08-21T14:01:28Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "```suggestion\r\nproperties. Some of the member types have instance scope only.\r\n```",
              "createdAt": "2024-08-21T14:01:28Z",
              "updatedAt": "2024-08-21T14:01:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GLF3w",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T14:53:06Z",
          "updatedAt": "2024-08-21T14:53:06Z",
          "comments": [
            {
              "originalPosition": 386,
              "body": "```\r\n: Compare: Claim {{-rats-arch}}.\r\n```",
              "createdAt": "2024-08-21T14:53:06Z",
              "updatedAt": "2024-08-21T14:53:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GLHel",
          "commit": {
            "abbreviatedOid": "f423031"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think some parts of this change are good, but I don't see the value in changing \"Claim\" to \"Property\" throughout. Let's wait for Ned to come back and discuss again.",
          "createdAt": "2024-08-21T14:54:13Z",
          "updatedAt": "2024-08-21T14:54:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 227,
      "id": "PR_kwDOH6-tI85toeRn",
      "title": "environment-map global scope",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/227",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [
        "mustfix"
      ],
      "body": "Added text requiring environment-map to be globally unique",
      "createdAt": "2024-04-24T17:42:03Z",
      "updatedAt": "2024-05-07T18:09:51Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "ce6d1557d871e0b68ac546a9123deca5a0cdcf36",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "globally-unique-env",
      "headRefOid": "8e5475016086b47997036e8c8ca2085985ccd288",
      "closedAt": "2024-05-07T18:09:46Z",
      "mergedAt": "2024-05-07T18:09:46Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "d401b68c49f3f8f959f4b75a441f91064762a301"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR addresses issue #176",
          "createdAt": "2024-04-24T17:43:05Z",
          "updatedAt": "2024-04-24T17:43:05Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "\"Globally unique\" doesn't really match my understanding given that an environment can be elaborated to have an instance field to make it even-more-unique for matching instances against reference values for classes.",
          "createdAt": "2024-05-01T14:13:08Z",
          "updatedAt": "2024-05-01T14:13:08Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "In the meeting you said just that the class-id needs to be globally unique, which makes more sense to me.",
          "createdAt": "2024-05-01T14:25:06Z",
          "updatedAt": "2024-05-01T14:25:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Might I suggest that additional clarification in the form of examples be added by a different PR? It seems there is consensus on the simple change this PR originally proposed. \r\n\r\nNote that the subsections for `instance` and `group` include the text \"A group carries a unique identifier...\" and \"An instance carries a unique identifier ...\". A reasonable reader will assume \"unique\" means globally or universally unique as this original PR declares the environment to be globally unique and the CDDL defines structures that are globally unique with the exception of `tagged-bytes` (but it seems a stretch to infer this form isn't globally unique). \r\n\r\nIt would be a mistake to try to make uniqueness of any of the identifiers in `environment-map` depend on uniqueness properties of any of the other identifiers since each can be used independently.\r\n\r\nAlthough it isn't incorrect to use multiple identifiers simultaneously, the expectation that each can be used independently should continue to be the case.\r\n\r\nIt seems like an irregularity to require use of another identity in `environment-map` because an author picked a value for `tagged-bytes` that wasn't globally unique. Let them pick a better value. :-)",
          "createdAt": "2024-05-01T17:13:14Z",
          "updatedAt": "2024-05-01T17:32:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI855ODhZ",
          "commit": {
            "abbreviatedOid": "e2e6c02"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T14:27:59Z",
          "updatedAt": "2024-05-01T14:27:59Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe combination of values within `class-map` must combine to form a globally unique identifier.\r\n```",
              "createdAt": "2024-05-01T14:27:59Z",
              "updatedAt": "2024-05-01T14:29:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855OIaC",
          "commit": {
            "abbreviatedOid": "8e54750"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-01T14:40:47Z",
          "updatedAt": "2024-05-03T16:34:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855OL9-",
          "commit": {
            "abbreviatedOid": "e2e6c02"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T14:49:00Z",
          "updatedAt": "2024-05-01T14:49:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nAn environment MUST be globally unique within the context of the collection of fields present.\r\nAn environment with just a `class-id` must be unique among classes, and an environment with both a `class-id` and `instance` must be unique amongst instances of the stated class.\r\nFor example, an environment with just `class-id` may denote a specific organization's SKU (product name and specifications), and `class-id` plus `instance` denotes a single entity: the SKU plus serial number.\r\n```",
              "createdAt": "2024-05-01T14:49:01Z",
              "updatedAt": "2024-05-01T14:49:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855OQus",
          "commit": {
            "abbreviatedOid": "0236d35"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-01T14:57:47Z",
          "updatedAt": "2024-05-01T14:57:48Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nAn environment MUST be globally unique.\r\nFor example, an environment with just `class-id` may denote a specific organization's SKU (product name and specifications), the `instance` field is unique within the `class-id` namespace.\r\n```",
              "createdAt": "2024-05-01T14:57:47Z",
              "updatedAt": "2024-05-01T14:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI855PWyf",
          "commit": {
            "abbreviatedOid": "0236d35"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I resolved the threads related to exemplary text since we can add this later.",
          "createdAt": "2024-05-01T17:39:17Z",
          "updatedAt": "2024-05-01T17:39:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855g_1k",
          "commit": {
            "abbreviatedOid": "8e54750"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I think the proposed changes attached to this revision make the spec better.\r\nI suggest we approve these now, and to put additional changes into another PR.",
          "createdAt": "2024-05-03T17:28:07Z",
          "updatedAt": "2024-05-03T17:28:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855nSJk",
          "commit": {
            "abbreviatedOid": "8e54750"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A bit terse but I like the spirit.\r\n\r\n\ud83d\udea2 it!",
          "createdAt": "2024-05-06T09:19:11Z",
          "updatedAt": "2024-05-06T09:19:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 228,
      "id": "PR_kwDOH6-tI85tojNc",
      "title": "Removed tagged-int-type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/228",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Removed tagged-int-type and related text.\r\nThis PR addresses an issue raised by IANA.",
      "createdAt": "2024-04-24T17:54:44Z",
      "updatedAt": "2024-05-01T17:39:58Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "e6f31f7f61d123224a49dde58f2b8938077572c4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "delete-tagged-int",
      "headRefOid": "42e2912b29cb7e7e3709bc9b224b8543d51cc89f",
      "closedAt": "2024-05-01T17:39:52Z",
      "mergedAt": "2024-05-01T17:39:52Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "ce6d1557d871e0b68ac546a9123deca5a0cdcf36"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI855OClj",
          "commit": {
            "abbreviatedOid": "42e2912"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I agree with removing this. A vendor can use tagged-bytes to add domain specific names to a larger namespace",
          "createdAt": "2024-05-01T14:25:34Z",
          "updatedAt": "2024-05-01T14:25:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855ODF3",
          "commit": {
            "abbreviatedOid": "42e2912"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-05-01T14:26:47Z",
          "updatedAt": "2024-05-01T14:26:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI855ODKx",
          "commit": {
            "abbreviatedOid": "42e2912"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-01T14:27:00Z",
          "updatedAt": "2024-05-01T14:27:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 232,
      "id": "PR_kwDOH6-tI85vQLql",
      "title": "Major Overhaul: Scope of Core & Simplification",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/232",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-13T12:38:44Z",
      "updatedAt": "2024-06-19T15:04:27Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d401b68c49f3f8f959f4b75a441f91064762a301",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "simplification-refactoring",
      "headRefOid": "a5bde54e293e131ecbc3feaf842c3702e0b99936",
      "closedAt": "2024-06-19T15:04:16Z",
      "mergedAt": "2024-06-19T15:04:16Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "854d4c2113d2a0f24ad1c02acf973cd7ca74246b"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I added sections at the beginning of the appraisal description section. However, the existing text that anticipates using a different internal representation still needs attention. I left and Issue Tracked at marker (Tracked at: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/232) to identify this point in the document. ",
          "createdAt": "2024-05-14T23:17:38Z",
          "updatedAt": "2024-05-14T23:21:02Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "ECT are not actually tuples anymore (even if we agree that authority moves into environment), right?",
          "createdAt": "2024-05-21T13:36:23Z",
          "updatedAt": "2024-05-21T13:36:23Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> ECT are not actually tuples anymore (even if we agree that authority moves into environment), right?\r\n\r\nIt's a 4-tuple or 5-tuple instead of a 2-tuple. But a tuple nevertheless.",
          "createdAt": "2024-05-21T18:27:39Z",
          "updatedAt": "2024-05-21T18:27:39Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> ECT are not actually tuples anymore (even if we agree that authority moves into environment), right?\r\n\r\nOver-obsessing on \"tuple\". Tuple and therefore ECT is fine (independent of number of items tuple'ed).",
          "createdAt": "2024-05-22T15:15:15Z",
          "updatedAt": "2024-05-22T15:15:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The CI is broken.\r\n\r\nLocally, this PR compiles fine.\r\n\r\nWe decided to merge it into main nevertheless to prioritise functionality over safety.\r\n\r\nSee #243 ",
          "createdAt": "2024-06-19T14:21:07Z",
          "updatedAt": "2024-06-19T14:21:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI856gIVB",
          "commit": {
            "abbreviatedOid": "2b8e00e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T12:39:21Z",
          "updatedAt": "2024-05-14T12:39:22Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nA Verifier has to reconcile its various inputs, CoRIM being one of them.\r\n```",
              "createdAt": "2024-05-14T12:39:22Z",
              "updatedAt": "2024-05-14T12:39:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857BL72",
          "commit": {
            "abbreviatedOid": "b0d15cf"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-17T16:36:03Z",
          "updatedAt": "2024-05-17T16:36:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI857BPsP",
          "commit": {
            "abbreviatedOid": "b0d15cf"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-17T16:39:05Z",
          "updatedAt": "2024-05-17T16:39:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI857IiwV",
          "commit": {
            "abbreviatedOid": "30ccb96"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-20T09:56:19Z",
          "updatedAt": "2024-05-20T09:56:19Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Compared against whom ?",
              "createdAt": "2024-05-20T09:56:19Z",
              "updatedAt": "2024-05-20T09:56:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857TUU7",
          "commit": {
            "abbreviatedOid": "61cd554"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T13:32:12Z",
          "updatedAt": "2024-05-21T13:32:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIf the comparison is satisfied, then additional Claims about the Attester are added to the ACS.\r\n```",
              "createdAt": "2024-05-21T13:32:12Z",
              "updatedAt": "2024-05-22T14:12:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857TViG",
          "commit": {
            "abbreviatedOid": "61cd554"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T13:34:05Z",
          "updatedAt": "2024-05-21T13:34:05Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Addressed in [4857331](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/232/commits/48573314c87a73fda94200a755c207e2efd21ec5)",
              "createdAt": "2024-05-21T13:34:05Z",
              "updatedAt": "2024-05-21T13:34:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857TX_f",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T13:38:02Z",
          "updatedAt": "2024-05-21T13:38:02Z",
          "comments": [
            {
              "originalPosition": 233,
              "body": "Isn't this going a bit far? This document definitely comes with CDDL for CoRIM in CBOR, right?",
              "createdAt": "2024-05-21T13:38:02Z",
              "updatedAt": "2024-05-21T13:38:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857TbGo",
          "commit": {
            "abbreviatedOid": "61cd554"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T13:42:57Z",
          "updatedAt": "2024-05-21T13:42:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Bulk of the document states ACS as Accepted Claims Set.  We need to agree on a common term and replace the entire document for consistency!",
              "createdAt": "2024-05-21T13:42:57Z",
              "updatedAt": "2024-05-21T13:42:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857T66o",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-21T14:32:00Z",
          "updatedAt": "2024-05-21T18:02:49Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nProducers of RATS Conceptual Messages can assert contradictory assertions.\r\nFor example, a compromised Attester may produce false assertions that create a conflict with an RVP's issued Reference Values.\r\nIn essence, if Evidence is not corroborated by Reference Value Providers' (RVP) assertions, then the RVP's assertions are not included in the internal representation of an Attester's actual state constructed by Verifiers: Attester-specific Actual-state Claims Set (ACS).\r\n```",
              "createdAt": "2024-05-21T14:32:00Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nFor example, if an appraisal procedure finds all of the components of a subsystem are configured correctly, the policy may direct the Verifier to produce new assertions, \"Subsystem=X\" has the Claim \"TRUSTED=TRUE\".\r\n```",
              "createdAt": "2024-05-21T14:33:29Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-21T14:33:53Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 115,
              "body": "```suggestion\r\nConsequently, the internal ACS structure is a reconciled conversation between several producers of RATS Conceptual Messages that has mapped each message into a consistent internal representation, has associated the identity of the corresponding RATS role with each assertion (the authority), and has applied Conceptual Message constraints to the assertion.\r\n```\r\n\r\nWhat is a conceptual message constraint?",
              "createdAt": "2024-05-21T14:34:41Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nThe CoRIM data model specified in this document covers the RATS Conceptual Message types, `Reference Values` and `Endorsements`.\r\nReference values and endorsements are required for Verifier reconciliation (and corresponding internal ACS creation) as illustrated in this Section.\r\n```",
              "createdAt": "2024-05-21T14:35:35Z",
              "updatedAt": "2024-05-21T18:33:27Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\n  ? &(authority: 3) => [ + $crypto-key-type-choice ]\r\n```",
              "createdAt": "2024-05-21T15:05:43Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 816,
              "body": "```suggestion\r\nEvidence is divided up into one or more `ev` relations where the `condition` ECT identifies the Attester from which Evidence was collected.\r\nIf the Verifier maintains multiple Attester sessions, the Verifier session may be identified using an ECT.\r\n```\r\nWhat is meant by a session? Just serving simultaneous requests? I'm not sure this \"may be identified\" comment is valuable. I might even consider it detrimental since it could lead to subtle semantic errors.",
              "createdAt": "2024-05-21T15:11:55Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 818,
              "body": "```suggestion\r\nEvidence information is mapped to an `addition` ECT that populates each of the ECT fields.\r\nIf the Evidence doesn't have a value for the mandatory fields, the Verifier MUST NOT accept any assertions from the Evidence.\r\n```\r\n\"process\" is not specific enough.",
              "createdAt": "2024-05-21T15:13:56Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 825,
              "body": "are `;` delimiters also considered a cause for a line break?",
              "createdAt": "2024-05-21T15:15:49Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 827,
              "body": "```suggestion\r\nor may be supplied dynamically.\r\nThe handling of dynamic Evidence transformation algorithms is out of scope for this document.\r\n```",
              "createdAt": "2024-05-21T15:16:10Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 831,
              "body": "```suggestion\r\n### The Accepted Claims Set\r\n```",
              "createdAt": "2024-05-21T15:16:30Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 837,
              "body": "coalesce into 1 line per sentence?",
              "createdAt": "2024-05-21T15:16:54Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 843,
              "body": "Coalesce to 1 line?",
              "createdAt": "2024-05-21T15:17:06Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 843,
              "body": "```suggestion\r\nfor the purposes of this document, appraisal is described in terms of the above cited internal representation.\r\n```",
              "createdAt": "2024-05-21T15:17:25Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 954,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:09Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 958,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:23Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 961,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:34Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 966,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:42Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 971,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:52Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 973,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:01:57Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 976,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:02:02Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 995,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:02:25Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 993,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:02:33Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 530,
              "body": "I don't think phases 3 and 4 are distinct, since reference values are just a special case of conditional endorsements, i.e., if attester makes claims {c, ...}, then rvp makes claims {c, ...}.",
              "createdAt": "2024-05-21T17:31:50Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 515,
              "body": "```suggestion\r\nInputs are transformed from their external representations to an internal representation.\r\n```",
              "createdAt": "2024-05-21T17:32:17Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 518,
              "body": "I don't see this as distinct from phase 1, since transforming CMW to an internal representation can just be transforming to the augmentation. You don't necessarily need an intermediate representation.\r\n\r\nKeeping them distinct is fine for clarity so long as that's called out. Recommendation above.",
              "createdAt": "2024-05-21T17:33:28Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 543,
              "body": "Phases 5 and 6 are about verifier policy and therefore outside the RATS charter. I don't think we necessarily impose a phasing on policy engines. You might instead document this phasing in the Veraison implementation's documentation.\r\n\r\nThis is also why I think that separating policy from RATS is arbitrary, since the ACS abstract machine is obviously a mini policy engine, and CoRIM documents are obviously policy fragments. By imposing any semantics on their interpretation, you're imposing policy. There is no IETF standard for a policy evaluation language, though Rego is a potential implementation. CoRIM triples are thus a simplified policy evaluation language with a semantics specified through the ACS assert/match abstract machine. We can address the rewrite of \"augmentation\" and \"matching\" to be more clear about the semantic laws we're specifying in a follow-up PR related to https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/231\r\n\r\nI think the Appraisal Procedure section is good to include, but it should be considered an example implementation rather than exactly how the process should proceed.",
              "createdAt": "2024-05-21T17:43:34Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 492,
              "body": "\"CoRIM-based inputs\" is confusing. Evidence is not necessarily in CoRIM. Indeed your inputs are CoRIM and CMW and [...]. I see this section as more an appraisal of evidence with a CoRIM-encoded knowledge base plus unspecified policy representation and logic.",
              "createdAt": "2024-05-21T17:45:46Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 156,
              "body": "I don't think this authority has a single meaning. As a condition, it's meant as an OR. As a claim it's meant as an AND. By using the same data model and names, that becomes confusing. Further down you say comparisons are looking for overlap.. :(",
              "createdAt": "2024-05-21T17:50:58Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 496,
              "body": "I think this is a dangerous proposition to pose without referencing standards work underway to do this unification. I think there are phase distinction problems that muddy the waters and thus there should be a shared core that is neither concise evidence entirely nor CoRIM entirely. That shared core needs to be specified and not quod libet.",
              "createdAt": "2024-05-21T17:53:10Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 495,
              "body": "```suggestion\r\nCoRIM defines content media types for Conceptual Messages that include Endorsements and Reference Values.\r\n```",
              "createdAt": "2024-05-21T17:55:08Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 502,
              "body": "1 line?",
              "createdAt": "2024-05-21T17:55:27Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 506,
              "body": "```suggestion\r\nThey are not required to use the same internal representation or evaluation order described by this specification.\r\n```",
              "createdAt": "2024-05-21T17:57:10Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 510,
              "body": "```suggestion\r\nThe appraisal procedure is divided into several logical phases for clarity.\r\n```",
              "createdAt": "2024-05-21T17:57:46Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            },
            {
              "originalPosition": 5,
              "body": "Indeed \"actual\" is more philosophical. We're only accepting an authority's attestation of actual state. Ceci n'est pas une pipe.",
              "createdAt": "2024-05-21T18:00:09Z",
              "updatedAt": "2024-05-21T18:02:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857V315",
          "commit": {
            "abbreviatedOid": "61cd554"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T18:26:58Z",
          "updatedAt": "2024-05-21T18:26:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm OK with \"Actual-state Claims Set\" but it should be applied consistently. I prefer using ACS everywhere and define ACS in one place. Then it's easy to make a global change.",
              "createdAt": "2024-05-21T18:26:58Z",
              "updatedAt": "2024-05-21T18:26:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857V6fl",
          "commit": {
            "abbreviatedOid": "4a31c56"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T18:32:00Z",
          "updatedAt": "2024-05-22T14:13:09Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "I don't understand what \"(0)\" and \"(1)\" are adding.",
              "createdAt": "2024-05-21T18:32:00Z",
              "updatedAt": "2024-05-22T14:13:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857dxbA",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:20:48Z",
          "updatedAt": "2024-05-22T14:20:48Z",
          "comments": [
            {
              "originalPosition": 502,
              "body": "fixed",
              "createdAt": "2024-05-22T14:20:48Z",
              "updatedAt": "2024-05-22T14:20:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eL_9",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:49:02Z",
          "updatedAt": "2024-05-22T14:49:02Z",
          "comments": [
            {
              "originalPosition": 825,
              "body": "no, not a cause for a line break\r\nin simple kramdown `;` is just a character used in sentences",
              "createdAt": "2024-05-22T14:49:02Z",
              "updatedAt": "2024-05-22T14:49:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eNcx",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:51:16Z",
          "updatedAt": "2024-05-22T14:51:17Z",
          "comments": [
            {
              "originalPosition": 837,
              "body": "fixed",
              "createdAt": "2024-05-22T14:51:17Z",
              "updatedAt": "2024-05-22T14:51:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eNn1",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:51:29Z",
          "updatedAt": "2024-05-22T14:51:29Z",
          "comments": [
            {
              "originalPosition": 827,
              "body": "fixed",
              "createdAt": "2024-05-22T14:51:29Z",
              "updatedAt": "2024-05-22T14:51:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eOHV",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:51:58Z",
          "updatedAt": "2024-05-22T14:51:59Z",
          "comments": [
            {
              "originalPosition": 843,
              "body": "fixed",
              "createdAt": "2024-05-22T14:51:58Z",
              "updatedAt": "2024-05-22T14:51:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eO8L",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:52:53Z",
          "updatedAt": "2024-05-22T14:52:54Z",
          "comments": [
            {
              "originalPosition": 843,
              "body": "fixed",
              "createdAt": "2024-05-22T14:52:54Z",
              "updatedAt": "2024-05-22T14:52:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857ePdS",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:53:42Z",
          "updatedAt": "2024-05-22T14:53:42Z",
          "comments": [
            {
              "originalPosition": 954,
              "body": "fixed",
              "createdAt": "2024-05-22T14:53:42Z",
              "updatedAt": "2024-05-22T14:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857ePu0",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:54:07Z",
          "updatedAt": "2024-05-22T14:54:07Z",
          "comments": [
            {
              "originalPosition": 958,
              "body": "fixed",
              "createdAt": "2024-05-22T14:54:07Z",
              "updatedAt": "2024-05-22T14:54:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eP9s",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:54:27Z",
          "updatedAt": "2024-05-22T14:54:27Z",
          "comments": [
            {
              "originalPosition": 961,
              "body": "fixed",
              "createdAt": "2024-05-22T14:54:27Z",
              "updatedAt": "2024-05-22T14:54:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eQZF",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:55:06Z",
          "updatedAt": "2024-05-22T14:55:06Z",
          "comments": [
            {
              "originalPosition": 966,
              "body": "fixed",
              "createdAt": "2024-05-22T14:55:06Z",
              "updatedAt": "2024-05-22T14:55:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eQfQ",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:55:15Z",
          "updatedAt": "2024-05-22T14:55:15Z",
          "comments": [
            {
              "originalPosition": 971,
              "body": "fixed",
              "createdAt": "2024-05-22T14:55:15Z",
              "updatedAt": "2024-05-22T14:55:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eQmP",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:55:25Z",
          "updatedAt": "2024-05-22T14:55:25Z",
          "comments": [
            {
              "originalPosition": 973,
              "body": "fixed",
              "createdAt": "2024-05-22T14:55:25Z",
              "updatedAt": "2024-05-22T14:55:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eQ8D",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:55:54Z",
          "updatedAt": "2024-05-22T14:55:55Z",
          "comments": [
            {
              "originalPosition": 973,
              "body": "fixed",
              "createdAt": "2024-05-22T14:55:55Z",
              "updatedAt": "2024-05-22T14:55:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eREI",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:56:06Z",
          "updatedAt": "2024-05-22T14:56:06Z",
          "comments": [
            {
              "originalPosition": 976,
              "body": "fixed",
              "createdAt": "2024-05-22T14:56:06Z",
              "updatedAt": "2024-05-22T14:56:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eRXN",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:56:33Z",
          "updatedAt": "2024-05-22T14:56:34Z",
          "comments": [
            {
              "originalPosition": 995,
              "body": "fixed",
              "createdAt": "2024-05-22T14:56:33Z",
              "updatedAt": "2024-05-22T14:56:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eRj_",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:56:51Z",
          "updatedAt": "2024-05-22T14:56:51Z",
          "comments": [
            {
              "originalPosition": 993,
              "body": "fixed",
              "createdAt": "2024-05-22T14:56:51Z",
              "updatedAt": "2024-05-22T14:56:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eSh4",
          "commit": {
            "abbreviatedOid": "4857331"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T14:57:52Z",
          "updatedAt": "2024-05-22T14:57:52Z",
          "comments": [
            {
              "originalPosition": 495,
              "body": "combined old and new",
              "createdAt": "2024-05-22T14:57:52Z",
              "updatedAt": "2024-05-22T14:57:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857eeRN",
          "commit": {
            "abbreviatedOid": "787c0c2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T15:11:35Z",
          "updatedAt": "2024-05-22T15:11:36Z",
          "comments": [
            {
              "originalPosition": 492,
              "body": "CMW is an umbrella structure ofr all types of RATS Conceptual Messages. You could - I am making things up here - bundle TPM Evidence, EAT Attestation Results, and a CoRIM in a CMW (each with their own media type).",
              "createdAt": "2024-05-22T15:11:35Z",
              "updatedAt": "2024-05-22T15:11:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI857efGk",
          "commit": {
            "abbreviatedOid": "787c0c2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T15:12:51Z",
          "updatedAt": "2024-05-22T15:12:51Z",
          "comments": [
            {
              "originalPosition": 496,
              "body": "I do not want to loose this concern/comment when we merge the PR. @deeglaze Do you want to rescue this comment into a better visible issue?",
              "createdAt": "2024-05-22T15:12:51Z",
              "updatedAt": "2024-05-22T15:12:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8570pNj",
          "commit": {
            "abbreviatedOid": "e3ee627"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-24T16:36:14Z",
          "updatedAt": "2024-05-24T18:17:39Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM)\u2013a CBOR {{-cbor}} based data model addressing the above challenges by using an extensible format common to all supply chain actors and Verifiers.\r\n```\r\nSemicolon is the wrong punctuation for the explanatory fragment. An emdash is suitable.",
              "createdAt": "2024-05-24T16:36:14Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 65,
              "body": "A semicolon is where you could have chosen to end the sentence but didn't. The following text should be a grammatically a sentence of its own, but the manner of use of \"because\" makes this a fragment and not a complete sentence.\r\n\r\nI also don't quite understand the use of \"besides,\" here, since it's typically used as an argumentative follow-up to a rhetorical dismissal. I would suggest \"As such,\".\r\n\r\n```suggestion\r\nAs such, one supply chain actor will only provide the subset of characteristics that they know about the Attester. A proper subset is typical because a certain supply chain actor will be the responsible authority for only a system component/module that is measured amongst a long chain of measurements.\r\n```\r\n\r\n```",
              "createdAt": "2024-05-24T16:44:55Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nAttesters vary across vendors and even across products from a single vendor.\r\n```",
              "createdAt": "2024-05-24T16:46:12Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 67,
              "body": "Run-on passive sentence. Attesters are named globally uniquely by environment, no? A family of attesters over a system's lifecycle can evolve. Or are we talking about the mutable state of an attester changing and therefore affecting the measurements that the attester signs? This hints at a confusing overloading of \"Attester\" as either the  the root of trust for measurement or the node that is being measured. Presumably the attester itself isn't changing, and even if the evidence collection code changes, that state change is pre-approved by the initially measured logic of the attester.\r\n\r\nThis sentence also doesn't fit the narrative prior or following. What do you mean to convey here? Are you continuing the thought that within a single product the attester may vary? I think that calls back to the notion of a family of attesters as new product versions roll out.\r\n\r\n```suggestion\r\nWithin a single product even, a newly deployed version may alter the Attester's semantics amongst the product's prior family of Attesters.\r\nNew versions may bring new measurement types from Evidence and new security attributes from an Endorser.\r\n```",
              "createdAt": "2024-05-24T16:52:05Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nCoRIM enables Verifiers to reconcile a complex distributed supply chain into a single homogeneous view. See {{sec-verifier-rec}}.\r\n```",
              "createdAt": "2024-05-24T17:00:38Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 76,
              "body": "\"Terms and concepts are always referenced as proper nouns, i.e., with Capital Letters.\"",
              "createdAt": "2024-05-24T17:02:12Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 173,
              "body": "Passive.\r\n```suggestion\r\nWhile this specification focuses on the CoRIM format itself, it is vital to understand its intended meaning for the mechanics of how Verifiers should process CoRIM documents.\r\n```",
              "createdAt": "2024-05-24T17:05:25Z",
              "updatedAt": "2024-05-29T14:38:05Z"
            },
            {
              "originalPosition": 177,
              "body": "```suggestion\r\nNamely, the provenance of the inputs is tracked as *authority*.\r\nIn the case of CoRIM, the CoRIM issuer identifies its authority.\r\n```",
              "createdAt": "2024-05-24T17:06:56Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 182,
              "body": "```suggestion\r\nThe Verifier's objective is to produce a list of Claims that describe the Attester's presumed actual state.\r\n```\r\nThough see below.",
              "createdAt": "2024-05-24T17:08:17Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 185,
              "body": "Plurality mismatch. Best to attempt to use singular terms when possible.\r\n```suggestion\r\nIn essence, if Evidence is not corroborated by a Reference Value Provider's (RVP) assertions, then the RVP's Claims are not included in the internal representation of an Attester's actual state, a.k.a., Accepted Claims Set (ACS).\r\n```\r\nThough we should get on the same page about what is a property, assertion, claim, etc. Given Ned's comment that this is not a JWT, probably using \"Claim\" is indeed the wrong approach. He proposed \"property\", but that doesn't sound right to me.\r\n\r\nWe use the term \"assertion\" a lot, so perhaps just \"assertions\" is better, like you have here? Each authority asserts a measurement, (conditional) endorsement, or reference value, and acceptance is based on policy for who asserted what.\r\n\r\nBy using \"assertion\", the logical connection between matching and implication is clearer as well. The ACS becomes the CAS, or \"current assertions set\"?\r\n\r\nLook, pink is clearly the best color for bike sheds.\r\n\r\n---\r\n\r\nFor another note, \"corroborated\" as the chosen term is going to cause some communication problems with my colleagues whose first language is not English. It's a bit of a tongue twister. I've been calling this notion \"support\" in my own writings, and its use in programming languages' description of scope follows similar semantics.\r\n\r\nWhen I want to know if an assertion is supported by an authority X, then I check if only assertions with X in their support collectively imply the assertion. That's the entirety of the logical interpretation of the ACS and its interaction with verifier semantics. The (profile-specific) model then contains the meat of what implications hold for what data representations.",
              "createdAt": "2024-05-24T17:09:49Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 211,
              "body": "Appraisal policy and appraisal procedure are terms previously encountered, but not an appraisal itself, which I understand as describing a result.\r\n```suggestion\r\nIn this document CDDL is used to specify both the CoRIM structure and to specify an internal representation for use in the appraisal procedure.\r\n```\r\nThe language describing a language is a metalanguage. There is no \"internal\" for a standard.",
              "createdAt": "2024-05-24T17:27:10Z",
              "updatedAt": "2024-05-29T14:53:25Z"
            },
            {
              "originalPosition": 221,
              "body": "Plurality mismatch\r\n```suggestion\r\nConceptual Messages interact with an ACS by specifying criteria that should be met by the ACS and by presenting the assertions that should be added to the ACS if the criteria are satisfied.\r\n```",
              "createdAt": "2024-05-24T17:29:58Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 222,
              "body": "Are ACS and ARS the only two things that have internal representations or do Conceptual Messages have as well? If so, please add the Oxford comma. If not, please rephrase for unambiguous parse.\r\n```suggestion\r\nInternal representations of Conceptual Messages, ACS, and ARS should satisfy the following requirements for Verifier reconciliation and appraisal processing:\r\n```\r\n\r\nThis also appears to be the first use of \"ARS\", so I don't know what its meaning is. Line 1754 appears to give a technical definition, but not the acronym expansion. It looks like it should be \"ARs\" for \"Attestation Results\", but maybe there's a different meaning for the 'S'?",
              "createdAt": "2024-05-24T17:32:03Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 236,
              "body": "```suggestion\r\n| Evidence | List of Evidence claims | If the Attester is authenticated, add Evidence claims to the ACS with Attester authority |\r\n```",
              "createdAt": "2024-05-24T17:35:39Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 237,
              "body": "```suggestion\r\n| Reference Values | List of Reference Values claims | If a reference value in a CoRIM matches claims in the ACS, then the authority of the CoRIM issuer is added to those claims. |\r\n```",
              "createdAt": "2024-05-24T17:36:54Z",
              "updatedAt": "2024-05-31T14:11:29Z"
            },
            {
              "originalPosition": 239,
              "body": "```suggestion\r\n| Series Endorsements | List of expected actual state claims, Series of tuples containing selection and series Endorsement claims | If the list of expected claims are in the ACS, and if the series selection condition is satisfied, then add the series Endorsement claims for the first series tuple with satisfied condition to the ACS with Endorser authority |\r\n```",
              "createdAt": "2024-05-24T17:38:51Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 240,
              "body": "```suggestion\r\n| Verifier | List of expected actual state claims, List of Verifier-generated claims | If the list of expected claims are in the ACS, then add the list of Verifier-generated claims to the ACS with Verifier authority |\r\n```",
              "createdAt": "2024-05-24T17:41:09Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 241,
              "body": "```suggestion\r\n| Policy | List of expected actual state claims, List of Policy-generated claims | If the list of expected claims are in the ACS, then add the list of Policy-generated claims to the ACS with Policy Owner authority |\r\n```",
              "createdAt": "2024-05-24T17:41:22Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 253,
              "body": "I think in terms of math, so inputs are immutable values provided to a deterministic function. I don't think of inputs as changing. Can we change the opening to immediately dispel any \"quantum woo\" that the section title induces?\r\n\r\n\"Input quantization refers to the approximation of a continuous stream of knowledge base state changes (i.e., the set of inputs to appraisal). Approximation is required because system latency is always non-zero. For example, a certificate can be revoked immediately after checking that it's current. A missing security property may be added because the analysis job to assign it just finished.\"\r\n\r\nEven still, the use of quantum seems unnecessary. I would just ask for appraisal to be hermetic given the same starting knowledge base.",
              "createdAt": "2024-05-24T17:48:44Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 254,
              "body": "```suggestion\r\nThe input quantum refers to the interval when a Verifier stops accepting new inputs and processes current inputs.\r\n```",
              "createdAt": "2024-05-24T17:59:25Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 546,
              "body": "```suggestion\r\n: A structure containing a set of values that describe a Target Environment plus a set of measurement / Claim values that describe properties of the Target Environment.\r\nThe ECT also contains authority which identifies the entity that authored the ECT.\r\n```",
              "createdAt": "2024-05-24T18:02:46Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 557,
              "body": "```suggestion\r\n: The entity asserting that a claim is true.\r\nTypically, a Claim is asserted using a cryptographic key to digitally sign the Claim. A cryptographic key can be a proxy for a human or organizational entity.\r\n```",
              "createdAt": "2024-05-24T18:03:09Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 560,
              "body": "```suggestion\r\n: A structure that holds ECTs that have been appraised.\r\nThe ACS contains Attester state that has been authorized by Verifier processing and Appraisal Policy.\r\n```",
              "createdAt": "2024-05-24T18:03:59Z",
              "updatedAt": "2024-05-31T14:27:35Z"
            },
            {
              "originalPosition": 644,
              "body": "```suggestion\r\nThe `addition` is a list of ECTs with Evidence to be appraised.\r\n```",
              "createdAt": "2024-05-24T18:04:41Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 669,
              "body": "```suggestion\r\nIf the `condition` containing reference ECTs overlaps Evidence ECTs then the Evidence ECTs are re-asserted, but with RVP authority as contained in the `addition`.\r\n```\r\nOverlap is not the right property, since you don't want to authorize claims by line-item, but rather as a whole.",
              "createdAt": "2024-05-24T18:07:40Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1278,
              "body": "I don't think we've discussed semantics of assigning namespaces at all. They appear to be a means of sharing profile-local extensions across multiple profiles, but there is no discussions for how these come into being. We can punt on this for now, but please add a reference to https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/235",
              "createdAt": "2024-05-24T18:12:34Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1322,
              "body": "```suggestion\r\nA profile may specify handling for new CBOR tagged Reference Values.\r\nThe profile must specify how to compare the CBOR tagged Reference Value against the ACS.\r\n```",
              "createdAt": "2024-05-24T18:13:19Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1323,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-24T18:13:26Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1324,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-24T18:13:33Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1330,
              "body": "```suggestion\r\nNote that the verifier may compare Reference Values in any order, so the comparison should not be stateful.\r\n```",
              "createdAt": "2024-05-24T18:13:56Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 1331,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-24T18:14:04Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 665,
              "body": "```suggestion\r\nAn internal representation of Reference Values uses the `rv` relation, which is a list of ECTs that contains possible states\r\n```\r\n```suggestion\r\nAn internal representation of Reference Values uses the `rv` relation, which is a list of ECTs that contains possible states and a list of ECTs that contain actual states assserted with RVP authority.\r\n```",
              "createdAt": "2024-05-24T18:14:26Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 666,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-05-24T18:14:38Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            },
            {
              "originalPosition": 868,
              "body": "```suggestion\r\n> * How the Attesting Environment is identified in Evidence\r\n> * Which namespace each of its local extensions are bound to\r\n```\r\n\r\nMaybe, but feel free to kick over do issue #235",
              "createdAt": "2024-05-24T18:16:15Z",
              "updatedAt": "2024-05-24T18:17:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858odHe",
          "commit": {
            "abbreviatedOid": "e32c461"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T14:21:17Z",
          "updatedAt": "2024-05-31T14:21:17Z",
          "comments": [
            {
              "originalPosition": 253,
              "body": "Recommend creating a new issue to reword the \"quantizing inputs\" section to remove \"quantum\".",
              "createdAt": "2024-05-31T14:21:17Z",
              "updatedAt": "2024-05-31T14:21:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858ofgO",
          "commit": {
            "abbreviatedOid": "e32c461"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T14:25:46Z",
          "updatedAt": "2024-05-31T14:25:46Z",
          "comments": [
            {
              "originalPosition": 561,
              "body": "```suggestion\r\nAccepted Claims Set (ACS):\r\n```",
              "createdAt": "2024-05-31T14:25:46Z",
              "updatedAt": "2024-05-31T14:25:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858T8j8",
          "commit": {
            "abbreviatedOid": "54ebcc6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T14:31:19Z",
          "updatedAt": "2024-05-31T14:48:02Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Need to express it better !\r\n",
              "createdAt": "2024-05-29T14:31:19Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 191,
              "body": "`Appraisal Claims Set` (Again this is ACS)",
              "createdAt": "2024-05-29T14:50:23Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 222,
              "body": "ARS is not defined till this point!",
              "createdAt": "2024-05-29T14:56:53Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 255,
              "body": "```suggestion\r\nTo be completed!\r\nInputs may change soon after a Verifier processes them causing the Verifier to consider how often it should check for updated inputs.\r\n```",
              "createdAt": "2024-05-31T14:23:34Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 561,
              "body": "```suggestion\r\nAccepted Claims Set (ACS):\r\n```\r\n",
              "createdAt": "2024-05-31T14:28:05Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 580,
              "body": "```suggestion\r\nAdditionally, ECTs define an internal representation of the ACS and ARS. See {{sec-ir-acs}} and {{sec-ir-ars}}.\r\n```",
              "createdAt": "2024-05-31T14:31:26Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            },
            {
              "originalPosition": 669,
              "body": "```suggestion\r\nAn internal representation of Reference Values uses the `rv` relation, which is a list of ECTs that contains possible states and a list of ECTs that contain actual states asserted with RVP authority.\r\n```",
              "createdAt": "2024-05-31T14:36:14Z",
              "updatedAt": "2024-05-31T14:48:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858ou9R",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGMT!",
          "createdAt": "2024-05-31T14:51:05Z",
          "updatedAt": "2024-05-31T14:51:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI858ovQF",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-31T14:51:44Z",
          "updatedAt": "2024-05-31T14:51:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI858prIi",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "some late comments, apologies",
          "createdAt": "2024-05-31T16:48:16Z",
          "updatedAt": "2024-05-31T17:24:21Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nIn a complex supply chain, multiple actors will likely produce these values over several points in time.\r\n```",
              "createdAt": "2024-05-31T16:48:16Z",
              "updatedAt": "2024-05-31T17:24:21Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nThis document specifies Concise Reference Integrity Manifests (CoRIM), a CBOR {{-cbor}} based data model addressing the above challenges by using an extensible format common to all supply chain actors and Verifiers.\r\n```",
              "createdAt": "2024-05-31T16:50:12Z",
              "updatedAt": "2024-05-31T17:24:21Z"
            },
            {
              "originalPosition": 91,
              "body": "This sentence is not entirely clear to me.",
              "createdAt": "2024-05-31T16:53:54Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nA Verifier needs to reconcile its various inputs, with CoRIM being one of them.\r\nIn addition to the external CoRIM documents, the Verifier is expected to create an internal representation for each input and map each external representation to an internal one.\r\nBy using the internal representation, the Verifier processes inputs as if they are part of a conversation, keeping track of who said what.\r\nThe origin of the inputs is tracked as *authority*.\r\nThe authority for the Claims in a CoRIM is the CoRIM issuer.\r\n```",
              "createdAt": "2024-05-31T16:57:04Z",
              "updatedAt": "2024-06-05T14:48:44Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\nFor example, a compromised Attester may produce false claims that conflict with the Reference Values provided by a Reference Value Provider (RVP).\r\n```",
              "createdAt": "2024-05-31T17:09:20Z",
              "updatedAt": "2024-06-05T14:26:17Z"
            },
            {
              "originalPosition": 103,
              "body": "```suggestion\r\nIn essence, if Evidence is not corroborated by an RVP's Claims, then the RVP's Claims are not included in the internal representation of an Attester's actual state, a.k.a., Accepted Claims Set (ACS).\r\n```",
              "createdAt": "2024-05-31T17:10:45Z",
              "updatedAt": "2024-06-05T14:29:02Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nThe CoRIM data model specified in this document covers the RATS Conceptual Message types, \"Reference Values\" and \"Endorsements\".\r\n```",
              "createdAt": "2024-05-31T17:15:16Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\nReference values and Endorsements are required for Verifier reconciliation, and Evidence is required for corresponding internal ACS creation as illustrated in {{sec-interact-acs}}.\r\n```",
              "createdAt": "2024-05-31T17:16:39Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 126,
              "body": "need to expand \"ARS\" on first use :-)",
              "createdAt": "2024-05-31T17:18:27Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 133,
              "body": "unclear what \"selection\" means in this context",
              "createdAt": "2024-05-31T17:19:36Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 141,
              "body": "add a reference to the tracking issue instead",
              "createdAt": "2024-05-31T17:20:53Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            },
            {
              "originalPosition": 253,
              "body": "I agree with @deeglaze ",
              "createdAt": "2024-05-31T17:22:00Z",
              "updatedAt": "2024-05-31T17:24:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858qBKX",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T17:38:24Z",
          "updatedAt": "2024-05-31T17:38:25Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "It is a second stage condition. \r\nThe series structure is a list of condition-addition 2-tuples. Selection is another word for condition that isn't confused with the endorsement's first-stage condition.\r\nPossibly, the second sentence here is a clearer explanation of selection. The current text assumes the reader read ahead to understand it's use here.",
              "createdAt": "2024-05-31T17:38:24Z",
              "updatedAt": "2024-05-31T17:38:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858qUPv",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T18:20:57Z",
          "updatedAt": "2024-05-31T18:20:57Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "OK, thanks. The problem is this is not self-contained.  At least there should be a forward reference.",
              "createdAt": "2024-05-31T18:20:57Z",
              "updatedAt": "2024-05-31T18:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858q1w5",
          "commit": {
            "abbreviatedOid": "b7c9e50"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested change",
          "createdAt": "2024-05-31T19:45:19Z",
          "updatedAt": "2024-05-31T19:46:11Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "```suggestion\r\n| Series Endorsements | List of expected actual state claims and a series of selection-addition tuples | If the expected claims are in the ACS, and if the series selection condition is satisfied, then add the additional claims to the ACS with Endorser authority. See {{sec-ir-end-val}} |\r\n```",
              "createdAt": "2024-05-31T19:45:19Z",
              "updatedAt": "2024-05-31T19:46:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI858rBAH",
          "commit": {
            "abbreviatedOid": "b7c9e50"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T20:15:12Z",
          "updatedAt": "2024-05-31T20:15:12Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "nice, thanks!",
              "createdAt": "2024-05-31T20:15:12Z",
              "updatedAt": "2024-05-31T20:15:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859Ibfn",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:17:47Z",
          "updatedAt": "2024-06-05T14:17:47Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nThis specification describes the CoRIM format and documents how a Verifier should process the CoRIM to enable CoRIM authors to convey their intended meaning.\r\n```",
              "createdAt": "2024-06-05T14:17:47Z",
              "updatedAt": "2024-06-05T14:55:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859Iffs",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:23:40Z",
          "updatedAt": "2024-06-05T14:23:40Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Thanks for the attempt to clarify the sentence.\r\n\r\nHowever, the document focuses on the description of the data format & the processing.  There is no primary vs secondary focus.",
              "createdAt": "2024-06-05T14:23:40Z",
              "updatedAt": "2024-06-05T14:23:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859IgPN",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:24:46Z",
          "updatedAt": "2024-06-05T14:24:46Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "We agreed to keep the older version, of the text as there is no permanent external representation and New text 167 creates that `ambiguity`",
              "createdAt": "2024-06-05T14:24:46Z",
              "updatedAt": "2024-06-05T14:24:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859IpX1",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:36:45Z",
          "updatedAt": "2024-06-05T14:36:45Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "which \"older version\" are you referring to?\r\n\r\nBoth OLD and NEW have the same \"external\"...",
              "createdAt": "2024-06-05T14:36:45Z",
              "updatedAt": "2024-06-05T14:36:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859IqDh",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:37:45Z",
          "updatedAt": "2024-06-05T14:37:45Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "```suggestion\r\nInternal representations of Conceptual Messages, ACS, and Attestation Results Set (ARS) should satisfy the following requirements for Verifier reconciliation and appraisal processing:\r\n```",
              "createdAt": "2024-06-05T14:37:45Z",
              "updatedAt": "2024-06-05T14:37:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859IrcI",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:39:41Z",
          "updatedAt": "2024-06-05T14:39:42Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "Add a reference to ARS",
              "createdAt": "2024-06-05T14:39:42Z",
              "updatedAt": "2024-06-05T14:39:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859ItT2",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:42:34Z",
          "updatedAt": "2024-06-05T14:42:34Z",
          "comments": [
            {
              "originalPosition": 146,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-06-05T14:42:34Z",
              "updatedAt": "2024-06-05T14:42:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859ItkZ",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T14:42:59Z",
          "updatedAt": "2024-06-05T14:42:59Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-06-05T14:42:59Z",
              "updatedAt": "2024-06-05T14:42:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859JT1j",
          "commit": {
            "abbreviatedOid": "8750da9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T15:45:07Z",
          "updatedAt": "2024-06-05T15:45:07Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "issue #242 ",
              "createdAt": "2024-06-05T15:45:07Z",
              "updatedAt": "2024-06-05T15:45:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI859JeuK",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T16:01:22Z",
          "updatedAt": "2024-06-05T16:01:22Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "Done",
              "createdAt": "2024-06-05T16:01:22Z",
              "updatedAt": "2024-06-05T16:01:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI8599vuR",
          "commit": {
            "abbreviatedOid": "69acee3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-12T15:07:50Z",
          "updatedAt": "2024-06-12T15:07:51Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "> which \"older version\" are you referring to?\r\n> \r\n> Both OLD and NEW have the same \"external\"...\r\n\r\nThe changes from @thomas-fossati has been addressed.",
              "createdAt": "2024-06-12T15:07:50Z",
              "updatedAt": "2024-06-12T15:07:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85-3QTU",
          "commit": {
            "abbreviatedOid": "9f6a91f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-19T14:12:17Z",
          "updatedAt": "2024-06-19T14:12:17Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "The corrected text fixes my previous concern.",
              "createdAt": "2024-06-19T14:12:17Z",
              "updatedAt": "2024-06-19T14:12:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI85-3Ydu",
          "commit": {
            "abbreviatedOid": "a5bde54"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-19T14:25:54Z",
          "updatedAt": "2024-06-19T14:25:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 245,
      "id": "PR_kwDOH6-tI85zYSOP",
      "title": "Clarify untagged value comparison requirements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/245",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As stated, it appears that keys of measurement-values-map in this document are given more leeway for specifying comparisons than profiles. I interpret the text as saying any untagged value for a key that is not 0 through 14 must be compared with binary equality. There is no MUST in the current language, so that does not seem to be the intention. A profile should be allowed to specify a comparison method as irregular as raw-value and raw-value-mask without the need for registering a CBOR tag number with the IANA.\r\n\r\nIf a profile's comparison method will be common to multiple profiles that are intended for general verifier consumption, then we just recommend that the comparison gets registered with a CBOR tag to avoid having to duplicate language and potentially very slightly deviate from the original meaning in different profiles.",
      "createdAt": "2024-06-24T14:54:32Z",
      "updatedAt": "2024-07-17T15:04:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "e183357c3523024de14256261f798f9486d7c6dc",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "comparison",
      "headRefOid": "eb53817a64082a3d76dd4c956032f90225f245d7",
      "closedAt": "2024-07-17T14:56:19Z",
      "mergedAt": "2024-07-17T14:56:19Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "03d0c398efb99ac14f0ea3147f00b5db8f029d05"
      },
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @yogeshbdeshpande updated following the meeting discussion.",
          "createdAt": "2024-07-10T15:46:43Z",
          "updatedAt": "2024-07-10T15:46:43Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll add the evidence transformation changes in another commit soon.",
          "createdAt": "2024-07-10T15:55:17Z",
          "updatedAt": "2024-07-10T15:55:17Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze I agree with Ned's comments. So if you apply them, I am happy to approve this..",
          "createdAt": "2024-07-11T17:57:07Z",
          "updatedAt": "2024-07-11T17:57:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86BUYTi",
          "commit": {
            "abbreviatedOid": "14ca269"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested changes.",
          "createdAt": "2024-07-10T15:55:05Z",
          "updatedAt": "2024-07-10T16:20:45Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nIf a codepoint's comparison algorithm is not stated or does not default to the comparison algorithms described in this specification, then the Verifier MUST compare the binary equality of the CBOR encodings of the values.\r\n```",
              "createdAt": "2024-07-10T15:55:05Z",
              "updatedAt": "2024-07-11T18:41:20Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nSpecifications that extend CoMID MUST also define comparison algorithms for their added codepoints.\r\n```\r\nA requirement to define a comparison alg is sufficient to cover hybrid cases as well.",
              "createdAt": "2024-07-10T15:57:23Z",
              "updatedAt": "2024-07-10T16:20:45Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nThe CBOR tag's registration specification SHOULD refer to a comparison algorithm found in this specification, specify it in another standard, or specify it in a CoRIM profile document.\r\n\r\nNote: The comparison algorithm of CBOR tagged values is determined by the key (i.e., codepoint) they appear under.\r\nIt is recommended, but not required, that comparison algorithms involving the same CBOR tag process the tagged information similarly across the different keys.\r\n```",
              "createdAt": "2024-07-10T16:13:38Z",
              "updatedAt": "2024-07-11T18:39:14Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nThe following subsections define the comparison algorithms for the `measurement-values-map` keys defined by this specification.\r\n```",
              "createdAt": "2024-07-10T16:19:11Z",
              "updatedAt": "2024-07-10T16:20:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Bf8Gy",
          "commit": {
            "abbreviatedOid": "3acde34"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T18:04:36Z",
          "updatedAt": "2024-07-11T18:04:37Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I would correct the `suggested` edit on New Line  2107 to:\r\n\r\nThe CBOR tag's registration specification SHOULD specify a comparison algorithm either in this specification or in an equivalent profile document of this specification",
              "createdAt": "2024-07-11T18:04:37Z",
              "updatedAt": "2024-07-11T18:04:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BgQTS",
          "commit": {
            "abbreviatedOid": "14ca269"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T18:28:56Z",
          "updatedAt": "2024-07-11T18:28:56Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": ">this specification or in an equivalent profile\r\n\r\nI was leaving the door open for other I-Ds or even other standards bodies could define extensions that result in the need for a comparison algorithm definition. The IANA experts are in charge of overseeing that the extensions are aligned with base corim and other standard extensions. CBOR Tags registry has corim earmarks that imply the alignment checks should happen. \r\n\r\nWhile a profile can't define a \"standard\" extension / comparison algorithm (based on an IANA registry), it can define non-standard one using CBOR tags' vendor specific range. \r\n\r\nI'm assuming the reader understands that to specify it in profile means they must be using CBOR tag's vendor specific range.",
              "createdAt": "2024-07-11T18:28:56Z",
              "updatedAt": "2024-07-11T18:44:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Bgbut",
          "commit": {
            "abbreviatedOid": "3acde34"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See additional comments / suggestions.",
          "createdAt": "2024-07-11T18:45:07Z",
          "updatedAt": "2024-07-11T18:45:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Bh6kN",
          "commit": {
            "abbreviatedOid": "b87d855"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T22:03:34Z",
          "updatedAt": "2024-07-11T22:03:34Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I don't know what vendor specific range you're talking about. https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml has 3 classes of ranges, and none of them suggest that a tag number can be reinterpreted in a vendor-specific way.",
              "createdAt": "2024-07-11T22:03:34Z",
              "updatedAt": "2024-07-11T22:03:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BiUqY",
          "commit": {
            "abbreviatedOid": "14ca269"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-11T23:25:15Z",
          "updatedAt": "2024-07-11T23:25:15Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "> I don't know what vendor specific range you're talking about. https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml has 3 classes of ranges, and none of them suggest that a tag number can be reinterpreted in a vendor-specific way.\r\n\r\nThe semantics for allocating from the first come first served range is the definition of what is behind the tag doesn't have to be in a standard specification. The requester can just say what it is. This process makes it effectively a vendor specific / defined CBOR tag. ",
              "createdAt": "2024-07-11T23:25:15Z",
              "updatedAt": "2024-07-11T23:25:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86CIA31",
          "commit": {
            "abbreviatedOid": "7acc5c1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-17T14:40:32Z",
          "updatedAt": "2024-07-17T14:40:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86CIMgJ",
          "commit": {
            "abbreviatedOid": "eb53817"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-17T14:55:49Z",
          "updatedAt": "2024-07-17T14:55:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86CIMtJ",
          "commit": {
            "abbreviatedOid": "eb53817"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-17T14:56:06Z",
          "updatedAt": "2024-07-17T14:56:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86CISaI",
          "commit": {
            "abbreviatedOid": "eb53817"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-17T15:04:08Z",
          "updatedAt": "2024-07-17T15:04:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 246,
      "id": "PR_kwDOH6-tI85zyfx6",
      "title": "ascii art",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/246",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "some ascii art I have made that may be useful as-is or as a starting point",
      "createdAt": "2024-06-27T15:20:43Z",
      "updatedAt": "2024-07-04T08:46:01Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "542276abae48a7bf96e15d318649f2c126fd0592",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "pics",
      "headRefOid": "e0242a44f3a531dd54e04bf229270c9b196b9620",
      "closedAt": "2024-07-04T08:45:55Z",
      "mergedAt": "2024-07-04T08:45:55Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "8a150bb9d96ce8d9825ea5565291e47fc9448cbc"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It is reasonable for the Verifier to assert new claims (which could be treated like endorsements) but the diagrams don't suggest this possibility exists. The use case for this is if the Verifier applies additional integrity checking operations (which is implied by the identity-key/attest-key triples and trust dependency triples. These are applied after the other endorsements, so it makes sense to show another ECS'''' IMHO. Possibly, our revised RATS Arch diagram should include a flow from the RP to the Verifier labeled \"Interesting Claims\". Trying to do this through some sort of backchannel between RP Owner and Verifier Owner seems dubious.\r\n\r\nAlso, the RATS Arch omitted a flow from the RP to the Verifier that allows the Verifier to know which claims are \"interesting\". This is different from Appraisal Policy because of the entity that originates it. Of course, we can say that this flow is out of scope (but exists), but it affects the staging. If the diagram models policy evaluation as a separate (but logical) phase, and the only input is appraisal policy then there isn't enough information available for an RP to specify a condition of which types of claims are interesting. \r\n\r\nI also think there should be a box for Attestation Results Processing that formats internal formatted ARs into external formatted ARs and applies signatures. This is symmetrical with the CoRIM Processor box that verifies signatures on inputs and transforms external representations to internal representation.",
          "createdAt": "2024-06-27T19:56:03Z",
          "updatedAt": "2024-06-27T20:00:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86AmuoH",
          "commit": {
            "abbreviatedOid": "e0242a4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-03T23:09:39Z",
          "updatedAt": "2024-07-04T08:42:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 247,
      "id": "PR_kwDOH6-tI850HJtO",
      "title": "Remove appendices describing evidence translation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/247",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "removed evidence translation appendices and references to these sections.\r\nThey can now be found in: https://github.com/ietf-rats-wg/draft-smith-rats-evidence-trans",
      "createdAt": "2024-07-01T19:45:24Z",
      "updatedAt": "2024-07-03T16:09:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "854d4c2113d2a0f24ad1c02acf973cd7ca74246b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "remove-evidence-trans-sections",
      "headRefOid": "98bbf3d5581d96fbc8302eaa2385005a18f13798",
      "closedAt": "2024-07-03T16:09:10Z",
      "mergedAt": "2024-07-03T16:09:10Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "0bac1fb8b5c4e6d3988f1d0bb25ff3b00300771d"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This addresses issue #240 ",
          "createdAt": "2024-07-01T19:48:20Z",
          "updatedAt": "2024-07-01T19:48:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86Air1l",
          "commit": {
            "abbreviatedOid": "98bbf3d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-03T14:13:16Z",
          "updatedAt": "2024-07-03T14:13:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Ajtvf",
          "commit": {
            "abbreviatedOid": "98bbf3d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-03T15:59:50Z",
          "updatedAt": "2024-07-03T15:59:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Ajtxn",
          "commit": {
            "abbreviatedOid": "98bbf3d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks excellent to me :-)",
          "createdAt": "2024-07-03T15:59:54Z",
          "updatedAt": "2024-07-03T15:59:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86AjxtK",
          "commit": {
            "abbreviatedOid": "98bbf3d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm (including local tool chain)",
          "createdAt": "2024-07-03T16:07:58Z",
          "updatedAt": "2024-07-03T16:07:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 248,
      "id": "PR_kwDOH6-tI850VqA6",
      "title": "Editorial changes to measurement discussion",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/248",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These are have been separated from the renaming in PR#226",
      "createdAt": "2024-07-03T14:52:24Z",
      "updatedAt": "2024-08-28T15:43:26Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "e183357c3523024de14256261f798f9486d7c6dc",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "claimprose",
      "headRefOid": "25b4afade12f34b66a46f795c57d643117f84765",
      "closedAt": "2024-08-28T15:43:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Not adequate to progress this hence closing as per @deeglaze suggestion.",
          "createdAt": "2024-08-28T15:43:25Z",
          "updatedAt": "2024-08-28T15:43:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86A1i4G",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:41:57Z",
          "updatedAt": "2024-07-06T11:41:58Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "This might require en example to be less abstract?",
              "createdAt": "2024-07-06T11:41:57Z",
              "updatedAt": "2024-07-06T11:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1i6K",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:43:34Z",
          "updatedAt": "2024-07-06T11:43:34Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "you are introducing \"the conversation\" here. Is there some similar wording that already exists in the I-D to use instead. Otherwise, we have to clarify a bit of the scope, involved actors, and subject of the conversation, I think ",
              "createdAt": "2024-07-06T11:43:34Z",
              "updatedAt": "2024-07-06T11:43:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1i-B",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:46:31Z",
          "updatedAt": "2024-07-06T11:46:31Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Maybe: \r\n```suggestion\r\nA specific set of measuremenst always originates from a single identifiable and associated Environment. Hence. an Environment-Claim Tuple (ECT) is a data structure used to encapsulate that scope context for a given set of measurements.\r\n```",
              "createdAt": "2024-07-06T11:46:31Z",
              "updatedAt": "2024-07-06T11:46:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jDr",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:50:28Z",
          "updatedAt": "2024-07-06T11:50:28Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nWhen the content of an a ECT data structure is presented to roles external to the Verifier, it MAY be referred to via different terms, such as property, claim, or assertion. Whenever an ECT is consumed by a role external to the Verifer, the consuming party MUST always attribute provenance and the ECT's intended use.\r\n```",
              "createdAt": "2024-07-06T11:50:28Z",
              "updatedAt": "2024-07-06T11:50:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jFi",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:51:41Z",
          "updatedAt": "2024-07-06T11:51:41Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Are you also implying that Evidence can assert claims about allowed state?",
              "createdAt": "2024-07-06T11:51:41Z",
              "updatedAt": "2024-07-06T11:51:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jHf",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:52:49Z",
          "updatedAt": "2024-07-06T11:52:49Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I cannot really follow \"[A Measurement] can be a quality that is not directly comparable with evidence\". Could you maybe provide an example so it becomes more clear?",
              "createdAt": "2024-07-06T11:52:49Z",
              "updatedAt": "2024-07-06T11:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jJH",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:54:00Z",
          "updatedAt": "2024-07-06T11:54:00Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "In general, I think that Evidence is composed of \"Measurements\" and there might be a bigger disconnect here that I cannot follow.",
              "createdAt": "2024-07-06T11:54:00Z",
              "updatedAt": "2024-07-06T11:54:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jJe",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:54:17Z",
          "updatedAt": "2024-07-06T11:54:18Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nThe scope of a property is defined by the `environment-map` and optional `mkey` it appears with.\r\n```",
              "createdAt": "2024-07-06T11:54:18Z",
              "updatedAt": "2024-07-06T11:54:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jLA",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:55:11Z",
          "updatedAt": "2024-07-06T11:55:11Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nMeasurements can be of a variety of things including measurement values about software, firmware, configuration files, read-only memory, fuses, IO ring configuration, partial reconfiguration regions, etc. Measurements comprise raw values, digests, or status information.\r\n```",
              "createdAt": "2024-07-06T11:55:11Z",
              "updatedAt": "2024-07-06T11:55:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jLs",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:55:45Z",
          "updatedAt": "2024-07-06T11:55:46Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "This might benefit from another example.",
              "createdAt": "2024-07-06T11:55:46Z",
              "updatedAt": "2024-07-06T11:55:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jM5",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:56:40Z",
          "updatedAt": "2024-07-06T11:56:40Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nMeasurements paired with an `environment-map` that contains only a class may be referred to as class properties, and similarly with instance and group measurements for respective elements of the `environment-map`.\r\n```",
              "createdAt": "2024-07-06T11:56:40Z",
              "updatedAt": "2024-07-06T11:56:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A1jN8",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T11:57:13Z",
          "updatedAt": "2024-07-06T11:57:13Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Another triple?",
              "createdAt": "2024-07-06T11:57:13Z",
              "updatedAt": "2024-07-06T11:57:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3Gzu",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T21:52:19Z",
          "updatedAt": "2024-07-07T21:52:19Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I'm not introducing it here. It's introduced in text immediately prior about all parties that contribute to \"the conversation\" with authorities tracking \"who said what\".",
              "createdAt": "2024-07-07T21:52:19Z",
              "updatedAt": "2024-07-07T21:52:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3HOV",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:06:12Z",
          "updatedAt": "2024-07-07T22:06:12Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "This suggestion is saying much more than I'm saying, since I don't insist that each specific set of measurements has a single environment. Indeed, sets of measurements don't necessarily have a globally unique identifier for distinguishing them across individual measurements. I can have the same card on two different sockets and have the same measurement set, but a different environment due to my assignment of card to group.\r\n\r\nPerhaps \"specific set\" is too ambiguous. Let's go with \"a specific occurrence of a set\", since the occurrence refers to where it is in the CoRIM.",
              "createdAt": "2024-07-07T22:06:12Z",
              "updatedAt": "2024-07-07T22:06:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3Hxu",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:10:06Z",
          "updatedAt": "2024-07-07T22:10:06Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "What is \"intended use\"? I'm not sure how to comply with that. My code that touches it could be my intention because I'm a hot shot with \"self-documenting code\". Is that enough?\r\n\r\nI thought ECT is a representation of an utterance in the conversation, with all scope-closing elements provided.",
              "createdAt": "2024-07-07T22:10:06Z",
              "updatedAt": "2024-07-07T22:10:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3Hz5",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:11:03Z",
          "updatedAt": "2024-07-07T22:11:03Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Conceptual messages aren't all evidence. I thought there was already a cm-ind allocated for policy?",
              "createdAt": "2024-07-07T22:11:03Z",
              "updatedAt": "2024-07-07T22:11:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3Isv",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:37:34Z",
          "updatedAt": "2024-07-07T22:37:34Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I don't think that an assigned name or serial number is always provided by an attesting environment's measurement mechanism. That information is added metadata provided the reference values are as expected.\r\n\r\npseudocode:\r\n\r\n```\r\nreference-values-triple [E, M[integrity-registers: X]]\r\nconditional-endorsement-triple [\r\n  conds: [E, [integrity-registers: X authorities: [me]]]\r\n  [E, M'[name: \"Product: Enterprise Edition\", svn: 5]]\r\n]\r\n```\r\n\r\nI'm not really sure how to express associated metadata in a less-clunky way, unless this conditionality is what is the expected semantics of the non-conditional endorsement-triple. It's unclear from the text https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/179#issuecomment-2184116580",
              "createdAt": "2024-07-07T22:37:34Z",
              "updatedAt": "2024-07-07T22:37:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3I5s",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:43:09Z",
          "updatedAt": "2024-07-07T22:43:09Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Every non-reference-value-triple that contains measurement-map is some flavor of endorsement, so that's the most concise way I could state that. I'm still unclear if there's a conditional relationship between reference triples and the rest of the triples in the same CoMID.",
              "createdAt": "2024-07-07T22:43:09Z",
              "updatedAt": "2024-07-07T22:43:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3JAL",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:45:58Z",
          "updatedAt": "2024-07-07T22:45:59Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Added. Resolve if it's okay.",
              "createdAt": "2024-07-07T22:45:58Z",
              "updatedAt": "2024-07-07T22:45:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86A3JA7",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T22:46:18Z",
          "updatedAt": "2024-07-07T22:46:18Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Added. Resolve if it's okay.",
              "createdAt": "2024-07-07T22:46:18Z",
              "updatedAt": "2024-07-07T22:46:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BTNUF",
          "commit": {
            "abbreviatedOid": "41bb7db"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-10T14:18:13Z",
          "updatedAt": "2024-07-10T14:18:21Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "@Dionna This is aintroductory text, making some high level statements. \r\n- This is way too a technical details in the introductory sections\r\n- Specific items like authority for entities like Relying Party are not in scope of this document.",
              "createdAt": "2024-07-10T14:18:14Z",
              "updatedAt": "2024-07-10T14:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86AlwQ6",
          "commit": {
            "abbreviatedOid": "288399d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see various comments and suggestions",
          "createdAt": "2024-07-03T20:40:09Z",
          "updatedAt": "2024-07-11T23:15:22Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "\"These\" implies the subject of the previous sentence. But since the previous sentence was removed, it now refers to the roles rather than principals, making this sentence incorrect. What is the problem with the previous line such that it should be removed?",
              "createdAt": "2024-07-03T20:40:09Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 10,
              "body": "The part of the sentence after the comma seems abstract. What does \"exiting properties\" mean? Why must they be rooted to a common authority?",
              "createdAt": "2024-07-03T20:43:41Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 19,
              "body": "Claims should be capitalized. \r\nWhat is \"allowed state\" - is it intended to be synonymous with the Endorsement I-D that defines \"reference state\"?",
              "createdAt": "2024-07-03T20:46:53Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 39,
              "body": "Why should this text be deleted, is it incorrect?",
              "createdAt": "2024-07-03T20:50:26Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 40,
              "body": "A measurement in the abstract can't be compared as the conceptual message context is needed. If we're going to talk about Evidence then we may need to explain the CM context is Reference Values. \r\nI don't understand what it means to be a \"quality\" or how that relates to CM context.",
              "createdAt": "2024-07-03T20:52:56Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 41,
              "body": "mkey is a feature in measurement-map not environment-map. I'm confused as to why we need to talk about scope. The earlier discussion on ECTs makes it clear that the measurements in \"C\" are scoped to the values in \"E\".",
              "createdAt": "2024-07-03T20:55:38Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 56,
              "body": "These sentences seem as though they belong in the section about environments / environment-map. ",
              "createdAt": "2024-07-03T21:01:39Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 46,
              "body": "What is incorrect with these sentences such that they should be removed?",
              "createdAt": "2024-07-03T21:02:56Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 69,
              "body": "Given we're contemplating refactoring the way we do authority delegation, shouldn't we hold off on introducing new text here?",
              "createdAt": "2024-07-03T21:07:30Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 78,
              "body": "When describing device composition we could be describing logical composition (e.g., Target Environments) or physical composition (e.g., device, component, sub-component, and even \"object\"). But this sentence uses 'element' which is used in other places to mean a part of a CDDL statement. Can we agree to use these terms consistently?",
              "createdAt": "2024-07-03T21:12:15Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 79,
              "body": "The text in line 812 that was deleted seems more correct.",
              "createdAt": "2024-07-03T21:13:00Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 28,
              "body": "I think \"represents expectations for Evidence\" is too narrow for what is being described. ",
              "createdAt": "2024-07-03T21:17:41Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 64,
              "body": ">I'm still unclear if there's a conditional relationship between reference triples and the rest of the triples \r\n\r\nIf they're related, the relationship is defined by the 'condition' portion of the RV triple. In the `reference-triples` case, both the `environment-map` and `measurement-map` are the condition. If there is a match, the \"corroborated\" values (the actual state representation) is added to the ACS under the RVP authority. If RVs are already expressed as actual state representations, then you can say \"corroboration\" is passthrough and the RVPs are copied into the ACS (differing only by authority from what was matched).\r\n\r\nThere is an ongoing discussion whether RVs should be used to \"corroborate\" ACS values that originated from Endorsers vs. Attesters. Both are representations of **actual state**. So, its technically possible. The use case for allowing it is when there are claims that can't reasonably be asserted by an AE that a vendor of that Attester wishes to supply reference values. A contrived example is if a CC certifying lab reports that an Attester meets EAL4+, but the Attester vendor wants to restrict the upper bound (for some reason), then the attester vendor could create a RV for a range, say EAL2+ to EAL4. The RV condition applies to claims that only an endorser would make. But the Verifier can easily process them just like RVs written to match Evidence.\r\n\r\nThe concern is a constrained verifier might not have resources necessary to handle a large set of inputs and one way to reduce them is to disallow processing of RVs aimed at matching Endorsements. ",
              "createdAt": "2024-07-11T23:10:42Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            },
            {
              "originalPosition": 64,
              "body": "> Another triple?\r\n\r\nIt would be clearer to mention a specific endorsement triple such as `endorsed-triples`",
              "createdAt": "2024-07-11T23:13:19Z",
              "updatedAt": "2024-07-11T23:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BprJC",
          "commit": {
            "abbreviatedOid": "288399d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T15:25:45Z",
          "updatedAt": "2024-07-12T15:25:45Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I find lowercase \"environment\" difficult to map to a single concept. Here's my understanding. An `environment-map` does not contain measurements. An Attesting Environment has measurable elements. A Target Environment has reference values for elements.\r\n\r\nI reword or reformat the rest of these sentences below. I don't like \"typically\" here since measurements always are within the scope on an environment-map.",
              "createdAt": "2024-07-12T15:25:45Z",
              "updatedAt": "2024-07-12T15:25:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BprUo",
          "commit": {
            "abbreviatedOid": "288399d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T15:26:07Z",
          "updatedAt": "2024-07-12T15:26:07Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "I would like to, but given the existing use of \"measured-element-type-choice\" to refer to those logically composed objects, I'd like to know what word we want to use that's not the \"element\" from the CDDL spec. Do we want to say measured-object?",
              "createdAt": "2024-07-12T15:26:07Z",
              "updatedAt": "2024-07-12T15:26:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Bpr8Z",
          "commit": {
            "abbreviatedOid": "288399d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T15:27:26Z",
          "updatedAt": "2024-07-12T15:27:27Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "Why? mkey has type `measured-element-type-choice`, so I say \"measured element\" instead of \"measurement identifier\". Do you want to change the codepoint to measurement-id-type-choice?",
              "createdAt": "2024-07-12T15:27:26Z",
              "updatedAt": "2024-07-12T15:27:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BpseX",
          "commit": {
            "abbreviatedOid": "288399d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T15:28:37Z",
          "updatedAt": "2024-07-12T15:28:38Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yes, fixed.",
              "createdAt": "2024-07-12T15:28:38Z",
              "updatedAt": "2024-07-12T15:28:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BptpX",
          "commit": {
            "abbreviatedOid": "59cb30b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T15:31:09Z",
          "updatedAt": "2024-07-12T15:31:09Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Moved.",
              "createdAt": "2024-07-12T15:31:09Z",
              "updatedAt": "2024-07-12T15:31:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BqbKe",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T17:21:33Z",
          "updatedAt": "2024-07-12T17:21:33Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "An environment (aka Target Environment) is the thing that is being measured by an Attesting Environment. The name of the environment is expressed as key-value pairs (which is what environment-map and stateful-environment-record do). An AE collects measurements about the TE and those measurements are expressed as key-value pairs. The measurement-value-map structure does this. \r\n\r\nWe can change \"environment\" to use TE if lower case environment is confusing.\r\nI'm OK with removing \"typically\".",
              "createdAt": "2024-07-12T17:21:33Z",
              "updatedAt": "2024-07-12T17:21:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Bqe7i",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T17:30:23Z",
          "updatedAt": "2024-07-12T17:30:23Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "I suppose everyone has different intuition around what words to use to describe compositions of things. Using RFC9334 as a guide, it uses environment (TE/AE) and \"sub-Attester\" which is another way of saying some sort of construction of TEs and AEs, but it didn't use \"sub-TE\" or \"sub-AE\" and some would find this awkward. \r\n\r\nThe current wording reflects the idea that a TE can be broken into finer granularity sub-parts and the English dictionary definition of \"element\" is a word that isn't too overloaded.\r\nIf a lay person described a computing environment as something that consisted of several sub-elements it wouldn't be too far from reality while still being abstract enough to fit a wide variety of implementations.",
              "createdAt": "2024-07-12T17:30:23Z",
              "updatedAt": "2024-07-12T17:30:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BqgtL",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T17:35:07Z",
          "updatedAt": "2024-07-12T17:35:07Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "Since there is a pending discussion around whether or not we want to key mkey. We should hold off on making changes to mkey related content until that discussion is resolved.",
              "createdAt": "2024-07-12T17:35:07Z",
              "updatedAt": "2024-07-12T17:35:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86BrXC5",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-12T19:55:16Z",
          "updatedAt": "2024-07-12T19:55:16Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "I say (sub-)enviroment consistently with the existing text for `mkey`. Notion of it being a sub-environment is that it is further limiting the scope of the subject named by the `environment-map`, but is not itself an element of `environment-map`.\r\n\r\nI changed from \"element\" to \"object-id\" since I read that you wanted element to consistently mean the same thing, i.e., the meaning from CDDL. Are you suggesting that \"element\" is not too overloaded as an English term, so we _don't_ have to use \"element\" to consistently refer to the CDDL concept? I'm confused what you want.",
              "createdAt": "2024-07-12T19:55:16Z",
              "updatedAt": "2024-07-12T19:55:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86B3peA",
          "commit": {
            "abbreviatedOid": "89bd3d7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-15T23:34:53Z",
          "updatedAt": "2024-07-15T23:34:53Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": ">I'm confused what you want.\r\n\r\nI'm suggesting that before making changes to CDDL and spec text as it pertains to `mkey`, we should resolve the meta conversation of whether mkey is going to be removed. \r\nIssue #70 was tracking a use case that possibly justifies its use. The other use cases (that I'm aware of) are profile specific. \r\n\r\nThere was a thread related to `mkey` as part of the internal representation conversation that resulted in the following CDDL being included:\r\n```\r\nECT = {\r\n  ? e: environment-map\r\n  ? c: claims-map / [ + local-claim ]\r\n  ? a: [ + $crypto-key-type-choice ]\r\n  ? ns: text\r\n  ? cm: cm-type\r\n  ? p: $profile-type-choice\r\n}\r\nlocal-claim = {\r\n  le: local-environment\r\n  c: claims-map\r\n}\r\nlocal-environment =  bstr / tstr\r\n```\r\nThe strongest reason to remove `mkey` is its another form of an ECT structure (that is awkwardly nested in the Claim part of a \"parent?\" ECT). Since we clarified that the identifier scope for environment values in `environment-map` is global. If an `mkey` has global scope, another ECT could be used instead.  \r\n\r\nSo, the salient benefit that `mkey` brings is some syntactic sugar when `mkey` identifiers are locally scoped (relative to the parent ECT) to make RIMs less verbose. Instead of having to define another OID or UUID to disambiguate multiple measurements of the same kind (i.e., multiple entries with the same measurement-values-map code point). A local scope identifier, such as a number or string, is used.\r\n\r\nBut we need to have this conversation in the context of a use case (e.g., issue #70). So, lets prioritize #70 above #248 and #230.",
              "createdAt": "2024-07-15T23:34:53Z",
              "updatedAt": "2024-07-15T23:59:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Fa4WG",
          "commit": {
            "abbreviatedOid": "25b4afa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:46:06Z",
          "updatedAt": "2024-08-14T14:46:07Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-08-14T14:46:06Z",
              "updatedAt": "2024-08-14T14:46:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Fa6_p",
          "commit": {
            "abbreviatedOid": "25b4afa"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-14T14:49:59Z",
          "updatedAt": "2024-08-14T14:49:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 252,
      "id": "PR_kwDOH6-tI853PDVI",
      "title": "Minor Word alignment to clarify intended meaning",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/252",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-02T09:47:29Z",
      "updatedAt": "2024-08-14T14:54:43Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "03d0c398efb99ac14f0ea3147f00b5db8f029d05",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "word-smithing",
      "headRefOid": "391d6037bc8bb66682e17cc685228fcc7030dfaa",
      "closedAt": "2024-08-14T14:54:43Z",
      "mergedAt": "2024-08-14T14:54:43Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "fd67b62321ec9b4259e436f06ea66db596b5f980"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86EE79G",
          "commit": {
            "abbreviatedOid": "5ff564d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-02T15:37:52Z",
          "updatedAt": "2024-08-02T15:37:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Prefer to split sentences with a line break. The comma after authors is wrong and the sentence itself is awkward.",
              "createdAt": "2024-08-02T15:37:52Z",
              "updatedAt": "2024-08-02T15:37:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86EE84R",
          "commit": {
            "abbreviatedOid": "5ff564d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-02T15:39:46Z",
          "updatedAt": "2024-08-02T15:39:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Why collapse to a single line? It renders the same and is counter to the convention of keeping separate sentences on separate lines",
              "createdAt": "2024-08-02T15:39:46Z",
              "updatedAt": "2024-08-02T15:39:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86EE90D",
          "commit": {
            "abbreviatedOid": "5ff564d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-02T15:41:06Z",
          "updatedAt": "2024-08-02T15:41:07Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Paragraphs should not start with pronouns that refer to the previous paragraph. Comma after defines is incorrect. Awkward sentence.",
              "createdAt": "2024-08-02T15:41:06Z",
              "updatedAt": "2024-08-02T15:41:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FXEI6",
          "commit": {
            "abbreviatedOid": "fdedef6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T07:51:49Z",
          "updatedAt": "2024-08-14T07:51:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Is this really making it better? That CoRIM enables CoRIM authors to convey their intended meaning is like saying water is wet. What does the reader glean from 166 that it not obvious anyways?\r\n\r\nI.e., I like the change, it renders removing 166 more of an obvious choice :smile:\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-08-14T07:51:49Z",
              "updatedAt": "2024-08-14T08:00:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FXIe5",
          "commit": {
            "abbreviatedOid": "fdedef6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T08:00:36Z",
          "updatedAt": "2024-08-14T08:02:43Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nIn essence, if Evidence is not corroborated by an RVP's Claims, then the RVP's Claims are not included in the ACS.\r\n```",
              "createdAt": "2024-08-14T08:00:36Z",
              "updatedAt": "2024-08-14T08:02:43Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nTo this effect, this specification defines one possible internal representation of the attester's actual state for use during the appraisal procedure, known as Appraisal Claims Set (ACS).\r\n```",
              "createdAt": "2024-08-14T08:01:41Z",
              "updatedAt": "2024-08-14T08:02:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FaV_f",
          "commit": {
            "abbreviatedOid": "fdedef6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:00:10Z",
          "updatedAt": "2024-08-14T14:00:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> I.e., I like the change, it renders removing 166 more of an obvious choice \ud83d\ude04\r\n\r\nAgree.  At the same time, I'd use this PR to add some meat to L165.\r\n\r\nFirst, since the goal is the determinism of a CoRIM verifier, I suggest s/should process/must process/\r\n\r\nSecond, since the goal is the determinism of a CoRIM verifier, I suggest making the point explicit. ",
              "createdAt": "2024-08-14T14:00:10Z",
              "updatedAt": "2024-08-14T14:00:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FaqEY",
          "commit": {
            "abbreviatedOid": "fdedef6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:26:44Z",
          "updatedAt": "2024-08-14T14:26:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis specification describes the CoRIM format and documents how a Verifier must process the CoRIM.\r\n```",
              "createdAt": "2024-08-14T14:26:44Z",
              "updatedAt": "2024-08-14T14:26:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Fa3Pe",
          "commit": {
            "abbreviatedOid": "c67c7d6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:44:37Z",
          "updatedAt": "2024-08-14T14:44:38Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis specification describes the CoRIM format and documents how a Verifier must process the CoRIM.\r\nThis ensures that the behaviour of the CoRIM-based appraisal is predictable and consistent, in a word deterministic.\r\n```",
              "createdAt": "2024-08-14T14:44:37Z",
              "updatedAt": "2024-08-14T14:44:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Fa7fl",
          "commit": {
            "abbreviatedOid": "391d603"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-14T14:50:45Z",
          "updatedAt": "2024-08-14T14:50:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 254,
      "id": "PR_kwDOH6-tI853u-mo",
      "title": "Disambiguate endorsed-triples semantics.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/254",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses Issue #251. It's unclear if this implicit condition is also expected of the conditional-endorsement-series-triples and conditional-endorsement-triples. The phasing in the appraisal section seems to suggest that it should be. That would seem to mean that if you want \"unconditional\" endorsements, you need to have a reference-triple-record that has an empty measurement-values-map, but that is ill-formed.\r\n\r\nProbably the location is wrong and this should be a subsection of `Endorsed Values Augmentation (Phase 4)`, but I want to at least clarify if this is the intended meaning. The \"Interacting with an ACS\" section suggests that an endorsement always has a list of conditions, but that isn't material in the representation of an endorsed-triple-record.",
      "createdAt": "2024-08-07T16:23:47Z",
      "updatedAt": "2024-09-18T14:27:57Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "209a55e71b12cdf1e7567756d8086fa282ecea7c",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "evimplicit",
      "headRefOid": "059c5edb5f9f82ce57532a34192df3b2a6066eb9",
      "closedAt": "2024-09-18T14:27:57Z",
      "mergedAt": "2024-09-18T14:27:57Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "67aa74ef02d9c7c067fbf815fee1f76f70bb2630"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The Endorsement triples sections should be grouped so that they can be described / understood together but with increasing detail / nuance.\r\nI suggest the ordering be: Endorsed Values Triple, Conditional Endorsement Triple, Conditional Endorsement Series Triple.\r\n\r\n",
          "createdAt": "2024-09-10T21:17:48Z",
          "updatedAt": "2024-09-10T23:19:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86FPeKH",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T12:32:21Z",
          "updatedAt": "2024-08-13T12:32:21Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The way I interpret this is different (apologies in advance for the poetic license).\r\nIf I am given some endorsed value $$EV_{i} = [ Env_{j}, Measurement_{k} ]$$\r\nand the ACS's state is currently $$ACS = [ Env_{j}, Measurement_{l} ]$$\r\nthen $$Measurement_{k}$$ can be added to the ACS:\r\n$$ACS = [ Env_{j}, Measurement_{l}, Measurement_{k} ]$$\r\n",
              "createdAt": "2024-08-13T12:32:21Z",
              "updatedAt": "2024-08-13T16:32:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FRqcu",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T16:11:17Z",
          "updatedAt": "2024-08-13T16:11:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "So the ACS has to have Some measurement by Somebody, irrespective of the reference values in the CoMID? You have no requirements on Measurement_l other than it exists (and therefore non-empty).",
              "createdAt": "2024-08-13T16:11:17Z",
              "updatedAt": "2024-08-13T16:11:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FR6gD",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T16:40:29Z",
          "updatedAt": "2024-08-13T16:40:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> So the ACS has to have Some measurement by Somebody irrespective of the reference values in the CoMID?\r\n\r\nThe ACS is initialised with evidence (see [Section 8.4.1](https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html#section-8.4.1-1)).  At least, there's one environment ($$Env_{j}$$) and one measurement associated with that ($$Measurement_{l}$$).",
              "createdAt": "2024-08-13T16:40:29Z",
              "updatedAt": "2024-08-13T16:40:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FSeMd",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T17:53:37Z",
          "updatedAt": "2024-08-13T17:53:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Endorsements have much greater degree of flexibility.\r\n\r\nThere can be `one` type of Endorsement belonging to an Attester Class, (identified by Class-ID) regardless of what Reference Value holds for the component! ",
              "createdAt": "2024-08-13T17:53:37Z",
              "updatedAt": "2024-08-13T17:53:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FSo21",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T18:15:12Z",
          "updatedAt": "2024-08-13T18:15:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "So this text is wrong?\r\n\"additional measurements **that are valid when** a Target Environment **has been verified against reference measurements**\"",
              "createdAt": "2024-08-13T18:15:12Z",
              "updatedAt": "2024-08-13T18:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FS-3n",
          "commit": {
            "abbreviatedOid": "f482726"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T18:57:55Z",
          "updatedAt": "2024-08-13T18:57:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> additional measurements **that are valid when** a Target Environment **has been verified against reference measurements**\r\n\r\nYes, this looks to me like prose that has been obsoleted by the recent work on the appraisal phases.  It should be changed accordingly.",
              "createdAt": "2024-08-13T18:57:55Z",
              "updatedAt": "2024-08-13T18:57:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FWv_p",
          "commit": {
            "abbreviatedOid": "7ad6d24"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T07:09:24Z",
          "updatedAt": "2024-08-14T07:09:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "The existence of measurement is not a requirement.  After all, the matching is done only on the environment.\r\n\r\nOne could imagine the ACS loaded with environment-only evidence (i.e., one which doesn't carry any measurement, only signed environment identifier(s)).  If the environment in the endorsed value triple matches, the associated measurement (really, a property) is added to the ACS - e.g., \"the chipset is enzyme-based\" - a bio-RoT :-)\r\n\r\n```suggestion\r\nAn Endorsed Values triple declares additional claims that an Attester cannot declare about itself in the Evidence it produces.\r\nThese claims are added to the ACS when its environment matches.\r\n```",
              "createdAt": "2024-08-14T07:09:24Z",
              "updatedAt": "2024-08-14T07:21:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FXAQu",
          "commit": {
            "abbreviatedOid": "47e7794"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "good with current improvements",
          "createdAt": "2024-08-14T07:43:38Z",
          "updatedAt": "2024-08-28T15:44:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Fab_2",
          "commit": {
            "abbreviatedOid": "e4bb2df"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-14T14:07:01Z",
          "updatedAt": "2024-08-14T14:07:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86FadYU",
          "commit": {
            "abbreviatedOid": "e4bb2df"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:09:05Z",
          "updatedAt": "2024-08-14T14:09:05Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThese claims are added to the ACS.\r\n```",
              "createdAt": "2024-08-14T14:09:05Z",
              "updatedAt": "2024-08-14T14:09:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Fal36",
          "commit": {
            "abbreviatedOid": "e4bb2df"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T14:20:50Z",
          "updatedAt": "2024-08-14T14:20:51Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-08-14T14:20:51Z",
              "updatedAt": "2024-08-14T14:20:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86FamSg",
          "commit": {
            "abbreviatedOid": "06270ca"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTm!",
          "createdAt": "2024-08-14T14:21:23Z",
          "updatedAt": "2024-08-14T14:21:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86FceKK",
          "commit": {
            "abbreviatedOid": "06270ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-14T17:45:04Z",
          "updatedAt": "2024-08-14T17:45:04Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I think we concluded in the meeting that we ought to keep the matching requirement.",
              "createdAt": "2024-08-14T17:45:04Z",
              "updatedAt": "2024-08-14T17:45:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HGphd",
          "commit": {
            "abbreviatedOid": "47e7794"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T15:46:31Z",
          "updatedAt": "2024-08-28T15:46:31Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nAn Endorsed Values triple declares additional measurements to add to the ACS.\r\n```",
              "createdAt": "2024-08-28T15:46:31Z",
              "updatedAt": "2024-08-28T15:46:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HGqnZ",
          "commit": {
            "abbreviatedOid": "9cb2eb0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-08-28T15:48:33Z",
          "updatedAt": "2024-08-28T15:48:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86HGrfd",
          "commit": {
            "abbreviatedOid": "9cb2eb0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-28T15:50:10Z",
          "updatedAt": "2024-08-28T15:50:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86It_r5",
          "commit": {
            "abbreviatedOid": "9cb2eb0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-10T20:59:25Z",
          "updatedAt": "2024-09-10T21:06:15Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n\r\n```\r\n",
              "createdAt": "2024-09-10T20:59:25Z",
              "updatedAt": "2024-09-17T22:52:37Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-09-10T21:02:05Z",
              "updatedAt": "2024-09-10T21:06:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Iu_US",
          "commit": {
            "abbreviatedOid": "9cb2eb0"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-10T22:36:25Z",
          "updatedAt": "2024-09-10T22:36:25Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The 1111 is informative to refer the reader to the conditional endorsements. Your added text seems to refer to the semantics described above in the text \"These claims are added to the ACS when its environment matches.\"",
              "createdAt": "2024-09-10T22:36:25Z",
              "updatedAt": "2024-09-10T22:36:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86IvikT",
          "commit": {
            "abbreviatedOid": "9cb2eb0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-10T23:03:37Z",
          "updatedAt": "2024-09-10T23:03:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "> The 1111 is informative to refer the reader to the conditional endorsements. Your added text seems to refer to the semantics described above in the text \"These claims are added to the ACS when its environment matches.\"\r\n\r\nI wasn't paying attention to the link - just preserving what was there before. If the document structure groups the sections related to endorsement there is less of a need to cross-reference them. A one sentence explanation of conditional endorsement might follow in a straightforward way such as: \"Conditional Endorsements are added to the ACS if additional Claims match, in addition to environment Claims.\"\r\n\r\nLine 1111 can be removed if the headings are restructured to show a progression of endorsement behavior. No need to include forward references.",
              "createdAt": "2024-09-10T23:03:37Z",
              "updatedAt": "2024-09-17T22:54:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J27iG",
          "commit": {
            "abbreviatedOid": "059c5ed"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This removes misleading text, so is an improvement on the previous text.\r\n\r\nI think we need to open a new issue which addresses the question of why endorsed value triple might be used.",
          "createdAt": "2024-09-18T14:26:40Z",
          "updatedAt": "2024-09-18T14:26:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J28Q6",
          "commit": {
            "abbreviatedOid": "059c5ed"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-09-18T14:27:31Z",
          "updatedAt": "2024-09-18T14:27:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J28dI",
          "commit": {
            "abbreviatedOid": "059c5ed"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:27:46Z",
          "updatedAt": "2024-09-18T14:27:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 257,
      "id": "PR_kwDOH6-tI8547Y1Q",
      "title": "Assert mkey as local to the environment and add mkeyvalues to measurement-map.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/257",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change addresses the multiplicity of the same type issue https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/256.\r\n\r\nA follow-up PR will address the multiplicity of reference values to avoid representation combinatorial explosion for cartesian products.",
      "createdAt": "2024-08-21T03:42:39Z",
      "updatedAt": "2024-09-09T15:28:20Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "20fe75ebd7cb0b79c3b295b09bc59c0891f39247",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "mkey-proposal",
      "headRefOid": "b0b204c3f2a2621a922c4c34bc62ae5a0e451a71",
      "closedAt": "2024-09-04T15:48:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Consider this a draft as I work out the kinks with multiple authorized-by. I can't find the button to change to Draft mode.",
          "createdAt": "2024-08-21T03:59:37Z",
          "updatedAt": "2024-08-21T03:59:37Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in favor of a PR181 revival.",
          "createdAt": "2024-09-04T15:48:10Z",
          "updatedAt": "2024-09-04T15:48:10Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Closing in favor of a PR181 revival.\r\n\r\nWhat? Why?  This PR was *very* good.",
          "createdAt": "2024-09-04T15:51:33Z",
          "updatedAt": "2024-09-04T15:54:17Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Closing in favor of a PR181 revival.\r\n> \r\n> What? Why? This PR was _very_ good.\r\n\r\nIt has encoding problems with an extensible type as a map key and is a breaking change. We can get the same behavior by bringing back measurement-map multiplicity with the requirement that every measurement-map must match (the only OR semantics is in the triple multiplicity).\r\n\r\nI think that we ought to organize the CDDL a little more instructively though, so that any position that has non-exact matching semantics has a codepoint name *-pattern or some such.",
          "createdAt": "2024-09-04T15:59:02Z",
          "updatedAt": "2024-09-04T15:59:02Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > Closing in favor of a PR181 revival.\r\n> > \r\n> > \r\n> > What? Why? This PR was _very_ good.\r\n> \r\n> It has encoding problems with an extensible type as a map key\r\n\r\nI'll put my implementer hat on to argue that there are no problems that I can see in the encoding/decoding realm.\r\n\r\n> and is a breaking change.\r\n\r\nYes, and we agreed in previous meetings (more than one) that backwards compatibility was not an issue anymore.  If we *really* need to be backwards compatible we can keep the old ref-val triple around (as deprecated) and mint a new codepoint for this.\r\n\r\n> We can get the same behavior by bringing back measurement-map multiplicity with the requirement that every measurement-map must match (the only OR semantics is in the triple multiplicity).\r\n\r\nWhich is, semantically, a kludge.\r\nBesides, the \"authorities\" scope is not the same.\r\n\r\n> I think that we ought to organize the CDDL a little more instructively though, so that any position that has non-exact matching semantics has a codepoint name *-pattern or some such.\r\n\r\nYes, agreed, so we'd be breaking compatibility anyway...",
          "createdAt": "2024-09-04T16:05:44Z",
          "updatedAt": "2024-09-04T16:05:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "One more aspect in favour of introducing multiplicity inside measurement-map is we align with TCG specification which advises multiplicity of `measurement-map`",
          "createdAt": "2024-09-04T16:07:25Z",
          "updatedAt": "2024-09-04T16:07:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Also, the proposal is to add the multiplicity in such a way that it does not break the existing CDDL in a way that it preserves those implementations which honour singularity of measurement-map, so that it comes out as a non breaking change!",
          "createdAt": "2024-09-04T16:10:04Z",
          "updatedAt": "2024-09-04T16:10:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Also, the proposal is to add the multiplicity in such a way that it does not break the existing CDDL in a way that it preserves those implementations which honour singularity of measurement-map, so that it comes out as a non breaking change!\r\n\r\nWe decided that backwards compatibility was a non-goal.  Why is this suddenly a criterion now?",
          "createdAt": "2024-09-04T16:14:05Z",
          "updatedAt": "2024-09-04T16:14:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> One more aspect in favour of introducing multiplicity inside measurement-map is we align with TCG specification which advises multiplicity of `measurement-map`\r\n\r\nThe same effect can be obtained by minting a new triple.",
          "createdAt": "2024-09-04T16:15:05Z",
          "updatedAt": "2024-09-04T16:15:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">> I think that we ought to organize the CDDL a little more instructively though, so that any position that has non-exact matching semantics has a codepoint name *-pattern or some such.\r\n\r\n>Yes, agreed, so we'd be breaking compatibility anyway...\r\n\r\nWe agreed to stage the separable proposals; one that deals with multiplicity of measurement values and one that deals with matching rules. The latter is a significant shift from previous assumptions about exact-match matching rules. Given the Intel Profile is mostly about non-exact-match matching and the ability to specify reference values as such, more attention is needed on what is being proposed (and PRs should be focused only on this aspect of functionality).",
          "createdAt": "2024-09-04T16:15:48Z",
          "updatedAt": "2024-09-04T16:15:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We agreed to stage the separable proposals;\r\n\r\nAbsolutely.  In fact, they are already separate.",
          "createdAt": "2024-09-04T16:17:10Z",
          "updatedAt": "2024-09-04T16:17:10Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Also, the proposal is to add the multiplicity in such a way that it does not break the existing CDDL in a way that it preserves those implementations which honour singularity of measurement-map, so that it comes out as a non breaking change!\r\n> \r\n> We decided that backwards compatibility was a non-goal. Why is this suddenly a criterion now?\r\n\r\nI don't believe that that was the case. The goal is to append first, deprecate second, and remove third (possibly in the distant future). ",
          "createdAt": "2024-09-04T16:18:18Z",
          "updatedAt": "2024-09-04T16:18:18Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We agreed to stage the separable proposals;\r\n> \r\n> Absolutely. In fact, they are already separate.\r\n\r\nThe PR (i think #257) was removing code points in `measurement-map`, changing `authorized-by`, adding new code point with multiplicity semantics and adding a pattern macro. \r\n\r\nMaybe you can explain how these are in separate PRs?",
          "createdAt": "2024-09-04T16:21:32Z",
          "updatedAt": "2024-09-04T16:21:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The PR (i think #257) was removing code points in `measurement-map`\r\n\r\nYes, #257 is doing that.\r\n\r\n> changing `authorized-by`, \r\n\r\nIt's only changing the codepoint, not the semantics or the encoding or the relative position - which are the fundamental aspects of \"auth\"\r\n\r\n> adding new code point with multiplicity semantics and adding a pattern macro.\r\n\r\nNo, that is done in #258\r\n",
          "createdAt": "2024-09-04T16:24:38Z",
          "updatedAt": "2024-09-04T16:25:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > Also, the proposal is to add the multiplicity in such a way that it does not break the existing CDDL in a way that it preserves those implementations which honour singularity of measurement-map, so that it comes out as a non breaking change!\r\n> > \r\n> > \r\n> > We decided that backwards compatibility was a non-goal. Why is this suddenly a criterion now?\r\n> \r\n> I don't believe that that was the case. The goal is to append first, deprecate second, and remove third (possibly in the distant future).\r\n\r\nIn the last few meetings, we had a few backwards compatibility-related discussions and the consensus was that for measurements we should have no constraints.  The way we got to the current shape was by starting with the backwards compatible proposal, removing the constraint, and reorganising the data structure accordingly.\r\n",
          "createdAt": "2024-09-04T16:29:47Z",
          "updatedAt": "2024-09-04T16:31:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> In the last few meetings, we had a few backwards compatibility-related discussions and the consensus was that for measurements we should have no constraints.\r\n\r\nOK. I would like to respectfully disagree then. ",
          "createdAt": "2024-09-04T16:39:24Z",
          "updatedAt": "2024-09-04T16:39:24Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Multiple measurement-map and multiplicity in the measurement-map here both have flaws for `conditional-endorsement-series-triple-record` that I'm not sure what the taste is for the changes.\r\n\r\nThere's Target Environment targeting via stateful-environment-map, and a series of conditions that inherit the authorized-by of the measurement-map in stateful-environment-map. With multiple measurement-map, there's no singular authorized-by to apply to each series record. There's also no singular measurement-map key that the condition or consequence measurement-values-map are meant to match against/contribute to.\r\n\r\nThere's also the design choice of allowing the consequence to contribute endorsements to multiple measurement-map keys if the condition matches. This is a shared problem between multiple measurement-map and this PR's + mkey => mval encoding.",
          "createdAt": "2024-09-04T17:29:52Z",
          "updatedAt": "2024-09-04T17:29:52Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The meeting yesterday seems to have started the unraveling of progress of the last month. And that while we started to consolidate publication goals. IMHO, this discussion basically sets us back - significantly so - and I apologize for highlighting that so bluntly. There is no technical issue with this PR. An underlying question that this discussion uncovers, though, might be something to the extend of: \"where does the authority member go\" or \"on which granularity level do we need it\". That would be a fine discussion. Unearthing #181 does not necessarily help here (reflection my opinion again with my initial statement, I started this comment with: I think it actually is a detriment to progression).\r\n\r\n> >In the last few meetings, we had a few backwards compatibility-related discussions and the consensus was that for measurements we should have no constraints.\r\n\r\n> OK. I would like to respectfully disagree then.\r\n\r\nI think the discussion should focus on \"where does the authority member go\", yes. We also re-confirmed to follow the \"augment, deprecate, remove later (maybe in the far future)\" approach that Dionna emphasized in the past weeks. This approach can be reflected in this PR (addressing \"removing code points in measurement-map\"). As Thomas highlighted the \"adding new code point with multiplicity semantics and adding a pattern macro\" issue is handled in #258.\r\n\r\n@nedmsmith why do you disagree? Could we address your first and second point in this PR?\r\n",
          "createdAt": "2024-09-05T07:26:11Z",
          "updatedAt": "2024-09-05T07:29:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> There is no technical issue with this PR\r\n\r\nPart of the PR removes code points which is a breaking change. That seems like a technical issue.",
          "createdAt": "2024-09-05T17:03:01Z",
          "updatedAt": "2024-09-05T17:03:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> \"adding new code point with multiplicity semantics and adding a pattern macro\" issue is handled in #258.\r\n\r\nThese are separable issues / changes that appear to be conflated into a single PR. The \"multiplicity\" discussion has been ongoing for a long time where we agreed to remove multiplicity in measurements - which places heavier use of environment-map to disambiguate individual measurements of the same type. Now we are reconsidering that decision, but instead of reverting back to the original approach (which has the additional benefit of compatibility with the TCG spec) we're introducing something different. It's not clear what the benefit is while also not addressing the incompatibility concern.\r\n\r\nThe any-of macro is aimed at addressing the non-exact-match semantics that we agreed to not touch until after the current draft was in WGLC and a follow-on draft could address it. Given the Intel Profile addresses this consideration, it makes sense for the design team to consider it as a starting point.\r\n\r\n",
          "createdAt": "2024-09-05T17:12:34Z",
          "updatedAt": "2024-09-05T17:12:34Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> \"where does the authority member go\" or \"on which granularity level do we need it\".\r\n\r\nThis is a third separable technical issue. There has been a discussion topic for a long time as well. The main consideration is scope. Although, some of the thread discussion seems to question semantics of how the authority mechanism works. It would be helpful to avoid conflating these two topics IMHO also. Given the general case doesn't need to use `authorized-by`, we should consider whether spending a lot of time on name change or scope vs. getting to WGLC is justified. For example, if we can't identify something that is broken or a security flaw etc., then maybe its OK to leave it as is?",
          "createdAt": "2024-09-05T17:19:59Z",
          "updatedAt": "2024-09-05T17:19:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Multiple measurement-map and multiplicity in the measurement-map here both have flaws for `conditional-endorsement-series-triple-record`\r\n\r\nIt would be helpful to identify the flaws explicitly.",
          "createdAt": "2024-09-05T17:30:49Z",
          "updatedAt": "2024-09-05T17:30:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > There is no technical issue with this PR\r\n> \r\n> Part of the PR removes code points which is a breaking change. That seems like a technical issue.\r\n\r\nI strongly disagree with this characterisation.\r\n(Note that if we really need to keep compatibility with TCG's CoRIM, we can always mint a new triple that uses the new measurements-map and keep the old one around and maybe slowly deprecate it.)\r\n\r\nBut the core question is: Why is it a requirement for IETF CoRIM to be backwards compatible with TCG CoRIM?",
          "createdAt": "2024-09-05T18:35:56Z",
          "updatedAt": "2024-09-05T18:35:56Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > There is no technical issue with this PR\r\n> > \r\n> > \r\n> > Part of the PR removes code points which is a breaking change. That seems like a technical issue.\r\n> \r\n> I strongly disagree with this characterisation. (Note that if we really need to keep compatibility with TCG's CoRIM, we can always mint a new triple that uses the new measurements-map and keep the old one around and maybe slowly deprecate it.)\r\n> \r\n> But the core question is: Why is it a requirement for IETF CoRIM to be backwards compatible with TCG CoRIM?\r\n\r\nIn cddl/measurement-map.cddl (see below), the minus show lines deleted and + shows lines added. The deleted lines breaks existing examples. Hence, all the examples have been updated.\r\n``` \r\nmeasurement-map = {\r\n  - ? &(mkey: 0) => $measured-element-type-choice\r\n  - &(mval: 1) => measurement-values-map\r\n  - ? &(authorized-by: 2) => [ + $crypto-key-type-choice ]\r\n  + ? &(fixme-authorities: -1) => [ + $crypto-key-type-choice ]\r\n  + + $measured-element-type-choice => measurement-values-map\r\n}\r\n```\r\nIf the idea is TCG can create new code points that preserve existing behavior, then that would be a breaking change for TCG since the code points will differ. On the other hand, if IETF corim wants to do something different all it has to do is define a new code point leaving the existing ones alone. \r\n\r\nWe could re-ask the question above: \"Why break backwards compatibility to add new capabilities?\"\r\n\r\nAnother point to recall is IANA is assigning CBOR tags based on the TCG specs. \r\n\r\nIf IETF corim wants to avoid documenting the removed stuff it could deprecate them:\r\n```\r\nmeasurement-map = {\r\n  // &(mkey: 0) depreciated\r\n  // &(mval: 1) deprecated\r\n  // &(authorized-by: 2) deprecated\r\n  + ? &(fixme-authorities: -1) => [ + $crypto-key-type-choice ]\r\n  + + $measured-element-type-choice => measurement-values-map\r\n}\r\n$measured-element-type-choice /= uint // where uint is in the range 3..max-uint since 0..2 are deprecated\r\n$measured-element-type-choice /= tstr\r\n```\r\nBTW: allocating from the negative code point space contradicts the previously agreed convention that this is reserved for profiles/vendor specific use which has been discussed with IANA. Other than the code point change and name change, which is thrown away anyway, there doesn't seem to be value in deprecating authorized-by.",
          "createdAt": "2024-09-05T19:21:29Z",
          "updatedAt": "2024-09-05T19:24:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> If the idea is TCG can create new code points that preserve existing behavior, then that would be a breaking change for TCG since the code points will differ.\r\n\r\nThe other way around.\r\n\r\n> On the other hand, if IETF corim wants to do something different all it has to do is define a new code point leaving the existing ones alone.\r\n\r\nThis \ud83d\udc46  (_**If**_ we need to maintain backwards compatibility.)\r\n\r\n> Another point to recall is IANA is assigning CBOR tags based on the TCG specs.\r\n\r\nIf their semantics are preserved, the CBOR tags can be reused in other contexts.\r\n\r\n> BTW: allocating from the negative code point space contradicts the previously agreed convention that this is reserved for profiles/vendor specific use which has been discussed with IANA.\r\n\r\nThe convention doesn't apply to the `measurement-map` because there is no extension registry associated with it.\r\n\r\n> Other than the code point change and name change, which is thrown away anyway, there doesn't seem to be value in deprecating authorized-by.\r\n\r\nReserving the negative codepoint space seems like a cleaner solution.\r\n\r\n\r\n",
          "createdAt": "2024-09-06T12:19:36Z",
          "updatedAt": "2024-09-06T12:52:59Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Another way to approach the multi-valued attributes for measurements conversation is to ask the question of how many instances of measurements, that are of the same type, are needed for a given environment? Do we need 10s, 100s, 1000s, millions, billions etc.? \r\n\r\nBy defining the code point space using both strings and uints, there are effectively two infinities of measurements (of the same type) supported. Do we need that many?\r\n\r\nIf we think the pragmatic answer is less than 2 * infinity, then can we reduce the uint space by 2 or 3, or maybe 100 such that the code points from 0-99 are reserved? Given past specs have used some of the code point space, what is the rationale for clobbering them? Or can we get by with ( 2 * infinity) - 3 or (2 * infinity) - 99?\r\n\r\nWe could ask the same question for UUIDs. Can we get by with (2 * infinity) - all values size(2^16)? \r\n\r\nIf realistically we only need on the order of 1000, then we could define $measured-element-type-choice /= uint  to be in the range of say 100 - 1100. There would still be an infinity of text labels for corner cases that needed more than 1000. ",
          "createdAt": "2024-09-06T17:08:17Z",
          "updatedAt": "2024-09-06T17:08:17Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The `&(fixme-authorities: -1)` number choice was intentional to keep it out of the way but also feel wrong so that we fix it in a follow-up. I can revert this. My goal was to allow for a single authority to apply to all mkey/mval pairs (I see it still does, just with an awkward 2 key). We can instead keep authority where it is and if you want a different authority, you add another triple with that authority.\r\n\r\nNow there's the contention of removing a single level of indirection by keeping multiplicity in the measurement-map versus lifting to a choice between measurement-map and [ + measurement-map ]. I like the former but yes the value space does clash with $measured-element-type-choice.\r\n\r\nWe can make $measured-element-type-choice's non-negative value space a registry and change uint to int. Negative numbers can be local to the environment, as their interpretation is dependent on the profile anyway. I don't want to try to argue that 1000 fields ought to be good enough for anybody.\r\n\r\nSo for example, we can maintain backward compatibility by\r\n\r\n```\r\nmeasurement-map = {\r\n  ? &(mkey: 0) => $measured-element-type-choice / measurement-values-map\r\n  ? &(authorities: 2) => authorities\r\n  + $measured-element-type-choice => measurement-values-map\r\n}\r\n\r\n$measured-element-type-choice /= int except 2 (how do you say this?)\r\n$measured-element-type-choice /= tstr\r\n$measured-element-type-choice /= tagged-oid\r\n$measured-element-type-choice /= tagged-uuid\r\nauthorities = [ + $crypto-key-type-choice ]\r\n```\r\n\r\nIf `mkey: 0` is provided with a value from the base spec's $measured-element-type-choice, then `mval: 1` must be provided. We treat key 1 as the mkey's value during processing of the key/value pairs for backward compatibility. W\r\n\r\nIf the argument is that it's weird to have a registry that contains just 0, 1, 2 and unlikely to contain anything else, then don't create a registry and leave it open for a future RFC to assign the values, no? Or is that reservation only guaranteed by having a registry?",
          "createdAt": "2024-09-06T18:34:23Z",
          "updatedAt": "2024-09-06T18:36:26Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that works since a $measured-element-type-choice = 0 is possible and could result in use of the same code point in the same map. This will produce indeterminate behavior. \r\n\r\nA safer and possibly more prudent approach is to carve out a code point namespace for dynamically supplied code points e.g., 100 - 10000 or something like that. This way there is room for measurement-map to retain use of a portion of the code point namespace for future challenges if needed.\r\n```\r\n$measured-element-type-choice /= 100..10000\r\n```",
          "createdAt": "2024-09-06T18:59:43Z",
          "updatedAt": "2024-09-06T18:59:43Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "It's not indeterminant because $measured-element-type-choice doesn't contain map types. If you use 0 as a regular key, you can have the measurement-values-map as the value.",
          "createdAt": "2024-09-06T19:37:36Z",
          "updatedAt": "2024-09-06T19:37:36Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "To clarify this point, where there seems to be a bit of confusion:\r\n\r\n> If the argument is that it's weird to have a registry that contains just 0, 1, 2 and unlikely to contain anything else, then don't create a registry and leave it open for a future RFC to assign the values, no? Or is that reservation only guaranteed by having a registry?\r\n\r\nThere is no registry associated with `measurement-map`.  The 0, 1, and 2 codepoints are just locally-scoped placeholders.  In this regard, we are not constrained by IANA, only by what we write in the CDDL.  The `measurement-map` case is very different from, say, the `triples` space or the `measurement-values-map`'s where the codepoints have global (IANA-regulated) values. (This is also the reason why the nint/uint codepoints-space partitioning convention we use in other places is not meaningful here.)\r\n\r\nStepping back a meter or two, it seems to me we are constraining ourselves unnecessarily only to keep backwards compatibility with the CDDL presented in the TCG document, which is provided just as an example in an appendix (i.e., it is **not** normative).\r\n\r\nAnd, I am still having a very hard time understanding **why** keeping \"on-the-wire\" compatibility with TCG has become a necessity.  We work on the assumption that TCG CoRIM provides the info model, whilst IETF CoRIM is (one possible) data model.  Therefore, if IETF CoRIM wants to implement the k-v in [Figure 9 of DICE Endorsement](https://trustedcomputinggroup.org/wp-content/uploads/TCG-Endorsement-Architecture-for-Devices-V1-R38_pub.pdf#page=25) using `[ + k => v]` rather than a clumsy `[ + [ k, v ] ]`, it should be free to do that.  That's entirely a data model choice. \ud83d\ude15 \r\n\r\nIf instead on-the-wire compatibility with TCG is a requirement, then the CDDL should be considered frozen, and IETF should only be working on clarifying the semantics and processing rules.",
          "createdAt": "2024-09-07T02:12:11Z",
          "updatedAt": "2024-09-07T04:10:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I have evaluated both the options => WE have discussed so far:\r\n\r\nI will try to summarise my view prior to going on holidays from tomorrow: \r\n\r\n**Option 1:** Model a series of key-val inside single measurement-map\r\n\r\nlike Env: meas-map {+mkey => v}\r\n\r\nThis semantics make sense if the ONE Measured Element/Component of an Environment has multiple Measurements at say different points in time, or some other some other variation aspect. The reason I say so is I am not clear Where does Authorities go?\r\n\r\nOutside in the Meas-map i.e., like\r\nmeas-map {\r\nauthorities \r\n+mkey => val\r\n}\r\n\r\nIt implies I can specify only one authority for the entire series ?\r\n\r\nOR I can specify multiple, then I am not clear how to express the same, in an un-ambiguous manner?\r\nWhich authority belong to which row of key-val ??\r\n\r\n<<Please help me here >>\r\n\r\n**Option 2:**\r\n\r\nEnv : [+meas-map]\r\nwith each meas-map has a single \r\n{ ? key => mkey\r\nval => mVal\r\n? authority:  [crypto]\r\n }\r\n\r\n\r\nThis is the one proposed in Rev-0 and in TCG DICE.\r\n\r\nHere, Each meas-map has one or more authority for the Measured Element specified and identified by mkey (Optionally)\r\n\r\nIf I have Multiple measured elements of the same Platform TCB (identified by a unique Environment) I can specify multiple measurement-map each identifying individual Measured Element ..?\r\n\r\nSo Option 2, seems more clear to me , unless I am missing something on Option -1 \r\n\r\n@thomas-fossati : On your comment above, rather than clumsy :\r\n`rather than a clumsy [ + [ k, v ] ]`\r\nWhy do you have two brackets here ?\r\n\r\nShould not it be: [k,v, a ] ??\r\n",
          "createdAt": "2024-09-09T11:36:13Z",
          "updatedAt": "2024-09-09T11:36:13Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> @thomas-fossati : On your comment above, rather than clumsy : `rather than a clumsy [ + [ k, v ] ]` Why do you have two brackets here ?\r\n\r\nBecause this is what Dionna's first proposal in this PR looked like, in order to be backwards compatible with the current layout of the `measurement-map`.",
          "createdAt": "2024-09-09T13:18:21Z",
          "updatedAt": "2024-09-09T13:18:21Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> > @thomas-fossati : On your comment above, rather than clumsy : `rather than a clumsy [ + [ k, v ] ]` Why do you have two brackets here ?\r\n> \r\n> Because this is what Dionna's first proposal in this PR looked like, in order to be backwards compatible with the current layout of the `measurement-map`.\r\n\r\nok I got it! the reference was to her earlier proposal",
          "createdAt": "2024-09-09T13:25:22Z",
          "updatedAt": "2024-09-09T13:25:22Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "There are reasons for keeping an authority with an individual k/v pair, so the original measurement-map multiplicity is more expressive. It would be nice to have a simple way to put an authority over a gaggle of pairs instead of one or all, but in the spirit of simplicity we should just stick with the v0 multiplicity and drop the + k => v approach.",
          "createdAt": "2024-09-09T14:45:38Z",
          "updatedAt": "2024-09-09T14:45:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "There are multiple different ways to slice this cake, e.g.: `{ + k => [ a, v ] }`.\r\n\r\nIt seems to me that we can run in circles forever unless we clarify the point I raised previously, which is still unanswered:\r\n\r\n> If instead on-the-wire compatibility with TCG is a requirement, then the CDDL should be considered frozen, and IETF should only be working on clarifying the semantics and processing rules.",
          "createdAt": "2024-09-09T15:27:56Z",
          "updatedAt": "2024-09-09T15:28:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86GL54q",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T15:56:21Z",
          "updatedAt": "2024-08-21T15:56:22Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I would clarify this in a better way....\r\n\r\nI guess you intend to remove the index 0 for `mkey` but want to retain the `mkey` for your mkeyvalue-pair",
              "createdAt": "2024-08-21T15:56:22Z",
              "updatedAt": "2024-08-21T15:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GMWnq",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T16:47:35Z",
          "updatedAt": "2024-08-21T16:54:52Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "This encoding looks very clumsy.\r\n\r\nIf we are going to tweak the internals of the `measurement-map`, let's do it properly :-)\r\n\r\nIn particular, it seems more natural to model it as:\r\n\r\n```\r\nmeasurement-map = {\r\n  ? \"__authorized-by\" : [ + $crypto-key-type-choice ]\r\n  + (tstr / uint) => measurement-values-map\r\n}\r\n```\r\n\r\n1. `__authorized-by` needs to be a reserved keyword (note that it uses a [cut](https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.4) in the map);\r\n1. since both OIDs and UUIDs have canonical string representations, limiting the key types to `tstr` and `uint` doesn't look like a serious loss.  E.g.:\r\n```\r\n{\r\n  \"__authorized-by\": [ h'deadbeef' ],\r\n  \"2.999.1\": { / name, version, digest / },\r\n  \"8615c61a-9e43-4cb1-a8d6-d238f1936207\": { / name, digest / },\r\n  \"my-fw-component\": { / name, version, digest / },\r\n  21: { / digest / }\r\n}\r\n```",
              "createdAt": "2024-08-21T16:47:36Z",
              "updatedAt": "2024-08-21T17:21:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GMgYg",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T17:01:59Z",
          "updatedAt": "2024-08-21T17:01:59Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Where is the multiplicity gone in this modified  proposal?",
              "createdAt": "2024-08-21T17:01:59Z",
              "updatedAt": "2024-08-21T17:01:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GMm9m",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T17:14:15Z",
          "updatedAt": "2024-08-21T17:14:16Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> Where is the multiplicity gone in this modified proposal?\r\n\r\n`+ (tstr / uint) => measurement-values-map` (specifically, the `+`)\r\n\r\nSee also the example which shows four \"components\".",
              "createdAt": "2024-08-21T17:14:15Z",
              "updatedAt": "2024-08-21T17:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GMqaf",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T17:21:57Z",
          "updatedAt": "2024-08-21T17:21:57Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Does that mean `measurement-values-map` has no fixed code point?",
              "createdAt": "2024-08-21T17:21:57Z",
              "updatedAt": "2024-08-21T17:22:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GNR8K",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T18:45:09Z",
          "updatedAt": "2024-08-21T18:45:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> [...] since both OIDs and UUIDs have canonical string representations, limiting the key types to `tstr` and `uint` doesn't look like a serious loss.\r\n\r\nThat said, if we _really_ wanted we could define the key as an extensible type choice and do:\r\n```\r\nmeasurement-map = {\r\n  \"__authorized-by\" : [ + $crypto-key-type-choice ]\r\n  + $mkey-type-choice => measurement-value-map\r\n}\r\n\r\n$mkey-type-choice /= uint\r\n$mkey-type-choice /= tstr\r\n; $mkey-type-choice /= tagged-uuid ...\r\n```\r\n\r\nNot sure we'd have any strong reason for doing so; I just wanted to make it clear that the restriction in my proposal above is purely artificial.",
              "createdAt": "2024-08-21T18:45:09Z",
              "updatedAt": "2024-08-21T18:45:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GV2lT",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Very nice, thanks.\r\n\r\nThe only thing lacking is a clear description of how the element key interacts with the matching rules.",
          "createdAt": "2024-08-22T08:43:35Z",
          "updatedAt": "2024-08-22T08:51:00Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThe supply chain entity that is defined as the authority responsible for providing the measurements (i.e. Reference Values or Endorsed Values)\r\n```",
              "createdAt": "2024-08-22T08:43:35Z",
              "updatedAt": "2024-08-22T08:51:00Z"
            },
            {
              "originalPosition": 8,
              "body": "I \u2764\ufe0f \"element\"",
              "createdAt": "2024-08-22T08:44:19Z",
              "updatedAt": "2024-08-22T08:51:00Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nA measured element serves as a local identifier within the scope of the Environment.\r\n```",
              "createdAt": "2024-08-22T08:46:52Z",
              "updatedAt": "2024-08-22T08:51:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GV_iC",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-22T08:58:41Z",
          "updatedAt": "2024-08-22T08:58:41Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@deeglaze & @thomas-fossati : I am not convinced this is the right approach given the nature of complexity  for users to grasp, + lack of deterministic encoding for `measurement-values-map`.\r\n\r\nAlso we need the Mkey to be a bit more flexible, which in cases I am modelling could be a UUID or a UEID.\r\n\r\nLet us discuss this in the next call, before fixating on this approach!",
              "createdAt": "2024-08-22T08:58:41Z",
              "updatedAt": "2024-08-22T08:58:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GXrJm",
          "commit": {
            "abbreviatedOid": "f6d1f13"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-22T12:17:00Z",
          "updatedAt": "2024-08-22T12:17:00Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> I am not convinced this is the right approach given\r\n> * the nature of complexity for users to grasp,\r\n\r\nThis statement is entirely subjective. To me, it looks very simple and natural - in fact, much simpler than the originally proposed array of tuples.\r\n\r\n> * lack of deterministic encoding for `measurement-values-map`.\r\n\r\n\"deterministic encoding\" has a precise meaning (e.g., [S4.2. of STD 94](https://www.rfc-editor.org/rfc/rfc8949.html#section-4.2), which I believe is not what you meant.\r\n\r\nCould you please clarify?\r\n \r\n> Also we need the Mkey to be a bit more flexible, which in cases I am modelling could be a UUID or a UEID.\r\n\r\nIt *is* flexible already: `$measured-element-type-choice` is an extensible type.\r\n\r\nWhat kind of extra flexibility do you need?\r\n\r\n> Let us discuss this in the next call, before fixating on this approach!\r\n\r\nSure, and we can discuss it here as well.\r\n",
              "createdAt": "2024-08-22T12:17:00Z",
              "updatedAt": "2024-08-22T12:17:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HEko3",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T12:32:27Z",
          "updatedAt": "2024-08-28T12:32:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "If you want a magic key value then perhaps use NULL or a tagged value rather than a magic string.\r\nAlternatively, can authorities be moved up a level?",
              "createdAt": "2024-08-28T12:32:28Z",
              "updatedAt": "2024-08-28T12:36:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HErPU",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T12:44:06Z",
          "updatedAt": "2024-08-28T12:44:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nAn environment has one or more measured elements.\r\nMeasured elements are distinguished from each other by the `measurement-map` key.\r\n```",
              "createdAt": "2024-08-28T12:44:06Z",
              "updatedAt": "2024-08-28T12:44:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HExYU",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T12:54:09Z",
          "updatedAt": "2024-08-28T12:54:09Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I think we need some CBOR tweaks here... probably best discussed in the meeting.",
              "createdAt": "2024-08-28T12:54:09Z",
              "updatedAt": "2024-08-28T12:54:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HEzNi",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T12:57:07Z",
          "updatedAt": "2024-08-28T12:57:07Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nThe `measurement-map` contains one or more measured-entities, each is identified by the map key.\r\nIt may also contain special values which apply to all measured-entities.\r\n```",
              "createdAt": "2024-08-28T12:57:07Z",
              "updatedAt": "2024-08-28T12:57:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE1C3",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:00:04Z",
          "updatedAt": "2024-08-28T13:00:04Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Suggest moving this to the end and replacing it with something like:\r\n```suggestion\r\nThe special map key NULL indicates that the corresponding value is a list of authorities for the measurement.\r\nIn an ACS entry this indicates which entity deckared the validity of the measurement.\r\nIn a reference value entry this provides a list of the authorities whose authority declaration is required.\r\n```",
              "createdAt": "2024-08-28T13:00:04Z",
              "updatedAt": "2024-08-28T13:00:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE1-z",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:01:34Z",
          "updatedAt": "2024-08-28T13:01:34Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nWhen the map value is a uint or string, the map value holds the corresponding measurement values.\r\nDescribed in {{sec-comid-mval}}.\r\n```",
              "createdAt": "2024-08-28T13:01:34Z",
              "updatedAt": "2024-08-28T13:01:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE2sL",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:02:41Z",
          "updatedAt": "2024-08-28T13:02:42Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nThe types defined for identifying a measured element are uint, or a textual string.\r\n```",
              "createdAt": "2024-08-28T13:02:41Z",
              "updatedAt": "2024-08-28T13:05:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE6Di",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:08:06Z",
          "updatedAt": "2024-08-28T13:08:07Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Why is this a bad thing?\r\nWhen matching a reference value against the ACS, I was expecting the mkey to be used as part of finding measurement elements to be compared. Isn't that how the processing happens?",
              "createdAt": "2024-08-28T13:08:06Z",
              "updatedAt": "2024-08-28T13:08:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE6qA",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think this is going in the right direction, but I don't think we are aligned on all the key concepts yet.",
          "createdAt": "2024-08-28T13:09:06Z",
          "updatedAt": "2024-08-28T13:09:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86HE78H",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:11:09Z",
          "updatedAt": "2024-08-28T13:11:09Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "Can we define a type, then have the text refer to the type rather than the key which identifies the type?",
              "createdAt": "2024-08-28T13:11:09Z",
              "updatedAt": "2024-08-28T13:11:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE8QC",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:11:38Z",
          "updatedAt": "2024-08-28T13:11:38Z",
          "comments": [
            {
              "originalPosition": 146,
              "body": "ditto",
              "createdAt": "2024-08-28T13:11:38Z",
              "updatedAt": "2024-08-28T13:11:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HE88l",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:12:43Z",
          "updatedAt": "2024-08-28T13:12:43Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\nEach Claim is encoded as an ECT. The `environment-map`, the `measurement-map` key, and the\r\n```",
              "createdAt": "2024-08-28T13:12:43Z",
              "updatedAt": "2024-08-28T13:12:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HFY7T",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:49:45Z",
          "updatedAt": "2024-08-28T13:49:45Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "Do the paragraphs above need to be enhanced to say how measurement-values-maps are selected for comparison? Example text for this might be:\r\n\r\n```suggestion\r\nThe Verifier initializes a temporary \"candidate entries\" variable with all entries in the ACS where the stateful environment `environment-map` and measured element identifier is a subset of the ACS `environment-map` and measured element identifier.\r\n\r\nA stateful environment `environment-map` is a subset of an ACS entry `environment-map` if each field (for example `class`, `instance` etc.) which is present in the stateful environment `environment-map` is also present in the ACS entry, and the CBOR encoded field values in the stateful environment and ACS entry are binary identical.\r\nIf a field is not present in the stateful environment `environment-map` then the presence of, and value of, the corresponding ACS entry field does not affect whether the `environment-map`s are subsets.\r\nA stateful environment measured element identifier is a subset of an ACS entry measured element identifier if their CBOR encodings are binary identical.\r\n```",
              "createdAt": "2024-08-28T13:49:45Z",
              "updatedAt": "2024-08-28T13:51:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HFfyy",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:57:15Z",
          "updatedAt": "2024-08-28T13:57:15Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Can we use an intermediate name for this, for example:\r\n```suggestion\r\n  ? \"__authorities\" => measurement-authorities\r\n```\r\nThis will make the textual description much easier to read.",
              "createdAt": "2024-08-28T13:57:15Z",
              "updatedAt": "2024-08-28T13:58:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HFgV2",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T13:57:50Z",
          "updatedAt": "2024-08-28T13:57:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The second part of the change suggested above is:\r\n\r\n```suggestion\r\n}\r\n\r\nmeasurement-authorities = [ + $crypto-key-type-choice ]\r\n```",
              "createdAt": "2024-08-28T13:57:50Z",
              "updatedAt": "2024-08-28T13:58:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HFlBx",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T14:03:42Z",
          "updatedAt": "2024-08-28T14:03:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Authorities are more predicate than they are object, so I'm happy to move them into the triple / stateful-environment-map. I'd like to ask the group about it though.",
              "createdAt": "2024-08-28T14:03:42Z",
              "updatedAt": "2024-08-28T14:03:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HFpEZ",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-28T14:09:24Z",
          "updatedAt": "2024-08-28T14:09:24Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I conceptualize environment map as a \"place\" and measurement-map as \"properties\", so I wouldn't say that a particular property from an attester should be considered more refinement on the place it's describing. If there is environment information, I think it should be in the transformation.",
              "createdAt": "2024-08-28T14:09:24Z",
              "updatedAt": "2024-08-28T14:09:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HTyLJ",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T20:19:48Z",
          "updatedAt": "2024-08-29T20:19:48Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "As discussed in the meeting, we'll move discussion to issue#244 and resolve the authorities encoding in a follow-up PR.",
              "createdAt": "2024-08-29T20:19:48Z",
              "updatedAt": "2024-08-29T20:19:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HqAXu",
          "commit": {
            "abbreviatedOid": "b0b204c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T15:56:40Z",
          "updatedAt": "2024-09-02T15:56:40Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Maybe we should an example of \"element\" higher (closer to line 771)?",
              "createdAt": "2024-09-02T15:56:40Z",
              "updatedAt": "2024-09-02T15:56:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HqBBy",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T15:59:03Z",
          "updatedAt": "2024-09-02T15:59:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The \"__\"-prefix are intended to be a placeholder (not a magic string). Personally, I think in the context of this map, negative values are perfectly fine.",
              "createdAt": "2024-09-02T15:59:03Z",
              "updatedAt": "2024-09-02T15:59:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HqCIb",
          "commit": {
            "abbreviatedOid": "b0b204c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T16:02:21Z",
          "updatedAt": "2024-09-02T16:02:21Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nThe `measurement-map` contains one or more measured elements, each is identified by the map key.\r\n```\r\n\r\n> It may also contain special values which apply to all measured-entities.\r\n\r\nShould this be the negative value space?\r\nSee \"fixme-authorities\" for context",
              "createdAt": "2024-09-02T16:02:21Z",
              "updatedAt": "2024-09-02T16:02:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HqC7h",
          "commit": {
            "abbreviatedOid": "b0b204c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T16:04:49Z",
          "updatedAt": "2024-09-02T16:04:49Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I agree with Henk that L802 in the suggested text is insufficient.  It needs some clear description of the negative codepoint space which is reserved for common attributes.",
              "createdAt": "2024-09-02T16:04:49Z",
              "updatedAt": "2024-09-02T16:05:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HqDyD",
          "commit": {
            "abbreviatedOid": "b0b204c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T16:08:10Z",
          "updatedAt": "2024-09-02T16:08:10Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This is a list of definitions, we should not remove the term that is defined.  We need instead to define the `measurement-values-map` value more clearly.",
              "createdAt": "2024-09-02T16:08:10Z",
              "updatedAt": "2024-09-02T16:08:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H1DMN",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T02:43:31Z",
          "updatedAt": "2024-09-04T02:43:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I've changed the placeholder string to a &(fixme-authority: -1) codepoint since I plan to follow up with another PR that lifts authorities out of measurement-map and into the surrounding uses when appropriate.",
              "createdAt": "2024-09-04T02:43:31Z",
              "updatedAt": "2024-09-04T02:43:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H1Gf-",
          "commit": {
            "abbreviatedOid": "c587c4b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T03:00:36Z",
          "updatedAt": "2024-09-04T03:00:36Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Oh interesting, I didn't think it was a list of required authorities but rather a list of allowed authorities. At least one must match. Perhaps authorities should be an explicit pattern that is consistent with that interpretation:\r\n\r\nauthority = $crypto-key-type-choice\r\nauthorities = [ + authority ] / #6.562([ + authorities ]) / #6.563([ + authorities ])\r\n\r\nWe ensure #6.563 has a subset relationship with the list it's matched against, so all listed authority patterns in #6.563 must match some entry of acs-authorities.\r\n\r\nThis is different from #6.562 since that is any pattern fully matches the value (not an entry of the value, presumed array)",
              "createdAt": "2024-09-04T03:00:36Z",
              "updatedAt": "2024-09-04T03:00:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H2Y-7",
          "commit": {
            "abbreviatedOid": "b0b204c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T07:10:06Z",
          "updatedAt": "2024-09-04T07:10:07Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nThe types defined for identifying a measured element are uint, or a textual string.\r\nThe negative integers range is reserved and MUST NOT be used as a measurement key.\r\n```",
              "createdAt": "2024-09-04T07:10:07Z",
              "updatedAt": "2024-09-04T07:10:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 258,
      "id": "PR_kwDOH6-tI8547ukf",
      "title": "Add any-of matching operator to wrap measurement values",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/258",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "For-next-release"
      ],
      "body": "When you have requirements that fields 1-100 must be certain values, and field 0 may be one of many values when in the presence of those other field values, the representation of the matching condition repeats the same 100 certain values for each alternative for field 0. It's far simpler to allow for measurement values to have independently flexible measurement conditions when in that case.\r\n\r\nThis is still a weak pattern expression language, but the \"any-of\" use case is a particularly commonly needed one.\r\n\r\nThis PR seeks to solve one aspect of the multiplicity problem discussed in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/256",
      "createdAt": "2024-08-21T05:13:03Z",
      "updatedAt": "2024-10-04T23:21:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fd67b62321ec9b4259e436f06ea66db596b5f980",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "mval-proposal",
      "headRefOid": "62cba42113b6985e44bda73be77a819d84371564",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we want to merge this or wait for @nedmsmith ?",
          "createdAt": "2024-08-29T21:08:43Z",
          "updatedAt": "2024-08-29T21:08:43Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I recommend waiting until we have a WGLC candidate then deciding if it makes sense to wait on WGLC or proceed.",
          "createdAt": "2024-09-17T22:35:35Z",
          "updatedAt": "2024-09-17T22:35:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86HGzkB",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, but will probably clash with #257 ",
          "createdAt": "2024-08-28T16:04:16Z",
          "updatedAt": "2024-08-28T16:04:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86HnqxM",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T10:58:33Z",
          "updatedAt": "2024-09-02T10:58:34Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "We need to be a bit careful, in applying `any-of` semantics everywhere! Especially in this case, I am struggling to see the justification for line 16:",
              "createdAt": "2024-09-02T10:58:34Z",
              "updatedAt": "2024-09-02T10:58:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HnrRg",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "In general looks good to me, with minor clarifications",
          "createdAt": "2024-09-02T10:59:31Z",
          "updatedAt": "2024-09-02T10:59:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86HntKo",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T11:03:15Z",
          "updatedAt": "2024-09-02T11:03:15Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "If we decide to introduce `any-of` semantics, then we should also provide a comparison logics for this semantics, for each one of the elements inside the value map.\r\n\r\nWhile this is not a gating criterion for progressing this PR, it might be worth noting this using Edit on an already opened github issue, or creating a new one, if absent!",
              "createdAt": "2024-09-02T11:03:15Z",
              "updatedAt": "2024-09-02T11:03:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HntV3",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "nits",
          "createdAt": "2024-09-02T11:03:40Z",
          "updatedAt": "2024-09-02T11:03:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Hw46_",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T15:08:54Z",
          "updatedAt": "2024-09-03T15:08:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Is the description in the matching operators section insufficient for defining the comparison semantics?\r\n\r\nWhat do you mean comparison logics?",
              "createdAt": "2024-09-03T15:08:54Z",
              "updatedAt": "2024-09-03T15:08:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86HxhX8",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T16:15:12Z",
          "updatedAt": "2024-09-03T16:15:13Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "It may be worth trying to frame this more generally in terms of \"matchers\", of which `any-of` would be an instance.\r\n\r\nFor example, we could make the type of each claim value a `$type-matcher`:\r\n\r\n```\r\nmeasurement-values-map = non-empty<{\r\n  ? svn: $svn-matchers\r\n  ? digest: $digest-matchers\r\n  ; ...\r\n}>\r\n```\r\n\r\nA matcher would be defined as a choice between different high-level matcher types, e.g., the _naked_ type, a _multiple_ type (similar to `any-of` here), a _range_ type, etc., depending on what makes sense for that claim.\r\n\r\n```\r\nmatch-multiple<T> = #6.554([ 2* T ])\r\nmatch-range<T> = #6.555(range-desc<T>)\r\n; match-regex, match-masked-bytes, etc.\r\n```\r\n\r\n\r\nFor example, for SVNs, it makes sense to define all three above:\r\n\r\n```\r\n$svn-type = uint\r\n\r\n$svn-matchers /= $svn-type\r\n$svn-matchers /= match-multiple<$svn-type>\r\n$svn-matchers /= match-range<$svn-type>\r\n```\r\n\r\nFor digests (typically, random binary blobs) it makes little sense to add anything more than the \"multiple\" matcher:\r\n\r\n```\r\n$digest-type = [ val: bytes, alg: int ]\r\n\r\n$digest-matchers /= $digest-type\r\n$digest-matchers /= match-multiple<$digest-type>\r\n```\r\n\r\netc.\r\n",
              "createdAt": "2024-09-03T16:15:12Z",
              "updatedAt": "2024-09-03T16:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H0_cA",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T02:23:53Z",
          "updatedAt": "2024-09-04T02:23:54Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "The idea is generally that base CoRIM measurement values should allow for basic patterns for comparisons. The RVP doesn't have to use the new tag, but being choosey about where is \"more appropriate\" for it I think isn't necessarily our place to say.",
              "createdAt": "2024-09-04T02:23:53Z",
              "updatedAt": "2024-09-04T02:23:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H1AW4",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T02:28:25Z",
          "updatedAt": "2024-09-04T02:28:25Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "\"matcher\" is more often called a \"pattern\" in programming languages (as in \"pattern matching\"). I could definitely be down for framing the values as having their own generic or specific pattern forms, but I don't think making them extensible is necessarily the right choice. If there are profile-specific representation choices, then they should use the values map extension socket, IMHO.",
              "createdAt": "2024-09-04T02:28:25Z",
              "updatedAt": "2024-09-04T02:28:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H1BPy",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T02:33:02Z",
          "updatedAt": "2024-09-04T02:33:03Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "In this regard, raw-value-mask could be a specific pattern for raw-value, such that a bstr matches a pattern #6.TBD(mask, raw-value-after-zeroextended-mask) instead of needing two values, but that representation choice is only good if the mask isn't needed on its own for lookup.",
              "createdAt": "2024-09-04T02:33:02Z",
              "updatedAt": "2024-09-04T02:33:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H2V62",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T07:04:04Z",
          "updatedAt": "2024-09-04T07:04:04Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "> \"matcher\" is more often called a \"pattern\" in programming languages (as in \"pattern matching\").\r\n\r\nWFM, **Pattern Matching** looks like a good section title :-D\r\n\r\n> I could definitely be down for framing the values as having their own generic or specific pattern forms, but I don't think making them extensible is necessarily the right choice.\r\n\r\nThe proposal is not to make them extensible.\r\nThe proposal is to define a few useful pattern-matching constructs in terms of their semantics, rules and CBOR tagging.  Then define the type of a claim in terms of a _fixed_ type choice that is built from those blocks.\r\n\r\n> If there are profile-specific representation choices, then they should use the values map extension socket, IMHO.\r\n\r\nYes.",
              "createdAt": "2024-09-04T07:04:04Z",
              "updatedAt": "2024-09-04T07:04:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H82W_",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T17:40:53Z",
          "updatedAt": "2024-09-04T17:40:53Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "If I characterize this vs. what is described in [Intel Profile](https://github.com/nedmsmith/draft-cds-rats-intel-corim-profile/tree/main). This uses CDDL macros to define \"possible state\" while Intel Profile uses CDDL directly. Use of CDDL directly is possibly more flexible as it is not limited by assumptions of the macro processor. For example, any-of<> models subset semantics, but what about superset and disjoint set? These are use cases that Intel would like to support. \r\n\r\nThe Intel Profile supports numeric ranges (greater-than, less-than, greater-equal, less-equal, inequality etc). The above suggests there could be a range macro,  but didn't define it, so it isn't clear that it would have the same utility as the CDDL definition. \r\n\r\nThe Intel Profile also supports time and epoch types. \r\n\r\nI think the use of macros is interesting and creative, but why is it better than using CDDL directly? ",
              "createdAt": "2024-09-04T17:40:53Z",
              "updatedAt": "2024-09-04T17:40:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86H9Lk6",
          "commit": {
            "abbreviatedOid": "62cba42"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T18:27:26Z",
          "updatedAt": "2024-09-04T18:27:26Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "any-of is not subset semantics, I think it's your `<evidence_object><member><reference_set>`, where the reference set is the [ + T ], and evidence_object is provided by the ECT, if I understand correctly.\r\n\r\nIf this is the case, then I'd want to allow for these set expressions in any reference value. Where you have set-type = [ * any ], I'd suggest `set-type<T> = [ * T ]`.",
              "createdAt": "2024-09-04T18:27:26Z",
              "updatedAt": "2024-09-04T18:28:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 259,
      "id": "PR_kwDOH6-tI854-1Q1",
      "title": "High Level IANA Registry Requests",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/259",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #14\r\nfixes #15\r\nfixes #45",
      "createdAt": "2024-08-21T12:56:36Z",
      "updatedAt": "2024-08-21T14:13:42Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fd67b62321ec9b4259e436f06ea66db596b5f980",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "registries",
      "headRefOid": "4e223d880a10b32b5bed9ab3572335b0b5e11c61",
      "closedAt": "2024-08-21T14:13:38Z",
      "mergedAt": "2024-08-21T14:13:38Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "c084eebe60008f24511a6e0cc387b588fe23e882"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86GKbAP",
          "commit": {
            "abbreviatedOid": "4e223d8"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T13:52:49Z",
          "updatedAt": "2024-08-21T13:52:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GKoUD",
          "commit": {
            "abbreviatedOid": "4e223d8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-08-21T14:12:33Z",
          "updatedAt": "2024-08-21T14:12:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GKoZD",
          "commit": {
            "abbreviatedOid": "4e223d8"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:12:40Z",
          "updatedAt": "2024-08-21T14:12:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 260,
      "id": "PR_kwDOH6-tI854-7u-",
      "title": "Replacing schema with CDDL definition (+ some style consistency)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/260",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #208\r\n\r\nRemoves the term `schema` and replaces it with `CDDL definition` as well as introduces some style consistency in the proximity of those changes.",
      "createdAt": "2024-08-21T13:09:40Z",
      "updatedAt": "2024-08-21T15:01:23Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "741a77424b68bc97642b7e47da99148e2bd7f157",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "schema",
      "headRefOid": "dc5087798ceb708a910848a55040397c159a9b00",
      "closedAt": "2024-08-21T15:01:20Z",
      "mergedAt": "2024-08-21T15:01:20Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "20fe75ebd7cb0b79c3b295b09bc59c0891f39247"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86GKBH-",
          "commit": {
            "abbreviatedOid": "5e655f5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:13:22Z",
          "updatedAt": "2024-08-21T13:13:23Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nThe following types of extensions are supported in CoRIM.\r\n```\r\n\r\nIn hindsight, a period might be the better choice at the end of a section.",
              "createdAt": "2024-08-21T13:13:22Z",
              "updatedAt": "2024-08-21T13:13:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKCMh",
          "commit": {
            "abbreviatedOid": "5e655f5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:15:07Z",
          "updatedAt": "2024-08-21T13:15:07Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "This okay? Introducing normative language might be out-of-scope of the issue addressed.",
              "createdAt": "2024-08-21T13:15:07Z",
              "updatedAt": "2024-08-21T13:15:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GKcWn",
          "commit": {
            "abbreviatedOid": "5e655f5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T13:54:51Z",
          "updatedAt": "2024-08-21T13:54:52Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "No, CoRIM profiles can be entirely private and not be meant for use outside of a closed circuit.",
              "createdAt": "2024-08-21T13:54:51Z",
              "updatedAt": "2024-08-21T13:54:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GK0Zl",
          "commit": {
            "abbreviatedOid": "5e655f5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-21T14:30:17Z",
          "updatedAt": "2024-08-21T14:30:18Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nNew data type extensions SHOULD be documented to facilitate interoperability.\r\n```",
              "createdAt": "2024-08-21T14:30:17Z",
              "updatedAt": "2024-08-21T14:30:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86GK03C",
          "commit": {
            "abbreviatedOid": "12ebf04"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-08-21T14:31:00Z",
          "updatedAt": "2024-08-21T14:31:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GK083",
          "commit": {
            "abbreviatedOid": "12ebf04"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:31:08Z",
          "updatedAt": "2024-08-21T14:31:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GKwq-",
          "commit": {
            "abbreviatedOid": "5e655f5"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:24:59Z",
          "updatedAt": "2024-08-21T14:31:48Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nNew data type extensions SHOULD be documented to facilitate interoperability.\r\n\r\nTODO: Clarify which data types need to be documented in a future change\r\n\r\n```",
              "createdAt": "2024-08-21T14:24:59Z",
              "updatedAt": "2024-08-21T14:31:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 261,
      "id": "PR_kwDOH6-tI854_WY4",
      "title": "Use US English spelling for consistency: -ized",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/261",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is a mix of British English and US English in the document, where US English is predominantly used. Change a couple -ised spellings to -ized.",
      "createdAt": "2024-08-21T14:01:30Z",
      "updatedAt": "2024-08-21T14:39:44Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "c084eebe60008f24511a6e0cc387b588fe23e882",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "ized",
      "headRefOid": "8131a9fa702aa8db6ef50f8c56bbede252fe19ef",
      "closedAt": "2024-08-21T14:39:44Z",
      "mergedAt": "2024-08-21T14:39:44Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "741a77424b68bc97642b7e47da99148e2bd7f157"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86GKlG2",
          "commit": {
            "abbreviatedOid": "8131a9f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-08-21T14:07:42Z",
          "updatedAt": "2024-08-21T14:29:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GKlOt",
          "commit": {
            "abbreviatedOid": "8131a9f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:07:53Z",
          "updatedAt": "2024-08-21T14:29:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GKlxu",
          "commit": {
            "abbreviatedOid": "8131a9f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:08:45Z",
          "updatedAt": "2024-08-21T14:29:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86GK1dN",
          "commit": {
            "abbreviatedOid": "8131a9f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-21T14:31:52Z",
          "updatedAt": "2024-08-21T14:31:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 264,
      "id": "PR_kwDOH6-tI856UaAr",
      "title": "Add meeting info to README",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/264",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I am unsure how to share this meeting with others. I cannot seem to find the public posting of it anywhere. I think Yogesh sent me an invite over email.",
      "createdAt": "2024-09-03T22:18:07Z",
      "updatedAt": "2024-09-04T03:46:45Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "20fe75ebd7cb0b79c3b295b09bc59c0891f39247",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "meeting",
      "headRefOid": "05567f6ccb4340f31a6f81a0d6d89261743d43dc",
      "closedAt": "2024-09-04T03:46:41Z",
      "mergedAt": "2024-09-04T03:46:41Z",
      "mergedBy": "deeglaze",
      "mergeCommit": {
        "oid": "eb42ce982e4851de9c790ef1bfe017b16a3f4abe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86H1Bpc",
          "commit": {
            "abbreviatedOid": "05567f6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "cool move!",
          "createdAt": "2024-09-04T02:34:54Z",
          "updatedAt": "2024-09-04T02:34:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 265,
      "id": "PR_kwDOH6-tI856a_Em",
      "title": "Proposal to add multiplicity of Measurement Maps",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/265",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Modern day attesters have Multiple Measured Elements, within a Target Environment. This PR intends to allow multiple measured elements to be expressed using a single Reference Value Triple.",
      "createdAt": "2024-09-04T16:33:59Z",
      "updatedAt": "2024-09-18T09:23:27Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "eb42ce982e4851de9c790ef1bfe017b16a3f4abe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "multiplicity",
      "headRefOid": "0ff26bef340181bf4ea3c2b6fa5ad759b7511021",
      "closedAt": "2024-09-18T09:23:27Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I am working on scanning the conditionality checks, so will make more commits to the PR!",
          "createdAt": "2024-09-04T16:38:40Z",
          "updatedAt": "2024-09-04T16:38:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a slight modification to already closed PR #181 in which the new PR introduces `backward compatibility` with existing CDDL in Rev-01 to Rev-5 of the specification and also the Base TCG Specification",
          "createdAt": "2024-09-04T16:39:49Z",
          "updatedAt": "2024-09-04T16:40:12Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze If you feel al-right, feel free to make more commits on the branch!",
          "createdAt": "2024-09-04T16:41:20Z",
          "updatedAt": "2024-09-04T16:41:20Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> @deeglaze If you feel al-right, feel free to make more commits on the branch!\r\n\r\nI don't have push rights to this branch, so I have suggestions in my own commit on top in https://github.com/ietf-rats-wg/draft-ietf-rats-corim/compare/multiplicity...deeglaze:draft-ietf-rats-corim:multiplicity",
          "createdAt": "2024-09-04T22:46:28Z",
          "updatedAt": "2024-09-04T22:46:28Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed it doesn't need the tag, but I do believe that conditional endorsements need to be updated to describe multiple mkeys at a time.",
          "createdAt": "2024-09-10T22:33:56Z",
          "updatedAt": "2024-09-10T22:33:56Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Agreed it doesn't need the tag, but I do believe that conditional endorsements need to be updated to describe multiple mkeys at a time.\r\n\r\nConditional endorsements were an IETF invention. Hence, no backwards compatibility concerns. The conditional endorsement triple was already updated to add multiplicity. The conditional series triple has the needed multiplicity properties already (at least I haven't had any requests to change it from the people I work with).",
          "createdAt": "2024-09-10T22:57:17Z",
          "updatedAt": "2024-09-10T22:57:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Contrast with #268 \r\nMaybe we should close this PR?",
          "createdAt": "2024-09-17T22:33:26Z",
          "updatedAt": "2024-09-17T22:33:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "The work proposed under this PR will be undertaken by PR: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268\r\n\r\nHence closing this PR",
          "createdAt": "2024-09-18T09:23:27Z",
          "updatedAt": "2024-09-18T09:23:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86H-vH-",
          "commit": {
            "abbreviatedOid": "0ff26be"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-04T21:06:42Z",
          "updatedAt": "2024-09-04T21:06:42Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "What is the meaning of this tag? I'm not sure why you need one when arrays and maps have different CBOR major type tags.",
              "createdAt": "2024-09-04T21:06:42Z",
              "updatedAt": "2024-09-04T21:06:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86It6Zt",
          "commit": {
            "abbreviatedOid": "0ff26be"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A straightforward solution is added to the tcg-compatible branch https://github.com/ietf-rats-wg/draft-ietf-rats-corim/tree/tcg-compatible\r\n\r\nIt includes examples that are backward compatible with the TCG specs. It doesn't seem to need a CBOR tag.\r\n\r\n",
          "createdAt": "2024-09-10T20:46:16Z",
          "updatedAt": "2024-09-10T20:48:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 268,
      "id": "PR_kwDOH6-tI857N_cj",
      "title": "Revert endorsement and reference triple records to original",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "This PR reverts `endorsement-triple-record` and `reference-triple-record` to original CDDL by adding array brackets around `measurement-map` to allow multiplicity of measurements for a given environment.\r\n\r\nThe Measurements and Measurement Keys sections are updated to better describe measurement multiplicity and disambiguation of measurement values.",
      "createdAt": "2024-09-11T21:16:30Z",
      "updatedAt": "2024-09-25T14:33:40Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "1d1af9459f2e0142743790892d4466e39bf86841",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "tcg-compatible",
      "headRefOid": "7a01ca689f4013783ba5138c0d80232214e3976b",
      "closedAt": "2024-09-25T14:33:36Z",
      "mergedAt": "2024-09-25T14:33:36Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "10dd89d95a9489563d1389e937478ecf8534de1f"
      },
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "The matching semantics wording needs to be updated to say that all measurement-maps have to match the ACS for the triple to apply.\r\n\r\nEdit: The text in the corroboration section is not clear about this. It indeed seems like it could be an OR semantics given\r\n\r\n> Reference Values may describe multiple acceptable states for Attesters; hence \"matching\" determines that Evidence (contained in the ACS) satisfies an appropriate subset of the available Reference Values.\r\n\r\nThe text \"where the reference-triple-record takes the place of a stateful-environment-record.\" is no longer the case since you haven't changed stateful-environment-record to have measurement-map multiplicity.",
          "createdAt": "2024-09-12T18:47:32Z",
          "updatedAt": "2024-09-12T18:56:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I modified Section 8.1 which defines the ECT structure, to reflect that claims-map always has multiplicity and to tweak naming to better reflect the idea that measurements can have \"element IDs\".\r\n\r\nI also modified the corroboration section (sorry Thomas) to better reflect the matching logic in terms of the internal representation. The before text was blending internal and external representation naming.\r\n\r\n",
          "createdAt": "2024-09-13T21:54:47Z",
          "updatedAt": "2024-09-13T21:54:47Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "See issue #266 ",
          "createdAt": "2024-09-17T21:39:18Z",
          "updatedAt": "2024-09-17T21:39:18Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "We still need to work on other triples involving `measurement-values-map`",
          "createdAt": "2024-09-18T09:51:30Z",
          "updatedAt": "2024-09-18T09:51:30Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith @thomas-fossati @deeglaze Thank you all for a great team effort, this PR is now in a pretty good shape, to be merged. We are happy and open to discuss the impact on Conditional Endorsed and Conditional Series triple. I have done some analysis which I will share in the github issue already created! \r\n\r\n@andrew-draper : Awaiting your analysis, as discussed earlier, however I understand, there are ways to improve conditional triples, orthogonal to this discussion hence we should merge this change, given all the collective hard work from CoRIM Team. \r\n\r\n@henkbirkholz : please review as well, your feedback is also super-important!",
          "createdAt": "2024-09-20T16:29:23Z",
          "updatedAt": "2024-09-20T16:29:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86JEH4K",
          "commit": {
            "abbreviatedOid": "36da9cf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-12T08:20:22Z",
          "updatedAt": "2024-09-12T08:21:43Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "WFM, but another way to put this (which I find more intuitive) is to say that an environment can be composed of multiple individually measured \"elements.\"\r\n\r\nI think \"element\" is the piece of vocabulary we were missing before Dionna proposed it in #257, allowing speaking about multiplicity more naturally.\r\n\r\nQuoting from #257:\r\n```\r\nAn environment has one or more measured elements.\r\nMeasured elements are distinguished from each other by the `measurement-map` key.\r\nA measured element can have a dedicated measurement, such as a security version number.\r\nMultiple elements could be combined into a single measurement, such as a running hash of multiple files.\r\nA measured element can also have several measurement values, such as a name, version, and digest.\r\nMeasurements can have class, instance or group scope.\r\nA `measurement-map`'s scope is determined by the `environment-map` it is paired with.\r\n```\r\n\r\n",
              "createdAt": "2024-09-12T08:20:22Z",
              "updatedAt": "2024-09-12T08:21:43Z"
            },
            {
              "originalPosition": 40,
              "body": "It could be that, but it could also be they serve as \"element\" identifiers.",
              "createdAt": "2024-09-12T08:21:37Z",
              "updatedAt": "2024-09-12T08:21:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JV8kt",
          "commit": {
            "abbreviatedOid": "eb98163"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-13T22:11:35Z",
          "updatedAt": "2024-09-13T22:11:48Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Note: element-id could go back to being bstr / tstr if the mapping from external to internal describes a mapping from uint, tagged-oid-type and tagged-uuid-type to bstr. ",
              "createdAt": "2024-09-13T22:11:35Z",
              "updatedAt": "2024-09-13T22:11:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JZ3zj",
          "commit": {
            "abbreviatedOid": "eb98163"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-15T01:06:29Z",
          "updatedAt": "2024-09-15T01:06:30Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nFor each entry in the `rv` list, if any part of an `rv` condition does not match an ACS entry, then the entire `rv` addition is not added to the ACS.\r\n```",
              "createdAt": "2024-09-15T01:06:30Z",
              "updatedAt": "2024-09-15T01:06:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JmasB",
          "commit": {
            "abbreviatedOid": "5956324"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T06:49:07Z",
          "updatedAt": "2024-09-17T06:52:11Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "`mkey` is an extensible type.  This aspect should be highlighted.",
              "createdAt": "2024-09-17T06:49:07Z",
              "updatedAt": "2024-09-17T06:52:11Z"
            },
            {
              "originalPosition": 65,
              "body": "the typographical convention for closed type choices is `NAME-type-choice`, so this should look like:\r\n\r\n```\r\nelement-id-type-choice /= bstr\r\nelement-id-type-choice /= tstr\r\nelement-id-type-choice /= uint\r\nelement-id-type-choice /= tagged-oid-type\r\nelement-id-type-choice /= tagged-uuid-type\r\n```",
              "createdAt": "2024-09-17T06:51:22Z",
              "updatedAt": "2024-09-17T06:52:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Js2JX",
          "commit": {
            "abbreviatedOid": "5956324"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:21:06Z",
          "updatedAt": "2024-09-17T16:21:07Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "The internal representation is trying to avoid unnecessary replication of external representation. If it's reasonable to translate the element-id-type-choice variety of representations to a simpler internal representation, then that might be preferable to replicating external representation as internal representation (which might change over time). Is a mapping function reasonable? For example, would a collision result from mapping uint to bstr that couldn't in some way be disambiguated?\r\n\r\nMaybe `local-environment` is better than `element-id-type-choice` as it is clearly different from the external representation?",
              "createdAt": "2024-09-17T16:21:06Z",
              "updatedAt": "2024-09-17T16:27:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J0JCG",
          "commit": {
            "abbreviatedOid": "5956324"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:34:52Z",
          "updatedAt": "2024-09-18T09:34:52Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Have added a line as suggested by Thomas!",
              "createdAt": "2024-09-18T09:34:52Z",
              "updatedAt": "2024-09-18T09:34:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J0Kcj",
          "commit": {
            "abbreviatedOid": "36da9cf"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T09:37:26Z",
          "updatedAt": "2024-09-18T09:37:26Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Agree with Thomas, in the latest commit, I have added this aspect, please have a look!",
              "createdAt": "2024-09-18T09:37:26Z",
              "updatedAt": "2024-09-18T09:37:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J1N6O",
          "commit": {
            "abbreviatedOid": "5956324"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T11:37:58Z",
          "updatedAt": "2024-09-18T11:37:58Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Clarifying question: are you suggesting avoiding using the typographical conventions in S3 for CDDL related to internal representation?\r\nIf so, I think it'd be better to keep the conventions and use an ad hoc prefix/suffix/infix for internal, e.g.: `__`, like in good old C :-)",
              "createdAt": "2024-09-18T11:37:58Z",
              "updatedAt": "2024-09-18T11:37:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J2gbt",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T13:50:03Z",
          "updatedAt": "2024-09-18T13:50:04Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Line 1583 which describes the claims needs to be:\r\n1. Reworded with a more appropriate name, like a set of claims \r\n2. Needs to explain better, regarding the claims pertaining to each of the measured elements belonging to a target environment",
              "createdAt": "2024-09-18T13:50:03Z",
              "updatedAt": "2024-09-18T13:50:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Js3Ua",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T16:23:26Z",
          "updatedAt": "2024-09-18T14:30:27Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n`Mkey` is an extensible identifier that initially defines OID, UUID, and uint.\r\n```",
              "createdAt": "2024-09-17T16:23:26Z",
              "updatedAt": "2024-09-18T14:30:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3A21",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:34:12Z",
          "updatedAt": "2024-09-18T14:34:13Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n`Mkey` is an extensible identifier. The initial types defined are OID, UUID, and uint.\r\n```",
              "createdAt": "2024-09-18T14:34:12Z",
              "updatedAt": "2024-09-18T14:34:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3Bff",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:35:10Z",
          "updatedAt": "2024-09-18T14:35:10Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n`mkey` may be necessary to disambiguate multiple measurements of the same type.\r\n```",
              "createdAt": "2024-09-18T14:35:10Z",
              "updatedAt": "2024-09-18T14:35:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3B2G",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:35:41Z",
          "updatedAt": "2024-09-18T14:35:42Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n`mkey` identifiers can be either OID, UUID or uint. `Mkey` is an extensible type.\r\n```",
              "createdAt": "2024-09-18T14:35:41Z",
              "updatedAt": "2024-09-18T14:35:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3Cpy",
          "commit": {
            "abbreviatedOid": "6c6567d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:36:57Z",
          "updatedAt": "2024-09-18T14:36:57Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n`mkey` is an extensible identifier. The initial types defined are OID, UUID, and uint.\r\n```",
              "createdAt": "2024-09-18T14:36:57Z",
              "updatedAt": "2024-09-18T14:36:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3IsK",
          "commit": {
            "abbreviatedOid": "e4dc42b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:45:51Z",
          "updatedAt": "2024-09-18T14:45:51Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "The referenced section is not properly named for what this is needed to match all mkey/mval pairs\r\n\r\n\"Processing a stateful environment against the Appraisal Claims Set {#sec-match-one-se}\"",
              "createdAt": "2024-09-18T14:45:51Z",
              "updatedAt": "2024-09-18T14:45:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J3Zgg",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This change is incomplete, it changes some external representation syntax, but not other representations.\r\nIn dicussions today we were unable to come to an agreement about whether the other triples should also be modified.\r\nI think this PR should change all triples at the same time so we can have one set of explanatory text.",
          "createdAt": "2024-09-18T15:05:50Z",
          "updatedAt": "2024-09-18T15:05:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J3jw4",
          "commit": {
            "abbreviatedOid": "e4dc42b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Issue#279 opened to close the matching semantics gap.",
          "createdAt": "2024-09-18T15:18:36Z",
          "updatedAt": "2024-09-18T15:18:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J3mhU",
          "commit": {
            "abbreviatedOid": "e4dc42b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T15:23:09Z",
          "updatedAt": "2024-09-18T15:23:17Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "We agreed to define the internal representation of element ID to match the external representation and to add wording to the effect that element IDs are compared in a byte for byte approach.",
              "createdAt": "2024-09-18T15:23:09Z",
              "updatedAt": "2024-09-18T15:23:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J7L9y",
          "commit": {
            "abbreviatedOid": "e4dc42b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T22:57:08Z",
          "updatedAt": "2024-09-18T22:57:09Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "The corroboration section removed the reference to sec-match-one-se for now.\r\nThe wording now says \"... ECTs are identical...\". There should be a section that describes how two ECTs are compared. Once that section is complete, a reference to it can be added here.",
              "createdAt": "2024-09-18T22:57:09Z",
              "updatedAt": "2024-09-18T22:57:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J_w91",
          "commit": {
            "abbreviatedOid": "d1045e9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T11:01:55Z",
          "updatedAt": "2024-09-19T11:01:55Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Given that `ECT` is an acronym for `Environment Claims Tuple`: I would rename line 1604 on the right to \r\n\r\n? iclaims: [+internal-claims-map]\r\n\r\n&\r\n\r\nLine 1610 to be:\r\ninternal-claims-map = {\r\n? eid: element-id\r\nclaims: measurement-values-map\r\n}",
              "createdAt": "2024-09-19T11:01:55Z",
              "updatedAt": "2024-09-19T11:01:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J_xdO",
          "commit": {
            "abbreviatedOid": "d1045e9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Some editorial comments but in general LGTM!",
          "createdAt": "2024-09-19T11:02:39Z",
          "updatedAt": "2024-09-19T11:02:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86KELh2",
          "commit": {
            "abbreviatedOid": "d1045e9"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T17:52:59Z",
          "updatedAt": "2024-09-19T17:52:59Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "I keyed off of the existing prose that describes it as properties. I don't think we need to bow to the consistency gods by changing ECT to EPT since the main focus is still on claims. In other words, the measurement-values-map contents are still the \"claims\". \r\n\r\nI find it easier to write the prose if the structures are all the same but with slight modification. \r\n\r\nGiven we now describe environments as consisting of zero or more elements. It may be appropriate to name `properties-map` to `element-map` then the contents of an element-map is the element-id and the claims `element-claims-map`. \r\n\r\n",
              "createdAt": "2024-09-19T17:52:59Z",
              "updatedAt": "2024-09-19T17:54:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KEMlj",
          "commit": {
            "abbreviatedOid": "d1045e9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T17:55:18Z",
          "updatedAt": "2024-09-19T17:55:18Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Works for me and I admit a very sensible suggestion.",
              "createdAt": "2024-09-19T17:55:18Z",
              "updatedAt": "2024-09-19T17:55:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KGeMb",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T00:11:01Z",
          "updatedAt": "2024-09-20T00:11:01Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Fixed in commit: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268/commits/017ae53348b76040894606c28daf2d19700fece8",
              "createdAt": "2024-09-20T00:11:01Z",
              "updatedAt": "2024-09-20T00:11:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KGfNW",
          "commit": {
            "abbreviatedOid": "457bf6e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T00:12:18Z",
          "updatedAt": "2024-09-20T00:12:18Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Fixed in commit: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268/commits/59fd80d9894bf52b9a6718d9339d6548c238ee9f",
              "createdAt": "2024-09-20T00:12:18Z",
              "updatedAt": "2024-09-20T00:12:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KGghZ",
          "commit": {
            "abbreviatedOid": "5956324"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T00:13:50Z",
          "updatedAt": "2024-09-20T00:13:50Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Fixed in commit: https://github.com/ietf-rats-wg/draft-ietf-rats-corim/commit/0d82b15fffd8cef5d09f4747e5e45bed8dd1caf6",
              "createdAt": "2024-09-20T00:13:50Z",
              "updatedAt": "2024-09-20T00:13:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KJXvT",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-09-20T09:13:07Z",
          "updatedAt": "2024-09-20T09:13:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86KMg-f",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T14:57:12Z",
          "updatedAt": "2024-09-20T14:57:13Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "```suggestion\r\nThe internal representation of Conceptual Messages, as well as the ACS ({{sec-ir-acs}}) and ARS ({{sec-ir-ars}}), are constructed from a common building block structure called Environment-Claims Tuple (ECT).\r\n```",
              "createdAt": "2024-09-20T14:57:13Z",
              "updatedAt": "2024-09-20T14:57:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMqwr",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:11:05Z",
          "updatedAt": "2024-09-20T15:11:05Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Purely typographic comment: there are structural elements that can be used to assemble an enumeration/definition list, rather than doing it by hand.  E.g.:\r\n\r\n```\r\n{: vspace=\"0\"}\r\nEnvironment:\r\n: Identifies ...\r\n\r\nElements:\r\n: Identifies ...\r\n```\r\n\r\nor\r\n\r\n```\r\n{:my-enum: style=\"format %d.\"}\r\n\r\n{: my-enum}\r\n* Environment: Identifies ...\r\n* Elements: Identifies ...\r\n```\r\n\r\nThe advantage is that rendering in the supported output formats (TXT, HTML, PDF) is taken care of automatically - and, hopefully, also optimally.",
              "createdAt": "2024-09-20T15:11:05Z",
              "updatedAt": "2024-09-20T15:11:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMsOE",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:13:51Z",
          "updatedAt": "2024-09-20T15:13:51Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "The shorthand convention doesn't seem to be defined anywhere.  OK, it's not completely unintuitive :-) but can't we use the unabbreviated labels?",
              "createdAt": "2024-09-20T15:13:51Z",
              "updatedAt": "2024-09-20T15:13:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMsek",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:14:21Z",
          "updatedAt": "2024-09-20T15:14:21Z",
          "comments": [
            {
              "originalPosition": 215,
              "body": "```suggestion\r\n#### Reference Triples Transformation {#sec-ref-trans}\r\n```",
              "createdAt": "2024-09-20T15:14:21Z",
              "updatedAt": "2024-09-20T15:14:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMvzy",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:20:28Z",
          "updatedAt": "2024-09-20T15:20:28Z",
          "comments": [
            {
              "originalPosition": 217,
              "body": "This (and similar instances below) will render as:\r\n```\r\nAn available rv list entry Section 8.2.1.2 is allocated.\r\n```\r\nwhich is not great.\r\n\r\nPlease wrap all the references to sections in parentheses so that it reads like:\r\n```\r\nAn available rv list entry (Section 8.2.1.2) is allocated.\r\n```",
              "createdAt": "2024-09-20T15:20:28Z",
              "updatedAt": "2024-09-20T15:20:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMxJK",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:23:11Z",
          "updatedAt": "2024-09-20T15:23:11Z",
          "comments": [
            {
              "originalPosition": 217,
              "body": "I noticed about 50% of the time cross references are not bounded by parens. Should it be 100%?",
              "createdAt": "2024-09-20T15:23:11Z",
              "updatedAt": "2024-09-20T15:23:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMxqy",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:24:15Z",
          "updatedAt": "2024-09-20T15:24:16Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "What is the typographical intent here?\r\n\r\nIf this is an algorithm, use enumerations (maybe custom ones, like I described in a comment above).\r\n\r\nAnonymous definition lists doesn't look like the right tool for the job.",
              "createdAt": "2024-09-20T15:24:15Z",
              "updatedAt": "2024-09-20T15:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMyL-",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:25:19Z",
          "updatedAt": "2024-09-20T15:25:20Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Are these TODOs (in which case, we should mark them explicitly and link to their associated issues)?  Or did you just forget to add the content?",
              "createdAt": "2024-09-20T15:25:20Z",
              "updatedAt": "2024-09-20T15:25:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMyq_",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:26:18Z",
          "updatedAt": "2024-09-20T15:26:18Z",
          "comments": [
            {
              "originalPosition": 254,
              "body": "Here and below, parentheses deficiency syndrome :-)",
              "createdAt": "2024-09-20T15:26:18Z",
              "updatedAt": "2024-09-20T15:26:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KMzcV",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:27:46Z",
          "updatedAt": "2024-09-20T15:27:46Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "It is a placeholder. There should be issues created and PRs that flesh them out. This PR is getting big enough already.",
              "createdAt": "2024-09-20T15:27:46Z",
              "updatedAt": "2024-09-20T15:27:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KM0Pi",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:29:24Z",
          "updatedAt": "2024-09-20T15:29:25Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "custom enumerations are new to me. I have to play around with it.",
              "createdAt": "2024-09-20T15:29:24Z",
              "updatedAt": "2024-09-20T15:29:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KM1h7",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:32:04Z",
          "updatedAt": "2024-09-20T15:32:04Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "OK; stick a `[^issue] https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/XYZ` nearby then.",
              "createdAt": "2024-09-20T15:32:04Z",
              "updatedAt": "2024-09-20T15:32:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KM99w",
          "commit": {
            "abbreviatedOid": "59694ab"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T15:44:41Z",
          "updatedAt": "2024-09-20T15:44:41Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "You could do:\r\n\r\n```\r\n{:algo-steps: counter=\"bar\" style=\"format Step %d.\"}\r\n\r\n{:algo-steps}\r\n* An available `rv` list entry {{sec-ir-ref-val}} is allocated.\r\nThe Reference Values Triple {{sec-comid-triple-refval}} `environment-map` is copied to the `environment-map` for both the `rv` `condition` and `rv` `addition` ECTs.\r\n* For each `measurement-map` entry in the measurements list, the i<sup>th</sup> `measurement-map` is copied to the i<sup>th</sup> `element-map` in the `elements` list of the `rv` `addition` ECT.\r\n* The issuer of the Endorsement conceptual message is copied to the `ev` `addition` ECT authority field.\r\n* If the Endorsement conceptual message has a profile, the profile is copied to the `ev` `addition` ECT profile field.\r\n```\r\n\r\nwhich is rendered as:\r\n```\r\n   Step 1.  An available rv list entry Section 8.2.1.2 is allocated.\r\n            The Reference Values Triple Section 5.1.4.2 environment-map\r\n            is copied to the environment-map for both the rv condition\r\n            and rv addition ECTs.\r\n\r\n   Step 2.  For each measurement-map entry in the measurements list, the\r\n            i^th measurement-map is copied to the i^th element-map in\r\n            the elements list of the rv addition ECT.\r\n\r\n   Step 3.  The issuer of the Endorsement conceptual message is copied\r\n            to the ev addition ECT authority field.\r\n\r\n   Step 4.  If the Endorsement conceptual message has a profile, the\r\n            profile is copied to the ev addition ECT profile field.\r\n```\r\n\r\n",
              "createdAt": "2024-09-20T15:44:41Z",
              "updatedAt": "2024-09-20T15:44:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNOa_",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T16:16:52Z",
          "updatedAt": "2024-09-20T16:16:52Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "Issue https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/287 will address this.",
              "createdAt": "2024-09-20T16:16:52Z",
              "updatedAt": "2024-09-20T16:16:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNO6F",
          "commit": {
            "abbreviatedOid": "dc204a2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T16:18:02Z",
          "updatedAt": "2024-09-20T16:18:03Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Fixed in commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268/commits/7a01ca689f4013783ba5138c0d80232214e3976b",
              "createdAt": "2024-09-20T16:18:03Z",
              "updatedAt": "2024-09-20T16:18:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNQt6",
          "commit": {
            "abbreviatedOid": "7a01ca6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-20T16:22:28Z",
          "updatedAt": "2024-09-20T16:22:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86KyMEL",
          "commit": {
            "abbreviatedOid": "7a01ca6"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I still think this is incomplete, but we have a direction for fixing the missing parts in future changes, so I think it is ok to check in this change.",
          "createdAt": "2024-09-25T14:15:18Z",
          "updatedAt": "2024-09-25T14:15:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 269,
      "id": "PR_kwDOH6-tI857a3q5",
      "title": "fix a few typos in Section 8",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/269",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-13T11:03:17Z",
      "updatedAt": "2024-09-18T16:38:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fa05b332ec78bdff6dc60fd4c1bfed536017a9a3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "tho-review-sec-8",
      "headRefOid": "01e91bc478476e8b0ac5801425964cd6875addcb",
      "closedAt": "2024-09-18T16:38:51Z",
      "mergedAt": "2024-09-18T16:38:51Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "ce24312110588ffbc4535000c28185232a6bf316"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86JRnoR",
          "commit": {
            "abbreviatedOid": "01e91bc"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-13T13:11:43Z",
          "updatedAt": "2024-09-18T16:29:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86JTGkB",
          "commit": {
            "abbreviatedOid": "01e91bc"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-13T15:51:48Z",
          "updatedAt": "2024-09-18T16:29:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J2yS3",
          "commit": {
            "abbreviatedOid": "01e91bc"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:13:37Z",
          "updatedAt": "2024-09-18T16:29:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J4PuO",
          "commit": {
            "abbreviatedOid": "01e91bc"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-09-18T16:31:11Z",
          "updatedAt": "2024-09-18T16:31:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 270,
      "id": "PR_kwDOH6-tI857eO5L",
      "title": "Combined sections for phases-5-6-7 ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/270",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Combined sections 5, 6 and 7 and provided prose for the new section.",
      "createdAt": "2024-09-13T19:31:42Z",
      "updatedAt": "2024-09-18T14:11:58Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "eb42ce982e4851de9c790ef1bfe017b16a3f4abe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "phases-5-6-7",
      "headRefOid": "d2d52d4d9c2ed71cb5200be109ec9deb10f7fc08",
      "closedAt": "2024-09-18T14:11:44Z",
      "mergedAt": "2024-09-18T14:11:44Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "209a55e71b12cdf1e7567756d8086fa282ecea7c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86JZ3Q7",
          "commit": {
            "abbreviatedOid": "05fc5d1"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-15T00:34:48Z",
          "updatedAt": "2024-09-15T01:03:55Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nThe Verifier implementation might generate a certificate path validation exception that is handled externally, or it could generate a Claim that the certificate path is invalid.\r\n```",
              "createdAt": "2024-09-15T00:34:48Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nFor example, an Appraisal Policy for Evidence may specify that if all of a collection of subcomponents satisfy a particular quality metric, the top-level component also satisfies the quality metric.\r\n```\r\n\r\nWhat do we mean by subcomponent? The Target Environment of a sub-attester, or a measured element (mkey) in the Attested Environment as encapsulated by a single evidence message?",
              "createdAt": "2024-09-15T00:39:18Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nAn internal representation of policy details, based on the policy ECT as described in {{sec-ir-policy}}, contain the environments affected by the policy with policy identifiers as Claims.\r\n```\r\nThis is hard for me to parse. I don't understand what this is saying to propose alternative text either. Elaborate?",
              "createdAt": "2024-09-15T00:40:19Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n## Examples for optional phases 5, 6, and 7 {#sec-phases567}\r\n```\r\n\r\nI think since these phases depend on the implementation, they're purely here for inspiration. I don't think you need to preface each paragraph with the same boilerplate if you give this section a more direct heading.",
              "createdAt": "2024-09-15T00:47:41Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nAttestation Results rely on input from the ACS, but may not bear any similarity to its content.\r\n```",
              "createdAt": "2024-09-15T00:50:15Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nAn internal representation of Attestation Results as separate contexts (see {{sec-ir-ars}}) ensures Relying Party\u2013specific processing does not modify the ACS, which is common to all Relying Parties.\r\n```\r\nParentheticals aren't also appositives.\r\n\r\nI don't see how the sec-ir-ars reference elaborates the description of [ + ECT ] as \"separate contexts\". It's just another data definition that's equivalent to an ACS.\r\n\r\nI don't think we've specified that the ACS is common to all relying parties either. There's nothing about the data definition that \"ensures processing doesn't modify\" something else. It's an organization technique that may help with that, but I don't know what this text is trying to say.",
              "createdAt": "2024-09-15T01:03:24Z",
              "updatedAt": "2024-09-15T01:03:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JwqFX",
          "commit": {
            "abbreviatedOid": "c140544"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T22:53:25Z",
          "updatedAt": "2024-09-17T22:53:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J1PCE",
          "commit": {
            "abbreviatedOid": "c140544"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\n(A few typo fixes in-line.)",
          "createdAt": "2024-09-18T11:40:13Z",
          "updatedAt": "2024-09-18T11:45:11Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nClaims related to Verifier-applied consistency checks are asserted under the authority of the Verifier.\r\n```",
              "createdAt": "2024-09-18T11:40:14Z",
              "updatedAt": "2024-09-18T11:45:11Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nFor example, the `attest-key-triple-record` may contain a cryptographic key to which the Verifier applies certificate path construction and validation.\r\n```",
              "createdAt": "2024-09-18T11:42:12Z",
              "updatedAt": "2024-09-18T11:45:11Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nValidation may reveal an expired certificate.\r\n```",
              "createdAt": "2024-09-18T11:42:27Z",
              "updatedAt": "2024-09-18T11:45:11Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nAn internal representation of policy details, based on the policy ECT as described in {{sec-ir-policy}}, contains the environments affected by the policy with policy identifiers as Claims.\r\n```",
              "createdAt": "2024-09-18T11:43:53Z",
              "updatedAt": "2024-09-18T11:45:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J2v05",
          "commit": {
            "abbreviatedOid": "d2d52d4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:10:50Z",
          "updatedAt": "2024-09-18T14:10:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J2wXm",
          "commit": {
            "abbreviatedOid": "d2d52d4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-09-18T14:11:10Z",
          "updatedAt": "2024-09-18T14:11:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J2xHd",
          "commit": {
            "abbreviatedOid": "d2d52d4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:11:58Z",
          "updatedAt": "2024-09-18T14:11:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 272,
      "id": "PR_kwDOH6-tI857h7py",
      "title": "Fix-up minor editorial issues",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/272",
      "state": "MERGED",
      "author": "steven-bellock",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor edits I made while reading the specification.\r\n\r\nSigned-off-by: Steven Bellock <sbellock@nvidia.com>",
      "createdAt": "2024-09-14T22:53:01Z",
      "updatedAt": "2024-09-18T17:25:05Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "ce24312110588ffbc4535000c28185232a6bf316",
      "headRepository": "steven-bellock/draft-ietf-rats-corim",
      "headRefName": "editorial",
      "headRefOid": "623f74dd0f664c5f3db578e2f82a6abb4caf3abf",
      "closedAt": "2024-09-18T16:43:43Z",
      "mergedAt": "2024-09-18T16:43:43Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "5613fe1b08183d9a99aa0948d2d0545a4962eeba"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The .ghpages workflow needs to be applied to get the build to succeed.",
          "createdAt": "2024-09-17T16:12:49Z",
          "updatedAt": "2024-09-17T16:12:49Z"
        },
        {
          "author": "steven-bellock",
          "authorAssociation": "COLLABORATOR",
          "body": "> The .ghpages workflow needs to be applied to get the build to succeed.\r\n\r\nDone.",
          "createdAt": "2024-09-17T21:09:45Z",
          "updatedAt": "2024-09-17T21:09:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86JZ3KZ",
          "commit": {
            "abbreviatedOid": "7805d5d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-15T00:29:31Z",
          "updatedAt": "2024-09-15T00:32:20Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nRollback of a security relevant change is considered to be an attack vector; as such, security version numbers MUST NOT be decremented.\r\n```",
              "createdAt": "2024-09-15T00:29:31Z",
              "updatedAt": "2024-09-15T00:32:20Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nIf a security relevant flaw is discovered in the Target Environment and is subsequently fixed, incrementing the `svn` value is RECOMMENDED.\r\n```",
              "createdAt": "2024-09-15T00:31:23Z",
              "updatedAt": "2024-09-15T00:32:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JbONj",
          "commit": {
            "abbreviatedOid": "7805d5d"
          },
          "author": "steven-bellock",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-15T21:07:24Z",
          "updatedAt": "2024-09-15T21:07:24Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I updated the editorial suggestions, but I do not want to add or remove normative wording in this pull request.",
              "createdAt": "2024-09-15T21:07:24Z",
              "updatedAt": "2024-09-15T21:07:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JbON1",
          "commit": {
            "abbreviatedOid": "7805d5d"
          },
          "author": "steven-bellock",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-15T21:07:32Z",
          "updatedAt": "2024-09-15T21:07:32Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I updated the editorial suggestions, but I do not want to add or remove normative wording in this pull request.",
              "createdAt": "2024-09-15T21:07:32Z",
              "updatedAt": "2024-09-15T21:07:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86JgOzs",
          "commit": {
            "abbreviatedOid": "dae62e7"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T14:57:25Z",
          "updatedAt": "2024-09-16T14:57:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86JgTuF",
          "commit": {
            "abbreviatedOid": "dae62e7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-09-16T15:05:03Z",
          "updatedAt": "2024-09-16T15:05:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Jmd6i",
          "commit": {
            "abbreviatedOid": "dae62e7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks @steven-bellock !",
          "createdAt": "2024-09-17T06:57:11Z",
          "updatedAt": "2024-09-17T06:57:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86JsxhR",
          "commit": {
            "abbreviatedOid": "dae62e7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-17T16:12:05Z",
          "updatedAt": "2024-09-17T16:12:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 273,
      "id": "PR_kwDOH6-tI857rzQj",
      "title": "Update ghpages.yml",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/273",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "changed from v2 to v4 of upload artifact",
      "createdAt": "2024-09-16T23:18:47Z",
      "updatedAt": "2024-09-17T16:05:05Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "eb42ce982e4851de9c790ef1bfe017b16a3f4abe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "nedmsmith-patch-1",
      "headRefOid": "fa216b2a67a8be6025b410849fd46a1846fd7a53",
      "closedAt": "2024-09-17T16:05:04Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This (and more CI-related updates) are taken care of in fc5b97d40fcdbd0db6448785345afbc39a5289c5 which is part of #269",
          "createdAt": "2024-09-17T06:55:24Z",
          "updatedAt": "2024-09-17T06:55:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "OK, I'll close this one.",
          "createdAt": "2024-09-17T16:05:04Z",
          "updatedAt": "2024-09-17T16:05:04Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 274,
      "id": "PR_kwDOH6-tI8570Ycf",
      "title": "Remove 'offline' key verification",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/274",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "The 'offline' qualifier to key verification is removed.\r\n\r\nFix #271",
      "createdAt": "2024-09-17T21:27:50Z",
      "updatedAt": "2024-09-18T17:18:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "5613fe1b08183d9a99aa0948d2d0545a4962eeba",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "remove-offline",
      "headRefOid": "3cd609a78eeaf3537fa3bd9da61d43b3e6a14100",
      "closedAt": "2024-09-18T17:18:11Z",
      "mergedAt": "2024-09-18T17:18:11Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "1d1af9459f2e0142743790892d4466e39bf86841"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86JwqLo",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T22:53:56Z",
          "updatedAt": "2024-09-17T22:53:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J1JRZ",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T11:30:34Z",
          "updatedAt": "2024-09-18T11:30:34Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "lossy compression :-)\r\n\r\n\r\n```suggestion\r\nVerification of a key, including its use restrictions, MAY produce Claims that are added to the ACS.\r\n```\r\n\r\n",
              "createdAt": "2024-09-18T11:30:34Z",
              "updatedAt": "2024-09-18T11:30:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J1JZq",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T11:30:50Z",
          "updatedAt": "2024-09-18T11:30:51Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "ditto",
              "createdAt": "2024-09-18T11:30:50Z",
              "updatedAt": "2024-09-18T11:30:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J21Xd",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:18:07Z",
          "updatedAt": "2024-09-18T14:18:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J21X5",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:18:07Z",
          "updatedAt": "2024-09-18T14:18:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J22Rf",
          "commit": {
            "abbreviatedOid": "9768437"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:19:25Z",
          "updatedAt": "2024-09-18T14:19:26Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nVerification of a key, including its use restrictions, MAY produce Claims that are added to the ACS.\r\n```",
              "createdAt": "2024-09-18T14:19:26Z",
              "updatedAt": "2024-09-18T14:19:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J22jV",
          "commit": {
            "abbreviatedOid": "9345bb0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:19:51Z",
          "updatedAt": "2024-09-18T14:20:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J228A",
          "commit": {
            "abbreviatedOid": "17a851e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:20:25Z",
          "updatedAt": "2024-09-18T14:20:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 275,
      "id": "PR_kwDOH6-tI8574OFu",
      "title": "Minor edits",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/275",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor edits while reading the document",
      "createdAt": "2024-09-18T10:10:45Z",
      "updatedAt": "2024-09-18T15:35:27Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "67aa74ef02d9c7c067fbf815fee1f76f70bb2630",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "general-tidyup",
      "headRefOid": "91faebb75bc10c5e54ea8468c603d5c004d929f8",
      "closedAt": "2024-09-18T15:35:24Z",
      "mergedAt": "2024-09-18T15:35:24Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "fa05b332ec78bdff6dc60fd4c1bfed536017a9a3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86J2qOU",
          "commit": {
            "abbreviatedOid": "91faebb"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:03:33Z",
          "updatedAt": "2024-09-18T15:30:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J2z_D",
          "commit": {
            "abbreviatedOid": "91faebb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:16:03Z",
          "updatedAt": "2024-09-18T15:30:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86J20Oo",
          "commit": {
            "abbreviatedOid": "91faebb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-18T14:16:25Z",
          "updatedAt": "2024-09-18T15:30:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 276,
      "id": "PR_kwDOH6-tI8575-8y",
      "title": "Impact of Multiple Measured Elements to Conditional Triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/276",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Extending the Compatibility PR to other triples. Once we have a consensus, this PR will be deleted, it will be either merged into\r\n PR #268 ",
      "createdAt": "2024-09-18T13:53:08Z",
      "updatedAt": "2024-10-02T14:47:53Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d8d1365ecaea023cd95c59b97ab8d2026397c0c6",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "tcg-comp-to-other-triples",
      "headRefOid": "2a4a82e7855bc7f335724aa39b954b97442635b1",
      "closedAt": "2024-10-02T14:47:48Z",
      "mergedAt": "2024-10-02T14:47:48Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "7053863374ffd42745824af008028e4fea907708"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Hey, I put together an experiment where I started with the ev and evs cddl and constructed records for conditional endorsed and conditional endorsed series. This CDDL compiles.\r\n```\r\nstart = conditional-endorsement-record / conditional-endorsement-series-record\r\n\r\nconditional-endorsement-record = [\r\n  conditions: [ + environment-element-map ]\r\n  additions: [ + environment-element-map ]\r\n]\r\n\r\nconditional-endorsement-series-record = [\r\n  conditions: [ + environment-element-map ]\r\n  series: [ + conditional-series-map ]\r\n]\r\n\r\nenvironment-element-map = {\r\n  &(environment: 0) => environment-map\r\n  &(elements: 1) => [ + measurement-map ]\r\n}\r\n\r\nconditional-series-map = {\r\n  ; first selections that match terminates search\r\n  &(selections: 0) => [ + environment-element-map ]\r\n  &(additions: 1) => [ + environment-element-map ]\r\n}\r\n```\r\nHere are a couple of examples. First for conditional endorsement:\r\n```\r\n/ conditional-endorsement-record / [\r\n    / conditions / [\r\n        / environment-element-map / {\r\n            / environment-map / 0 : {\r\n                / comid.class / 0 : {\r\n                    / comid.class-id / 0 :\r\n                        / tagged-uuid-type / 37(\r\n                        h'67b28b6c34cc40a19117ab5b05911e37'\r\n                        ),\r\n                    / comid.vendor / 1 : \"ACME Inc.\",\r\n                    / comid.model / 2 : \"ACME RoadRunner\",\r\n                    / comid.layer / 3 : 1\r\n                }\r\n            },\r\n            / elements / 1 : [\r\n                / measurement-map / {\r\n                    / comid.mval / 1 : {\r\n                        / comid.ver / 0 : {\r\n                            / comid.version / 0 : \"1.0.0\",\r\n                            / comid.version-scheme / 1 : 16384 / semver /\r\n                        },\r\n                        / comid.digests / 2 : [ [\r\n                            / hash-alg-id / 1, / sha256 /\r\n                            / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n                        ] ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    / additions / [\r\n        / environment-element-map / {\r\n            / environment-map / 0 : {\r\n                / comid.class / 0 : {\r\n                    / comid.class-id / 0 :\r\n                        / tagged-uuid-type / 37(\r\n                        h'67b28b6c34cc40a19117ab5b05911e37'\r\n                        ),\r\n                    / comid.vendor / 1 : \"ACME Inc.\",\r\n                    / comid.model / 2 : \"ACME RoadRunner\",\r\n                    / comid.layer / 3 : 1\r\n                }\r\n            },\r\n            / elements / 1 : [\r\n                / measurement-map / {\r\n                    / comid.mval / 1 : {\r\n                        / comid.ver / 0 : {\r\n                            / comid.version / 0 : \"1.0.0\",\r\n                            / comid.version-scheme / 1 : 16384 / semver /\r\n                        },\r\n                        / comid.digests / 2 : [ [\r\n                            / hash-alg-id / 1, / sha256 /\r\n                            / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n                        ] ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n]\r\n```\r\nThis is for conditional endorsement series:\r\n```\r\n/ conditional-endorsement-series-record / [\r\n    / conditions / [\r\n        / environment-element-map / {\r\n            / environment-map / 0 : {\r\n                / comid.class / 0 : {\r\n                    / comid.class-id / 0 :\r\n                        / tagged-uuid-type / 37(\r\n                        h'67b28b6c34cc40a19117ab5b05911e37'\r\n                        ),\r\n                    / comid.vendor / 1 : \"ACME Inc.\",\r\n                    / comid.model / 2 : \"ACME RoadRunner\",\r\n                    / comid.layer / 3 : 1\r\n                }\r\n            },\r\n            / elements / 1 : [\r\n                / measurement-map / {\r\n                    / comid.mval / 1 : {\r\n                        / comid.ver / 0 : {\r\n                            / comid.version / 0 : \"1.0.0\",\r\n                            / comid.version-scheme / 1 : 16384 / semver /\r\n                        },\r\n                        / comid.digests / 2 : [ [\r\n                            / hash-alg-id / 1, / sha256 /\r\n                            / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n                        ] ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    / series / [\r\n        / conditional-series-map / {\r\n            / selections / 0 : [\r\n                / environment-element-map / {\r\n                    / environment-map / 0 : {\r\n                        / comid.class / 0 : {\r\n                            / comid.class-id / 0 :\r\n                                / tagged-uuid-type / 37(\r\n                                h'67b28b6c34cc40a19117ab5b05911e37'\r\n                                ),\r\n                            / comid.vendor / 1 : \"ACME Inc.\",\r\n                            / comid.model / 2 : \"ACME RoadRunner\",\r\n                            / comid.layer / 3 : 1\r\n                        }\r\n                    },\r\n                    / elements / 1 : [\r\n                        / measurement-map / {\r\n                            / comid.mval / 1 : {\r\n                                / comid.ver / 0 : {\r\n                                    / comid.version / 0 : \"1.0.0\",\r\n                                    / comid.version-scheme / 1 : 16384 / semver /\r\n                                },\r\n                                / comid.digests / 2 : [ [\r\n                                    / hash-alg-id / 1, / sha256 /\r\n                                    / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n                                ] ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            / additions / 1 : [\r\n                / environment-element-map / {\r\n                    / environment-map / 0 : {\r\n                        / comid.class / 0 : {\r\n                            / comid.class-id / 0 :\r\n                                / tagged-uuid-type / 37(\r\n                                h'67b28b6c34cc40a19117ab5b05911e37'\r\n                                ),\r\n                            / comid.vendor / 1 : \"ACME Inc.\",\r\n                            / comid.model / 2 : \"ACME RoadRunner\",\r\n                            / comid.layer / 3 : 1\r\n                        }\r\n                    },\r\n                    / elements / 1 : [\r\n                        / measurement-map / {\r\n                            / comid.mval / 1 : {\r\n                                / comid.ver / 0 : {\r\n                                    / comid.version / 0 : \"1.0.0\",\r\n                                    / comid.version-scheme / 1 : 16384 / semver /\r\n                                },\r\n                                / comid.digests / 2 : [ [\r\n                                    / hash-alg-id / 1, / sha256 /\r\n                                    / hash-value / h'44aa336af4cb14a879432e53dd6571c7fa9bccafb75f488259262d6ea3a4d91b'\r\n                                ] ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n]\r\n```\r\n",
          "createdAt": "2024-09-20T22:50:26Z",
          "updatedAt": "2024-09-20T22:50:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith Thanks. The point is : It is clear that the multiplicity of measurement-map, is required on the stateful-environment, as well as `conditionally-endorsed triples`. However,  I am not clear, how the multiplicity is relevant and justified for the conditional endorsement-series triple. Can you please add an explanation to issue #288. We can align the CDDL then...",
          "createdAt": "2024-09-23T09:34:07Z",
          "updatedAt": "2024-09-23T09:34:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze & @nedmsmith Thanks for the comments, I will review and work on them!",
          "createdAt": "2024-09-27T16:57:36Z",
          "updatedAt": "2024-09-27T16:57:36Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @thomas-fossati & @andrew-draper : kindly review this.\r\n\r\n@deeglaze Thanks for your review. I have incorporated all the comments which you had. Kindly check once and let me know, if anything is outstanding!",
          "createdAt": "2024-09-30T12:05:25Z",
          "updatedAt": "2024-09-30T12:05:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> LGTM, thanks.\r\n> \r\n> I am unsure about the use of the qualifier \"chosen\" when talking about the ACS entry that is being compared against. There is no selection criterion apart from picking one after the other from the set, no?\r\n> \r\n> Inlined a few tiny editorial change requests.\r\n\r\nI think, you are correct, the term `chosen` is a bit mis-leading.\r\n\r\nThe matching condition from this Triple to Evidence entry is the only criterion to get access to the correct entry in the ACS.\r\nI will remove the word chosen and still it would make sense I suppose!",
          "createdAt": "2024-09-30T12:48:06Z",
          "updatedAt": "2024-09-30T12:48:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "With these changes, `stateful-environment-map` is identical to `endorsed-triple-record`. Should they be merged?",
          "createdAt": "2024-09-30T20:04:59Z",
          "updatedAt": "2024-09-30T20:04:59Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> With these changes, `stateful-environment-map` is identical to `endorsed-triple-record`. Should they be merged?\r\n\r\nNot really, the construct looks identical, but internally they have a very different meaning and hence interpretation.\r\n\r\nIts just so happens that we have an identical map for `reference-values` and `endorsed-values`, which creates this ambiguity.\r\n\r\nBut I would keep them separate.",
          "createdAt": "2024-09-30T21:41:41Z",
          "updatedAt": "2024-09-30T21:41:41Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Its just so happens that we have an identical map for reference-values and endorsed-values\r\n\r\nActually, there's no such thing as `reference-values` or `endorsed-values`. We have triples for `reference-triple-record` and `endorsed-triple-record`, but these are the structures that define the triple (i.e., subject, object, predicate). Since the predicate is implied, the name of the structure serves as a pneumonic for the triple's predicate. \r\n\r\nThe statement `endorsed-triple-record` is being repurposed from a stand-alone triple to something that has different meaning when inside of a `conditional-endorsed-triple-record`. Specifically, the condition in a `endorsed-triple-record` triple is not applied when it appears as the addition part of a `conditional-endorsed-triple-record`.  (i.e., it isn't actually a triple inside of a triple).\r\n\r\nThe prose (and CBOR encoding) that describes:\r\n```\r\nconditional-endorsement-triple-record = [\r\n  conditions: [ + stateful-environment-record ]\r\n  additions: [ + endorsed-triple-record ]\r\n]\r\n```\r\nwill be identical to the prose (CBOR) that describes the following (sans cddl names):\r\n```\r\nconditional-endorsement-triple-record = [\r\n  conditions: [ + stateful-environment-record ]\r\n  additions: [ + stateful-environment-record ]\r\n]\r\n```\r\nSince `stateful-environment-record` doesn't double as a triple, it has no implied semantics on its own. It is only meaningful in the context of a triple description. \r\n\r\nInterestingly, it will be identical to the prose (CBOR) that describes this statement too (sans cddl names):\r\n```\r\nconditional-endorsement-triple-record = [\r\n  conditions: [ + endorsed-triple-record ]\r\n  additions: [ + endorsed-triple-record ]\r\n]\r\n```\r\nHowever, the reader is assumed to understand that we don't actually mean apply the semantics of the endorsed-triple-record triple, but apply the semantics that the prose for the conditional-endorsed-triple defines instead.\r\n\r\nMy point is we're mixing and matching reader expectations given the new definition of stateful-environment-map but offer no intuition as to why. With the addition of the label, the semantics are more easily communicated via the label, rather than the structure name and since stateful-environment-map is just building block CDDL, the second option seems to be the most intuitive of the three.\r\n\r\n",
          "createdAt": "2024-09-30T22:48:23Z",
          "updatedAt": "2024-09-30T22:50:46Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> With these changes, `stateful-environment-map` is identical to `endorsed-triple-record`. Should they be merged?\r\n\r\nInteresting observation.  Isn't this a manifestation of special casing `endorsed-triple-record` instead of treating it as a conditional endorsement?  Or is it a genuine reification of the `endorsed-triple-record`?",
          "createdAt": "2024-10-01T04:57:48Z",
          "updatedAt": "2024-10-01T05:24:50Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > With these changes, `stateful-environment-map` is identical to `endorsed-triple-record`. Should they be merged?\r\n> \r\n> Interesting observation. Isn't this a manifestation of special casing `endorsed-triple-record` instead of treating it as a conditional endorsement? Or is it a genuine reification of the `endorsed-triple-record`?\r\n\r\nIt is special casing `endorsed-triple-record` because it doesn't treat the `environment-map` in `endorsed-triple-record` as a `condition` only as an `addition`.  The processing described in Endorsement Triples Transformations {#sec-end-trans} isn't applied to `endorsed-triple-record` when it appears in a `conditional-endorsed-triple-record`.",
          "createdAt": "2024-10-01T19:40:58Z",
          "updatedAt": "2024-10-01T19:40:58Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86J2ptS",
          "commit": {
            "abbreviatedOid": "f2be20e"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T14:02:48Z",
          "updatedAt": "2024-09-18T14:02:48Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I'm a little surprised we're keeping integrity-registers when mkey can express the ir name.",
              "createdAt": "2024-09-18T14:02:48Z",
              "updatedAt": "2024-09-18T14:02:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KDGWT",
          "commit": {
            "abbreviatedOid": "f2be20e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T16:32:05Z",
          "updatedAt": "2024-09-19T16:32:05Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@deeglaze We can discuss Integrity registers removal in a separate issue and a follow up PR!\r\n\r\nI deliberately did not wanted to make things complicated all in one go!",
              "createdAt": "2024-09-19T16:32:05Z",
              "updatedAt": "2024-09-19T16:32:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LBXsk",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Several suggested changes.",
          "createdAt": "2024-09-26T21:41:31Z",
          "updatedAt": "2024-09-26T22:34:31Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThe series is an array of `conditional-series-record` that has a `selection`, and an `addition`, both expressed as a list of `measurement-map`.\r\nThe `selection` and `addition` operate within the scope of the conditional endorsement series triple record's matching `condition`.\r\n```",
              "createdAt": "2024-09-26T21:41:31Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  selection: [ + measurement-map]\r\n```",
              "createdAt": "2024-09-26T21:44:28Z",
              "updatedAt": "2024-09-27T16:52:14Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n  addition: [ + measurement-map]\r\n```",
              "createdAt": "2024-09-26T21:44:47Z",
              "updatedAt": "2024-09-27T16:52:30Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nFor each `conditional-series-record` entry, if the `selection` matches the chosen ACS entry, the `addition` is added to the ACS.\r\n```",
              "createdAt": "2024-09-26T22:07:56Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-09-26T22:08:38Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nThe first `conditional-series-record` entry that successfully matches the chosen ACS entry terminates the series. \r\nFor a `conditional-series-record` to match, every measurement in the `measurement-map` list MUST match a measurement in the chosen ACS entry.\r\n```",
              "createdAt": "2024-09-26T22:13:00Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nand no `addition` values are accepted.\r\n```",
              "createdAt": "2024-09-26T22:13:38Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nIf none of the `selection` values match in the chosen ACS entry, the triple is not matched,\r\n```",
              "createdAt": "2024-09-26T22:15:15Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nIf the `authorized-by` value is present in the triple `condition` (i.e., in the `measurement-map` of the `stateful-environment-record`),\r\nall authority entries of the `condition` MUST be present in the ACS entry, otherwise the ACS entry does not match.\r\n```",
              "createdAt": "2024-09-26T22:21:21Z",
              "updatedAt": "2024-09-26T22:35:59Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nIf the series `selection` populates `authorized-by`, the chosen ACS MUST contain the same measurements and authority as contained in the `selection` entry.\r\n```",
              "createdAt": "2024-09-26T22:28:08Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nIf the series `addition` entry contains `authorized-by` values, they are ignored.\r\n```",
              "createdAt": "2024-09-26T22:32:03Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            },
            {
              "originalPosition": 27,
              "body": "Note: authority semantics are still being discussed. It is safer for this triple to ignore them in the addition until the semantics for series authority is determined.",
              "createdAt": "2024-09-26T22:34:08Z",
              "updatedAt": "2024-09-26T22:34:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LBnTn",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple",
          "createdAt": "2024-09-26T22:38:22Z",
          "updatedAt": "2024-09-26T22:39:04Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-09-26T22:38:22Z",
              "updatedAt": "2024-09-26T22:39:04Z"
            },
            {
              "originalPosition": 2,
              "body": "The prose of the document describes the semantics",
              "createdAt": "2024-09-26T22:38:44Z",
              "updatedAt": "2024-09-26T22:39:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LCYBB",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T02:48:09Z",
          "updatedAt": "2024-09-27T02:48:10Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I think we want to say matching authority so we can punt on the matching semantics. Sounds like you want subset ([\u2286](https://www.compart.com/en/unicode/U+2286)) and Andy wants nonempty intersection (often notated with [\u22c8](https://www.compart.com/en/unicode/U+22C8)). This is a good place to use tagging for pattern operators so both forms can be expressible.",
              "createdAt": "2024-09-27T02:48:10Z",
              "updatedAt": "2024-09-27T02:48:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LCYhy",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T02:51:09Z",
          "updatedAt": "2024-09-27T02:51:09Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I think since it's a non-extensible type, you can use a type like element-map (but a copy to not confuse internal and external representations) to drop the authorities. You can add them back with a spec update.",
              "createdAt": "2024-09-27T02:51:09Z",
              "updatedAt": "2024-09-27T02:51:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LCaQb",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T03:02:14Z",
          "updatedAt": "2024-09-27T03:02:14Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "nit: the spacing for other one-or-more lists has a space on both sides of the + as well.",
              "createdAt": "2024-09-27T03:02:14Z",
              "updatedAt": "2024-09-27T03:02:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LCaSx",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T03:02:28Z",
          "updatedAt": "2024-09-27T03:02:28Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "nit: same as above \" + \"",
              "createdAt": "2024-09-27T03:02:28Z",
              "updatedAt": "2024-09-27T03:02:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LIU08",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested changes",
          "createdAt": "2024-09-27T16:54:33Z",
          "updatedAt": "2024-09-27T16:54:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LIXuT",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T17:01:35Z",
          "updatedAt": "2024-09-27T17:01:35Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "ok, for now I will accept this suggestion , but really feel this is required. We will discuss the same in a separate PR",
              "createdAt": "2024-09-27T17:01:35Z",
              "updatedAt": "2024-09-27T17:01:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LIffr",
          "commit": {
            "abbreviatedOid": "1637591"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T17:20:07Z",
          "updatedAt": "2024-09-27T17:20:07Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Why have you deleted this?",
              "createdAt": "2024-09-27T17:20:07Z",
              "updatedAt": "2024-09-27T17:20:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LIrkL",
          "commit": {
            "abbreviatedOid": "bada574"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T17:50:51Z",
          "updatedAt": "2024-09-27T17:50:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "ok, understood the concept that in series, the first condition match terminates the series, to line 1224 is not really applicable!",
              "createdAt": "2024-09-27T17:50:51Z",
              "updatedAt": "2024-09-27T17:50:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LJgVH",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-27T19:50:15Z",
          "updatedAt": "2024-09-27T19:50:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LUKly",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM, thanks.\r\n\r\nI am unsure about the use of the qualifier \"chosen\" when talking about the ACS entry that is being compared against.  There is no selection criterion apart from picking one after the other from the set, no?\r\n\r\nInlined a few tiny editorial change requests.\r\n\r\n",
          "createdAt": "2024-09-30T12:10:16Z",
          "updatedAt": "2024-09-30T12:20:52Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "spurious comma\r\n```suggestion\r\nThe series is an array of `conditional-series-record` that has a `selection` and an `addition`, both expressed as a list of `measurement-map`.\r\n```",
              "createdAt": "2024-09-30T12:10:16Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 20,
              "body": "streamline\r\n```suggestion\r\nThe `selection` and `addition` operate within the scope of the conditional endorsement series's matching `condition`.\r\n```",
              "createdAt": "2024-09-30T12:11:01Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 24,
              "body": "I am unsure about using \"_chosen_ ACS entry\"?  Is this the right qualifier?  Chosen based on what criterion?\r\n\r\n",
              "createdAt": "2024-09-30T12:13:48Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 26,
              "body": "ditto",
              "createdAt": "2024-09-30T12:14:07Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 27,
              "body": "ditto",
              "createdAt": "2024-09-30T12:14:18Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 29,
              "body": "ditto\r\n\r\n(Also, please merge L1227 and L1228 as per editorial convention.)",
              "createdAt": "2024-09-30T12:14:27Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 33,
              "body": "merge sentence (also, missing comma)\r\n\r\n```suggestion\r\nIf the `authorized-by` value is present in the triple `condition` (i.e., in the `measurement-map` of the `stateful-environment-record`), all authority entries of the `condition` MUST be present in the ACS entry, otherwise, the ACS entry does not match.\r\n```",
              "createdAt": "2024-09-30T12:16:54Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            },
            {
              "originalPosition": 34,
              "body": "ditto _chosen_",
              "createdAt": "2024-09-30T12:17:20Z",
              "updatedAt": "2024-09-30T12:20:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LUz67",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T13:05:18Z",
          "updatedAt": "2024-09-30T13:05:19Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I have made it more explicit and crisp, which is I suppose you wanted. Please check!",
              "createdAt": "2024-09-30T13:05:19Z",
              "updatedAt": "2024-09-30T13:05:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LU0JS",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T13:05:41Z",
          "updatedAt": "2024-09-30T13:05:41Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Addressed: Remove the chosen term!",
              "createdAt": "2024-09-30T13:05:41Z",
              "updatedAt": "2024-09-30T13:05:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LU4yH",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T13:12:50Z",
          "updatedAt": "2024-09-30T13:12:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I thought of removing \"triple record\" because it seemed redundant / unnecessarily heavyweight.  Although it's not what I suggested, I am OK with your change as well.",
              "createdAt": "2024-09-30T13:12:50Z",
              "updatedAt": "2024-09-30T13:12:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LU5MC",
          "commit": {
            "abbreviatedOid": "8bee5d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-30T13:13:27Z",
          "updatedAt": "2024-09-30T13:13:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LV1rG",
          "commit": {
            "abbreviatedOid": "8bee5d0"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM aside from nits",
          "createdAt": "2024-09-30T14:30:22Z",
          "updatedAt": "2024-09-30T14:34:24Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n  addition: [ + measurement-map ]\r\n```\r\nnit",
              "createdAt": "2024-09-30T14:30:22Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\n            [\r\n```",
              "createdAt": "2024-09-30T14:31:06Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n            ],\r\n```",
              "createdAt": "2024-09-30T14:31:21Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\n            [\r\n```",
              "createdAt": "2024-09-30T14:31:48Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\n            [\r\n```",
              "createdAt": "2024-09-30T14:32:03Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n            ],\r\n```",
              "createdAt": "2024-09-30T14:32:18Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\n            [\r\n```",
              "createdAt": "2024-09-30T14:32:32Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\n            ]\r\n```",
              "createdAt": "2024-09-30T14:32:40Z",
              "updatedAt": "2024-09-30T14:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LfN3D",
          "commit": {
            "abbreviatedOid": "e66f05a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T13:17:35Z",
          "updatedAt": "2024-10-01T13:17:36Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThe `selection` and `addition` operate within the scope of the `environment-map` found in the `conditional-endorsement-series-triple-record`'s `condition`.\r\n```",
              "createdAt": "2024-10-01T13:17:36Z",
              "updatedAt": "2024-10-01T13:33:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LfSP2",
          "commit": {
            "abbreviatedOid": "e66f05a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T13:20:44Z",
          "updatedAt": "2024-10-01T13:20:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Is this needed here>\r\nShould we be discussing how to transform external encoding into ECT encoding so that the text in 8.9 (which already says this) can be used?",
              "createdAt": "2024-10-01T13:20:45Z",
              "updatedAt": "2024-10-01T13:20:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LfVR0",
          "commit": {
            "abbreviatedOid": "e66f05a"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "As far as the CDDL is concerned, I think this would be ok.\r\nI think more work is needed on the test describing the conditions, it duplicates (and potentially disagrees with) the ACS comparison text later in the document.",
          "createdAt": "2024-10-01T13:23:20Z",
          "updatedAt": "2024-10-01T13:23:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LiBht",
          "commit": {
            "abbreviatedOid": "e66f05a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T17:10:52Z",
          "updatedAt": "2024-10-01T17:10:52Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "> Is this needed here> Should we be discussing how to transform external encoding into ECT encoding so that the text in 8.9 (which already says this) can be used?\r\n\r\nI think it's OK to describe the semantics of the triple in terms of what to expect will be reflected in the ACS. The transformation section describes how to map from external to internal. The Phase 4 processing section describes how the ACS realizes an ending state. This section describes what to expect in terms of the ending state in ACS - i.e., it's a what vs. how difference.",
              "createdAt": "2024-10-01T17:10:52Z",
              "updatedAt": "2024-10-01T17:10:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LjSTs",
          "commit": {
            "abbreviatedOid": "6bcd7ed"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Fixed typo in transformations section",
          "createdAt": "2024-10-01T19:45:11Z",
          "updatedAt": "2024-10-01T19:45:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Lj9Dr",
          "commit": {
            "abbreviatedOid": "8ccf380"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T21:02:40Z",
          "updatedAt": "2024-10-01T21:02:40Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "> Addressed: Remove the chosen term!\r\n\r\nThe original text was trying to capture the detail that the selection scope is within the range of the `condition` and that the `addition` is within the same range.  This is a necessity since the series records don't have a qualifying environment-map.",
              "createdAt": "2024-10-01T21:02:40Z",
              "updatedAt": "2024-10-01T21:02:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqGUO",
          "commit": {
            "abbreviatedOid": "6bcd7ed"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-02T14:08:23Z",
          "updatedAt": "2024-10-02T14:08:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 277,
      "id": "PR_kwDOH6-tI8576Y2e",
      "title": "Account for multiplicity in conditional endorsements",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/277",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A conditional endorsement series is about a target environment plus additional state expectations that lead to further endorsements.\r\n\r\nI removed the undefined CBOR tag around multiple measuremnt-maps since array and map have different CBOR major tags and a custom tag is not required.",
      "createdAt": "2024-09-18T14:39:09Z",
      "updatedAt": "2024-09-27T02:43:29Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "multiplicity",
      "baseRefOid": "0ff26bef340181bf4ea3c2b6fa5ad759b7511021",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "multiplicity",
      "headRefOid": "6c63e5d1c2b672109116ed46c77798bbc7f114a9",
      "closedAt": "2024-09-27T02:43:29Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze Some more work needs to be done! Also, I already floated PR #276 , please have a look and comment. I am happy to fold this one on PR #276 and proceed with just one copy rather than multiple identical `intent`  PR's",
          "createdAt": "2024-09-18T16:50:29Z",
          "updatedAt": "2024-09-18T16:50:29Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is there an issue that this PR links to so that reviewers can know the problem statement that motivates this PR?\r\n\r\nIf we think there are use cases that can't be supported by the current triple it would be helpful to characterize them.\r\n\r\nIf the goal is to create a series triple that is more generalized, then we should start with the internal representation.\r\n```\r\nevs = [\r\n  condition: [ + ECT ]\r\n  series: + {\r\n    selection: [ + ECT ]\r\n    addition: [ + ECT ]\r\n  }\r\n]\r\n```\r\nSince the ECT can be mapped to the external representation readily, the CDDL for a revised series triple should be relatively straight forward.\r\n",
          "createdAt": "2024-09-19T17:19:52Z",
          "updatedAt": "2024-09-19T17:19:52Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "issue #288 tracks the discussion!",
          "createdAt": "2024-09-23T10:58:11Z",
          "updatedAt": "2024-09-23T10:58:11Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing since there are other PRs covering this.",
          "createdAt": "2024-09-27T02:43:29Z",
          "updatedAt": "2024-09-27T02:43:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86J4YuO",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T16:48:11Z",
          "updatedAt": "2024-09-18T16:48:11Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n  endv: [ + measurement-map]\r\n```",
              "createdAt": "2024-09-18T16:48:11Z",
              "updatedAt": "2024-09-18T16:48:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J4ZEc",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-18T16:48:56Z",
          "updatedAt": "2024-09-18T16:48:56Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "We agreed with Ned's PR that is optionality is not required!",
              "createdAt": "2024-09-18T16:48:56Z",
              "updatedAt": "2024-09-18T16:48:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KDE6w",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T16:30:38Z",
          "updatedAt": "2024-09-19T16:30:38Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "We don't want to have authorized-by in the endorsed values, since it is not meaningful here.",
              "createdAt": "2024-09-19T16:30:38Z",
              "updatedAt": "2024-09-19T16:30:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KDHke",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T16:33:15Z",
          "updatedAt": "2024-09-19T16:33:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "It is not true, Endorsements or Reference Values, all should support Authority!",
              "createdAt": "2024-09-19T16:33:15Z",
              "updatedAt": "2024-09-19T16:33:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KDva7",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T17:09:43Z",
          "updatedAt": "2024-09-19T17:09:43Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "No, authority in a measurement-map in a CoRIM represents a condition. Authority in a measurement-map in an ECT represents actual authorities that signed the information. For any _added_ measurement, the only authority is the CoRIM issuer. Given that the triple has already given two other positions for stating an authority condition, it doesn't make sense for the endv to have its own conditionality semantics.",
              "createdAt": "2024-09-19T17:09:43Z",
              "updatedAt": "2024-09-19T17:09:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KEFtX",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T17:42:18Z",
          "updatedAt": "2024-09-19T17:42:18Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I understand your point, however, this has a deeper implications.\r\n\r\nBy not providing a source of Authority for Added Endorsements in the triple, has implications.\r\n\r\nIt means the supplier of Endorsements has to have an implicit authority of CoRIM Signer.\r\n\r\nIt cannot inherit the Authority from RefValue provider Authority as they may not be the same!\r\n\r\nWhich implies, that for a Env with ClassID : X, with FW running from Authority coming from FW Supplier PQR (in RefVal), the Test House is vouching for its Endorsements.\r\n\r\nIt is fine to have CoRIM as a single source of Authority in this case, in most of the cases, so we can start with that.\r\n\r\nI was thinking as Authority is `optional` retaining it will provide, the flexibility to introduce endorsements coming from different authority, For an Environement, like for FW Element -1 : Authority X, FW Element 2: Authority Y",
              "createdAt": "2024-09-19T17:42:18Z",
              "updatedAt": "2024-09-19T17:43:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNUBQ",
          "commit": {
            "abbreviatedOid": "6c63e5d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T16:30:07Z",
          "updatedAt": "2024-09-20T16:30:07Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "The only integrity protection you can ensure is who signed the information. https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/244 affirms that authorized-by is a condition, and not part of an addition. If it's not part of the condition and is actual addition, we need to have a triple signed by the delegate that the CoRIM issuer is authorized to sign on its behalf. I don't think we should do that though. You generally do that with PKI certificate paths.\r\n\r\nPlease express your example in terms of the conditional series triple so I may understand.",
              "createdAt": "2024-09-20T16:30:07Z",
              "updatedAt": "2024-09-20T16:30:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 284,
      "id": "PR_kwDOH6-tI858Aw6I",
      "title": "ensure internal representation is valid CDDL",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/284",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add automatic validation of internal representation CDDL\r\n\r\nFix #282",
      "createdAt": "2024-09-19T10:04:10Z",
      "updatedAt": "2024-09-25T14:56:47Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "10dd89d95a9489563d1389e937478ecf8534de1f",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "intrep",
      "headRefOid": "e4e6d521d6afd74d3ae18ef554d2b1c69b0cb95a",
      "closedAt": "2024-09-25T14:56:44Z",
      "mergedAt": "2024-09-25T14:56:44Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d8d1365ecaea023cd95c59b97ab8d2026397c0c6"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Are you opposed to using the version that is in PR #268 which is better aligned to the existing wording (sans namespace)?\r\n~~~ cddl\r\nECT = {\r\n  ? environment: environment-map\r\n  ? elements: [ + element-map ]\r\n  ? authority: [ + $crypto-key-type-choice ]\r\n  ? cmtype: cm-type\r\n  ? profile: $profile-type-choice\r\n}\r\n\r\nelement-map = {\r\n  ? element-id: $measured-element-type-choice\r\n  element-claims: measurement-values-map\r\n}\r\n\r\ncm-type =  &(\r\n  reference-values: 0\r\n  endorsements: 1\r\n  evidence: 2\r\n  attestation-results: 3\r\n  verifier: 4\r\n  policy: 5\r\n)\r\n~~~",
          "createdAt": "2024-09-19T17:06:08Z",
          "updatedAt": "2024-09-19T20:35:35Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are you opposed to using the version that is in PR #268 which is better aligned to the existing wording (sans namespace)?\r\n\r\nContent-wise, I am OK with anything.  The intent of this PR was purely mechanical, but if you want me to put in a more meaningful CDDL, I can certainly do that.  Or we can do it in #268 after rebase.  Let me know what's better from your perspective.",
          "createdAt": "2024-09-19T20:22:30Z",
          "updatedAt": "2024-09-19T20:22:30Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Are you opposed to using the version that is in PR #268 which is better aligned to the existing wording (sans namespace)?\r\n> \r\n> Content-wise, I am OK with anything. The intent of this PR was purely mechanical, but if you want me to put in a more meaningful CDDL, I can certainly do that. Or we can do it in #268 after rebase. Let me know what's better from your perspective.\r\n\r\nSince the CDDL blocks will all be replaced with imported CDDL, I'll focus on prose changes that reflect the environment:element construct. (see revised CDDL example in the previous comment).",
          "createdAt": "2024-09-19T20:33:22Z",
          "updatedAt": "2024-09-19T20:33:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Since the CDDL blocks will all be replaced with imported CDDL, I'll focus on prose changes that reflect the environment:element construct. (see revised CDDL example in the previous comment).\r\n\r\nOK, I'll use the new CDDL here then.\r\n",
          "createdAt": "2024-09-19T20:34:38Z",
          "updatedAt": "2024-09-19T20:34:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> OK, I'll use the new CDDL here then.\r\n\r\nDone in [0d82b15](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/284/commits/0d82b15fffd8cef5d09f4747e5e45bed8dd1caf6)",
          "createdAt": "2024-09-19T21:03:20Z",
          "updatedAt": "2024-09-19T21:03:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86J_m-v",
          "commit": {
            "abbreviatedOid": "5d273a7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T10:42:40Z",
          "updatedAt": "2024-09-19T10:42:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Just a minor nit,\r\n\r\nThe CDDL names in our repo are long but quite expressive, for example:\r\n`measured-element-type-choice.cddl`\r\n\r\nI would request, we rename INTREP everywhere to \r\n\r\n`INTERNAL-REP`\r\n\r\nSo the CDDL becomes: internal-rep-claims-map.cddl\r\n\r\nThis avoids any confusion in the naming to mis-interpret it as Integer Representation!",
              "createdAt": "2024-09-19T10:42:40Z",
              "updatedAt": "2024-09-19T10:43:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86J_nSF",
          "commit": {
            "abbreviatedOid": "5d273a7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!, just left one minor Nit to look at!",
          "createdAt": "2024-09-19T10:43:18Z",
          "updatedAt": "2024-09-19T10:43:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86KAA9r",
          "commit": {
            "abbreviatedOid": "5d273a7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T11:30:41Z",
          "updatedAt": "2024-09-19T11:30:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\r\n> This avoids any confusion in the naming to mis-interpret it as Integer Representation!\r\n\r\nNo way, that's a feature, not a bug :-) I made it expressly to sound like INTREPid!\r\n",
              "createdAt": "2024-09-19T11:30:41Z",
              "updatedAt": "2024-09-19T11:30:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KAFLg",
          "commit": {
            "abbreviatedOid": "5d273a7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-19T11:38:42Z",
          "updatedAt": "2024-09-19T11:38:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "But it is not INTREPID after-all ??",
              "createdAt": "2024-09-19T11:38:42Z",
              "updatedAt": "2024-09-19T11:38:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KLxjt",
          "commit": {
            "abbreviatedOid": "0d82b15"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T13:45:18Z",
          "updatedAt": "2024-09-20T13:45:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  cmtype: cm-type\r\n```",
              "createdAt": "2024-09-20T13:45:19Z",
              "updatedAt": "2024-09-20T13:45:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNNpc",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T16:14:58Z",
          "updatedAt": "2024-09-20T16:22:37Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "It seems endorsements, conditional endorsements, and conditional series endorsements are unrolling a recursive definition that would allow for simpler expression.\r\n\r\n```\r\nevs = [ + {\r\n? / condition: / 0 => [ + ECT ]\r\n/ addition: / 1 => evs / [ + ECT ]\r\n} ]\r\n```\r\nIf a condition applies and the addition isn't a map, add the ECTs. If the addition is a map, re-enter the top of the loop to further specialize the condition. If the condition doesn't apply, go to the next map in the series.\r\n\r\nThis allows for nested if/elseif.../else expressions. I don't think the nonempty selection requirement allows for a bare \"else\". \r\n",
              "createdAt": "2024-09-20T16:14:58Z",
              "updatedAt": "2024-09-20T16:22:37Z"
            },
            {
              "originalPosition": 8,
              "body": "This map syntax for the pair needs key definitions, no? `/ selection: / 0 => [ + ECT ]` for example. Same comment for rv below.",
              "createdAt": "2024-09-20T16:15:44Z",
              "updatedAt": "2024-09-20T16:22:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNR6f",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T16:25:25Z",
          "updatedAt": "2024-09-20T16:25:25Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Wouldn't that result in infinite recursion?",
              "createdAt": "2024-09-20T16:25:25Z",
              "updatedAt": "2024-09-20T16:25:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KNlZf",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:10:37Z",
          "updatedAt": "2024-09-20T17:10:37Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "No, [ + ECT ] is a base case. You can unfold as many nestings as you want, but you eventually bottom out in a flat list of additions.",
              "createdAt": "2024-09-20T17:10:37Z",
              "updatedAt": "2024-09-20T17:10:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KOGcW",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T18:05:49Z",
          "updatedAt": "2024-09-20T18:05:49Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "It's good like that.  We decided to avoid codepoint aliases here and just use string labels because compression is not needed.",
              "createdAt": "2024-09-20T18:05:49Z",
              "updatedAt": "2024-09-20T18:05:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KOGvg",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T18:06:38Z",
          "updatedAt": "2024-09-20T18:06:38Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "@deeglaze clarifying question: your `evs` definition above would also subsume `ev`?",
              "createdAt": "2024-09-20T18:06:38Z",
              "updatedAt": "2024-09-20T18:06:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KONXh",
          "commit": {
            "abbreviatedOid": "9578bfe"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T18:20:04Z",
          "updatedAt": "2024-09-20T18:20:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Keep in mind that a primary goal of defining an internal representation is to facilitate readability of document prose. It isn't to arrive at the most optimal CDDL. \r\n\r\nRecursive structures are harder to describe IMHO.  The purpose for the 'series: ' label is to make it easier to describe the processing differences (which uses OR semantics where the first match terminates processing) from the 'addition:' (which uses AND semantics.)\r\n\r\nCombining ev and evs with nesting seems like its going in the wrong direction.\r\n\r\nActual implementations can always apply these sorts of optimizations if they want to.\r\n",
              "createdAt": "2024-09-20T18:20:04Z",
              "updatedAt": "2024-09-20T18:20:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 289,
      "id": "PR_kwDOH6-tI858VY3u",
      "title": "Rework ECT comparison section to match new internal representation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/289",
      "state": "MERGED",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is the first edit to section 8.9 - it aligns the terminology with the change to ECT internal representation\r\n\r\nIt also defines the comparison rules for raw-value (codepoint 4 and 5).",
      "createdAt": "2024-09-23T08:49:55Z",
      "updatedAt": "2024-10-02T15:48:38Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "7053863374ffd42745824af008028e4fea907708",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "adraper-ect-comparison",
      "headRefOid": "f1932798ddae32061a3476c5f1fd1306d253e185",
      "closedAt": "2024-10-02T15:48:30Z",
      "mergedAt": "2024-10-02T15:48:30Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "152b4d574a99d9512ee30d2a64258aee8ac04bdc"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Remove Raw Value comparison from the PR for a separate PR ",
          "createdAt": "2024-09-27T15:17:29Z",
          "updatedAt": "2024-09-27T15:17:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86KYNkj",
          "commit": {
            "abbreviatedOid": "afa24e8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T09:25:36Z",
          "updatedAt": "2024-09-23T09:26:37Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Line 2087, should make it very clear which are the list of  `mkey` from the triple and which are list of entries from the ECT.",
              "createdAt": "2024-09-23T09:25:36Z",
              "updatedAt": "2024-09-23T09:26:37Z"
            },
            {
              "originalPosition": 97,
              "body": "Same comment as 2087",
              "createdAt": "2024-09-23T09:26:14Z",
              "updatedAt": "2024-09-23T09:26:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KdUtm",
          "commit": {
            "abbreviatedOid": "afa24e8"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-23T17:48:30Z",
          "updatedAt": "2024-09-23T18:18:55Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "```suggestion\r\nThe algorithm used to compare a condition ECT against the ACS is stateless; it depends only on the condition ECT being compared and the contents of the ACS at the time of the comparison.\r\n```",
              "createdAt": "2024-09-23T17:48:31Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nThe Verifier uses a temporary \"candidate entries\" array as part of the comparison. Each element of the array is an ECT.\r\n```",
              "createdAt": "2024-09-23T17:49:51Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nThe verifier SHALL iterate over all entries in the ACS and SHALL add each entry where the condition ECT's `environment-map` is a subset of the ACS entry `environment-map` to the candidate entries array.\r\n```\r\n",
              "createdAt": "2024-09-23T17:52:58Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nThe condition ECT `environment-map` is a subset of an ACS entry `environment-map` if each field (for example `class`, `instance`, etc.) which is present in the condition ECT `environment-map` is also present in the ACS entry, and the CBOR encoded field values in the stateful environment and ACS entry are binary identical.\r\n```\r\n\r\nThis does not work correctly for class-map, since `class: { class-id: blah }` ought to match `class: {class-id: blah, model: \"foo\" }`\r\n\r\nI disagree with binary identical when the type choices are extensible. I'd say, for `$instance-id-type-choice /= instance-id-base-type-choice`, we say `instance-id-base-type-choice` variants are compared with CBOR encoding equality, but any other variant defined by the profile has its own profile-defined comparison algorithm.",
              "createdAt": "2024-09-23T17:54:23Z",
              "updatedAt": "2024-09-25T14:18:41Z"
            },
            {
              "originalPosition": 88,
              "body": "I don't think so, assuming https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/268.\r\n\r\nWe'd need to iterate over all elements of the ECT's elements and find in the candidate ECT's elements a CBOR encoding-binary-identical mkey before then trying to match the element's mval against the found element's mval. If the candidate ECT does not have such an element, then the candidate ECT does not match.",
              "createdAt": "2024-09-23T18:01:44Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 103,
              "body": "Did we not also want to treat a condition key that farther up the certificate path to match?",
              "createdAt": "2024-09-23T18:04:39Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 97,
              "body": "Right, there is not a single condition authority, but an ANDed list. Each authority must have a matching key in the candidate ECT's authorities.",
              "createdAt": "2024-09-23T18:05:34Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 109,
              "body": "I don't think the verbiage that we're iterating over all candidate entries is helping. We're filtering out elements of the ACS that don't match. At any one time we're always comparing the condition ECT with a candidate ECT.\r\n\r\nWhen we get to measurement-values-map, we're in the context of an ECT's `elements` array with optional element-id codepoint.",
              "createdAt": "2024-09-23T18:07:10Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\nThe Verifier SHALL iterate over the codepoints which are present in the condition ECT element's `measurement-values-map`.\r\n```",
              "createdAt": "2024-09-23T18:08:18Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\nEach of the codepoints present in the condition ECT is compared against the same codepoint in the candidate entry for the corresponding `element-id`.\r\n```",
              "createdAt": "2024-09-23T18:11:29Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 126,
              "body": "```suggestion\r\nThe codepoint number associated with the condition ECT codepoint SHALL be used to select the algorithm.\r\n```\r\nThe algorithm associated with the codepoint already should have a description of how it compares tagged values.",
              "createdAt": "2024-09-23T18:14:02Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 130,
              "body": "```suggestion\r\nThe codepoint number and the profile associated with the condition ECT may be used to select the algorithm.\r\n```\r\nAgain the algorithm is specific to the codepoint and may choose to further dispatch based on value tags.",
              "createdAt": "2024-09-23T18:14:59Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 142,
              "body": "```suggestion\r\nThe value stored under `measurement-values-map` key 1 is an SVN, which must have type `uint`.\r\n```",
              "createdAt": "2024-09-23T18:16:48Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 148,
              "body": "```suggestion\r\nIf the condition ECT value for `measurement-values-map` key 1 is an untagged `uint` or a `uint` tagged with #6.552 then an equality comparison is performed.\r\n```",
              "createdAt": "2024-09-23T18:17:04Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 155,
              "body": "```suggestion\r\nIf the condition ECT value for `measurement-values-map` key 1 is a `uint` tagged with #6.553 then a minimum comparison is performed.\r\n```",
              "createdAt": "2024-09-23T18:17:14Z",
              "updatedAt": "2024-09-23T18:18:55Z"
            },
            {
              "originalPosition": 211,
              "body": "```suggestion\r\nIf the condition ECT does not contain a `raw-values-mask`, then the comparison MUST return true if and only if the condition ECT `raw-value` is binary equal to the candidate entry `raw-value`.\r\n```",
              "createdAt": "2024-09-23T18:18:04Z",
              "updatedAt": "2024-09-27T03:35:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86KyTLi",
          "commit": {
            "abbreviatedOid": "a0c100c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-25T14:25:12Z",
          "updatedAt": "2024-09-25T14:25:12Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\n### Element ID comparison {#sec-compare-mkey}\r\n```",
              "createdAt": "2024-09-25T14:25:12Z",
              "updatedAt": "2024-09-25T14:25:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K3KoM",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See multiple comments",
          "createdAt": "2024-09-25T23:54:05Z",
          "updatedAt": "2024-09-26T01:02:39Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nThe condition ECT `environment-map` is a subset of an ACS entry `environment-map` if each field (for example `class`, `instance`, etc.) which is present in the condition ECT `environment-map` is also present in the ACS entry, and the CBOR encoded field values in the condition ECT and ACS entry are binary identical.\r\n```",
              "createdAt": "2024-09-25T23:54:05Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nBefore performing the binary comparison, a Verifier SHOULD convert both ECT `environment-map` fields into a form which meets CBOR Core Deterministic Encoding Requirements {{-cbor}}.\r\n\r\n```",
              "createdAt": "2024-09-25T23:56:50Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 69,
              "body": "```suggestion\r\n### Element ID comparison {#sec-compare-eid}\r\n```",
              "createdAt": "2024-09-25T23:58:34Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nThe verifier SHALL iterate over all the entries in the `elements` array and compare the condition ECT `element-id` value to the candidate ACS entry `element-id` value.\r\n```",
              "createdAt": "2024-09-26T00:02:20Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nIf the two `element-id` values are not binary equal then the candidate entry is removed from the candidate entries array.\r\n```",
              "createdAt": "2024-09-26T00:03:07Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nBefore performing the binary comparison, a Verifier SHOULD convert `element-id` fields into a form which meets CBOR Core Deterministic Encoding Requirements {{-cbor}}.\r\n```",
              "createdAt": "2024-09-26T00:03:35Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nIf the `element-id` field is not present in both the condition ECT and the candidate ACS entry, then the `element-id` values are equal and the candidate entry is not removed.\r\n```",
              "createdAt": "2024-09-26T00:06:08Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nIf the `element-id` field is not present in either the condition ECT or the ACS ECT, the  `element-id` values are not equal and the candidate entry is removed.\r\n```",
              "createdAt": "2024-09-26T00:08:17Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nThe verifier SHALL iterate over all entries in the candidate ACS entries array and compare the condition ECT expected `authority` value to the candidate ACS ECT `authority` value.\r\n```",
              "createdAt": "2024-09-26T00:11:18Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nIf the condition ECT contains an `authority` field, then the Verifier SHALL remove all candidate ACS ECT entries whose `authority` field does not contain one of the keys listed in the condition ECT `authority` field (see {{sec-authorized-by}} for more details).\r\n```",
              "createdAt": "2024-09-26T00:13:20Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 83,
              "body": "Line 2078 says to remove values from the candidate ECT authority field. This seems wrong since this is describing a matching function. Matching / comparison functions should not result in a change to the ACS. ",
              "createdAt": "2024-09-26T00:17:02Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 85,
              "body": "We should revisit whether a binary match makes sense since the authority field is a set array not a positional array.",
              "createdAt": "2024-09-26T00:19:16Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 103,
              "body": "The `$crypto-key-type-choice` allows a variety of authority representations (key, cert, cert chain). For equivalence checking purposes, it seems reasonable for the Verifier to compare the arrays as sets where the condition ECT authority must be a subset of the candidate ACS ECT. \r\nIf we say that the comparison should be on fully qualified certificate paths, then the Verifier must do path construction and potentially find multiple cert chains that belong to the same key. This seems like a lot of work. It seems to be unnecessary work if the goal is simply to match. The responsibility falls to the RIM author to know which variation of $crypto-key-type-choice was used when the ACS entry was initially populated. Is this  an unreasonable assumption?",
              "createdAt": "2024-09-26T00:26:35Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nThe verifier SHALL iterate over all entries in the candidate ACS entries array and compare the condition ECT Claims to the candidate ACS ECT entry Claims.\r\n```",
              "createdAt": "2024-09-26T00:29:49Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nThe Verifier SHALL iterate over the `element-list` entries of the condition ECT comparing the `element-list` entries of the candidate ACS ECT.\r\n```",
              "createdAt": "2024-09-26T00:31:31Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 95,
              "body": "There should be a section describing how to compare `element-list` entries. The section above {#sec-compare-mkey/eid} should be a subsection of this new section. It should be written using the  `element-id` and `element-claims` labeling.  The section \"Comparison of a single measurement-values-map\" should also be a subsection of this new section.",
              "createdAt": "2024-09-26T00:44:51Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 103,
              "body": "```suggestion\r\nIf any codepoint present in the condition ECT `measurement-values-map` does not match the same codepoint within the candidate entry `measurement-values-map` then the Verifier SHALL remove that ECT from the candidate ACS entries array.\r\n```",
              "createdAt": "2024-09-26T00:46:39Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 109,
              "body": "I'm confused by this language. We haven't discussed \"standard comparison algorithms\" as a term. The reader is likely to be confused. Shouldn't this section describe that algorithm directly?",
              "createdAt": "2024-09-26T00:48:56Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 126,
              "body": "The other sections in the document describe the code point semantics, but not how to do equivalence comparisons. That is the purpose of these subsections IMO.",
              "createdAt": "2024-09-26T00:50:31Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 114,
              "body": "```suggestion\r\nThe codepoint number, the profile associated with the condition ECT, and the tag value (if present) shall be used to document the algorithm.\r\n```",
              "createdAt": "2024-09-26T00:51:55Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 130,
              "body": "The \"select\" wording does not resonate with me. We are documenting the algorithms here. Can't we just write a section for each code point and describe the comparison algorithm? ",
              "createdAt": "2024-09-26T00:53:59Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nIf the Verifier does not recognize a codepoint in the `element-claims`, then the condition ECT does not match the candidate ACS ECT.\r\n```",
              "createdAt": "2024-09-26T00:57:35Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            },
            {
              "originalPosition": 233,
              "body": "```suggestion\r\nIf no entry is found, the condition ECT `integrity-registers` value does not match the candidate ACS ECT.\r\n```",
              "createdAt": "2024-09-26T01:01:53Z",
              "updatedAt": "2024-09-26T01:02:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K66Sx",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:47:22Z",
          "updatedAt": "2024-09-26T09:47:22Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "In the internal representation, each ECT has its own authority",
              "createdAt": "2024-09-26T09:47:22Z",
              "updatedAt": "2024-09-26T09:47:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K665x",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:48:31Z",
          "updatedAt": "2024-09-26T09:48:31Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "That was not the intention. I am rewriting to remove the candidate entries array from the description, which will hopefully clear this up.",
              "createdAt": "2024-09-26T09:48:31Z",
              "updatedAt": "2024-09-26T09:48:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K67SI",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:49:15Z",
          "updatedAt": "2024-09-26T09:49:15Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "I will rewrite this to make it clear that it's a set intersection test",
              "createdAt": "2024-09-26T09:49:15Z",
              "updatedAt": "2024-09-26T09:49:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K682C",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:52:01Z",
          "updatedAt": "2024-09-26T09:52:02Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "I added the \"may\" paragraph to make it clear what the intention of the comid author is. They are asking for authority from an entity, and that entity is currently represented by a key. In future we might develop more flexible ways to represent an identity, in which case I'd expect extension RFCs to describe the details of how they work.",
              "createdAt": "2024-09-26T09:52:01Z",
              "updatedAt": "2024-09-26T09:52:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K69Aj",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:52:18Z",
          "updatedAt": "2024-09-26T09:52:19Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "I will rewrite.",
              "createdAt": "2024-09-26T09:52:18Z",
              "updatedAt": "2024-09-26T09:52:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K69Z3",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:52:59Z",
          "updatedAt": "2024-09-26T09:52:59Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I think the current text is better, but I will remove candidate entry array",
              "createdAt": "2024-09-26T09:52:59Z",
              "updatedAt": "2024-09-26T09:52:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K69ws",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:53:32Z",
          "updatedAt": "2024-09-26T09:53:32Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "ok",
              "createdAt": "2024-09-26T09:53:32Z",
              "updatedAt": "2024-09-26T09:53:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K6-0Z",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:55:25Z",
          "updatedAt": "2024-09-26T09:55:25Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "This text exists because some standard codepoints use tags to select options",
              "createdAt": "2024-09-26T09:55:25Z",
              "updatedAt": "2024-09-26T09:55:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K_OAp",
          "commit": {
            "abbreviatedOid": "afa24e8"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T16:31:33Z",
          "updatedAt": "2024-09-26T16:31:33Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "I have rewritten the text to try to make it clearer, hopefully without changing its meaning.",
              "createdAt": "2024-09-26T16:31:33Z",
              "updatedAt": "2024-09-26T16:31:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86K_O54",
          "commit": {
            "abbreviatedOid": "0f1abf4"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T16:33:19Z",
          "updatedAt": "2024-09-26T16:33:19Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "Text rewritten",
              "createdAt": "2024-09-26T16:33:19Z",
              "updatedAt": "2024-09-26T16:33:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LBUhz",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T21:30:45Z",
          "updatedAt": "2024-09-26T21:31:12Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\n\r\n```\r\nThis kind of optional behavior could result in different verifiers arriving at a different result given the same inputs.\r\nIt is safer if the Verifier simply compared the \"keys\" (aka authority values) as opaque values rather than try to do format translation to a universal form. ",
              "createdAt": "2024-09-26T21:30:45Z",
              "updatedAt": "2024-09-26T21:31:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LCacQ",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-27T03:03:25Z",
          "updatedAt": "2024-09-27T04:18:23Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nA Verifier SHALL iterate over all ACS entries and SHALL attempt to match the condition ECT against each ACS entry using the algorithm described in {{sec-match-one-condition-ect}}.\r\n```",
              "createdAt": "2024-09-27T03:03:25Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nIf all of the fields match, then the condition ECT matches the ACS entry.\r\n```",
              "createdAt": "2024-09-27T03:04:42Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nIf any field which is present in the condition ECT `environment-map` is not present in the ACS entry, then the environments do not match.\r\n```",
              "createdAt": "2024-09-27T03:07:47Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nIf any field which is present in the condition ECT `environment-map` is not binary identical to the corresponding ACS entry field, then the environments do not match.\r\n```",
              "createdAt": "2024-09-27T03:08:18Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nIf a field is not present in the condition ECT `environment-map` then the presence of, and value of, the corresponding ACS entry field SHALL not affect whether the environments match.\r\n```",
              "createdAt": "2024-09-27T03:08:49Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nA Verifier SHALL compare the condition ECT-expected `authority` value to the candidate entry `authority` value.\r\n```",
              "createdAt": "2024-09-27T03:09:26Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 288,
              "body": "```suggestion\r\nNote that if a candidate entry contains a value for `raw-values-mask`, then this does not affect the result of the comparison; only the condition ECT's `raw-values-mask` is used in the comparison.\r\n```",
              "createdAt": "2024-09-27T03:10:45Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 285,
              "body": "```suggestion\r\nIf there is any bit position in `raw-values-mask` whose value is 1, but the two `raw-value`s differ at the same bit position, then the comparison MUST return false.\r\n```",
              "createdAt": "2024-09-27T03:14:35Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 279,
              "body": "```suggestion\r\nIf all bit positions in the `raw-values-mask` with value 1 imply the corresponding bit position in both `raw-value`s are equal, then the comparison MUST return true.\r\n```",
              "createdAt": "2024-09-27T03:20:14Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 255,
              "body": "$raw-value-type-choice is not always `bstr`. It is only a `tagged-bytes` right now, but profiles may extend it. There is a comment later about profiles allowing a different raw-value-mask-type, but that is /not/ true because it's not a $-prefixed type choice codepoint.\r\n\r\nHigh level, I think if the raw-value-mask is not present, then raw-value always compares by binary comparison. That makes sense to me for \"raw\", otherwise this is the free-for-all codepoint.\r\n\r\nIf raw-value-mask is present, raw-value must be a tagged-bytes otherwise the the measurement-values-map is illformed. If you make the type choice extensible, then you can prescribe the semantics for when raw-value-mask happens to be a bstr (or tagged-bytes).",
              "createdAt": "2024-09-27T03:27:54Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 258,
              "body": "```suggestion\r\n```\r\nThis is in the CDDL.",
              "createdAt": "2024-09-27T03:31:09Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 265,
              "body": "```suggestion\r\nIf lengths differ amongst the condition ECT `raw-values-mask`, condition ECT `raw-value`, or candidate entry `raw-value`, then the comparison MUST return false.\r\n```",
              "createdAt": "2024-09-27T03:33:05Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 276,
              "body": "```suggestion\r\nIf all the lengths are the same, then a Verifier MUST iterate over the bits in the `raw-values-mask` which are 1 and compare the values for corresponding bit position in the compared `raw-value` fields.\r\n```",
              "createdAt": "2024-09-27T03:37:41Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 297,
              "body": "```suggestion\r\n```\r\nThis is in the CDDL.",
              "createdAt": "2024-09-27T03:39:46Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 304,
              "body": "This confuses me. I can't conceptualize the procedure you're describing, and I don't know why you care about only tagged values. The $crypto-key-type-choice choice can be extended with non-tagged values. I don't know why you describe the tagged value comparison in two steps when it seems equivalent to just compare binary encodings.\r\n\r\nIt seems like you require the condition's key array to be less than or equal to the candidate's key array, and that all elements of the condition's key array must be binary equal to the corresponding position in the candidate's key array. Seems strange to not allow some permutation in the comparison. Why is this not a subset semantics? Do you really need to impose an ordering?\r\n\r\nThe intended meaning of the triple is lost on me. It would help to have some supporting prose. Is it that the environment could be reasonably expected to give a proof of possession for these keys? I could see the ordering mattering if you're expecting the format of a CA bundle, but whether you're iterating from the left or right can cause problems due to bundle inconsistencies across server implementations as root..leaf or leaf..root\r\n",
              "createdAt": "2024-09-27T03:58:09Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 311,
              "body": "```suggestion\r\nIf no entry is found, the comparison MUST return false.\r\n```",
              "createdAt": "2024-09-27T03:58:42Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nmeasurement values are not equivalent, then a Verifier SHALL report\r\n```",
              "createdAt": "2024-09-27T03:59:52Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 312,
              "body": "Where is this equivalence defined? I don't see any \"equivalence\" wording in the referenced section. What does it mean for equivalence \"to be found\"?\r\n\r\nI thought we'd describe the comparison the way we do with measurement-values-map, where if the key is in the condition, then the candidate must have a value for that key as well, and they compare thus.",
              "createdAt": "2024-09-27T04:05:18Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 216,
              "body": "```suggestion\r\n```\r\nIn the CDDL.",
              "createdAt": "2024-09-27T04:06:20Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 222,
              "body": "```suggestion\r\nTo prevent downgrade attacks, if there are multiple algorithms in common between the condition ECT and candidate entry, then the bytes paired with common algorithms must be equal.\r\nAn `alg` matches another if they correspond to the same hash algorithm in the [IANA.named-information] registry.\r\nA Verifier SHOULD fail the comparison if a condition `alg` does not have a corresponding entry in the IANA registry.\r\n```",
              "createdAt": "2024-09-27T04:10:04Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            },
            {
              "originalPosition": 313,
              "body": "```suggestion\r\n```\r\nI think this can be left unsaid, but I don't mind it.",
              "createdAt": "2024-09-27T04:18:10Z",
              "updatedAt": "2024-09-27T04:18:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LF48M",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T12:16:45Z",
          "updatedAt": "2024-09-27T12:16:45Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "This decision could cause problems though. Since we\u2019re requiring reference values to always include the expected root/intermediate/leaf expected signer from the attester (such as the sev-snp vcek, ask, or ark), then the reference value provider would want to avoid the bloat of copying the same full cert everywhere and just use a thumbprint. Is the expectation that the evidence translation will populate authorized-by with every format imaginable for describing the key in order to match? Or is the expectation for the profile to dictate a small number of supported formats that it will enumerate in the translation?",
              "createdAt": "2024-09-27T12:16:45Z",
              "updatedAt": "2024-09-27T12:16:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHTN8",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-27T14:47:42Z",
          "updatedAt": "2024-09-27T15:03:40Z",
          "comments": [
            {
              "originalPosition": 122,
              "body": "```suggestion\r\nIf the condition ECT contains a `cmtype` field, and the ACS entry does not contain a `cmtype` field, then the types do not match.\r\n```",
              "createdAt": "2024-09-27T14:47:42Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            },
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nIf the condition ECT contains a `cmtype` field, and that type has a different value from the ACS entry `cmtype` field, then the types do not match.\r\n```",
              "createdAt": "2024-09-27T14:47:59Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nIf the condition ECT contains a `cmtype` field, and that type has the same value as the ACS entry `cmtype` field, then the types match.\r\n```",
              "createdAt": "2024-09-27T14:48:08Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            },
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nA Verifier SHALL perform all of the comparisons in sections {{sec-compare-profile}}, {{sec-compare-environment}), {{sec-compare-authority}), {{sec-compare-cm}} and {{sec-compare-element-list}).\r\n```\r\nWe need a profile comparison first because all the later comparison algorithms can have a dependency on the interpretation dictated by the profile. The profile I think also should be an iff comparison, such that a condition ECT that does not have a profile should _not_ match a candidate ECT that has a profile.",
              "createdAt": "2024-09-27T14:53:23Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nIf every entry in the condition ECT `authority` has a matching entry in the ACS entry `authority` field, then the authorities match.\r\n```",
              "createdAt": "2024-09-27T14:53:48Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            },
            {
              "originalPosition": 112,
              "body": "I've interpreted first as condition and second as candidate. I don't know where we're declaring trust anchors for evidence that is added to the ACS. Say an attestation key has multiple certificate paths. The verifier would know which are valid due to some configuration of trust anchor (I don't know where if anywhere we've specified what are the chosen trust anchors for a Verifier). For the purposes of explaining the abstract semantics in this document though, we can dictate that the whole trusted path is concretized in the ECT's authorities when added to the ACS as evidence. The concretization in this exposition can be abstract in a Verifier implementation.\r\n\r\nIf there is some connection to CoTS that I'm missing since I haven't been involved in that, I hope we can leave that abstraction to a mental exercise.",
              "createdAt": "2024-09-27T15:00:58Z",
              "updatedAt": "2024-09-27T15:03:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHhwt",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:11:46Z",
          "updatedAt": "2024-09-27T15:11:46Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Remove the usage of MAY to remove line 2091 -2092. The Verifier should have the same format for comparision",
              "createdAt": "2024-09-27T15:11:46Z",
              "updatedAt": "2024-09-27T15:11:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHlBy",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:15:29Z",
          "updatedAt": "2024-09-27T15:15:30Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Remove the text on 2094 and retain text above!",
              "createdAt": "2024-09-27T15:15:29Z",
              "updatedAt": "2024-09-27T15:15:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHlrt",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:16:01Z",
          "updatedAt": "2024-09-27T15:16:01Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-09-27T15:16:01Z",
              "updatedAt": "2024-09-27T15:16:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHlzl",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Please work on comments",
          "createdAt": "2024-09-27T15:16:13Z",
          "updatedAt": "2024-09-27T15:16:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LHtSN",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:29:12Z",
          "updatedAt": "2024-09-27T15:29:13Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "@andrew-draper to correct digest comparison to match support both of text and integer for hash alg",
              "createdAt": "2024-09-27T15:29:12Z",
              "updatedAt": "2024-09-27T15:29:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHt31",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "correct hash text and alg-id correction",
          "createdAt": "2024-09-27T15:30:23Z",
          "updatedAt": "2024-09-27T15:30:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LHvHo",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:32:24Z",
          "updatedAt": "2024-09-27T15:32:24Z",
          "comments": [
            {
              "originalPosition": 304,
              "body": "This is existing text, so I've moved this objection to a separate issue.",
              "createdAt": "2024-09-27T15:32:24Z",
              "updatedAt": "2024-09-27T15:32:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LHweV",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T15:35:14Z",
          "updatedAt": "2024-09-27T15:35:14Z",
          "comments": [
            {
              "originalPosition": 150,
              "body": "map map\r\n```suggestion\r\n### Measurement values map Comparison {#sec-compare-mvm}\r\n```",
              "createdAt": "2024-09-27T15:35:14Z",
              "updatedAt": "2024-09-27T15:35:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSKN",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:28:46Z",
          "updatedAt": "2024-09-29T23:28:46Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "I am not expecting evidence to always be marked with a profile, so doing a profile comparison first will sometimes fail.\r\nIf we have a profile comparison then should it be the other way round - a candidate ECT without a profile will match a condition ECT with a profile?",
              "createdAt": "2024-09-29T23:28:46Z",
              "updatedAt": "2024-09-29T23:28:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSOE",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:29:53Z",
          "updatedAt": "2024-09-29T23:29:54Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nIf a field is not present in the condition ECT `environment-map` then the presence of, and value of, the corresponding ACS entry field SHALL NOT affect whether the environments match.\r\n```",
              "createdAt": "2024-09-29T23:29:53Z",
              "updatedAt": "2024-09-29T23:29:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSPv",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:30:26Z",
          "updatedAt": "2024-09-29T23:30:26Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Good suggestion, but I think the NOT in SHALL NOT is supposed to be in upper case.",
              "createdAt": "2024-09-29T23:30:26Z",
              "updatedAt": "2024-09-29T23:30:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSTA",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:31:31Z",
          "updatedAt": "2024-09-29T23:31:31Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Does adding a hyphen here make the text clearer?",
              "createdAt": "2024-09-29T23:31:31Z",
              "updatedAt": "2024-09-29T23:31:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSWC",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:32:30Z",
          "updatedAt": "2024-09-29T23:32:30Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Removing using Ned's suggestion below.",
              "createdAt": "2024-09-29T23:32:30Z",
              "updatedAt": "2024-09-29T23:32:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSck",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:34:42Z",
          "updatedAt": "2024-09-29T23:34:42Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I think we need a further change later to tidy up the processing of authority, I will remove this text now and we can add something like it later if that is the direction we want to follow.\r\nI would like to see richer semantics available in the final draft.",
              "createdAt": "2024-09-29T23:34:42Z",
              "updatedAt": "2024-09-29T23:34:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSfH",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:35:42Z",
          "updatedAt": "2024-09-29T23:35:42Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Removed using suggested change below.",
              "createdAt": "2024-09-29T23:35:42Z",
              "updatedAt": "2024-09-29T23:35:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSgj",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:36:19Z",
          "updatedAt": "2024-09-29T23:36:20Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "See comment about richer semantics. For now, I am removing it so we can make progress.",
              "createdAt": "2024-09-29T23:36:19Z",
              "updatedAt": "2024-09-29T23:36:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPSnq",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:38:10Z",
          "updatedAt": "2024-09-29T23:38:10Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "I believe so. Also, it's an endash, and it's the grammatical thing to use to say that the expectation comes from the condition ECT (more than one word).",
              "createdAt": "2024-09-29T23:38:10Z",
              "updatedAt": "2024-09-29T23:38:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPStc",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:39:49Z",
          "updatedAt": "2024-09-29T23:39:49Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "```suggestion\r\nEach of the codepoints present in the condition ECT is compared against the same codepoint in the candidate entry with the same `element-id`.\r\n```",
              "createdAt": "2024-09-29T23:39:49Z",
              "updatedAt": "2024-09-29T23:40:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPTCP",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:45:26Z",
          "updatedAt": "2024-09-29T23:45:26Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "```suggestion\r\nIf any condition ECT entry `element-id` does not have a corresponding `element-id` in the ACS entry then the element map does not match.\r\n\r\nIf any condition ECT entry has multiple corresponding `element-id`s then the element map does not match.\r\n```",
              "createdAt": "2024-09-29T23:45:26Z",
              "updatedAt": "2024-09-29T23:45:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPTFh",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:46:21Z",
          "updatedAt": "2024-09-29T23:46:21Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "```suggestion\r\nEach of the codepoints present in the condition ECT `measurement-values-map` is compared against the same codepoint in the candidate entry `measurement-values-map`.\r\n```",
              "createdAt": "2024-09-29T23:46:21Z",
              "updatedAt": "2024-09-29T23:46:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPTGi",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:46:36Z",
          "updatedAt": "2024-09-29T23:46:36Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "I used slightly different text",
              "createdAt": "2024-09-29T23:46:36Z",
              "updatedAt": "2024-09-29T23:46:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPTZW",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:51:29Z",
          "updatedAt": "2024-09-29T23:51:30Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "```suggestion\r\nTo prevent downgrade attacks, if there are multiple algorithms in common between the condition ECT and candidate entry, then the bytes paired with common algorithms must be equal.\r\nA Verifier SHALL treat two algorithm identifiers as equal if they have the same deterministic binary encoding.\r\nIf both an integer and a string representation are defined for an algorithm then entities creating ECTs SHOULD use the integer representation.\r\nIf condition ECT and ACS entry use different names for the same algorithm, and the Verifier does not recognize that they are the same, then a downgrade attack is possible.\r\n```",
              "createdAt": "2024-09-29T23:51:30Z",
              "updatedAt": "2024-09-29T23:58:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPToO",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-29T23:55:39Z",
          "updatedAt": "2024-09-29T23:55:39Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "I have been thinking about what we discussed in the call and I think there may be a security issue with it. As I remember, the decision in the call was that a verifier should treat the string and integer names for an algorithm as identical.\r\nThis leads to an issue if the registry is every extended, as some verifiers will not understand the new algorithms. If a condition ECT uses the numeric version and an ACS entry uses the string version then a downgrade attack is possible.\r\nI am proposing text below which recommends that the integer version be used when it is available, and does not mandate comparing strings and integers.",
              "createdAt": "2024-09-29T23:55:39Z",
              "updatedAt": "2024-09-29T23:55:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPT6N",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T00:00:22Z",
          "updatedAt": "2024-09-30T00:00:22Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "I have removed the raw-value changes from this PR and resubmitted them in PR #294. Let's discuss them there.",
              "createdAt": "2024-09-30T00:00:22Z",
              "updatedAt": "2024-09-30T00:01:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPUGI",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T00:02:53Z",
          "updatedAt": "2024-09-30T00:02:53Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "```suggestion\r\n[^issue] https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/71\r\n```",
              "createdAt": "2024-09-30T00:02:53Z",
              "updatedAt": "2024-09-30T00:02:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPUWc",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T00:06:16Z",
          "updatedAt": "2024-09-30T00:06:16Z",
          "comments": [
            {
              "originalPosition": 312,
              "body": "This is the same text as before the change.\r\nAre we expecting to remove integrity registers? We discussed that in one call.\r\nIf we are then I think editorial improvements like the one above may be moot.",
              "createdAt": "2024-09-30T00:06:16Z",
              "updatedAt": "2024-09-30T00:06:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPYEj",
          "commit": {
            "abbreviatedOid": "a8adff1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T00:15:51Z",
          "updatedAt": "2024-09-30T00:15:52Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "In this case, expected is a modifier of authority. If the \"expected\" there is causing confusion then I think it is probably best to just remove it.",
              "createdAt": "2024-09-30T00:15:52Z",
              "updatedAt": "2024-09-30T00:15:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LPfPY",
          "commit": {
            "abbreviatedOid": "a8adff1"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T00:26:09Z",
          "updatedAt": "2024-09-30T00:26:10Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Is this the right thing to do if there is no defined comparison algorithm?\r\nFor most of the standard (non-negative) codepoints in the document today, a binary compare is what would be expected.\r\nAs that is a non-editorial change I propose making it in a different PR.",
              "createdAt": "2024-09-30T00:26:09Z",
              "updatedAt": "2024-09-30T00:26:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQMNx",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T03:47:28Z",
          "updatedAt": "2024-09-30T03:47:28Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Hmmmmmmmm that is very tricky indeed. That would mean that we have to be very careful that any CBOR that matches the base CDDL has a solid semantics that cannot be extended by a profile, such as with additional value encodings that allow for weaker pattern matching (e.g., adding any-of to standard codepoints if it weren't already there).\r\n\r\nSay we have a condition ECT that has conditional endorsement series triple that on condition 3 includes nonstandard values, and condition 4 has standard values again and is the one we expect to match.\r\nDo we permit the condition with a profile to be evaluated against the candidate without a profile until we get to the conditional series additions?\r\n\r\nI understand -1 would never compare true to the nonnegative standard codepoints, but if there are extensible type choices in standard codepoints, we have to ensure that they are compared with encoding equality only to avoid overriding the base CoRIM semantics. `$version-scheme` for example permits any `int`, so how do we allow a profile to define a new one without messing with the base CoRIM semantics? I don't know. We haven't defined the semantics of version matching.",
              "createdAt": "2024-09-30T03:47:28Z",
              "updatedAt": "2024-09-30T03:47:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQMZd",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T03:48:47Z",
          "updatedAt": "2024-09-30T03:48:47Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Agreed. The condition's authority is already a condition you may be expecting.",
              "createdAt": "2024-09-30T03:48:47Z",
              "updatedAt": "2024-09-30T03:48:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQMfJ",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T03:49:24Z",
          "updatedAt": "2024-09-30T03:49:24Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nA Verifier SHALL compare the condition ECT's `authority` value to the candidate entry's `authority` value.\r\n```",
              "createdAt": "2024-09-30T03:49:24Z",
              "updatedAt": "2024-09-30T03:49:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQNkm",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T03:56:24Z",
          "updatedAt": "2024-09-30T03:56:24Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "A profile may define only codepoints -1 to -15. If there's an update and -16 creeps in without the profile also getting a version update, do we want to say that additions are non-breaking, or that all changes require version updates and therefore new profile ids? I'd like that to be up to the profile designer, honestly, which would be within its rights to say that all code points below -15 or between -15 and -1000 are compared with binary equality to allow for opaque expansion but still allowing for a minor version advancement to add non-opaque comparisons to new code points.\r\n\r\nI'd say no match. Keep this text.",
              "createdAt": "2024-09-30T03:56:24Z",
              "updatedAt": "2024-09-30T03:56:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQOU4",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T04:00:56Z",
          "updatedAt": "2024-09-30T04:00:57Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "```suggestion\r\nThe comparison MUST return false if the condition ECT digests entry does not contain any digests with an algorithm in common with the candidate entry.\r\n```\r\nThe `digests-type` is already non-empty, so I assume you mean that there has to be at least 1 matching algorithm to compare digests of.",
              "createdAt": "2024-09-30T04:00:57Z",
              "updatedAt": "2024-09-30T04:00:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LQOfs",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T04:01:56Z",
          "updatedAt": "2024-09-30T04:01:56Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "You say this below, so given that non-emptiness is required, I'd say delete the line.",
              "createdAt": "2024-09-30T04:01:56Z",
              "updatedAt": "2024-09-30T04:01:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LV7Tw",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T14:38:49Z",
          "updatedAt": "2024-09-30T14:38:49Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "```suggestion\r\nA profile MUST specify comparison methods for its additions to `$`-prefixed CoRIM CDDL codepoints when this specification does not prescribe binary comparison.\r\n```\r\nTagging is not required for extensions.",
              "createdAt": "2024-09-30T14:38:49Z",
              "updatedAt": "2024-09-30T14:38:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LXgQB",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T17:26:22Z",
          "updatedAt": "2024-09-30T17:26:38Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "My expectation is if a profile defines an alternative matching algorithm from one defined in the \"base\" corim spec, the profile algorithm takes precedence.  A simple example might be svn comparisons (not min-svn) where current algorithm is equivalence, a RV profile might apply range semantics such that an actual svn=2 might be accepted by an algorithm that said (svn >= 1). Nevertheless, the ACS still contains svn=2 and any condition endorsement statement that compares for equality still uses the base spec's equality check algorithm. It suggests a constraint on profiles that the syntax for describing alternative matching should have a well-defined format. For example, the Intel profile defines a CBOR tag that prefaces the matching condition statement. Hence, the Verifier is not undecided about which algorithm to apply even if processing order varies, so long as the profile is parsed before processing begins. ",
              "createdAt": "2024-09-30T17:26:22Z",
              "updatedAt": "2024-09-30T17:26:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LXlBI",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggested text",
          "createdAt": "2024-09-30T17:36:17Z",
          "updatedAt": "2024-09-30T17:46:53Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "There isn't an external representation for cm-type in comid. Hence, there isn't a way to include it in a `condition` statement. The semantics for cm-type are intrinsic to processing semantics of CMs. For example, processing a RV message means the Evidence ECTs are the target ACS entries. For endorsements, Evidence and RV ECTs are the targets. Note: There is an unresolved issue as to whether Endorsement conditions can target other Endorsement ECTs.\r\n\r\nConsequently, this section is not needed. The semantics of cm-type will be handled in the sections that describe processing phases.",
              "createdAt": "2024-09-30T17:36:17Z",
              "updatedAt": "2024-09-30T17:48:40Z"
            },
            {
              "originalPosition": 171,
              "body": "I'm OK with the current text.",
              "createdAt": "2024-09-30T17:38:55Z",
              "updatedAt": "2024-09-30T17:46:53Z"
            },
            {
              "originalPosition": 176,
              "body": "We should use \"key\" or \"code point\" consistently. Line 2156 goes back to using \"key\".",
              "createdAt": "2024-09-30T17:40:13Z",
              "updatedAt": "2024-09-30T17:46:53Z"
            },
            {
              "originalPosition": 230,
              "body": "The original text seems best IMO.",
              "createdAt": "2024-09-30T17:44:07Z",
              "updatedAt": "2024-09-30T17:46:53Z"
            },
            {
              "originalPosition": 243,
              "body": "```suggestion\r\nThe comparison MUST return false if there are no hash algorithms from the condition ECT in common with the hash algorithms from the candidate entry ECT.\r\n```",
              "createdAt": "2024-09-30T17:46:09Z",
              "updatedAt": "2024-09-30T17:46:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LaNzS",
          "commit": {
            "abbreviatedOid": "85c0c3f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T00:11:54Z",
          "updatedAt": "2024-10-01T00:11:54Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "svn-type-choice is not extensible, so your example doesn't track for me.\r\n\r\nWe shouldn't ever have certain condition tags in the ACS as actual state, such as `tagged-min-svn`.\r\nAre we going to allow profiles to extend measurement-values-map values with their own pattern languages for more complex comparisons against the ACS? It becomes a kind of stored-procedure input at that point. It could be useful, but we can't permit for conditions to leak into actual state.",
              "createdAt": "2024-10-01T00:11:54Z",
              "updatedAt": "2024-10-01T00:11:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeI5N",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:30:40Z",
          "updatedAt": "2024-10-01T11:30:40Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "I think the profile should take precedence if it exists, but that doesn't mean that we need to compare the profile between the condition ECT and the ACS entry.\r\n\r\nCan we say something like this:\r\n```suggestion\r\nIf the condition ECT contains a profile then the documentation for that profile describes the matching algorithm.\r\nProfile authors SHOULD make their matching algorithms similar to the algorithm described in this document where possible.\r\n\r\nA Verifier SHALL perform all of the comparisons in sections {{sec-compare-environment}), {{sec-compare-authority}), {{sec-compare-cm}} and {{sec-compare-element-list}).\r\n```\r\n\r\nThis means that the profile can add new matching algorithms, like the ANY_OF<> algorithm proposed in another PR.",
              "createdAt": "2024-10-01T11:30:40Z",
              "updatedAt": "2024-10-01T11:30:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeJde",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:31:47Z",
          "updatedAt": "2024-10-01T11:31:47Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "Ok, I will remove it.",
              "createdAt": "2024-10-01T11:31:47Z",
              "updatedAt": "2024-10-01T11:31:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeKrw",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:34:23Z",
          "updatedAt": "2024-10-01T11:34:23Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "There are conditions below which check for algorithms in common. I would prefer to keep the original text.",
              "createdAt": "2024-10-01T11:34:23Z",
              "updatedAt": "2024-10-01T11:34:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeMUz",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:37:48Z",
          "updatedAt": "2024-10-01T11:37:48Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "We used algorithm earlier, I will check in text using that work.\r\n\r\n```suggestion\r\nA profile MUST specify comparison algorithms for its additions to `$`-prefixed CoRIM CDDL codepoints when this specification does not prescribe binary comparison.\r\n```",
              "createdAt": "2024-10-01T11:37:48Z",
              "updatedAt": "2024-10-01T11:37:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeN0l",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:40:43Z",
          "updatedAt": "2024-10-01T11:40:43Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "ok",
              "createdAt": "2024-10-01T11:40:43Z",
              "updatedAt": "2024-10-01T11:40:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeOPO",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:41:34Z",
          "updatedAt": "2024-10-01T11:41:34Z",
          "comments": [
            {
              "originalPosition": 182,
              "body": "```suggestion\r\nThe value stored under `measurement-values-map` codepoint 1 is an SVN, which must have type `uint`.\r\n```",
              "createdAt": "2024-10-01T11:41:34Z",
              "updatedAt": "2024-10-01T11:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeOWh",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:41:48Z",
          "updatedAt": "2024-10-01T11:41:48Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "```suggestion\r\nIf the condition ECT value for `measurement-values-map` codepoint 1 is an untagged `uint` or a `uint` tagged with #6.552 then an equality comparison is performed.\r\n```",
              "createdAt": "2024-10-01T11:41:48Z",
              "updatedAt": "2024-10-01T11:41:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeOg3",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:42:09Z",
          "updatedAt": "2024-10-01T11:42:09Z",
          "comments": [
            {
              "originalPosition": 195,
              "body": "```suggestion\r\nIf the condition ECT value for `measurement-values-map` codepoint 1 is a `uint` tagged with #6.553 then a minimum comparison is performed.\r\n```",
              "createdAt": "2024-10-01T11:42:09Z",
              "updatedAt": "2024-10-01T11:42:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeOvS",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:42:38Z",
          "updatedAt": "2024-10-01T11:42:38Z",
          "comments": [
            {
              "originalPosition": 209,
              "body": "```suggestion\r\nA digests entry contains one or more digests, each measuring the same object.\r\n```",
              "createdAt": "2024-10-01T11:42:38Z",
              "updatedAt": "2024-10-01T11:42:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LePMu",
          "commit": {
            "abbreviatedOid": "3ae5537"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:43:34Z",
          "updatedAt": "2024-10-01T11:43:34Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "```suggestion\r\nThe comparison MUST return false if the CBOR encoding of the `digests` entry in the condition ECT or the ACS value with the same codepoint is incorrect (for example if fields are missing or the wrong type).\r\n```",
              "createdAt": "2024-10-01T11:43:34Z",
              "updatedAt": "2024-10-01T11:43:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeS9V",
          "commit": {
            "abbreviatedOid": "7023139"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:51:02Z",
          "updatedAt": "2024-10-01T11:51:03Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-10-01T11:51:03Z",
              "updatedAt": "2024-10-01T11:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeTDf",
          "commit": {
            "abbreviatedOid": "7023139"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:51:14Z",
          "updatedAt": "2024-10-01T11:51:14Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-10-01T11:51:14Z",
              "updatedAt": "2024-10-01T11:51:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LeWpr",
          "commit": {
            "abbreviatedOid": "6dd6cbb"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:58:33Z",
          "updatedAt": "2024-10-01T11:58:33Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n\r\nA Verifier SHALL perform all of the comparisons in sections {{sec-compare-environment}}, {{sec-compare-authority}} and {{sec-compare-element-list}}.\r\n\r\n```",
              "createdAt": "2024-10-01T11:58:33Z",
              "updatedAt": "2024-10-01T11:58:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LgxhD",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-01T14:57:41Z",
          "updatedAt": "2024-10-01T15:13:50Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nIf the condition ECT contains a profile then the documentation for that profile describes the matching algorithm for its extensions.\r\n```",
              "createdAt": "2024-10-01T14:57:41Z",
              "updatedAt": "2024-10-01T15:13:50Z"
            },
            {
              "originalPosition": 74,
              "body": "In the space of candidate and condition having a profile id, we've discussed\r\n\r\nboth without: use base semantics\r\ncondition with, candidate without: use the profile matching algorithm for any extensions, but I think we're missing wording in the spec that if there are any non-base CDDL bits of a CoRIM that it MUST have a profile-id to give them meaning. Is the \"not fo\r\n\r\nWe haven't discussed\r\ncondition without, candidate with: I'm guessing we use the base semantics' matching algorithm applies and rejects to match any nonstandard values.\r\ncondition with, candidate with: This one really does require mentioning in the document. I think that we need to require equality or at least condition profile-specified matching condition to allow for subsumption judgments.",
              "createdAt": "2024-10-01T15:13:04Z",
              "updatedAt": "2024-10-01T15:13:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LhrCO",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "andrew-draper",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T16:22:16Z",
          "updatedAt": "2024-10-01T16:22:16Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nIf the condition ECT contains a profile and the profile defines an algorithm for a codepoint and `environment-map` then a Verifier MUST use the algorithm defined by the profile (or a standard algorithm if the profile defines that).\r\nIf the condition ECT contains a profile, but the profile does not define an algorithm for a particular codepoint and `environment-map` then the verifier MUST use the standard algorithm described in this document to compare the data at that codepoint.\r\n```",
              "createdAt": "2024-10-01T16:22:16Z",
              "updatedAt": "2024-10-01T19:32:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LiEEA",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T17:16:44Z",
          "updatedAt": "2024-10-01T17:16:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LiQpP",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T17:45:09Z",
          "updatedAt": "2024-10-01T17:48:03Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Moving this objection to [an issue](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/295) to not block.",
              "createdAt": "2024-10-01T17:45:10Z",
              "updatedAt": "2024-10-01T17:48:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LmydU",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:35:14Z",
          "updatedAt": "2024-10-02T08:35:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "We need to correct these lines once PR #276 is merged, but i am fine with the text so far!",
              "createdAt": "2024-10-02T08:35:14Z",
              "updatedAt": "2024-10-02T08:35:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LmzaV",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:37:11Z",
          "updatedAt": "2024-10-02T08:37:12Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Please check if line 2047 above is still applicable now that u have worked on this PR",
              "createdAt": "2024-10-02T08:37:12Z",
              "updatedAt": "2024-10-02T08:37:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lm1O4",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:40:57Z",
          "updatedAt": "2024-10-02T08:40:57Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "> \r\n@deeglaze I think, I agree with @andrew-draper statement. A profile can modify/constrain a matching logic of the base parameter as well, in addition to specifying algorithm for extensions!\r\n",
              "createdAt": "2024-10-02T08:40:57Z",
              "updatedAt": "2024-10-02T08:40:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lm4Hz",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:46:50Z",
          "updatedAt": "2024-10-02T08:46:51Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "```suggestion\r\nIf any entry in the condition ECT `element-list` does not have a matching entry in the ACS entry `element-list` field then the `element-list` do not match.\r\n```",
              "createdAt": "2024-10-02T08:46:50Z",
              "updatedAt": "2024-10-02T08:46:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lm50H",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:50:18Z",
          "updatedAt": "2024-10-02T08:50:18Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "Line 2134, we should clarify what other standards mean here ..? We can say, other standards as pointed in each individual sections",
              "createdAt": "2024-10-02T08:50:18Z",
              "updatedAt": "2024-10-02T08:50:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lm8t4",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T08:56:15Z",
          "updatedAt": "2024-10-02T08:56:15Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "Please check same comment as line 2150 applies to 2153 ?",
              "createdAt": "2024-10-02T08:56:15Z",
              "updatedAt": "2024-10-02T08:56:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lm-lI",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "In general LGTM, unblocking the Pull Request. I have few questions, which we can conclude shortly in the CoRIM Design meeting today",
          "createdAt": "2024-10-02T09:00:05Z",
          "updatedAt": "2024-10-02T09:00:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Lp3Qh",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T13:44:53Z",
          "updatedAt": "2024-10-02T13:44:53Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Matching logic I can get behind provided that we better distinguish possible and actual state in the representation. The profile types section text \" A profile MUST NOT alter the syntax or semantics of CoRIM types defined in this document.\" is what led to my edit.",
              "createdAt": "2024-10-02T13:44:53Z",
              "updatedAt": "2024-10-02T13:44:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lp4Py",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T13:46:32Z",
          "updatedAt": "2024-10-02T13:46:32Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "I don't think that the algorithm is necessarily stateless if a profile introduces unification variables to enforce equalities of measurements without knowing their concrete values.",
              "createdAt": "2024-10-02T13:46:32Z",
              "updatedAt": "2024-10-02T13:46:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqLth",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:17:03Z",
          "updatedAt": "2024-10-02T14:17:03Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-10-02T14:17:03Z",
              "updatedAt": "2024-10-02T14:17:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqVGx",
          "commit": {
            "abbreviatedOid": "37d93ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:31:48Z",
          "updatedAt": "2024-10-02T14:31:48Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "```suggestion\r\n```\r\nNot meaningful.",
              "createdAt": "2024-10-02T14:31:48Z",
              "updatedAt": "2024-10-02T14:31:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqbYV",
          "commit": {
            "abbreviatedOid": "d055872"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:41:12Z",
          "updatedAt": "2024-10-02T14:41:12Z",
          "comments": [
            {
              "originalPosition": 180,
              "body": "Conditions match against candidates. You don't consider the tagged-min to be a valid actual value in the ACS. I agree with the original wording.",
              "createdAt": "2024-10-02T14:41:12Z",
              "updatedAt": "2024-10-02T14:41:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqczE",
          "commit": {
            "abbreviatedOid": "d055872"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:42:01Z",
          "updatedAt": "2024-10-02T14:42:01Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "Disagree. I'd keep this text.",
              "createdAt": "2024-10-02T14:42:01Z",
              "updatedAt": "2024-10-02T14:42:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqfL7",
          "commit": {
            "abbreviatedOid": "d055872"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:43:51Z",
          "updatedAt": "2024-10-02T14:43:52Z",
          "comments": [
            {
              "originalPosition": 200,
              "body": "```suggestion\r\nA `digests` entry contains one or more digests, each measuring the same object.\r\n```",
              "createdAt": "2024-10-02T14:43:51Z",
              "updatedAt": "2024-10-02T14:43:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqfYg",
          "commit": {
            "abbreviatedOid": "d055872"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T14:44:07Z",
          "updatedAt": "2024-10-02T14:44:08Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "```suggestion\r\nThe comparison algorithms for these are defined in this document (in the sections below) or in other specifications.\r\n```",
              "createdAt": "2024-10-02T14:44:08Z",
              "updatedAt": "2024-10-02T14:44:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LqlFq",
          "commit": {
            "abbreviatedOid": "f193279"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-02T14:50:46Z",
          "updatedAt": "2024-10-02T14:50:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LrRzM",
          "commit": {
            "abbreviatedOid": "f193279"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-02T15:47:59Z",
          "updatedAt": "2024-10-02T15:47:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 290,
      "id": "PR_kwDOH6-tI858lGqu",
      "title": "added element multiplicity for stateful-environment-record",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/290",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added multiplicity of elements for conditional and conditional series triples via stateful environment record.\r\n\r\nAddresses part of the issues raised in #288 \r\n\r\nNote: Currently PR only touches CDDL and diag files. A cursory review of the prose sections doesn't appear to require updating except for sections that describe transformation of external to internal representation of the conditional series triple.",
      "createdAt": "2024-09-24T22:33:36Z",
      "updatedAt": "2024-09-26T15:22:04Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d8d1365ecaea023cd95c59b97ab8d2026397c0c6",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "series-triple-element-multiplicity",
      "headRefOid": "f6817be8a899ebd6f00f15eb50393841c4e40cf0",
      "closedAt": "2024-09-26T15:22:04Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This requirement folded into PR #276 ",
          "createdAt": "2024-09-26T14:49:45Z",
          "updatedAt": "2024-09-26T14:49:45Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith we can close this PR, if you think it is appropriate!",
          "createdAt": "2024-09-26T14:50:02Z",
          "updatedAt": "2024-09-26T14:50:02Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok to close if superseded by your pr",
          "createdAt": "2024-09-26T14:59:16Z",
          "updatedAt": "2024-09-26T14:59:16Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Multiplicity of stateful environments  and modelling conditional endorsement series triple already folded into PR #276\r\n\r\n",
          "createdAt": "2024-09-26T15:22:02Z",
          "updatedAt": "2024-09-26T15:22:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86KyDL4",
          "commit": {
            "abbreviatedOid": "eee38ae"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-25T14:02:40Z",
          "updatedAt": "2024-09-25T14:02:40Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Why is this not [ + measurement-map ] to allow a condition on more than one mkey? I would imagine there are endorsements that are conditional on multiple elements matching expectations and not just one element. Same for adding endorsements.",
              "createdAt": "2024-09-25T14:02:40Z",
              "updatedAt": "2024-09-25T14:02:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 292,
      "id": "PR_kwDOH6-tI8588eU_",
      "title": "Account for \"activating\" tags from CoBOM in theory of operation.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/292",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The CoBOM tag can help narrow a search space and make an attestation result self-explanatory, such as \"unsupported CoBOM\" or \"missing tags x,y,z from CoBOM\".\r\nWithout a CoBOM, we wanted to still ensure that the appraisal process was repeatable. Add a SHOULD for tracking the head state of the knowledge base of all input CoRIMs to an appraisal session.",
      "createdAt": "2024-09-27T16:50:25Z",
      "updatedAt": "2024-10-04T15:31:20Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d8d1365ecaea023cd95c59b97ab8d2026397c0c6",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "cobomactivate",
      "headRefOid": "f724f819163ceb4e2646bd43079c8880050c921c",
      "closedAt": "2024-10-04T15:31:19Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Given that an appraisal session is meant to consider the knowledge base at a single auditable point of reference, I'm not sure if we need to keep the \"must be activated atomically\" wording. ",
          "createdAt": "2024-09-28T19:21:19Z",
          "updatedAt": "2024-09-28T19:21:19Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I keep falling back on \"knowledge base\" but I'm sure there's some term already decided upon that I can't recall. The immutable label recommendation apart from nebulous \"auditability\" is to support the new SLSA build environment track, where they're working to include remote attestation to identify build environments  https://github.com/slsa-framework/slsa/pull/1115",
          "createdAt": "2024-10-02T13:41:15Z",
          "updatedAt": "2024-10-02T13:41:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: The CoBOM section states: \"Verifier policy determines whether CoBOMs are required\".  The last time this was discussed, there wasn't clarity AFAIK regarding what happens if a RIM supplier asserts a CoBOM but the Verifier doesn't require a CoBOM. Are all Verifiers required to support CoBOMs even if they don't \"require\" CoBOMs?\r\n\r\nIn the case where a Verifier requires a CoBOM but a supplier doesn't supply a CoBOM. What is the expected Verifier behavior? Should a Verifier create a logical CoBOM or should the Verifier refuse to process the RIM? \r\n\r\nThe CoBOM section also says \"If a Verifier Owner has a policy that does not require CoBOM, tags within a CoRIM received by a Verifier are activated immediately and treated valid for appraisal.\" It isn't clear whether a policy to \"not require\" means that the Verifier SHALL NOT process CoBOMs or that a Verifier will still process CoBOMs if they are supplied.\r\n\r\nIt seems reasonable for this spec to expect all Verifiers will process CoBOMs if they are supplied. If that is what we expect, then it makes sense to reword sections that suggest support is conditional on Verifier policy or implementation decisions. ",
          "createdAt": "2024-10-02T15:34:53Z",
          "updatedAt": "2024-10-02T15:40:48Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll defer this to resolving \"quantizing inputs\"",
          "createdAt": "2024-10-04T15:31:19Z",
          "updatedAt": "2024-10-04T15:31:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86Lpt65",
          "commit": {
            "abbreviatedOid": "bfac87e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T13:32:23Z",
          "updatedAt": "2024-10-02T13:32:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I see what you mean, but I am uncertain if \"activating\" is understood intuitively here. Maybe:\r\n\r\n```suggestion\r\nIf a Verifier requires CoBOMs, then the CoRIM inputs indicated explicitly by the CoBOM are the only appropriate and required CoRIMs.\r\n```\r\n\r\nNot sure that is actual better phrasing. If not, please feel free to dismiss.",
              "createdAt": "2024-10-02T13:32:23Z",
              "updatedAt": "2024-10-02T13:32:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lq43J",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T15:12:19Z",
          "updatedAt": "2024-10-02T15:12:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Pending a new issue where it is stated that a Verifier requires a CoBOM that text needs to be revisited before taking this PR further",
              "createdAt": "2024-10-02T15:12:19Z",
              "updatedAt": "2024-10-02T15:12:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lq5E3",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Please make a change!",
          "createdAt": "2024-10-02T15:12:40Z",
          "updatedAt": "2024-10-02T15:12:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L7onD",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T10:03:38Z",
          "updatedAt": "2024-10-04T10:03:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@yogeshbdeshpande I don't understand this comment.  Could you please clarify?",
              "createdAt": "2024-10-04T10:03:38Z",
              "updatedAt": "2024-10-04T10:03:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L7uk6",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T10:16:51Z",
          "updatedAt": "2024-10-04T10:16:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I like framing this in terms of \"CoRIM knowledge base\".\r\n\r\nHowever, I'd scale this one up to also cover the \"Verifier requires CoBOMs\" case, e.g.:\r\n\r\n> The CoRIMs available to the Verifier at the beginning of appraisal constitute the Verifier\u2019s \"knowledge base state.\"\r\n> If a Verifier requires CoBOMs, its knowledge base state is made of the CoRIM inputs indicated explicitly by the CoBOMs.\r\n> If the Verifier does not require CoBOMs, the knowledge base state consists of all the CoRIMs available to the Verifier at the beginning of appraisal.\r\n> The knowledge base state SHOULD have an immutable label for attestation results to have auditable provenance.\r\n\r\n\r\n",
              "createdAt": "2024-10-04T10:16:51Z",
              "updatedAt": "2024-10-04T11:31:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L7wCj",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T10:20:09Z",
          "updatedAt": "2024-10-04T10:20:09Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The comment is about Line 1469, as to who decides whether CoBOM is supplied, is it the Supply Chain or is it the Verifier with its Appraisal Policy for Evidence.\r\n\r\nSo this PR will be re-worked, once Issue https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/298 is worked upon!",
              "createdAt": "2024-10-04T10:20:09Z",
              "updatedAt": "2024-10-04T10:20:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L8PVT",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:29:45Z",
          "updatedAt": "2024-10-04T11:29:45Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Thank you, but I still don't understand your point. L1469 takes no stance on who decides whether CoBOMs are used or not; it purely describes the mechanism. Who sets the boolean `use_cobom` on which the behaviour switches is out of scope for this paragraph.",
              "createdAt": "2024-10-04T11:29:45Z",
              "updatedAt": "2024-10-04T11:29:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L8RGA",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:34:01Z",
          "updatedAt": "2024-10-04T11:34:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I like this a lot. However, it's a requirement that affects the tracking done by the ACS to record the tag-id of the processed triples.",
              "createdAt": "2024-10-04T11:34:01Z",
              "updatedAt": "2024-10-04T11:34:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L8Yzq",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T11:47:18Z",
          "updatedAt": "2024-10-04T11:47:18Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The confusion stems from the fact that:\r\n`If a Verifier requires CoBOM`\r\nthis terminology is ambigous! as it dictates Verifier is the authority for deciding the need for CoBoM\r\n",
              "createdAt": "2024-10-04T11:47:18Z",
              "updatedAt": "2024-10-04T11:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L8j4g",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T12:12:53Z",
          "updatedAt": "2024-10-04T12:12:53Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "To me \"requiring\" can be self-imposed or not, therefore I (personally) see no ambiguity here.\r\n\r\nIn any case, although the supply chain may provide strong hints, the decision whether to use CoBOMs is ultimately the Verifier's.\r\n\r\n",
              "createdAt": "2024-10-04T12:12:53Z",
              "updatedAt": "2024-10-04T12:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L-KFy",
          "commit": {
            "abbreviatedOid": "f724f81"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T15:15:56Z",
          "updatedAt": "2024-10-04T15:15:56Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The entire attestation appraisal is frozen to the input state. The construction of the attestation context should be deterministic. The appraisal of the context should be deterministic. The result construction should be free to reference the label for the input state. I don't think we need to change ECT or ACS data types.",
              "createdAt": "2024-10-04T15:15:56Z",
              "updatedAt": "2024-10-04T15:15:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 294,
      "id": "PR_kwDOH6-tI859Cqxv",
      "title": "Move raw-value comparison algorithm to its own PR",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/294",
      "state": "OPEN",
      "author": "andrew-draper",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-30T00:00:07Z",
      "updatedAt": "2024-10-07T15:48:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d8d1365ecaea023cd95c59b97ab8d2026397c0c6",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "compare-raw-value",
      "headRefOid": "73d0726899ef20bc7f7ef907e89bba625aecf3b7",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86LPUGq",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-30T00:03:00Z",
          "updatedAt": "2024-09-30T03:23:33Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "This is not what the CDDL says. A raw value is a $raw-value-type-choice. We just have to compare them opaquely with their CBOR binary encoding. I'd rather have a profile stick an uninterpreted int in a raw-value rather than dictate that the int has little endian encoding in a bstr.",
              "createdAt": "2024-09-30T00:03:01Z",
              "updatedAt": "2024-09-30T03:23:33Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe value stored under the condition ECT `measurement-values-map` key 5 is a `raw-value-mask` entry, which must have type `bstr`.\r\n```",
              "createdAt": "2024-09-30T00:03:20Z",
              "updatedAt": "2024-09-30T03:23:33Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nIf the condition ECT has a `raw-value-mask` and no `raw-value`, it is ignored.\r\nIf the condition ECT has both a `raw-value-mask`, `raw-value`, then the following conditions must be true for a match:\r\n\r\n*  `raw-value` MUST be either a `bstr` or `tagged-bytes`. The compared value of `raw-value` is the `bstr` itself or the tagged `bstr` respectively.\r\n*  the lengths of the condition `raw-value` `bstr`, condition `raw-value-mask`, and the candidate `raw-value` `bstr` are equal.\r\n*  All bit positions in `raw-value-mask` whose value is 1 must imply that the bit values at the same position in both the condition `raw-value` `bstr` and the candidate `raw-value` `bstr` are equal.\r\n\r\nNote that the candidate's `raw-value-mask` is ignored if it exists.\r\n```\r\nWe can simplify if we want to treat `bstr` and `tagged-bytes` as different since they have different CBOR encodings, and since `bstr` isn't in the base CDDL's `$raw-value-type-choice`, but I figured there would likely be confusion about tagged-bytes vs non-tagged.\r\n\r\nThe \"mask implies raw-value is a bstr\" condition is to restrict the behavior of the mask to when the raw-value is truly just bytes that can be masked. Otherwise the type choice's alternatives wouldn't have a clear meaning with the mask's presence.\r\n\r\nThe quoted text is in 5.1.4.1.4.6 seems to contradict my proposal of limiting the scope to only `bstr`:\r\n> When a new raw value type is defined, the convention for applying the mask is also defined. Typically, a CoRIM profile is used to define new raw values and mask semantics.\r\n\r\nI disagree with this. The semantics of a standard codepoint should not be open to interpretation. A profile that wants nonstandard semantics needs to use a nonstandard codepoint.",
              "createdAt": "2024-09-30T03:14:22Z",
              "updatedAt": "2024-09-30T03:23:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LkDDg",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T21:20:18Z",
          "updatedAt": "2024-10-01T21:21:00Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "There is asymmetry in the definition of raw-value and raw-value-mask in that the mask is always `bstr` while raw-value-type-choice is extensible. The implication seems to be that the CBOR tag tells the Verifier how to map the raw value into a `bstr` so that the mask can be applied consistently.\r\n\r\nIf there is a way to write the text so that always applies regardless of $raw-value-type-choice extensions, then that is preferable. \r\n\r\nNevertheless, before the raw value can be applied to the mask it must undergo a conversion to `bstr`. \r\n\r\nI think I would prefer a definition of raw-value that puts both the value and the mask behind the same CBOR tag. But what is there is OK for now IMHO.",
              "createdAt": "2024-10-01T21:20:18Z",
              "updatedAt": "2024-10-01T21:21:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LkEpw",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T21:25:22Z",
          "updatedAt": "2024-10-01T21:25:22Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "> `raw-value` MUST be either a `bstr` or `tagged-bytes`.\r\n\r\nThe CDDL says the only `$raw-value-type-choice` defined is `tagged-bytes`. `bstr` only isn't defined.",
              "createdAt": "2024-10-01T21:25:22Z",
              "updatedAt": "2024-10-01T21:25:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LkFdA",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T21:27:46Z",
          "updatedAt": "2024-10-01T21:27:46Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": ">the lengths of the condition `raw-value` `bstr`, condition `raw-value-mask`, and the candidate `raw-value` `bstr` are equal.\r\n\r\nIs the \"candidate\" the same as the ACS entry? If so, it would be more intuitive to say  ACS entry.",
              "createdAt": "2024-10-01T21:27:46Z",
              "updatedAt": "2024-10-01T21:29:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LkJJ2",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T21:39:48Z",
          "updatedAt": "2024-10-01T21:39:53Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": ">> When a new raw value type is defined, the convention for applying the mask is also defined. Typically, a CoRIM profile is used to define new raw values and mask semantics.\r\n\r\n>I disagree with this. The semantics of a standard codepoint should not be open to interpretation. A profile that wants nonstandard semantics needs to use a nonstandard codepoint.\r\n\r\nThe extension point in `raw-value` isn't \"non-standard\" in that the CBOR tagging means there is a specification that defines the semantics of the structure. Nevertheless, the asymmetry of the extensibility seems awkward. Maybe an improvement is a mask type that puts both the value and the mask behind the same CBOR tag? But the convention for extensibility is the CBOR tag definition specifies the convention for representing both the value and the mask as well as the convention for converting the value and mask to a bstr.",
              "createdAt": "2024-10-01T21:39:48Z",
              "updatedAt": "2024-10-01T21:39:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LkdVV",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T22:49:09Z",
          "updatedAt": "2024-10-01T22:49:09Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "> > `raw-value` MUST be either a `bstr` or `tagged-bytes`.\r\n> \r\n> The CDDL says the only `$raw-value-type-choice` defined is `tagged-bytes`. `bstr` only isn't defined.\r\n\r\nYes, I included `bstr` to allow for a profile to specify it as an extension and to avoid footguns if a CoRIM issuer forgets the 560 tag on something that is reasonably expected to always be bytes. There are enough instances of x509 extensions that don't add the ASN.1 bytes tag byte in front of a byte string despite not strictly following the x509 spec for extensions that the value also needs to be an ASN.1 object that I accounted for that here. Might be overly cautious.\r\n\r\n> Is the \"candidate\" the same as the ACS entry? If so, it would be more intuitive to say ACS entry.\r\n\r\nThe \"candidate\" word is to reference the induction variable for the iteration over all possible ACS entries. It helps disambiguate which entry we're talking about.",
              "createdAt": "2024-10-01T22:49:09Z",
              "updatedAt": "2024-10-01T22:49:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGvAo",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:49:56Z",
          "updatedAt": "2024-10-06T17:49:56Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@andrew-draper how disruptive is it to drop raw-value-mask in favor of a tagged-masked-bytes choice in raw-value-type-choice?\r\n\r\n```\r\ntagged-masked-bytes = 563([data: bstr, mask: bstr])\r\n```\r\n\r\nI do wonder if that's a little cheaty, since $raw-value-type-choice extended by a profile is not permitted to define its own comparison method.",
              "createdAt": "2024-10-06T17:49:56Z",
              "updatedAt": "2024-10-07T02:12:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MNeed",
          "commit": {
            "abbreviatedOid": "73d0726"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T15:48:55Z",
          "updatedAt": "2024-10-07T15:48:55Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> tagged-masked-bytes = 563([data: bstr, mask: bstr])\r\n\r\nFrom the perspective of moving the Intel profile to a standard representation. This approach would be easier as the Intel profile already defines something similar:\r\n```\r\nmask-eq = 1\r\nmask-operator = mask-eq\r\nmask-type = bstr\r\nmask-expression = [ mask-operator, value: mask-type, mask: mask-type ]\r\ntagged-mask-expression = #6.60010( mask-expression )\r\n```\r\nI could see the following being easier to migrate to than the current raw-value:\r\n```\r\nmask-expression = [ mask-operator, 563([ data: bstr, mask: bstr]) ]\r\ntagged-mask-expression = #6.60010( mask-expression )\r\n```\r\nIn terms of disruptiveness, we should deprecate before deleting. Maybe the corim spec could add a second masked value type while discouraging use of raw-value?",
              "createdAt": "2024-10-07T15:48:55Z",
              "updatedAt": "2024-10-07T15:48:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 296,
      "id": "PR_kwDOH6-tI859UPS7",
      "title": "ECT table readability improvements - Fixes issue #287",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/296",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Updated ECT requirements tables for internal representations of conceptual messages to use human readable table elements.\r\n\r\nNote: the new table format allows for n/a in addition to Mandatory and Optional. \r\n\r\nFixes issue #287 ",
      "createdAt": "2024-10-01T23:41:09Z",
      "updatedAt": "2024-10-04T15:38:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "73520350a6f9e8e5647370ca07ad14d1e71fc223",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "fix-issue-287",
      "headRefOid": "0e1a6db0901310abf0e448dcc95d3a85ea7ed186",
      "closedAt": "2024-10-04T15:38:06Z",
      "mergedAt": "2024-10-04T15:38:06Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "a4baa72f54be439ded2f4e9e7492cbde027a697c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86LliGV",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T04:13:14Z",
          "updatedAt": "2024-10-02T04:35:07Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Why can't authority be optional here to allow for further narrowing of allowed authorities based on the elements?\r\n\r\nWe're not talking about matching only a single ECT at a time, since we have [ + ECT ] in both selection and condition, so we're always just narrowing the pool, and if the pool is becomes empty, we short-circuit and try the next in the series.\r\n",
              "createdAt": "2024-10-02T04:20:41Z",
              "updatedAt": "2024-10-02T04:35:07Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n|           | `cm type`       | Mandatory (2)  |\r\n```\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/297\r\n\r\nShall we prescribe the cmtype based on the internal representation?\r\n\r\nReference values' cmtype must be 0. Endorsed values and conditional endorsed value additions must be 1. Policy must be 5...?",
              "createdAt": "2024-10-02T04:34:53Z",
              "updatedAt": "2024-10-02T04:35:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LmLEH",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM modulo some typographic alignment between the tables and ECT definition",
          "createdAt": "2024-10-02T07:15:37Z",
          "updatedAt": "2024-10-02T07:28:36Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "match ECT defs\r\n\r\n```suggestion\r\n|           | `element-list` | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:15:37Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 14,
              "body": "match ECT defs\r\n\r\n```suggestion\r\n|           | `cmtype`        | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:15:49Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 31,
              "body": "ditto\r\n\r\n```suggestion\r\n|           | `element-list` | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:23:50Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 33,
              "body": "ditto\r\n\r\n```suggestion\r\n|           | `cmtype`        | n/a         |\r\n```",
              "createdAt": "2024-10-02T07:24:09Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n|           | `element-list`  | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:24:32Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n|           | `cmtype`        | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:24:40Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n|           | `element-list`  | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:25:03Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\n|           | `cmtype`        | n/a         |\r\n```",
              "createdAt": "2024-10-02T07:25:11Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n|           | `element-list`  | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:25:21Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 63,
              "body": "```suggestion\r\n|           | `cmtype`        | n/a         |\r\n```",
              "createdAt": "2024-10-02T07:25:31Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\n|           | `element-list`  | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:25:56Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n|           | `cmtype`        | Mandatory   |\r\n```",
              "createdAt": "2024-10-02T07:26:06Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n| condition | `environment`   | Optional    |\r\n|           | `element-list`  | Optional    |\r\n|           | `authority`     | Optional    |\r\n|           | `cmtype`        | n/a         |\r\n|           | `profile`       | n/a         |\r\n| addition  | `environment`   | Mandatory   |\r\n|           | `element-list`  | Mandatory   |\r\n|           | `authority`     | Mandatory   |\r\n|           | `cmtype`        | Mandatory   |\r\n|           | `profile`       | Optional    |\r\n```",
              "createdAt": "2024-10-02T07:26:35Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            },
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n| acs-condition | `environment`   | Optional    |\r\n|               | `element-list`  | Optional    |\r\n|               | `authority`     | Optional    |\r\n|               | `cmtype`        | n/a         |\r\n|               | `profile`       | n/a         |\r\n| ars-addition  | `environment`   | Mandatory   |\r\n|               | `element-list`  | Mandatory   |\r\n|               | `authority`     | Mandatory   |\r\n|               | `cmtype`        | Mandatory   |\r\n|               | `profile`       | Optional    |\r\n```",
              "createdAt": "2024-10-02T07:27:38Z",
              "updatedAt": "2024-10-02T07:28:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LplIJ",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T13:23:07Z",
          "updatedAt": "2024-10-02T13:23:08Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Good point. Are there any disadvantages to render authority an optional item here?",
              "createdAt": "2024-10-02T13:23:08Z",
              "updatedAt": "2024-10-02T13:23:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LrSRr",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T15:48:43Z",
          "updatedAt": "2024-10-02T15:48:43Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> #297\r\n> \r\n> Shall we prescribe the cmtype based on the internal representation?\r\n\r\nYes. \r\n\r\n> \r\n> Reference values' cmtype must be 0. Endorsed values and conditional endorsed value additions must be 1. Policy must be 5...?\r\n\r\nI don't think I follow. The table is saying the internal representation will populate cmtype. The structure of cm-type is defined in the ECT definition section.",
              "createdAt": "2024-10-02T15:48:43Z",
              "updatedAt": "2024-10-02T15:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LrXWS",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T15:58:17Z",
          "updatedAt": "2024-10-02T15:58:17Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I marked it n/a based on the expectation that the selection is a subset of the results of the condition match. If authority is a constraint in the condition, applying an authority constraint again would be idempotent (I think). Is there a use case where applying an authority constraint in the selection would produce different results from it having been applied in the condition?\r\n\r\nAlternatively, the internal representation could take the path that the selection context is not constrained by the condition. In which case, the selection environment, elements, and authority are mandatory. When mapping the series triple where the selection depends on the condition, the dependent parts will be copied into the selection to produce a seemingly redundant representation. ",
              "createdAt": "2024-10-02T15:58:17Z",
              "updatedAt": "2024-10-02T15:58:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lu2GR",
          "commit": {
            "abbreviatedOid": "3601c06"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-02T23:09:20Z",
          "updatedAt": "2024-10-02T23:09:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Lvk7M",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T02:07:29Z",
          "updatedAt": "2024-10-03T02:07:30Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I don't believe it will be idempotent if you have a common condition that mkey 0 has measurements signed by X, but you have mkey 1 signed by Y, Z, or W leading to different outcomes.",
              "createdAt": "2024-10-03T02:07:29Z",
              "updatedAt": "2024-10-03T02:07:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L2mCn",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T17:53:49Z",
          "updatedAt": "2024-10-03T17:53:49Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/296/commits/4ab1661542186dde9ffe322d5b4a21e7089221fd changed selection environment to mandatory and selection authority to optional.\r\n\r\nThe current transformation text for series triple already populates environment but ignores authority since a use case for it is not known to exist.",
              "createdAt": "2024-10-03T17:53:49Z",
              "updatedAt": "2024-10-03T17:53:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L42dQ",
          "commit": {
            "abbreviatedOid": "046838d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T01:35:08Z",
          "updatedAt": "2024-10-04T01:35:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I think your transformation PR accounts for the values to populate cmtype with.",
              "createdAt": "2024-10-04T01:35:08Z",
              "updatedAt": "2024-10-04T01:35:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L42hf",
          "commit": {
            "abbreviatedOid": "4ab1661"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T01:35:31Z",
          "updatedAt": "2024-10-04T01:35:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L5IZW",
          "commit": {
            "abbreviatedOid": "4ab1661"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGMT, thanks.\r\n\r\nI have an idea for improving the presentation in each subsection.  No change content-wise, just a slight rearrangement of the typographic elements. I will push a change on top of this.",
          "createdAt": "2024-10-04T03:04:30Z",
          "updatedAt": "2024-10-04T03:04:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L7gw0",
          "commit": {
            "abbreviatedOid": "0e1a6db"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Good improvement, I think, we should merge the PR now!",
          "createdAt": "2024-10-04T09:47:53Z",
          "updatedAt": "2024-10-04T15:19:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 299,
      "id": "PR_kwDOH6-tI859ahuB",
      "title": "Conditional endorsement transformations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/299",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Addresses issues #285 and #297.\r\nResolution of issue #303 may impact sections touched by this PR.",
      "createdAt": "2024-10-02T18:42:27Z",
      "updatedAt": "2024-10-09T14:10:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "d9eb620c2eb5522d28a674cf4e7b53edea5e23ae",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "Cond-End-Trans-text",
      "headRefOid": "38d27775e00b8736f2aa66cc5aa30589d4ab5601",
      "closedAt": "2024-10-09T14:09:58Z",
      "mergedAt": "2024-10-09T14:09:58Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "3c9f80e8246af5661981e1b8e1a511403cbd7585"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe all the open issues have been addressed or dispositioned to an issue (and tracked using issue tracker annotations). \r\n\r\nOK to merge?",
          "createdAt": "2024-10-04T23:20:11Z",
          "updatedAt": "2024-10-04T23:20:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/299/commits/50b232a281e865fa0c0e7949175c3e1dab28a28e aims to address blocking issues.",
          "createdAt": "2024-10-08T19:24:25Z",
          "updatedAt": "2024-10-08T19:24:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86LuzB1",
          "commit": {
            "abbreviatedOid": "651b813"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-02T23:04:44Z",
          "updatedAt": "2024-10-02T23:04:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "After commuting my change, PR #276, I realised we need to work on Conditional Endorsement Triple.\r\n\r\nThe subject is a Series of `stateful-environment-record` \r\n\r\nHowever the predicate should be a series of `measurement-map` NOT a series of Endorsement triples, as the Environment simply does not make sense in the predicate,",
              "createdAt": "2024-10-02T23:04:44Z",
              "updatedAt": "2024-10-02T23:04:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Luzza",
          "commit": {
            "abbreviatedOid": "651b813"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See my comment, perhaps it has a bearing on this PR as well.",
          "createdAt": "2024-10-02T23:05:45Z",
          "updatedAt": "2024-10-02T23:05:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LvHb0",
          "commit": {
            "abbreviatedOid": "651b813"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T00:02:45Z",
          "updatedAt": "2024-10-03T00:02:45Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I don't think topological sorting is going to be a complete solution as profiles get more and more complex. We should be computing a fixed point. The ordering of conditions may not be easily decided, but if it is, then we can suggest a topological sort to improve convergence speed.",
              "createdAt": "2024-10-03T00:02:45Z",
              "updatedAt": "2024-10-03T00:02:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LvWUq",
          "commit": {
            "abbreviatedOid": "651b813"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T00:35:39Z",
          "updatedAt": "2024-10-03T00:35:39Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "See revised text.",
              "createdAt": "2024-10-03T00:35:39Z",
              "updatedAt": "2024-10-03T00:35:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86LvWXq",
          "commit": {
            "abbreviatedOid": "651b813"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T00:35:57Z",
          "updatedAt": "2024-10-03T00:35:58Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "See revised text.",
              "createdAt": "2024-10-03T00:35:58Z",
              "updatedAt": "2024-10-03T00:35:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Lvfom",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T01:33:58Z",
          "updatedAt": "2024-10-03T01:59:47Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nTo process a `endorsed-triple-record` the `condition` is compared with entries from the ACS.\r\n```",
              "createdAt": "2024-10-03T01:33:58Z",
              "updatedAt": "2024-10-03T01:59:47Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n* `condition`: Search criteria applied to the ACS that determines if the `endorsement` applies.\r\n```",
              "createdAt": "2024-10-03T01:34:15Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n* `conditions`: Search criteria applied to the ACS that determines if the `endorsements` apply.\r\n```",
              "createdAt": "2024-10-03T01:34:47Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n* `condition`: Search criteria applied to the ACS that determines if the `series` applies.\r\n```",
              "createdAt": "2024-10-03T01:35:13Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nTo process a `conditional-endorsement-series-record`, first the `condition` is compared with entries from the ACS.\r\n```",
              "createdAt": "2024-10-03T01:35:51Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 210,
              "body": "I didn't think order would matter, given that mkey is the distinguishing feature, and not the position in the element-list.",
              "createdAt": "2024-10-03T01:42:20Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 246,
              "body": "I know the words aren't new in this PR, but what does it mean for the `ev` entry to be \"available\"? I don't think we need to talk about allocation behavior. Are we not simply populating the appraisal context with this triple as one to be processed against the ACS?",
              "createdAt": "2024-10-03T01:46:17Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 357,
              "body": "Iterating through the entries with `cmtype` is `endorsement`? There's no relation entries of the ACS, and there's no ev in an evs. This sentence confuses me.",
              "createdAt": "2024-10-03T01:56:32Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 315,
              "body": "Can one party's reference values not be for another party's endorsements?",
              "createdAt": "2024-10-03T01:56:49Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            },
            {
              "originalPosition": 339,
              "body": "The \"`ev` list\" I think needs to be more explicitly understood as the collection in the appraisal context I think. Same for `evs` below?",
              "createdAt": "2024-10-03T01:59:43Z",
              "updatedAt": "2024-10-03T01:59:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L1rRG",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T16:33:41Z",
          "updatedAt": "2024-10-03T16:35:51Z",
          "comments": [
            {
              "originalPosition": 315,
              "body": "> Can one party's reference values not be for another party's endorsements?\r\n\r\nStructurally, that would be reasonable since both Evidence and Endorsements are expressions of actual state. However, I don't know why it is necessary to model a condition on endorsements using RVs since a conditional endorsement condition could be expressed using possible-state expressions. I'll review the current wording, but I believe the cmtype usage is specific to the addition ECTs and silent on the condition ECTs. ",
              "createdAt": "2024-10-03T16:33:41Z",
              "updatedAt": "2024-10-03T16:35:51Z"
            },
            {
              "originalPosition": 357,
              "body": "It looks like a typo.",
              "createdAt": "2024-10-03T16:35:41Z",
              "updatedAt": "2024-10-03T16:35:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L1tsg",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T16:38:43Z",
          "updatedAt": "2024-10-03T16:38:44Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "All of the conditions could be compared unless one of them matches.",
              "createdAt": "2024-10-03T16:38:43Z",
              "updatedAt": "2024-10-03T16:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L1z_Z",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T16:52:04Z",
          "updatedAt": "2024-10-03T16:52:04Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "> I didn't think order would matter, given that mkey is the distinguishing feature, and not the position in the element-list.\r\n\r\nThe processing sections pay attention to mkey semantics. This is saying that the transformation isn't expected to change position semantics. It may be harmless but it's not my intention to do that here.\r\n\r\nThere is a yet-to-be-discussed issue regarding what the processing requirements are if mkey is omitted and multiples of measurement-map exist. The CDDL permits this. I think it's reasonable for the verifier use array position to disambiguate. The RIM author decides which approach is better. Otherwise, we have to put normative next banning this condition.",
              "createdAt": "2024-10-03T16:52:04Z",
              "updatedAt": "2024-10-03T16:52:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L10S-",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T16:52:44Z",
          "updatedAt": "2024-10-03T16:52:44Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "Maybe it's ok to remove it?",
              "createdAt": "2024-10-03T16:52:44Z",
              "updatedAt": "2024-10-03T16:52:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L2MSu",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T17:22:54Z",
          "updatedAt": "2024-10-03T17:22:54Z",
          "comments": [
            {
              "originalPosition": 315,
              "body": "Added an issue and tracking annotation.",
              "createdAt": "2024-10-03T17:22:54Z",
              "updatedAt": "2024-10-03T17:22:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L2XTC",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T17:33:43Z",
          "updatedAt": "2024-10-03T17:33:43Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Issue #303 created and tracking annotations added.",
              "createdAt": "2024-10-03T17:33:43Z",
              "updatedAt": "2024-10-03T17:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L2Yoc",
          "commit": {
            "abbreviatedOid": "e8ff50e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T17:35:00Z",
          "updatedAt": "2024-10-03T17:35:00Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "whitespace fix applied",
              "createdAt": "2024-10-03T17:35:00Z",
              "updatedAt": "2024-10-03T17:35:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L3LgD",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T19:09:05Z",
          "updatedAt": "2024-10-03T19:09:05Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "Why put in a quote block when that's not what we do elsewhere?",
              "createdAt": "2024-10-03T19:09:05Z",
              "updatedAt": "2024-10-03T19:09:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L3OH5",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T19:15:32Z",
          "updatedAt": "2024-10-03T19:15:33Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "If we allow reference value triples to apply to endorsed measurements, then the `rv` relation is the same as the `ev` relation. I would say we don't need it.",
              "createdAt": "2024-10-03T19:15:32Z",
              "updatedAt": "2024-10-03T19:15:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L3eXz",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T19:50:59Z",
          "updatedAt": "2024-10-03T19:50:59Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "> Why put in a quote block when that's not what we do elsewhere?\r\n\r\nThat is what was there already. The previous section also uses similar formatting. BTW It isn't a quote block it is markdown for indentation.",
              "createdAt": "2024-10-03T19:50:59Z",
              "updatedAt": "2024-10-03T19:50:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L3k1A",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T20:07:04Z",
          "updatedAt": "2024-10-03T20:07:04Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "CoRIM is written from the perspective that is laid out by RFC9334 where the roles of Reference Value Provider and Endorser differ. The interaction between RVPs, Attesters and RPs is meaningful because of the conceptual messages they exchange. There isn't the notion of a role credential. The result of an RVP-Attester interaction is \"corroborated\" Ref Values that have cmtype=`reference` but is an \"actual state\" representation in the ACS. If an Endorser constructed an endorsement rule that produced a record with the same claims as a corroborated RV contains, it would still be an Endorsement. RFC9334 expects RPs will differentiate between the roles and will be looking for statements from RVPs regarding acceptability of Evidence vs. a similar construction from Endorsers.",
              "createdAt": "2024-10-03T20:07:04Z",
              "updatedAt": "2024-10-03T20:07:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L4lRo",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T00:10:42Z",
          "updatedAt": "2024-10-04T00:10:42Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "I understand that the roles are different, but the behavior of `rv` as an internal representation can easily be expressed as `ev` since you're already populating the additions with the appropriate `cmtype`. That's all I was saying.",
              "createdAt": "2024-10-04T00:10:42Z",
              "updatedAt": "2024-10-04T00:10:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L7y0I",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "What a tour de force!  Excellent stuff.\r\n\r\nShip it! mod(tiny editorial comments inlined)",
          "createdAt": "2024-10-04T10:26:17Z",
          "updatedAt": "2024-10-04T12:06:19Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n* `ref-env`: Search criteria that target Evidence environments in the ACS.\r\n* `ref-claims`: Search criteria that target Evidence Claims in the ACS.\r\n```",
              "createdAt": "2024-10-04T10:26:17Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n* `condition`: Search criteria applied to the ACS that determine if the `endorsement` applies.\r\n* `endorsement`: Claims to be added to the ACS.\r\n```",
              "createdAt": "2024-10-04T10:30:05Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 52,
              "body": "Merge the two, unless we want to also introduce the \"Stateful Environment\" in prose.\r\n\r\n```suggestion\r\n~~~ cddl\r\n{::include cddl/conditional-endorsement-triple-record.cddl}\r\n\r\n{::include cddl/stateful-environment-record.cddl}\r\n~~~\r\n```",
              "createdAt": "2024-10-04T11:51:35Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 72,
              "body": "ditto; no reason to keep the two separate.\r\n\r\n```suggestion\r\n~~~ cddl\r\n{::include cddl/conditional-endorsement-series-triple-record.cddl}\r\n\r\n{::include cddl/conditional-series-record.cddl}\r\n~~~\r\n```",
              "createdAt": "2024-10-04T11:55:04Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 81,
              "body": "missing full stop\r\n\r\n```suggestion\r\n* `selection`: Search criteria applied to the ACS entries resulting from the matched `conditions`.\r\n```",
              "createdAt": "2024-10-04T11:55:59Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 22,
              "body": "spurious NL\r\n\r\n```suggestion\r\nIf these conditions are met, the matching ACS entry is copied into a new ACS entry that is added to the ACS, but with the Reference Value Provider's authority.\r\n```",
              "createdAt": "2024-10-04T11:56:47Z",
              "updatedAt": "2024-10-04T12:06:19Z"
            },
            {
              "originalPosition": 91,
              "body": "spurious NLs\r\n\r\n```suggestion\r\nFor each `series` entry, if the `selection` matches an entry found in the `condition` result, the `series` `addition` is combined with the `environment-map` from the `condition` result to form a new ACS entry.\r\n```",
              "createdAt": "2024-10-04T11:57:41Z",
              "updatedAt": "2024-10-04T12:06:20Z"
            },
            {
              "originalPosition": 184,
              "body": "```suggestion\r\n> * The `cmtype` field is set based on the type of Conceptual Message inputted or to be output.\r\n```",
              "createdAt": "2024-10-04T12:00:35Z",
              "updatedAt": "2024-10-04T12:06:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L9t3C",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see comment on 1851",
          "createdAt": "2024-10-04T14:24:11Z",
          "updatedAt": "2024-10-04T14:24:22Z",
          "comments": [
            {
              "originalPosition": 195,
              "body": "i think the environment map of the `endorsed-triple-record` is the environment to which the Endorsement applies.\r\n\r\nIt should reside, where the addition ECT, i.e. place where the stuff gets added as Endorsement exist",
              "createdAt": "2024-10-04T14:24:12Z",
              "updatedAt": "2024-10-04T14:24:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L9vU2",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T14:26:46Z",
          "updatedAt": "2024-10-04T14:26:47Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nTo process `reference-triple-record` both the `ref-env` and `ref-claims` are compared with evidence entries from the ACS.\r\n```",
              "createdAt": "2024-10-04T14:26:47Z",
              "updatedAt": "2024-10-04T14:26:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L-g2A",
          "commit": {
            "abbreviatedOid": "200a962"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T16:03:38Z",
          "updatedAt": "2024-10-04T16:03:38Z",
          "comments": [
            {
              "originalPosition": 195,
              "body": "I'm not seeing where the issue is. The text seems fine to me since \"the ECT\" refers to the addition ECT that corresponds to an entry in the conditional endorsement triple's `endorsements` array.",
              "createdAt": "2024-10-04T16:03:38Z",
              "updatedAt": "2024-10-04T16:03:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCG7m",
          "commit": {
            "abbreviatedOid": "0f4e73b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T23:18:33Z",
          "updatedAt": "2024-10-04T23:18:33Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "> I understand that the roles are different, but the behavior of `rv` as an internal representation can easily be expressed as `ev` since you're already populating the additions with the appropriate `cmtype`. That's all I was saying.\r\n\r\nThe internal representation is primarily there to facilitate readability. Having distinct representations for the various conceptual message types keeps the text inside the conceptual message swim lanes. It's a style thing more than an optimization thing.",
              "createdAt": "2024-10-04T23:18:33Z",
              "updatedAt": "2024-10-04T23:18:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCHye",
          "commit": {
            "abbreviatedOid": "0200d77"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T23:26:29Z",
          "updatedAt": "2024-10-04T23:26:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MOmr0",
          "commit": {
            "abbreviatedOid": "41c3213"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T18:16:59Z",
          "updatedAt": "2024-10-07T18:17:13Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\n* If the Endorsement conceptual message has a profile, the profile identifier is copied to the `ev` `addition` ECT `profile` field.\r\n```",
              "createdAt": "2024-10-07T18:16:59Z",
              "updatedAt": "2024-10-07T18:17:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MO5Op",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Please review this aspect, I am not sure why this section on Ref - Triples needs a re-jig",
          "createdAt": "2024-10-07T18:58:58Z",
          "updatedAt": "2024-10-07T18:59:35Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "This seems to be a significant shift in the earlier description of the triple! The triple semantics should not require us to describe where the triple is targeted to internally, in the description of the triple.\r\n\r\nIt should simply say:\r\n\r\nWhat this triple is about :\r\nWhat does it convey\r\ni.e it conveys for a target Env identified by the Env: The Reference measurements identified by ref-claims\r\n\r\nit should not expain anything about the ACS here",
              "createdAt": "2024-10-07T18:58:58Z",
              "updatedAt": "2024-10-07T18:59:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MO_n9",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:13:23Z",
          "updatedAt": "2024-10-07T19:13:23Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "This section should say:\r\n--> What triple is intended to convey\r\n\r\nVersus, \r\n\r\nWhat CoRIM spec is guiding users to use a possible internal representation in terms of ACS.\r\n\r\nThis document should be very much applicable and usable to some Supply Chain Consumers, who want to use the Triple based on their semantics but do NOT use Verifier logic which uses ACS but have another means to process the Triple and Implement a Verifier.\r\n\r\nI am little concerned that we have moved ACS and internal representation far too much into the base triple description.",
              "createdAt": "2024-10-07T19:13:23Z",
              "updatedAt": "2024-10-07T19:13:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MPD1Y",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:23:17Z",
          "updatedAt": "2024-10-07T19:23:17Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Separate comment: I am not sure I know how to parse that sentence. Quick help: what's an \"Evidence environment\"? I assume I am missing something obvious here.",
              "createdAt": "2024-10-07T19:23:17Z",
              "updatedAt": "2024-10-07T19:23:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MPE1J",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:25:17Z",
          "updatedAt": "2024-10-07T19:25:18Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "> Separate comment: I am not sure I know how to parse that sentence. Quick help: what's an \"Evidence environment\"? I assume I am missing something obvious here.\r\n\r\nIs it more clear to just say: \"Search criteria that targets Evidence.\"",
              "createdAt": "2024-10-07T19:25:17Z",
              "updatedAt": "2024-10-07T19:25:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MPF49",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:27:24Z",
          "updatedAt": "2024-10-07T19:27:24Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Is it more clear to say: \"Search criteria that targets Attester state.\"",
              "createdAt": "2024-10-07T19:27:24Z",
              "updatedAt": "2024-10-07T19:27:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MTCoq",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:36:03Z",
          "updatedAt": "2024-10-08T08:36:03Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think we should not shy away from the mechanics here, i.e., linking triples and ACS, because it is necessary for the reader to understand the connection between the two. However, it makes sense to transition from abstract to practical in a smoother way.",
              "createdAt": "2024-10-08T08:36:03Z",
              "updatedAt": "2024-10-08T08:36:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MTPAO",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:52:56Z",
          "updatedAt": "2024-10-08T08:52:57Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "@thomas-fossati : I tend to dis-agree: I see the clear distinction as below:\r\n\r\nTriple should describe what it is meant for : For Ref Triple, used to convey Ref values\r\nfor the Env in subject with Reference Measurements/claims in the object. These measurements are used by Verifier to match against the same measurements as received from Attester in Evidence. One possible way of converting these measurements internally and matching logics are described in section : XYZ:\r\n\r\n_In another section (XYZ outside this section)_ \r\nHow a potential one use of the triple by converting into a representation best use for matching is where ACS comes into picture!",
              "createdAt": "2024-10-08T08:52:57Z",
              "updatedAt": "2024-10-08T08:52:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MTQjZ",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:55:31Z",
          "updatedAt": "2024-10-08T08:55:31Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "> Is it more clear to say: \"Search criteria that targets Attester state.\"\r\n\r\nYes, at high level, it is fine to say something about matching with Attester Evidence claims ",
              "createdAt": "2024-10-08T08:55:31Z",
              "updatedAt": "2024-10-08T08:55:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXogc",
          "commit": {
            "abbreviatedOid": "9f92c09"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T16:31:04Z",
          "updatedAt": "2024-10-08T16:31:04Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Would this be still correct?\r\n```suggestion\r\n* `ref-env`: Search criteria that select certain Evidence Claims in the ACS.\r\n```",
              "createdAt": "2024-10-08T16:31:04Z",
              "updatedAt": "2024-10-08T16:31:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZGbu",
          "commit": {
            "abbreviatedOid": "50b232a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T19:46:27Z",
          "updatedAt": "2024-10-08T19:46:28Z",
          "comments": [
            {
              "originalPosition": 404,
              "body": "```suggestion\r\n: {{sec-sec}} of {{&SELF}}\r\n```",
              "createdAt": "2024-10-08T19:46:28Z",
              "updatedAt": "2024-10-08T19:46:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZKUv",
          "commit": {
            "abbreviatedOid": "50b232a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T19:55:53Z",
          "updatedAt": "2024-10-08T19:55:53Z",
          "comments": [
            {
              "originalPosition": 397,
              "body": "This line can be removed.  The section is still empty, it's unclear what this text refers to.\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-10-08T19:55:53Z",
              "updatedAt": "2024-10-08T19:55:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZNE8",
          "commit": {
            "abbreviatedOid": "06b4b39"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T20:02:18Z",
          "updatedAt": "2024-10-08T20:02:18Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "envidence [etc] _environment_, if we want to keep this consistent with RVT above",
              "createdAt": "2024-10-08T20:02:18Z",
              "updatedAt": "2024-10-08T20:02:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZgzl",
          "commit": {
            "abbreviatedOid": "06b4b39"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T20:44:08Z",
          "updatedAt": "2024-10-08T20:44:08Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "> envidence [etc] _environment_, if we want to keep this consistent with RVT above\r\n\r\nAddressed by commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/299/commits/31bc933253de02567f3c9dc184771be189436f6e",
              "createdAt": "2024-10-08T20:44:08Z",
              "updatedAt": "2024-10-08T20:44:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZpnw",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:04:25Z",
          "updatedAt": "2024-10-08T21:04:25Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Much better text than earlier, however I would add your text on top of the old text purely for simplicity and logical enhancement. I suggest please re-consider this way.",
              "createdAt": "2024-10-08T21:04:25Z",
              "updatedAt": "2024-10-08T21:04:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZqi1",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:06:46Z",
          "updatedAt": "2024-10-08T21:06:46Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nA Reference Values triple relates reference measurements to a Target\r\nEnvironment. For Reference Value Claims, the subject identifies a Target\r\nEnvironment, i.e ref-env, the object contains measurements, i.e. ref-claims, and the predicate asserts that\r\nthese are the expected (i.e., reference) measurements for the Target Environment.\r\n\r\nWithin a Verifier, they are used as under:\r\n\r\n`ref-env`: Search criterion to locate an Evidence environment that matches the reference environment.\r\n* `ref-claims`: Search criteria to locate the Evidence measurements that match the reference Claims.\r\n\r\nTo process `reference-triple-record` both the `ref-env` and `ref-claims` criteria are compared with Evidence entries.\r\nIf the search criteria are satisfied, the matching entry is re-asserted, except with the Reference Value Provider's authority.\r\nBy re-asserting Evidence using the RVP's authority, the Verifier can avoid mixing Reference Values (reference state) with Evidence (actual state).\r\nSee {{-rats-endorsements}}.\r\nRe-asserted Evidence using RVP authority is said to be \"corroborated\".\r\n\r\n```",
              "createdAt": "2024-10-08T21:06:46Z",
              "updatedAt": "2024-10-08T21:06:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZq1O",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See my slightly simple expression of logical connectivity.!",
          "createdAt": "2024-10-08T21:07:33Z",
          "updatedAt": "2024-10-08T21:07:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MZrs3",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:10:01Z",
          "updatedAt": "2024-10-08T21:10:01Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n\r\nThe `endorsed-triple-record` conveys additional Endorsements claims for a Target Environment   to a Verifier.\r\n\r\nThe `endorsed-triple-record` has the following parameters:\r\n```",
              "createdAt": "2024-10-08T21:10:01Z",
              "updatedAt": "2024-10-08T21:10:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZsYH",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! Still a lot of work needs to be done to explain the Triples in a\r\n\r\n1. Simple and Logical Language.\r\n2. Do not want to block the pull request hence approving it for a possible merge tomorrow!\r\n",
          "createdAt": "2024-10-08T21:11:55Z",
          "updatedAt": "2024-10-08T21:11:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MZt9x",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:16:25Z",
          "updatedAt": "2024-10-08T21:16:25Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Raised issue #310 to address the issue and concerns I have!",
              "createdAt": "2024-10-08T21:16:25Z",
              "updatedAt": "2024-10-08T21:16:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZuD4",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:16:42Z",
          "updatedAt": "2024-10-08T21:16:42Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Raised issue #310 to address the concern I have!",
              "createdAt": "2024-10-08T21:16:42Z",
              "updatedAt": "2024-10-08T21:16:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZuQH",
          "commit": {
            "abbreviatedOid": "872c2c6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Issue #310 raised to address my concerns, hence now un-blocking the PR",
          "createdAt": "2024-10-08T21:17:18Z",
          "updatedAt": "2024-10-08T21:17:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MgUty",
          "commit": {
            "abbreviatedOid": "38d2777"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-09T14:09:19Z",
          "updatedAt": "2024-10-09T14:09:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MgU2G",
          "commit": {
            "abbreviatedOid": "38d2777"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-09T14:09:30Z",
          "updatedAt": "2024-10-09T14:09:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 300,
      "id": "PR_kwDOH6-tI859bpvs",
      "title": "Add parentheses surrounding cross-references",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/300",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Updates section and table references that don't have surrounding parens.\r\n\r\nSee issue #286",
      "createdAt": "2024-10-02T22:36:02Z",
      "updatedAt": "2024-10-04T15:17:48Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "fca60ed0e3f4cca2c7e3a790dfe2847f0cc58dd8",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "parens-in-cross-references",
      "headRefOid": "49b32a08563bf900eeb482336daf44afe600293d",
      "closedAt": "2024-10-04T15:17:45Z",
      "mergedAt": "2024-10-04T15:17:45Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "73520350a6f9e8e5647370ca07ad14d1e71fc223"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "See if commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/300/commits/1372934797b8e6ca7018730564e1a430a74fe8f4 addresses your concerns.",
          "createdAt": "2024-10-03T21:54:15Z",
          "updatedAt": "2024-10-03T21:54:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> See if commit [1372934](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/commit/1372934797b8e6ca7018730564e1a430a74fe8f4) addresses your concerns.\r\n\r\nThanks for the changes!",
          "createdAt": "2024-10-04T09:55:01Z",
          "updatedAt": "2024-10-04T09:55:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86Lu_w7",
          "commit": {
            "abbreviatedOid": "e8889d0"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-02T23:46:24Z",
          "updatedAt": "2024-10-02T23:46:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86LyZxd",
          "commit": {
            "abbreviatedOid": "e8889d0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-03T10:37:06Z",
          "updatedAt": "2024-10-03T10:37:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Ly_K9",
          "commit": {
            "abbreviatedOid": "e8889d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T11:53:54Z",
          "updatedAt": "2024-10-03T11:55:55Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "These look spurious.  They'd render as:\r\n\r\n> Described in (Section 1.2.3)\r\n\r\nwhich is not what we want.  Instead, they should read as:\r\n\r\n> Described in Section 1.2.3.\r\n",
              "createdAt": "2024-10-03T11:53:54Z",
              "updatedAt": "2024-10-03T11:55:55Z"
            },
            {
              "originalPosition": 121,
              "body": "ditto",
              "createdAt": "2024-10-03T11:54:12Z",
              "updatedAt": "2024-10-03T11:55:55Z"
            },
            {
              "originalPosition": 163,
              "body": "ditto",
              "createdAt": "2024-10-03T11:55:07Z",
              "updatedAt": "2024-10-03T11:55:55Z"
            },
            {
              "originalPosition": 181,
              "body": "ditto, and below too.",
              "createdAt": "2024-10-03T11:55:19Z",
              "updatedAt": "2024-10-03T11:55:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L7kRl",
          "commit": {
            "abbreviatedOid": "1372934"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T09:55:16Z",
          "updatedAt": "2024-10-04T09:55:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 301,
      "id": "PR_kwDOH6-tI859byKe",
      "title": "Remove unused references",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/301",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Three references were triggering \"unused ref\" warnings. Removed references and one sentence in a profile section that no longer applies.",
      "createdAt": "2024-10-02T22:59:50Z",
      "updatedAt": "2024-10-04T09:46:56Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "152b4d574a99d9512ee30d2a64258aee8ac04bdc",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "remove-unused-refs",
      "headRefOid": "ae2c11180d13008c27b1474f6573568133c1751d",
      "closedAt": "2024-10-04T09:46:53Z",
      "mergedAt": "2024-10-04T09:46:53Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "4049856b114bb08febdb689895435ec4bb101fe5"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes issue #280",
          "createdAt": "2024-10-02T23:00:15Z",
          "updatedAt": "2024-10-02T23:00:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86Lu0or",
          "commit": {
            "abbreviatedOid": "ae2c111"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-02T23:07:08Z",
          "updatedAt": "2024-10-02T23:07:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L7e6p",
          "commit": {
            "abbreviatedOid": "ae2c111"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-04T09:44:00Z",
          "updatedAt": "2024-10-04T09:44:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 304,
      "id": "PR_kwDOH6-tI859iQWv",
      "title": "Add DER certificate tag type",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/304",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CBOR is binary, so we shouldn't have to bloat up to base64 PEM encodings.",
      "createdAt": "2024-10-03T18:10:26Z",
      "updatedAt": "2024-10-04T15:09:45Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "4049856b114bb08febdb689895435ec4bb101fe5",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "asn1der",
      "headRefOid": "caf1ee982b2ba4fd344c060759c01884b5b4ac3d",
      "closedAt": "2024-10-04T15:09:45Z",
      "mergedAt": "2024-10-04T15:09:45Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "fca60ed0e3f4cca2c7e3a790dfe2847f0cc58dd8"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks!\r\n\r\nI forgot one more thing.  Each time we add a new tag request, we should also:\r\n```sh\r\nmake -C cddl cbor-tags.txt\r\n```\r\nto update the CBOR tags inventory (`cddl/cbor-tags.txt`).",
          "createdAt": "2024-10-04T01:22:26Z",
          "updatedAt": "2024-10-04T01:22:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for this change @deeglaze \r\n\r\n@henk, please review, we should make every effort to speed up reviews so that we do not only do that during the meeting.\r\n",
          "createdAt": "2024-10-04T09:04:19Z",
          "updatedAt": "2024-10-04T09:04:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86L27PB",
          "commit": {
            "abbreviatedOid": "e815eba"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T18:36:47Z",
          "updatedAt": "2024-10-03T18:36:47Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "We want to say this DER-encoded cert is `bstr`-wrapped.\r\n\r\nAlso, it looks like `cddl/crypto-key-type-choice.cddl` needs to be informed about this new type.",
              "createdAt": "2024-10-03T18:36:47Z",
              "updatedAt": "2024-10-03T18:36:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L4Ty2",
          "commit": {
            "abbreviatedOid": "e815eba"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T22:30:36Z",
          "updatedAt": "2024-10-03T22:30:37Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Done.",
              "createdAt": "2024-10-03T22:30:37Z",
              "updatedAt": "2024-10-03T22:30:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86L4YCI",
          "commit": {
            "abbreviatedOid": "73d5c38"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-03T22:52:39Z",
          "updatedAt": "2024-10-03T22:52:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L4-wn",
          "commit": {
            "abbreviatedOid": "caf1ee9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM, thanks!",
          "createdAt": "2024-10-04T02:24:18Z",
          "updatedAt": "2024-10-04T15:07:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L7Ham",
          "commit": {
            "abbreviatedOid": "caf1ee9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-04T09:03:36Z",
          "updatedAt": "2024-10-04T15:07:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 305,
      "id": "PR_kwDOH6-tI859olUW",
      "title": "Move contributors to front matter",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/305",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is an extraneous Contributors section that went unnoticed since there was also a typographical mistake that demoted the section heading to normal text.",
      "createdAt": "2024-10-04T15:07:26Z",
      "updatedAt": "2024-10-07T16:50:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a4baa72f54be439ded2f4e9e7492cbde027a697c",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "contrib",
      "headRefOid": "b85645bb5fa331620e82f0c2374096913c4527e6",
      "closedAt": "2024-10-07T16:50:03Z",
      "mergedAt": "2024-10-07T16:50:02Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "d9eb620c2eb5522d28a674cf4e7b53edea5e23ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86L-IBt",
          "commit": {
            "abbreviatedOid": "d55a5e5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I disagree with this PR.  Given the substantial and continuous contributions to the spec, both Dionna and Andy should be listed as co-authors rather than contributors.",
          "createdAt": "2024-10-04T15:11:47Z",
          "updatedAt": "2024-10-04T15:11:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L-dyb",
          "commit": {
            "abbreviatedOid": "b85645b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-04T15:56:47Z",
          "updatedAt": "2024-10-07T16:48:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86L-h3x",
          "commit": {
            "abbreviatedOid": "b85645b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I am OK with contributors (for now).\r\n\r\nI want to have the discussion with the RATS chairs in Dublin to allow >5 editors.",
          "createdAt": "2024-10-04T16:06:03Z",
          "updatedAt": "2024-10-07T16:48:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MN-kw",
          "commit": {
            "abbreviatedOid": "b85645b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks Dionna for the tidy up!",
          "createdAt": "2024-10-07T16:48:01Z",
          "updatedAt": "2024-10-07T16:48:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 306,
      "id": "PR_kwDOH6-tI859o5g2",
      "title": "Allow implicit environment for simple conditions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/306",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "Suggested by Yogesh\r\n\r\nWill need to be accounted for after PR#299.",
      "createdAt": "2024-10-04T15:58:57Z",
      "updatedAt": "2024-10-04T16:01:24Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a4baa72f54be439ded2f4e9e7492cbde027a697c",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "simplecond",
      "headRefOid": "6039d9d1134b636a702466414b593445caa132ad",
      "closedAt": "2024-10-04T16:01:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Meeting suggested this was too casey.",
          "createdAt": "2024-10-04T16:01:11Z",
          "updatedAt": "2024-10-04T16:01:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 307,
      "id": "PR_kwDOH6-tI859p2Su",
      "title": "Quantize inputs with a session initialization phase.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/307",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes Issue#242\r\n\r\nThe text already refers to an appraisal session and an appraisal context, but they are not introduced as concepts the same way the ACS is. Add Context and Session as specific constructs that serve distinct purposes.\r\n\r\nI think the \"CoRIMs are collected\" text is a bit too vague, so I put all input fetching in phase 0. Validation and transformation is in phase 1.\r\n\r\nI found it weird that Evidence Collection was not part of input gathering, so I've moved it.\r\n\r\nThis change clarifies the meaning of \"active\" and \"inactive\", and what \"requires CoBOMs\" means. It's just whether all available tags are included in the search space or only referenced ones are. A CoBOM is not a bundle of tags the way a CoRIM is. A CoBOM must reference tags that are already in the input set. It just flips them to being usable in the appraisal procedure.\r\n\r\nI did not provide CDDL for the session or context since I think that needs to be sequenced after PR#299.",
      "createdAt": "2024-10-04T18:15:56Z",
      "updatedAt": "2024-10-12T20:59:23Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "42bd6ae7e85bcee5da53f1ee91fc824e958836a6",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "quant",
      "headRefOid": "fa79af0efc31480492c79ba0dfe26b6d84e37d92",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I tried to build on local environment after installing mermaid-cli but still get errors. \r\nAlso, the branch seems to be significantly behind main - getting build warnings that have been fixed in main.",
          "createdAt": "2024-10-11T20:12:54Z",
          "updatedAt": "2024-10-11T20:12:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86MANmy",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Nice.",
          "createdAt": "2024-10-04T18:38:22Z",
          "updatedAt": "2024-10-04T18:56:42Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nConceptual messages may include Attestation Evidence, CoMID tags {{sec-comid}}, CoSWID tags {{-coswid}}, CoBOM tags ({{sec-cobom}}), and static cryptographic validation key material (including raw public keys, root certificates, intermediate CA certificate chains, and Concise Trust Anchor Stores (CoTS) {{-ta-store}}.\r\n```",
              "createdAt": "2024-10-04T18:38:22Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            },
            {
              "originalPosition": 59,
              "body": "I expect the Policy to be under the complete control of the Verifier Owner.\r\nHowever, auditability and traceability requirements may also be imposed by the external regulatory context.",
              "createdAt": "2024-10-04T18:44:12Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            },
            {
              "originalPosition": 63,
              "body": "OK, but this may or may not be an issue in practice.  \"Some\" clock skew is typically taken into account when comparing time bounds during validation.  I am not expecting Phase 0 and Phase 1 to be far apart enough to dwarf normal tolerances.",
              "createdAt": "2024-10-04T18:48:43Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            },
            {
              "originalPosition": 65,
              "body": "Again, this determination may be by verifier policy of other externally imposed regulations.",
              "createdAt": "2024-10-04T18:50:14Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nNo inputs other than dynamically-fetched information about certificate revocation status (see {{?RFC6960}}) may be collected in Phase 1.\r\n```",
              "createdAt": "2024-10-04T18:51:33Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            },
            {
              "originalPosition": 103,
              "body": "```suggestion\r\nThe Verifier chooses tags from the selected CoRIMs, including CoMID, CoSWID, CoBOM, and CoTS.\r\n```",
              "createdAt": "2024-10-04T18:55:30Z",
              "updatedAt": "2024-10-04T18:56:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MBERd",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T20:33:42Z",
          "updatedAt": "2024-10-04T20:33:42Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Yeah.. Ned's change to add parentheses didn't treat this one line consistently, and adding parens only for CoBOM seems weird, no?",
              "createdAt": "2024-10-04T20:33:42Z",
              "updatedAt": "2024-10-04T20:33:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MBErP",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T20:34:49Z",
          "updatedAt": "2024-10-04T20:34:50Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "Verifier Policy can be to follow regulations or not. I didn't want to add speculation about this spec going to regulators as a framework.",
              "createdAt": "2024-10-04T20:34:49Z",
              "updatedAt": "2024-10-04T20:34:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MBFsi",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T20:37:41Z",
          "updatedAt": "2024-10-04T20:37:41Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Sounds like you're saying I should allow for the wall clock input to also be collected multiple times during Phase 1? I'm just trying to temper all sources of external influence on the hermeticity of an appraisal.",
              "createdAt": "2024-10-04T20:37:41Z",
              "updatedAt": "2024-10-04T20:37:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MBFyy",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T20:38:02Z",
          "updatedAt": "2024-10-04T20:38:02Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Do you want different text?",
              "createdAt": "2024-10-04T20:38:02Z",
              "updatedAt": "2024-10-04T20:38:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MBGBV",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T20:38:48Z",
          "updatedAt": "2024-10-04T20:38:48Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "Should I add RFC6960 to the normative frontmatter instead? I don't know this {{?ref}} syntax.",
              "createdAt": "2024-10-04T20:38:48Z",
              "updatedAt": "2024-10-04T20:38:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB55r",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T21:51:37Z",
          "updatedAt": "2024-10-04T21:51:37Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "> [...] adding parens only for CoBOM seems weird, no?\r\n\r\nIt makes sense to add parentheses because external refs are rendered differently from internal refs:\r\n\r\n* `{{EXT}}` becomes `[EXT]`\r\n* `{{INT}}` becomes `INT`",
              "createdAt": "2024-10-04T21:51:37Z",
              "updatedAt": "2024-10-04T21:51:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB6gZ",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T21:54:50Z",
          "updatedAt": "2024-10-04T21:54:50Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "Understood. The thing is 9334's definition of policy is:\r\n\r\n> _\"A set of rules that a Verifier uses to evaluate the validity of information about an Attester.\"_\r\n\r\nwhich would make any regulatory aspects out of scope.",
              "createdAt": "2024-10-04T21:54:50Z",
              "updatedAt": "2024-10-04T21:54:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB62Q",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T21:56:35Z",
          "updatedAt": "2024-10-04T21:56:35Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Added to both cobom and comid references then.",
              "createdAt": "2024-10-04T21:56:35Z",
              "updatedAt": "2024-10-04T21:56:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB9GM",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T22:09:06Z",
          "updatedAt": "2024-10-04T22:09:06Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "I am just pointing out that creating an exception just for revocation checks to the general rule that _\"Phase 0 locks all inputs\"_ is probably unnecessary.  If we go without, the loss of functionality doesn't seem too big, given:\r\n1. Temporal distance between Phases 0 and 1 is likely to be (very) short, and\r\n2. Some clock skew tolerance will be in place anyway, making the boundaries between 0 and 1 even fuzzier.",
              "createdAt": "2024-10-04T22:09:06Z",
              "updatedAt": "2024-10-04T22:09:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB9en",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T22:11:25Z",
          "updatedAt": "2024-10-04T22:11:26Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Yes, just a small tweak to acknowledge that external factors, other than the Verifier Owner's will, may be at play.",
              "createdAt": "2024-10-04T22:11:26Z",
              "updatedAt": "2024-10-04T22:37:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB-Xf",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T22:16:50Z",
          "updatedAt": "2024-10-04T22:16:51Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "`{{?ref}}` automatically creates an informational reference entry for `ref`.\r\n`{{!ref}}` automatically creates a normative reference entry for `ref`.\r\n\r\nIt's handy for GitHub's \"suggested changes\" because you don't have to fiddle with the front matter when you are miles deep in the scroll.",
              "createdAt": "2024-10-04T22:16:51Z",
              "updatedAt": "2024-10-04T22:16:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MB-4v",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T22:19:58Z",
          "updatedAt": "2024-10-04T22:19:59Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "> Should I add RFC6960 to the normative frontmatter instead? \r\n\r\nI would make OCSP informative.  Using CRL distribution points is also an option.",
              "createdAt": "2024-10-04T22:19:59Z",
              "updatedAt": "2024-10-04T22:19:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCIUD",
          "commit": {
            "abbreviatedOid": "1006450"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T23:31:39Z",
          "updatedAt": "2024-10-04T23:31:39Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "Done.",
              "createdAt": "2024-10-04T23:31:39Z",
              "updatedAt": "2024-10-04T23:31:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCIhh",
          "commit": {
            "abbreviatedOid": "66822b8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T23:33:45Z",
          "updatedAt": "2024-10-04T23:34:41Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n: A structure that tracks all state that corresponds to a single request for attestation appraisal.\r\nThis includes the Appraisal Claims Set and Appraisal Context.\r\n```\r\nWe're breaking lines on sentences right?",
              "createdAt": "2024-10-04T23:33:46Z",
              "updatedAt": "2024-10-04T23:34:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCJ9w",
          "commit": {
            "abbreviatedOid": "8aa35d5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T23:48:40Z",
          "updatedAt": "2024-10-04T23:49:13Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "I thought the previous text was better / orthogonal to the suggested text.\r\n```suggestion\r\nAfter the Appraisal Context is initialized, appraisal processing is allowed to complete before new inputs are considered.\r\n```\r\nI thought the previous text was better / orthogonal to the suggested text.",
              "createdAt": "2024-10-04T23:48:40Z",
              "updatedAt": "2024-10-04T23:49:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MCLTn",
          "commit": {
            "abbreviatedOid": "8aa35d5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-05T00:05:26Z",
          "updatedAt": "2024-10-05T00:07:12Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "Removal of sec-ev-coll goes too far. This section corresponds to the CoRIM Selection, only for Evidence. I suggest:\r\n```\r\n#### Evidence Selection\r\n\r\nAll available Evidence in the Appraisal Session's inputs are checked for validity.\r\n\r\nEvidence that is not within it's validity period, or that cannot be associated with an authenticated and authorized source MUST be discarded.\r\n\r\nEvidence that has been secured by a cryptographic mechanism, such as a signature, that fails validation MUST be discarded.\r\n\r\nEvidence selection MUST yield at least one usable entry.\r\n\r\nSelected Evidence is transformed into an internal representation (see {{sec-phase1-trans}}).\r\n```\r\nThe new text doesn't seem to belong in this section.",
              "createdAt": "2024-10-05T00:05:26Z",
              "updatedAt": "2024-10-05T00:07:12Z"
            },
            {
              "originalPosition": 148,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-10-05T00:06:35Z",
              "updatedAt": "2024-10-05T00:07:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MDYb8",
          "commit": {
            "abbreviatedOid": "8aa35d5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T15:55:04Z",
          "updatedAt": "2024-10-05T15:55:04Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "The \u201callowed\u201d worries me, since we don\u2019t require monotonic matching conditions for profiles and mid-appraisal additions of tags can lead to inconsistent ACS results.",
              "createdAt": "2024-10-05T15:55:04Z",
              "updatedAt": "2024-10-05T15:55:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MEVsE",
          "commit": {
            "abbreviatedOid": "8aa35d5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T18:15:55Z",
          "updatedAt": "2024-10-05T18:20:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  RFC6960: ocsp\r\n```",
              "createdAt": "2024-10-05T18:15:56Z",
              "updatedAt": "2024-10-05T18:20:39Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nNo inputs other than dynamically-fetched information about certificate revocation status (see {{-ocsp}}, and {{Section 4.2.1.13 of -pkix-cert}}) may be collected in Phase 1.\r\n```",
              "createdAt": "2024-10-05T18:17:00Z",
              "updatedAt": "2024-10-05T18:20:39Z"
            },
            {
              "originalPosition": 84,
              "body": "Party pooper mode on. (For different reasons) I don't like either \ud83e\udd23 ",
              "createdAt": "2024-10-05T18:20:32Z",
              "updatedAt": "2024-10-05T18:20:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MFmeo",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T20:58:30Z",
          "updatedAt": "2024-10-05T20:58:30Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Added.",
              "createdAt": "2024-10-05T20:58:30Z",
              "updatedAt": "2024-10-05T20:58:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MFmhx",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T20:58:37Z",
          "updatedAt": "2024-10-05T20:58:38Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "Added.",
              "createdAt": "2024-10-05T20:58:38Z",
              "updatedAt": "2024-10-05T20:58:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MFnC3",
          "commit": {
            "abbreviatedOid": "31e0804"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T20:59:53Z",
          "updatedAt": "2024-10-05T20:59:53Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Moved the lock to be back at the end of Appraisal Context construction then.",
              "createdAt": "2024-10-05T20:59:53Z",
              "updatedAt": "2024-10-05T20:59:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MFnvr",
          "commit": {
            "abbreviatedOid": "8aa35d5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T21:01:35Z",
          "updatedAt": "2024-10-05T21:01:36Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "I've added a hermeticity subsection to describe this without any need for operational suggestions like having inputs be \"held back\".",
              "createdAt": "2024-10-05T21:01:35Z",
              "updatedAt": "2024-10-05T21:01:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MFv_H",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-05T21:21:43Z",
          "updatedAt": "2024-10-05T21:21:44Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "Please help wordsmith this. There are obviously different levels of hermeticity and auditability that Verifier policy will impose. I don't want to require absolute determinism since that imposes a requirement on policy evaluation.\r\nI don't like \"same\" since we're not prescribing any Attestation Result construction or representation, so there is no strong notion of sameness.\r\n\r\nIf we go with \r\n```suggestion\r\nThe reason to lock the inputs before Attestation Appraisal is for all Appraisal Procedure dependencies to be accounted for before interpreting them.                                                                                            \r\nFully determined inputs SHOULD ensure consistent ACS construction when accounting for any profile-driven semantics.                                                                                                                             \r\n```",
              "createdAt": "2024-10-05T21:21:43Z",
              "updatedAt": "2024-10-05T21:21:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGmvX",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T14:12:07Z",
          "updatedAt": "2024-10-06T14:34:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "The deterministic nature is ensured by the consistency of the appraisal algorithm.\r\n```suggestion\r\nDuring Phase 0, the Verifier collects its set of inputs from external sources that will be used for the remainder of the Appraisal Procedure.\r\n```",
              "createdAt": "2024-10-06T14:12:07Z",
              "updatedAt": "2024-10-06T14:34:34Z"
            },
            {
              "originalPosition": 103,
              "body": "ah, got it.  I thought it was a typo; my bad.",
              "createdAt": "2024-10-06T14:16:13Z",
              "updatedAt": "2024-10-06T14:34:34Z"
            },
            {
              "originalPosition": 97,
              "body": "I find this way of presenting activation/disactivation a bit puzzling.\r\n\r\nI see the flow from undecided/unknown to either active or inactive.\r\nIt'd be probably easier to grok if we introduced an initial \"unknown\" state and describe the decision tree as:\r\n\r\n```mermaid\r\nflowchart TD\r\n    A[unknown] --> C{use_cobom}\r\n    C -->|true| D{is_listed}\r\n    C -->|false| E[active]\r\n    D -->|true| F[active]\r\n    D -->|false| G[inactive]\r\n```",
              "createdAt": "2024-10-06T14:25:00Z",
              "updatedAt": "2024-10-06T14:34:34Z"
            },
            {
              "originalPosition": 115,
              "body": "Doesn't read right to this non-native speeker. Did you mean s/of/if/? Or something else?\r\n\r\nRegardless, I prefer it stupid and explicit, as it was before :-)\r\nUnless you see a case that would not be covered using the old phrasing.",
              "createdAt": "2024-10-06T14:26:37Z",
              "updatedAt": "2024-10-06T14:34:34Z"
            },
            {
              "originalPosition": 175,
              "body": "I agree that the old L1906 is not 100% correct: it should probably have said instead:\r\n\r\n> The same Appraisal Context processed at any time MUST produce the same ACS.\r\n\r\nI like the text you suggest.  The only thing is we should state more strongly that what we are trying to achieve is _deterministic ACS construction._",
              "createdAt": "2024-10-06T14:34:27Z",
              "updatedAt": "2024-10-06T14:34:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGs1h",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T16:47:14Z",
          "updatedAt": "2024-10-06T16:47:14Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "The appraisal algorithm is deterministic for the base CDDL, but profiles can define their own comparison algorithms that can be complex and have computational timeouts that lead to nondeterministic results (for example). Considering the SLSA level 4 language about hermeticity and reproducibility, we should have wording about best-effort reproducibility https://slsa.dev/spec/v0.1/requirements\r\n\r\nIf we consider a Verifier to be a \"builder\" of attestation results, then we can apply the same requirements whole sale.",
              "createdAt": "2024-10-06T16:47:14Z",
              "updatedAt": "2024-10-06T16:47:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGs6Y",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T16:49:05Z",
          "updatedAt": "2024-10-06T16:49:05Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Yes s/of/if/, typo. ",
              "createdAt": "2024-10-06T16:49:05Z",
              "updatedAt": "2024-10-06T16:49:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGtgZ",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T17:06:00Z",
          "updatedAt": "2024-10-06T17:06:00Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Hmm, even with profile-specific comparison algorithms (or other kinds of custom behaviour), _successful_ ACS computation should be deterministic.\r\n\r\nIf computational timeouts, or other conditions that make the ACS \"incomplete\", happen, they must be made fully visible to the downstream appraisal policy.",
              "createdAt": "2024-10-06T17:06:00Z",
              "updatedAt": "2024-10-06T17:06:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MGy-M",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-06T19:49:11Z",
          "updatedAt": "2024-10-06T19:49:11Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Suppose we have a profile that has unification variables that are allowed in conditions and in additions. The logic it employs for unification does not have principal types, so there are multiple incomparable correct solutions to a system of constraints. Which substitution it resolves on can be dependent on something nondeterministic like hash map iteration order. The resulting ACS is not consistently reproducible in this case, the way a compiler can choose which way it allocates registers or orders if/then/else basic blocks.\r\n\r\nI'm not saying it's sensible, I'm saying it's not ruled out and it is very difficult to rule out. Thus a SHOULD be reproducible.",
              "createdAt": "2024-10-06T19:49:11Z",
              "updatedAt": "2024-10-06T19:49:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MI19q",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T07:28:25Z",
          "updatedAt": "2024-10-07T07:28:25Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "> Suppose we have a profile that has unification variables that are allowed in conditions and in additions. The logic it employs for unification does not have principal types, so there are multiple incomparable correct solutions to a system of constraints. Which substitution it resolves on can be dependent on something nondeterministic like hash map iteration order. The resulting ACS is not consistently reproducible in this case, the way a compiler can choose which way it allocates registers or orders if/then/else basic blocks.\r\n\r\nThis is an interesting observation.  However, ...\r\n\r\n> I'm not saying it's sensible, I'm saying it's not ruled out and it is very difficult to rule out. Thus a SHOULD be reproducible.\r\n\r\n... the conclusion I draw from this is that we should clearly say: _\"profiles MUST NOT introduce randomized behaviour.\"_\r\n\r\nIMO one core promise we make to downstream ACS consumers is that given the same input, a CoRIM appraiser always computes the same predictable output.\r\n\r\nAny non-deterministic behaviour creates confusion at best, whilst in the worst case it can be used by an attacker to subvert the overall appraisal outcome.\r\n\r\n\r\n",
              "createdAt": "2024-10-07T07:28:25Z",
              "updatedAt": "2024-10-07T07:28:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MQqBn",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T01:01:05Z",
          "updatedAt": "2024-10-08T01:01:16Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "We've already said that certain decisions can be make by policy. Are those decisions made strictly after phase 4? If we can say phases 2, 3, and 4 must be deterministic without imposing policy burden by the way we define semantics, then I'd certainly like to make that declaration.\r\n\r\nI don't think profiles would be introducing randomized behavior. Non-deterministic isn't necessarily random. You can have \"the same\" outcome by means of equivalence but not syntactic equality. When we're talking about ACS construction we're making representation choices that may be more conducive to equal outputs than something that uses, say, hash maps or algebraic constructions that represent \"the same object\" in multiple ways.",
              "createdAt": "2024-10-08T01:01:05Z",
              "updatedAt": "2024-10-08T01:01:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MS3dY",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T08:19:50Z",
          "updatedAt": "2024-10-08T08:19:51Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "> We've already said that certain decisions can be make by policy. Are those decisions made strictly after phase 4?\r\n\r\nyes\r\n\r\n> If we can say phases 2, 3, and 4 must be deterministic without imposing policy burden by the way we define semantics, then I'd certainly like to make that declaration.\r\n\r\n\ud83d\udc4d \r\n\r\n> I don't think profiles would be introducing randomized behavior. Non-deterministic isn't necessarily random. You can have \"the same\" outcome by means of equivalence but not syntactic equality. When we're talking about ACS construction we're making representation choices that may be more conducive to equal outputs than something that uses, say, hash maps or algebraic constructions that represent \"the same object\" in multiple ways.\r\n\r\nGot it.  Then:\r\n\r\n> _\"profiles MUST NOT introduce non-deterministic behaviour.\"_\r\n",
              "createdAt": "2024-10-08T08:19:50Z",
              "updatedAt": "2024-10-08T08:19:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZr-O",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:10:47Z",
          "updatedAt": "2024-10-08T22:14:12Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "> > We've already said that certain decisions can be make by policy. Are those decisions made strictly after phase 4?\r\n> \r\n> yes\r\n\r\nRegardless of which phase is active, phase 0 is described as collecting all the inputs. This includes policies IMO. That is how we assert consistent behavior resulting in an ACS that is the same for different Verifiers.",
              "createdAt": "2024-10-08T21:10:47Z",
              "updatedAt": "2024-10-08T22:14:12Z"
            },
            {
              "originalPosition": 29,
              "body": "> ... the conclusion I draw from this is that we should clearly say: _\"profiles MUST NOT introduce randomized behaviour.\"_\r\n\r\nI agree. It also extends to policies. They can't introduce randomized behavior either. Otherwise, different Verifiers will get different ACS results.",
              "createdAt": "2024-10-08T21:12:34Z",
              "updatedAt": "2024-10-08T22:14:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MaCAL",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T22:15:04Z",
          "updatedAt": "2024-10-08T23:18:31Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "A diagram like this would be helpful IMO.",
              "createdAt": "2024-10-08T22:15:04Z",
              "updatedAt": "2024-10-08T23:18:31Z"
            },
            {
              "originalPosition": 120,
              "body": "Shouldn't this reflect the previous text for phase 1 where all inputs are resolved including coboms? This should be when activation happens so that the set of inputs is deterministically known before progressing to phase 2.",
              "createdAt": "2024-10-08T22:35:22Z",
              "updatedAt": "2024-10-08T23:18:31Z"
            },
            {
              "originalPosition": 175,
              "body": "> Fully determined inputs SHOULD ensure consistent ACS construction when accounting for any profile-driven semantics.\r\n\r\n```suggestion\r\nGiven the same Appraisal Context, different Verifier appraisals MUST produce deterministic results.\r\n\r\nVerifier inputs are locked (see Phase 0) before Attestation Appraisal to ensure ACS construction is deterministic.\r\n```\r\nText above addresses the question of profile or policy inputs rendering non-deterministic ACS results.",
              "createdAt": "2024-10-08T23:18:26Z",
              "updatedAt": "2024-10-08T23:20:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86My3WI",
          "commit": {
            "abbreviatedOid": "c262da8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T07:34:25Z",
          "updatedAt": "2024-10-11T08:13:04Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n{::include cddl/intrep-actx.cddl}\r\n```",
              "createdAt": "2024-10-11T07:34:25Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            },
            {
              "originalPosition": 118,
              "body": "Fix file name.\r\n\r\nAlso, remove tag-state inclusion (the file does not exist) and tag-state is already defined in intrep-asession.cddl\r\n\r\n```suggestion\r\n{::include cddl/intrep-asession.cddl}`\r\n```",
              "createdAt": "2024-10-11T07:40:22Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            },
            {
              "originalPosition": 239,
              "body": "```suggestion\r\nFor a comparable notion of process fidelity and provenance tracking, see the different {{SLSA}} specification for build security.\r\n```",
              "createdAt": "2024-10-11T07:43:15Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            },
            {
              "originalPosition": 16,
              "body": "`EACCESS` :-)\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-10-11T07:49:38Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            },
            {
              "originalPosition": 181,
              "body": "```suggestion\r\nA tag's activity is determined by the flowchart in figure {{#fig-tag-activity}}\r\n```",
              "createdAt": "2024-10-11T07:52:20Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            },
            {
              "originalPosition": 188,
              "body": "It'd be nice, isn't it :-) but I don't think this will work as you expect.\r\n\r\n1. You need to tell the processor that it needs to dispatch the block to mermaid, i.e.:\r\n```suggestion\r\n~~~mermaid\r\nflowchart TD\r\n    A[unknown] --> C{use_cobom}\r\n    C -->|true| D{is_listed}\r\n    C -->|false| E[active]\r\n    D -->|true| F[active]\r\n    D -->|false| G[inactive]\r\n~~~\r\n```\r\n2. `mermaid-cli` must be installed both in your dev environment and the CI\r\n3. Currently, `mmdc` produces SVG that doesn't makes `svgcheck` unhappy.\r\n\r\n\r\nAll that to say that diagramming in I-Ds is still mostly an (ASCII) art.\r\n\r\nFor more info see https://github.com/martinthomson/i-d-template/issues/416\r\n",
              "createdAt": "2024-10-11T07:56:12Z",
              "updatedAt": "2024-10-11T08:13:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M1sBd",
          "commit": {
            "abbreviatedOid": "675806d"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T13:59:05Z",
          "updatedAt": "2024-10-11T13:59:05Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "The referenced issue does not appear to have solved the problem. Do you know if this change would work?",
              "createdAt": "2024-10-11T13:59:05Z",
              "updatedAt": "2024-10-11T13:59:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M1tk-",
          "commit": {
            "abbreviatedOid": "c262da8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T14:01:48Z",
          "updatedAt": "2024-10-11T14:01:48Z",
          "comments": [
            {
              "originalPosition": 188,
              "body": "I believe it wouldn't because of point 3 (i.e., `mmdc` not producing conformant SVG)",
              "createdAt": "2024-10-11T14:01:48Z",
              "updatedAt": "2024-10-11T14:01:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M3PU0",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T17:36:03Z",
          "updatedAt": "2024-10-11T20:06:31Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n  ar : [ ar ]\r\n  ARS: ARS\r\n```\r\nThese are defined by the internal representation but omitted from the appraisal context. Was this on purpose?\r\nWhat is `extra` for? If it is extensibility, a future I-D can extend the model as needed and update the representation appropriately. ",
              "createdAt": "2024-10-11T17:36:03Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n: A structure that tracks all state that corresponds to a single request for attestation appraisal; also known as `asession`.\r\n```",
              "createdAt": "2024-10-11T17:40:28Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 81,
              "body": "```\r\nir-appraisal-session = {\r\n  &(cms: 0): ir-conceptual-messages\r\n  &(select: 1): tag-selection\r\n  &(extra: 2): any\r\n  &(ctx: 2): ir-appraisal-context\r\n}\r\n```\r\nThe CDDL seems incorrect. Code point 2 is used twice.\r\nUsing slightly more verbose labels makes the prose more readable in general. For example, `ctx` could be `appraisal-context`. \r\n\r\nThe prose should provide a one sentence explanation of each map member.",
              "createdAt": "2024-10-11T17:50:00Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 1,
              "body": "Maybe it makes sense to use more readable labels since we're using them in prose quite often? For example, `ae` becomes `evidence`. The original names were just artifacts from side meetings. Maybe this should be a separate issue.",
              "createdAt": "2024-10-11T17:57:49Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 114,
              "body": "Trying to define an internal representation for a wide variety of inputs, each having potentially vastly different representations invites unnecessary scrutiny to the internal representation. It seems sufficient to describe the session as the set of inputs (line 1770) collected within some window of time (line 1771). We don't want to try to define a session format for all these inputs IMHO and the current definition doesn't account for all these inputs.",
              "createdAt": "2024-10-11T18:11:40Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 121,
              "body": "I don't think it makes sense to limit verifier inputs. The position this spec takes is that all inputs can be accepted, but they require transformations to internal representations. Since the internal representation already assumes the transformation has been applied, there's no need to assume there are extras.",
              "createdAt": "2024-10-11T19:03:42Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 123,
              "body": "This sentence belongs at or around line 1769.",
              "createdAt": "2024-10-11T19:05:27Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nIn Phase 1 the Verifier constructs an Appraisal Context that contains valid inputs to the Appraisal Procedure.\r\n```",
              "createdAt": "2024-10-11T19:08:02Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nThe Appraisal Context is available to the Appraisal Procedure throughout the various phases.\r\n```",
              "createdAt": "2024-10-11T19:12:32Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 77,
              "body": "This doesn't seem to be saying much. An explanation of each member of `ir-appraisal-session` would communicate that a session context includes an internal representation of the CMs. It likely would describe assumptions for how to populate it? ",
              "createdAt": "2024-10-11T19:16:58Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 104,
              "body": "I'm not sure why we need to talk about Attestation Results as part of forming an appraisal context (and vetting its inputs).",
              "createdAt": "2024-10-11T19:23:36Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            },
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nAn Appraisal Session contains an Appraisal Context that contains validated inputs used by the Appraisal Procedure.\r\n```",
              "createdAt": "2024-10-11T19:31:11Z",
              "updatedAt": "2024-10-11T20:06:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M4DoK",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T20:14:14Z",
          "updatedAt": "2024-10-11T20:14:14Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "> A diagram like this would be helpful IMO.\r\n\r\nBut maybe the diagram should be backed out of this PR until the tooling issues can be addressed. It's difficult to suggest changes when it doesn't build.",
              "createdAt": "2024-10-11T20:14:14Z",
              "updatedAt": "2024-10-11T20:14:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7l24",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:23:58Z",
          "updatedAt": "2024-10-12T20:23:58Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "Okay, I'll remove the internal representation and leave the description to the prose of the Verifier Abstraction.",
              "createdAt": "2024-10-12T20:23:58Z",
              "updatedAt": "2024-10-12T20:23:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7mA-",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:24:21Z",
          "updatedAt": "2024-10-12T20:24:22Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Tracked as Issue #319",
              "createdAt": "2024-10-12T20:24:21Z",
              "updatedAt": "2024-10-12T20:24:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7vNq",
          "commit": {
            "abbreviatedOid": "bc4209a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:45:22Z",
          "updatedAt": "2024-10-12T20:45:23Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Removed.",
              "createdAt": "2024-10-12T20:45:23Z",
              "updatedAt": "2024-10-12T20:45:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7xUC",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:50:11Z",
          "updatedAt": "2024-10-12T20:50:11Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "Removed appraisal session representation.",
              "createdAt": "2024-10-12T20:50:11Z",
              "updatedAt": "2024-10-12T20:50:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7ySX",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:52:22Z",
          "updatedAt": "2024-10-12T20:52:22Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Removed.",
              "createdAt": "2024-10-12T20:52:22Z",
              "updatedAt": "2024-10-12T20:52:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M7zHA",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:54:12Z",
          "updatedAt": "2024-10-12T20:54:13Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Extra in actx is meant to capture implementation-specific details. I could leave it unsaid, but I don't want to make appraisal seem like it can only consider the spec's types.",
              "createdAt": "2024-10-12T20:54:13Z",
              "updatedAt": "2024-10-12T20:54:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M70Pz",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:56:45Z",
          "updatedAt": "2024-10-12T20:56:45Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I don't think actx should contain ar or ARS since that's a phase after the ACS is fully constructed. actx should just be for processing determined-good inputs to a final ACS.",
              "createdAt": "2024-10-12T20:56:45Z",
              "updatedAt": "2024-10-12T20:56:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M71bx",
          "commit": {
            "abbreviatedOid": "a2b5889"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T20:59:23Z",
          "updatedAt": "2024-10-12T20:59:23Z",
          "comments": [
            {
              "originalPosition": 104,
              "body": "It's not. The results are produced at the end of a session. An Appraisal Context is only for getting to the end of constructing the ACS. It's a bit matryoshka doll-ish.",
              "createdAt": "2024-10-12T20:59:23Z",
              "updatedAt": "2024-10-12T20:59:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 308,
      "id": "PR_kwDOH6-tI859qhSC",
      "title": "Add version-map comparison and fix svn comparison",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/308",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The svn comparison text states that an svn must be a uint, which it isn't. It also accounts for untagged uint as a possible value, which it isn't.\r\n\r\nAdd a section about version-map comparison requiring equality comparison only. We aren't expanding the notion of version-map to have $version-scheme-specific comparison algorithms.",
      "createdAt": "2024-10-04T20:26:20Z",
      "updatedAt": "2024-10-11T14:11:59Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "82d7263e7c389f2902a0488336ff4e183c37be10",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "version",
      "headRefOid": "05c516d5014de1ffae81551306a474ec9123e778",
      "closedAt": "2024-10-11T14:11:58Z",
      "mergedAt": "2024-10-11T14:11:58Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "eec1681a910e014d708ffc4bcfbfd851784de2fc"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> The svn comparison text states that an svn must be a uint\r\n\r\nI think the text intends to say that the comparison applies to the svn value after the tagging is stripped away. That would mean the comparison applies to the uint part.",
          "createdAt": "2024-10-08T23:42:01Z",
          "updatedAt": "2024-10-08T23:42:01Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> It also accounts for untagged uint as a possible value, which it isn't.\r\n\r\nTo support different Evidence formats, it is anticipated that the CBOR tagging may not be supplied. It may be that the verifier comparison algorithm is given an untagged uint. It seems quite reasonable to support this.",
          "createdAt": "2024-10-08T23:44:44Z",
          "updatedAt": "2024-10-08T23:44:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "There should be also a subsection for min-svn alongside svn.\r\n\r\nBesides, is min-svn endorseable?  Or is it only meaningful on the ref-val side since it's \"fuzzy\"?\r\n\r\nCompromise reached: if sema is unclear, go with binary compare.\r\n",
          "createdAt": "2024-10-09T14:18:23Z",
          "updatedAt": "2024-10-11T14:08:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86M1yJK",
          "commit": {
            "abbreviatedOid": "05c516d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-11T14:10:18Z",
          "updatedAt": "2024-10-11T14:10:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86M1yKx",
          "commit": {
            "abbreviatedOid": "05c516d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-11T14:10:21Z",
          "updatedAt": "2024-10-11T14:10:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86M1ynT",
          "commit": {
            "abbreviatedOid": "05c516d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-11T14:11:11Z",
          "updatedAt": "2024-10-11T14:11:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 309,
      "id": "PR_kwDOH6-tI8593m3P",
      "title": "first stab at a security considerations section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/309",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Privacy considerations are still TODO\r\n\r\nPartially address #11",
      "createdAt": "2024-10-07T21:18:05Z",
      "updatedAt": "2024-10-09T15:12:09Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "3c9f80e8246af5661981e1b8e1a511403cbd7585",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "sec-cons",
      "headRefOid": "24ce86229e23687193abc1b22fc25f8076018350",
      "closedAt": "2024-10-09T15:12:01Z",
      "mergedAt": "2024-10-09T15:12:01Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "82d7263e7c389f2902a0488336ff4e183c37be10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86MUNBf",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:43:23Z",
          "updatedAt": "2024-10-08T10:43:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Verifier is effectively part of the Attesters' and Relying Parties' Trusted Computing Base (TCB).\r\n```",
              "createdAt": "2024-10-08T10:43:24Z",
              "updatedAt": "2024-10-08T10:43:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUN7Q",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:45:17Z",
          "updatedAt": "2024-10-08T10:45:17Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n- Minimizing the attack surface by avoiding unnecessary features that could be exploited by attackers;\r\n```",
              "createdAt": "2024-10-08T10:45:17Z",
              "updatedAt": "2024-10-08T10:45:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUPqI",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:48:51Z",
          "updatedAt": "2024-10-08T10:48:51Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "This section is quite good, however I would certainly highlight the importance of the secrecy of the private key material used to sign the `Attestation Results` originating from a Verifier, as a fundamental item to be highlighted here.",
              "createdAt": "2024-10-08T10:48:51Z",
              "updatedAt": "2024-10-08T10:48:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUQKS",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:49:55Z",
          "updatedAt": "2024-10-08T10:49:55Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nThe integrity of the code and data during execution should be made an explicit objective, for example ensuring that the appraisal functions are computed in a Trusted Execution Environment (TEE).\r\n```",
              "createdAt": "2024-10-08T10:49:55Z",
              "updatedAt": "2024-10-08T10:49:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUQbV",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This section has come along nicely, thanks for this! I have left few minor comments for you to have a look!",
          "createdAt": "2024-10-08T10:50:28Z",
          "updatedAt": "2024-10-08T10:50:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MUTsc",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:56:50Z",
          "updatedAt": "2024-10-08T10:56:51Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Just a thought, should we also add some sentences about the \"Attestability\" of Verifier code, in addition to Auditability?\r\nMeaning the code been executed by the Verifier should be attestable, with a policy driven periodicity to ensure the overall trustworthiness of the code base. How this is implemented, is beyond the scope of this section!",
              "createdAt": "2024-10-08T10:56:51Z",
              "updatedAt": "2024-10-08T10:56:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUTzw",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see few more",
          "createdAt": "2024-10-08T10:57:03Z",
          "updatedAt": "2024-10-08T10:57:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MUU-1",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T10:59:23Z",
          "updatedAt": "2024-10-08T10:59:23Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "no, CoRIM doesn't deal with ARs",
              "createdAt": "2024-10-08T10:59:23Z",
              "updatedAt": "2024-10-08T10:59:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUVjy",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:00:29Z",
          "updatedAt": "2024-10-08T11:00:29Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I don't think capitalisation is required.  See for example https://en.wikipedia.org/wiki/Trusted_computing_base",
              "createdAt": "2024-10-08T11:00:29Z",
              "updatedAt": "2024-10-08T11:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUV6-",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:01:11Z",
          "updatedAt": "2024-10-08T11:01:11Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I thought we were also explaining the auditability of the Verifier code here?",
              "createdAt": "2024-10-08T11:01:11Z",
              "updatedAt": "2024-10-08T11:01:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUWEK",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:01:27Z",
          "updatedAt": "2024-10-08T11:01:27Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "`The appraisal process should be auditable, reproducible, and transparent.`",
              "createdAt": "2024-10-08T11:01:27Z",
              "updatedAt": "2024-10-08T11:01:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUWoB",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:02:35Z",
          "updatedAt": "2024-10-08T11:02:35Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "sure, we could say:\r\n\r\n> _\"attestable trusted exececution environment (TEE)\"_",
              "createdAt": "2024-10-08T11:02:35Z",
              "updatedAt": "2024-10-08T11:02:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUXZw",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:03:45Z",
          "updatedAt": "2024-10-08T11:03:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yes, strictly not required, but see how it renders nicely: https://confidentialcomputing.io/about/",
              "createdAt": "2024-10-08T11:03:45Z",
              "updatedAt": "2024-10-08T11:03:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUYOy",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:05:24Z",
          "updatedAt": "2024-10-08T11:05:24Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Yes, that should be enough I guess, which implies the Environment is attestable!",
              "createdAt": "2024-10-08T11:05:24Z",
              "updatedAt": "2024-10-08T11:05:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUYul",
          "commit": {
            "abbreviatedOid": "da589ea"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:06:24Z",
          "updatedAt": "2024-10-08T11:06:24Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "cool, done in [bcef629](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/309/commits/bcef629268c5ac28b86bff151993ce0a08e28bf6)",
              "createdAt": "2024-10-08T11:06:24Z",
              "updatedAt": "2024-10-08T11:06:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUZPU",
          "commit": {
            "abbreviatedOid": "bcef629"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! First iteration is coming along well..",
          "createdAt": "2024-10-08T11:07:18Z",
          "updatedAt": "2024-10-08T11:07:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MUaXK",
          "commit": {
            "abbreviatedOid": "bcef629"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:08:55Z",
          "updatedAt": "2024-10-08T11:08:55Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nRefer to {{Section 12.2 of -rats-arch}} for information on Conceptual Messages protection.\r\n```",
              "createdAt": "2024-10-08T11:08:55Z",
              "updatedAt": "2024-10-08T11:08:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MUbEz",
          "commit": {
            "abbreviatedOid": "9d786d8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T11:09:48Z",
          "updatedAt": "2024-10-08T11:09:48Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nRefer to {{Section 12.2 of -rats-arch}} for information on Conceptual Messages protection.\r\n\r\n[^issue] https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/11\r\n```",
              "createdAt": "2024-10-08T11:09:48Z",
              "updatedAt": "2024-10-08T11:09:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MQdTV",
          "commit": {
            "abbreviatedOid": "0e29193"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T23:50:37Z",
          "updatedAt": "2024-10-08T15:01:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nFor instance, it could lead to the subversion of an access control function, which creates a chance for privilege escalation.\r\n```",
              "createdAt": "2024-10-07T23:50:37Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 20,
              "body": "I think your non-bullet point item below this list ought to be referenced as its own section of relevant system security principles to follow.",
              "createdAt": "2024-10-08T00:03:34Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n- Failing securely in the event of errors to avoid compromising the security of the system.\r\n```\r\nThe \"fail safe\" vs \"fail secure\" wording is nearly always in stark contrast to each other in security texts.",
              "createdAt": "2024-10-08T00:06:19Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 23,
              "body": "This section of text is still a list, but it's more to do with the system security bullet above. Should this be its own subsection?\r\n\r\nYour use of \"transparent\" is not elaborated upon. Sometimes \"transparent\" means that people don't notice it's there. Sometimes \"transparent\" means there's a window into the inner workings instead of a wall. Sometimes \"transparent\" means that every important action is published on a public append-only log.\r\n\r\nI'm guessing that you mean that the Verifier attests to itself as a background check model to RPs while implementing the passport model for other attesters, and that the attestation is meaningfully traced to sources that can be audited and re-built to reconstruct the measurements.",
              "createdAt": "2024-10-08T00:09:19Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nThis includes key material used to sign Attestation Results, key material carried in attestation key triples, and key material used to verify the authority of triples (such as public keys that identify trusted supply chain actors).\r\n```",
              "createdAt": "2024-10-08T00:11:36Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 31,
              "body": "Please describe what you mean by \"These links\" and what \"deep\" means.\r\n\r\nIs \"link\" referring to the secure channel, or is it talking about a link in your supply chain? \r\n\r\nI see that \"possibly terminated in the appraisal session\" is indicative that you mean that your channels should be terminated at a controlled point in the operator's system, that the point should be close to or ideally inside the appraisal process. Yes?\r\n\r\nWhen you talk about suppliers and links, and going deep, I think more about the \"intermediaries\" you describe next.",
              "createdAt": "2024-10-08T00:25:09Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nMinimize the use of intermediaries: each intermediary becomes another party that needs to be trusted and needs to be factored in the relying parties' TCBs.\r\n```\r\nIntermediaries of what? What counts as an intermediary? I can use cryptographic methods to ensure integrity over untrusted channels.\r\nAre you talking about people operating your Verifier? Implementing it? Sourcing its data?\r\nI'm sure the answer is all of the above, but the number is going to be big. Is there something we can suggest to help tame the chaos of supply chains?",
              "createdAt": "2024-10-08T00:51:42Z",
              "updatedAt": "2024-10-08T15:01:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MW0fW",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:04:58Z",
          "updatedAt": "2024-10-08T15:04:58Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "ARs are not relevant to CoRIM.",
              "createdAt": "2024-10-08T15:04:58Z",
              "updatedAt": "2024-10-08T15:04:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MW2-K",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:08:49Z",
          "updatedAt": "2024-10-08T15:08:49Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "ARs are explicitly described in the document and accounted for in phase 7. I think we can make this statement.",
              "createdAt": "2024-10-08T15:08:49Z",
              "updatedAt": "2024-10-08T15:08:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MW8ko",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:17:40Z",
          "updatedAt": "2024-10-08T15:17:41Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I agree with @deeglaze ",
              "createdAt": "2024-10-08T15:17:41Z",
              "updatedAt": "2024-10-08T15:17:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXM00",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:44:08Z",
          "updatedAt": "2024-10-08T15:44:08Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "> ARs are explicitly described in the document and accounted for in phase 7.\r\n\r\nThat's Phase 7 of _Verifier_ appraisal. The CoRIM processor boundaries do not include ARs assembly nor their signing.",
              "createdAt": "2024-10-08T15:44:08Z",
              "updatedAt": "2024-10-08T15:44:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXN1P",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:45:51Z",
          "updatedAt": "2024-10-08T15:45:51Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Is there a usable reference for this (e.g., some NIST thing)?  If so, we could replace $this with a pointer to $that.",
              "createdAt": "2024-10-08T15:45:51Z",
              "updatedAt": "2024-10-08T15:45:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXOPt",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:46:35Z",
          "updatedAt": "2024-10-08T15:46:35Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I don't understand this comment.",
              "createdAt": "2024-10-08T15:46:35Z",
              "updatedAt": "2024-10-08T15:46:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXOi3",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:47:06Z",
          "updatedAt": "2024-10-08T15:47:06Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "We have a huge section about a model of Verifier behavior. You have bullet points about implementing the verifier correctly. Do we want to explicitly separate the security discussion about CoRIM production and CoRIM consumption?",
              "createdAt": "2024-10-08T15:47:06Z",
              "updatedAt": "2024-10-08T15:47:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXO7A",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:47:45Z",
          "updatedAt": "2024-10-08T15:47:46Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I will remove \"transparent\"",
              "createdAt": "2024-10-08T15:47:46Z",
              "updatedAt": "2024-10-08T15:47:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXPWI",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:48:30Z",
          "updatedAt": "2024-10-08T15:48:31Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "> Is \"link\" referring to the secure channel, or is it talking about a link in your supply chain?\r\n\r\nThe former.\r\n\r\n> I see that \"possibly terminated in the appraisal session\" is indicative that you mean that your channels should be terminated at a controlled point in the operator's system, that the point should be close to or ideally inside the appraisal process. Yes?\r\n\r\nyes.",
              "createdAt": "2024-10-08T15:48:30Z",
              "updatedAt": "2024-10-08T15:48:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXQyk",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:50:40Z",
          "updatedAt": "2024-10-08T15:50:40Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I mean a fail safe is a design to protect human life, which typically means being a fail open (don\u2019t trap people in a burning building) rather than fail closed, or fail secure (don\u2019t allow access to the key material room when the power goes out)",
              "createdAt": "2024-10-08T15:50:40Z",
              "updatedAt": "2024-10-08T15:50:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXUce",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T15:56:59Z",
          "updatedAt": "2024-10-08T15:57:00Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "> Intermediaries of what? What counts as an intermediary?\r\n\r\nActors that somehow are part of the supply chain.\r\n\r\n> I can use cryptographic methods to ensure integrity over untrusted channels.\r\n\r\nSure, sometimes though the threat is not someone manipulating your data, but someone preventing you from seeing some data (e.g., a newly published vulnerability report), in which case cryptography is unhelpful.\r\n\r\n> Are you talking about people operating your Verifier? Implementing it?\r\n\r\nNo.\r\n\r\n> Sourcing its data?\r\n\r\nMaybe, depending on what \"sourcing\" exactly means.\r\n\r\nI am talking about external dependencies that for one reason or another you'd have to trust.\r\n\r\n> I'm sure the answer is all of the above, but the number is going to be big. Is there something we can suggest to help tame the chaos of supply chains?\r\n\r\nNot sure, apart from _\"Stay in your house and close all doors and windows!\"_ :rofl:\r\n",
              "createdAt": "2024-10-08T15:56:59Z",
              "updatedAt": "2024-10-08T15:57:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXXTx",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T16:01:49Z",
          "updatedAt": "2024-10-08T16:01:49Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "These security considerations should be scoped to CoRIM (creation, ingestion and processing).  If something is missing in that scope (and I am sure there are lots of things we could and should add), let's add them.  Talking about the verifier in general is also ok as long as the intersection with CoRIM is non-zero.",
              "createdAt": "2024-10-08T16:01:49Z",
              "updatedAt": "2024-10-08T16:01:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MXYve",
          "commit": {
            "abbreviatedOid": "62d2c0b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T16:04:26Z",
          "updatedAt": "2024-10-08T16:04:26Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThe appraisal process should be auditable and reproducible.\r\n```",
              "createdAt": "2024-10-08T16:04:26Z",
              "updatedAt": "2024-10-08T16:04:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MYToC",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T18:02:55Z",
          "updatedAt": "2024-10-08T18:02:56Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Perhaps we should simply say\r\n\r\n```suggestion\r\nExample key management guidelines are {{?NIST SP 800-57}} and {{Annex A.10 of ISO/IEC 27001:2022}}\r\n```",
              "createdAt": "2024-10-08T18:02:55Z",
              "updatedAt": "2024-10-08T18:02:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MYWKD",
          "commit": {
            "abbreviatedOid": "b59520a"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T18:08:19Z",
          "updatedAt": "2024-10-08T18:08:19Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "CoRIM represents a form of improving supply chain security. Perhaps we can say, \"where possible, ensure your suppliers are following best practices (through SBOM and general security framework compliance) to make breaches of trust evident and thus more difficult\"",
              "createdAt": "2024-10-08T18:08:19Z",
              "updatedAt": "2024-10-08T18:08:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZk2h",
          "commit": {
            "abbreviatedOid": "2d0bc55"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T20:52:36Z",
          "updatedAt": "2024-10-08T20:59:28Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe integrity of public and private key material and the secrecy of private key material must be ensured at all times.\r\n```",
              "createdAt": "2024-10-08T20:52:36Z",
              "updatedAt": "2024-10-08T20:59:28Z"
            },
            {
              "originalPosition": 27,
              "body": "Security considerations seem to be scoped toward Verifiers. But it may also apply to the entities that supply verifier inputs as well? The CoRIM draft primarily is a definition of a wire format that describes Endorsement and RV inputs to a Verifier. Nevertheless, whether describing security considerations from the perspective of Verifiers, Endorsers, or RVPs; the standard set of key management guidelines applies to all the roles (more precisely, to all the entities that implement one or more of the roles).",
              "createdAt": "2024-10-08T20:59:20Z",
              "updatedAt": "2024-10-08T20:59:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MZoaV",
          "commit": {
            "abbreviatedOid": "2d0bc55"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T21:01:18Z",
          "updatedAt": "2024-10-08T21:01:24Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-10-08T21:01:18Z",
              "updatedAt": "2024-10-08T21:01:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MgpgU",
          "commit": {
            "abbreviatedOid": "2d0bc55"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T14:39:38Z",
          "updatedAt": "2024-10-09T14:39:38Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "SOC type 2 audits, software component analysis against CVE databases (e.g., GUAC), SLSA for code handling",
              "createdAt": "2024-10-09T14:39:38Z",
              "updatedAt": "2024-10-09T14:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Mg2uu",
          "commit": {
            "abbreviatedOid": "24ce862"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-09T14:59:14Z",
          "updatedAt": "2024-10-09T14:59:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 313,
      "id": "PR_kwDOH6-tI85-G_dK",
      "title": "Define raw public key",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/313",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Raw still needs an encoding. Taking this to mean the RawPublicKey encoding defined in TLS 1.3.",
      "createdAt": "2024-10-09T17:11:17Z",
      "updatedAt": "2024-10-11T14:29:44Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "494a7f017562f375cf240209b68b4f98614b8c4d",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "rawpk",
      "headRefOid": "db1e578b4390cc35b1827bddbd04b5658acd3698",
      "closedAt": "2024-10-11T14:29:43Z",
      "mergedAt": "2024-10-11T14:29:43Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "42bd6ae7e85bcee5da53f1ee91fc824e958836a6"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "It's SubjectPublicKeyInfo from RFC5280.\r\n\r\nHaven't checked but we should have that defined somewhere already - I am pretty sure, because it's what we use for PSA/CCA",
          "createdAt": "2024-10-09T18:25:15Z",
          "updatedAt": "2024-10-09T18:25:15Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The corim spec and the TCG endorsement spec clarifies it as a PEM encoded SubjectPublicKeyInfo and points to Section 13 in RFC7468.",
          "createdAt": "2024-10-09T18:27:48Z",
          "updatedAt": "2024-10-09T18:27:48Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It would be helpful to file an issue before creating a PR so that there is opportunity to explore the problem a bit and to determine what/if a PR is needed.",
          "createdAt": "2024-10-09T18:56:41Z",
          "updatedAt": "2024-10-09T18:56:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86MjBEX",
          "commit": {
            "abbreviatedOid": "62994c8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T18:52:01Z",
          "updatedAt": "2024-10-09T18:58:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This RFC doesn't define raw public key directly. Rather it defines: \r\n```\r\ncase RawPublicKey:\r\n              opaque ASN.1_subjectPublicKeyInfo<1..2^24-1>;\r\n```\r\nBut this seems to be referring to a TLS encoding of ASN.1 that is defined in RFC5280.\r\n\r\nThe key thumbprint refers to a digest of a raw key (as defined by `tagged-pkix-base64-key-type`) \r\nhttps://datatracker.ietf.org/doc/html/rfc7093 describes techniques for generating digests of SubjectPublicKeyInfo that is DER encoding. Since another PR added DER encoded key type. Possibly, it makes sense to define a thumbprint type that is the digest of the DER encoded SubjectPublicKeyInfo?\r\n\r\nI'm not aware of an RFC that defines a thumbprint for a PEM encoded SubjectPublicKeyInfo, but it may be sufficient for say that any digest algorithm can be applied to the PEM key. There isn't a need to reference anything as the output of a hash algorithm is bytes (bstr). \r\n\r\nSince, for the purposes of the Verifier, the comparison algorithm is to compare bytes (rather than to regenerate the digest using the clear-text input to a hash algorithm) there's little need to encode the algorithm.\r\n\r\nNote: `digests` encodes the alg-id for algorithm agility reasons.",
              "createdAt": "2024-10-09T18:52:01Z",
              "updatedAt": "2024-10-09T19:03:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MxxsQ",
          "commit": {
            "abbreviatedOid": "62994c8"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T02:55:13Z",
          "updatedAt": "2024-10-11T02:55:14Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I believe there is a need to describe the algorithm since key fingerprinting is ambiguous and folks will want to get around the rule that there should be no nontrivial key comparisons by converting their keys into multiple formats (also is there a meaningful difference to diverge from the more common term 'fingerprint' with 'thumbprint'?)",
              "createdAt": "2024-10-11T02:55:14Z",
              "updatedAt": "2024-10-11T02:55:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M0EWZ",
          "commit": {
            "abbreviatedOid": "62994c8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T10:15:05Z",
          "updatedAt": "2024-10-11T10:15:05Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "> I believe there is a need to describe the algorithm since key fingerprinting is ambiguous and folks will want to get around the rule that there should be no nontrivial key comparisons by converting their keys into multiple formats\r\n\r\nMethod 1 described in [S4.2.1.2 of RFC5280](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.2)?\r\n\r\n> (also is there a meaningful difference to diverge from the more common term 'fingerprint' with 'thumbprint'?)\r\n\r\nMaybe we could just call it \"key identifier\" and avoid any colloquialisms.\r\n",
              "createdAt": "2024-10-11T10:15:05Z",
              "updatedAt": "2024-10-11T10:15:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M18DR",
          "commit": {
            "abbreviatedOid": "db1e578"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-11T14:28:21Z",
          "updatedAt": "2024-10-11T14:28:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86M18E1",
          "commit": {
            "abbreviatedOid": "db1e578"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-11T14:28:24Z",
          "updatedAt": "2024-10-11T14:28:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86M18cn",
          "commit": {
            "abbreviatedOid": "b9a57c5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "we'll come back to the use of normative language here via #317",
          "createdAt": "2024-10-11T14:29:06Z",
          "updatedAt": "2024-10-11T14:29:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 315,
      "id": "PR_kwDOH6-tI85-JNWP",
      "title": "Issue 303 fixes",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/315",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Addresses issue #303 consensus regarding anonymous mkey entries.",
      "createdAt": "2024-10-10T00:17:54Z",
      "updatedAt": "2024-10-11T14:14:46Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "eec1681a910e014d708ffc4bcfbfd851784de2fc",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "issue-303-fixes",
      "headRefOid": "6987db1dd8462d805faa0ad07d8e3738e4bbead0",
      "closedAt": "2024-10-11T14:14:42Z",
      "mergedAt": "2024-10-11T14:14:42Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "494a7f017562f375cf240209b68b4f98614b8c4d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86MlWY6",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-10T00:33:32Z",
          "updatedAt": "2024-10-10T00:33:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86MprU0",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nI have left a non-blocking observation on readability",
          "createdAt": "2024-10-10T10:08:13Z",
          "updatedAt": "2024-10-10T10:09:02Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "A tough nut to parse.  I am wondering whether pseudo-code would be a better fit for describing this kind of stuff.",
              "createdAt": "2024-10-10T10:08:13Z",
              "updatedAt": "2024-10-10T10:09:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Mp0KT",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-10T10:18:00Z",
          "updatedAt": "2024-10-10T10:18:00Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "for example, something like (to be checked):\r\n```\r\nforeach e in CET.endorsements:\r\n  copy(e.endorsed-triple-record.condition.environment-map, ECT.ev.addition.environment)\r\n  copy(e.endorsed-triple-record.entries, ECT.ev.addition.element-list)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
              "createdAt": "2024-10-10T10:18:00Z",
              "updatedAt": "2024-10-10T10:20:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MwdSd",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-10T22:16:38Z",
          "updatedAt": "2024-10-10T22:16:38Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Is dot notation universal enough that readers won't be confused by it? For example, the CDDL RFC says \"CDDL allows the specification of a data item type by referring to the\r\n   CBOR representation (specifically, to major types and additional\r\n   information; see [Section 2 of [RFC7049]](https://www.rfc-editor.org/rfc/rfc7049#section-2)).\"\r\nBut I don't think that text is describing this convention. ",
              "createdAt": "2024-10-10T22:16:38Z",
              "updatedAt": "2024-10-10T22:16:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MweXI",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-10T22:19:03Z",
          "updatedAt": "2024-10-10T22:19:03Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I might favor using back quotes for each CDDL expression so the dot isn't inside of a back quoted section. Such as:\r\n\r\n`e`.`endorsed-triple-record`.`condition`.`environment-map`",
              "createdAt": "2024-10-10T22:19:03Z",
              "updatedAt": "2024-10-10T22:19:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86MxTjG",
          "commit": {
            "abbreviatedOid": "39325d5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T01:20:35Z",
          "updatedAt": "2024-10-11T01:20:35Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Addressed in commit https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/315/commits/d43b90eff26c3abea4ae8879b0ee47a036612b2e",
              "createdAt": "2024-10-11T01:20:35Z",
              "updatedAt": "2024-10-11T01:20:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M1zoi",
          "commit": {
            "abbreviatedOid": "6987db1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "thanks for all the polish!",
          "createdAt": "2024-10-11T14:13:05Z",
          "updatedAt": "2024-10-11T14:13:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 318,
      "id": "PR_kwDOH6-tI85-XCzX",
      "title": "Cryptographic validation of Evidence with attest-key-triple",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/318",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Validation is specific to a method. This reorganizes example methods into subsections and adds a new example based on attest-key-triple and CoTS.\r\n\r\nThis is an attempt to make actionable \"key lookup\" normative language as marked in Issue #317.\r\n\r\nThis is an attempt to resolve the ae verification concern in Issue #314.",
      "createdAt": "2024-10-11T16:02:46Z",
      "updatedAt": "2024-10-13T21:45:42Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "42bd6ae7e85bcee5da53f1ee91fc824e958836a6",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "attest-key-process",
      "headRefOid": "7ce756572837bed69da80a0589594daee3462336",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86M3L5H",
          "commit": {
            "abbreviatedOid": "7ce7565"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T17:26:42Z",
          "updatedAt": "2024-10-11T17:26:42Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Given this topic is still relatively fresh, I understand the reluctance to add strong statements.  However, these MAYs totally lack bite.  I think a better way to phrase this is to state clear requirements under a set of well-defined circumstances.  For example:\r\n\r\n> If `attest-key-triple`s are used during phase 1 for evidence verification, then:\r\n> * The verifier MUST ...\r\n> * The verifier SHOULD ...\r\n",
              "createdAt": "2024-10-11T17:26:42Z",
              "updatedAt": "2024-10-11T17:26:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M3Znk",
          "commit": {
            "abbreviatedOid": "7ce7565"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T18:04:52Z",
          "updatedAt": "2024-10-11T18:04:52Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Okay, if I use this method in the SEV-SNP CoRIM profile, then I can add that normative language for the profile, but this is still an example, and that profile doesn't _actually_ use CoRIMs in this way.\r\n\r\nFor that profile I will still be making suggestions that Verifiers include a CoTS tag binding the SEV-SNP attestation class-id for the AMD-published keys as an implicit input, and then treating VCEK certificates from KDS as \"virtual\" attest-key-triples, since they don't issue CoRIMs.\r\n\r\nWhen I describe translating an ATTESTATION_REPORT to claim structure that lines up with reference values in the CoRIM profile, I still describe the whole verification scheme.\r\n\r\nIt all just feels more like a mental exercise than an actual use of the CoRIM representation.",
              "createdAt": "2024-10-11T18:04:52Z",
              "updatedAt": "2024-10-11T18:04:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M3cIx",
          "commit": {
            "abbreviatedOid": "7ce7565"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T18:12:05Z",
          "updatedAt": "2024-10-11T18:12:05Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "We seem to have similar requirements for PSA/CCA.  Maybe we could sit down and see if we can extract a core set of requirements that are profile-independent.",
              "createdAt": "2024-10-11T18:12:05Z",
              "updatedAt": "2024-10-11T18:12:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M4HDM",
          "commit": {
            "abbreviatedOid": "7ce7565"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T20:26:00Z",
          "updatedAt": "2024-10-11T20:26:01Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "The verifier will accept Evidence assertions so long as the channel to the Attester is authenticated (but not attested). Attest-key triple is not second guessing this assumption.\r\n\r\nPhase 3 (corroboration of ref values) may be a better phase to process attest-key triples since the enforcement of a key measurement that fails key verification would reasonably result in that measurement NOT being corroborated. \r\n\r\nIt might make sense to require the RIM author to include RV triples that do binary compare operations as a pre-requisite to applying attest-key processing.",
              "createdAt": "2024-10-11T20:26:01Z",
              "updatedAt": "2024-10-11T20:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86M9wZ3",
          "commit": {
            "abbreviatedOid": "7ce7565"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-13T21:45:42Z",
          "updatedAt": "2024-10-13T21:45:42Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "RV triples that do binary compare operations of what? I'm not following.",
              "createdAt": "2024-10-13T21:45:42Z",
              "updatedAt": "2024-10-13T21:45:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 323,
      "id": "PR_kwDOH6-tI85-me0a",
      "title": "Update prose to reflect authorized-by and authority processing",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/323",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Issue #293 and #159 are addressed by this PR. Some section naming cleanup also applied.",
      "createdAt": "2024-10-14T22:57:50Z",
      "updatedAt": "2024-10-18T18:03:35Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "a5a32094d40ce9f33bd0b09f8dbb77f9891f68ff",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "authorized-by-cleanup",
      "headRefOid": "a6a3a64fb87ec9d1e85122583c45f350db062637",
      "closedAt": "2024-10-18T18:03:29Z",
      "mergedAt": "2024-10-18T18:03:29Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "cef560ec815f27d0289991aefa912ada22ac8f65"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86NbOBV",
          "commit": {
            "abbreviatedOid": "52025ff"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T14:40:49Z",
          "updatedAt": "2024-10-16T14:40:50Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe supply chain entity that is responsible for providing a triple (i.e., Reference Values or Endorsed Values)\r\nis by default the CoRIM signer. The signer of a triple is said to be its *authority*.\r\n```",
              "createdAt": "2024-10-16T14:40:50Z",
              "updatedAt": "2024-10-16T14:40:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NbUDq",
          "commit": {
            "abbreviatedOid": "52025ff"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-16T14:49:44Z",
          "updatedAt": "2024-10-16T14:49:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86NbVmz",
          "commit": {
            "abbreviatedOid": "c9c57b0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T14:52:01Z",
          "updatedAt": "2024-10-16T14:52:02Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "```suggestion\r\nIf multiple Claims have the same name and the measurement values are equivalent, they are considered *duplicates*.\r\n```",
              "createdAt": "2024-10-16T14:52:01Z",
              "updatedAt": "2024-10-16T14:52:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NbV6d",
          "commit": {
            "abbreviatedOid": "c9c57b0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T14:52:26Z",
          "updatedAt": "2024-10-16T14:52:26Z",
          "comments": [
            {
              "originalPosition": 184,
              "body": "Reads redundant to L2151",
              "createdAt": "2024-10-16T14:52:26Z",
              "updatedAt": "2024-10-16T14:52:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nbcyf",
          "commit": {
            "abbreviatedOid": "c9c57b0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T14:59:43Z",
          "updatedAt": "2024-10-16T14:59:43Z",
          "comments": [
            {
              "originalPosition": 190,
              "body": "If this is intended to be different from https://www.rfc-editor.org/rfc/rfc8949.html#name-basic-validity I would not recommend it.",
              "createdAt": "2024-10-16T14:59:43Z",
              "updatedAt": "2024-10-16T14:59:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NbnEM",
          "commit": {
            "abbreviatedOid": "c9c57b0"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T15:14:27Z",
          "updatedAt": "2024-10-16T15:14:28Z",
          "comments": [
            {
              "originalPosition": 190,
              "body": "It\u2019s the duplicate key basic validity condition for maps if we\u2019re thinking about map merging.\r\n\u201cname\u201d is maybe not clear as being the combination of environment map, mkey, and authority around the measurement values map.",
              "createdAt": "2024-10-16T15:14:27Z",
              "updatedAt": "2024-10-16T15:14:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NcUnU",
          "commit": {
            "abbreviatedOid": "c9c57b0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T16:15:29Z",
          "updatedAt": "2024-10-16T16:15:29Z",
          "comments": [
            {
              "originalPosition": 190,
              "body": "earlier text defined \"name\" so that the verbose explanation of the combination of the environment-map and the element-id doesn't have to be repeated multiple times in subsequent text referring to \"name\".",
              "createdAt": "2024-10-16T16:15:29Z",
              "updatedAt": "2024-10-16T16:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NckZg",
          "commit": {
            "abbreviatedOid": "f13c7b0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-16T16:36:51Z",
          "updatedAt": "2024-10-16T16:36:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Nmvx-",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:33:25Z",
          "updatedAt": "2024-10-17T16:33:26Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n For example, the signer of the measurement Claims present in the `measurement-map`\r\n```",
              "createdAt": "2024-10-17T16:33:25Z",
              "updatedAt": "2024-10-17T16:33:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nmxs1",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:37:31Z",
          "updatedAt": "2024-10-17T16:37:31Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "\r\n```suggestion\r\nFor supply chain use cases, where the CoRIM signer can be an Integrator of the various measured elements supplied by different authorities, an optional `authorized-by` statement can be supplied in the `measurement-map`.\r\n```",
              "createdAt": "2024-10-17T16:37:31Z",
              "updatedAt": "2024-10-17T16:37:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NmzE_",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:40:32Z",
          "updatedAt": "2024-10-17T16:40:32Z",
          "comments": [
            {
              "originalPosition": 197,
              "body": "```suggestion\r\nNevertheless, implementations may optimize ECT order, to achieve better performance.\r\n```",
              "createdAt": "2024-10-17T16:40:32Z",
              "updatedAt": "2024-10-17T16:40:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nmzj3",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I have requested few changes, so that the explanation ties well along with the CDDL representation. Otherwise, it leads to ambiguity!",
          "createdAt": "2024-10-17T16:41:34Z",
          "updatedAt": "2024-10-17T16:41:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Nm1cY",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See suggestion",
          "createdAt": "2024-10-17T16:45:44Z",
          "updatedAt": "2024-10-17T16:46:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This section is about the triples map generally. It seems premature to go into detail about authorized-by here. In about 100 lines further we introduce `authorized-by` and talk about it in detail. Wouldn't this text be better suited for that section?",
              "createdAt": "2024-10-17T16:45:44Z",
              "updatedAt": "2024-10-17T16:46:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm3QC",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:49:18Z",
          "updatedAt": "2024-10-17T16:49:18Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I don't think it is possible to sign just the measurement-map. Being overly precise about measurement-map seems to suggest it's possible to have different signers of measurement-map vs. environment-map. Or that triples that don't have measurement-map are possibly not signed. ",
              "createdAt": "2024-10-17T16:49:18Z",
              "updatedAt": "2024-10-17T16:49:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm4x4",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:52:43Z",
          "updatedAt": "2024-10-17T16:52:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "ok, then please move my suggested text to the section, which is 100 lines further from here (line 646).\r\n\r\nBut then please modify line 644 as follows.\r\n\r\n` In most cases, the supply chain entity that is responsible for providing a triple (i.e., Reference Values or Endorsed Values) is by default the CoRIM signer.\r\nThe signer of a triple is said to be its *authority*` However in special cases, more authorities may be involved in triples other than the CoRIM Signer. Please refer section XYZ for details`\r\n",
              "createdAt": "2024-10-17T16:52:43Z",
              "updatedAt": "2024-10-17T16:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm5Nh",
          "commit": {
            "abbreviatedOid": "5ca28b7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "see my suggestions!",
          "createdAt": "2024-10-17T16:53:40Z",
          "updatedAt": "2024-10-17T16:53:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Nm6CF",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:55:24Z",
          "updatedAt": "2024-10-17T16:55:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Note that issue #293 discusses use cases for authorized-by. There was consensus for use case 1 (authorized-by in conditions used for searching ECTs) makes sense.\r\nThere wasn't consensus for any of the other use cases, all of which had some form of including authorized-by in an addition field.\r\nThe suggested text seems to anticipate one of the use cases other than use case 1? ",
              "createdAt": "2024-10-17T16:55:24Z",
              "updatedAt": "2024-10-17T16:55:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm64i",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:57:14Z",
          "updatedAt": "2024-10-17T16:57:14Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "ok, fine please ignore my comment.!",
              "createdAt": "2024-10-17T16:57:14Z",
              "updatedAt": "2024-10-17T16:57:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm6-L",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:57:25Z",
          "updatedAt": "2024-10-17T16:57:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I am resolving this comment now!",
              "createdAt": "2024-10-17T16:57:25Z",
              "updatedAt": "2024-10-17T16:57:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm78o",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:59:34Z",
          "updatedAt": "2024-10-17T16:59:34Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": ">Please refer section XYZ for details\r\n\r\nIs XYZ intended to point to Section 4.1.5 Entities? Here we defined \"manifest-creator\" role.",
              "createdAt": "2024-10-17T16:59:34Z",
              "updatedAt": "2024-10-17T16:59:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm8-W",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:01:42Z",
          "updatedAt": "2024-10-17T17:01:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "XYZ should be the place where we define triple semantics and each element of the triple.!\r\n\r\n",
              "createdAt": "2024-10-17T17:01:42Z",
              "updatedAt": "2024-10-17T17:01:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm-Nh",
          "commit": {
            "abbreviatedOid": "5ca28b7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:04:22Z",
          "updatedAt": "2024-10-17T17:04:28Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Section 5.1.4 Triples?",
              "createdAt": "2024-10-17T17:04:22Z",
              "updatedAt": "2024-10-17T17:04:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm-a9",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:04:50Z",
          "updatedAt": "2024-10-17T17:04:50Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I think, we need to be clear if we are ONLY catering to Use Case 1, then we need to add a github issue, in the document, to state that their may be cases, where more than one authorities may be involved in supplying measurements to a Verifier. Such scenarios are not explored yet. However the place holder is present in CDDL to express authority of supplier of multiple measurement Claims(via measurement-map) and Triples via expression of multiple triples in a CoRIM.",
              "createdAt": "2024-10-17T17:04:50Z",
              "updatedAt": "2024-10-17T17:04:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nm-vg",
          "commit": {
            "abbreviatedOid": "5ca28b7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Please see my later comment to resolve the deadlock and move on!",
          "createdAt": "2024-10-17T17:05:31Z",
          "updatedAt": "2024-10-17T17:05:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86Nm-9k",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:06:02Z",
          "updatedAt": "2024-10-17T17:06:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> Section 5.1.4 Triples?\r\n\r\nYes",
              "createdAt": "2024-10-17T17:06:02Z",
              "updatedAt": "2024-10-17T17:06:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NnCif",
          "commit": {
            "abbreviatedOid": "5ca28b7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:13:32Z",
          "updatedAt": "2024-10-17T17:13:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Sticking to use case 1. That means only the condition ECTs will populate authorized-by. It might still be reasonable for search criteria to differ given multiple measurement-maps. For example, COSE_Sign1 allows multiple signers. That would be realized by ECT.authority having multiple entries. It is reasonable for the condition in one authorized-by to name one of the signers and for another authorized-by to name another. \r\n\r\nThe current schema isn't broken, but we don't necessarily provide guidance text for all the possible ways the schema might be used. That might be better suited for an informational RFC or a white paper of some kind.",
              "createdAt": "2024-10-17T17:13:32Z",
              "updatedAt": "2024-10-17T17:13:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NnEEG",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T17:16:59Z",
          "updatedAt": "2024-10-17T17:16:59Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> Sticking to use case 1. That means only the condition ECTs will populate authorized-by. It might still be reasonable for search criteria to differ given multiple measurement-maps. For example, COSE_Sign1 allows multiple signers. That would be realized by ECT.authority having multiple entries. It is reasonable for the condition in one authorized-by to name one of the signers and for another authorized-by to name another.\r\n> \r\n> The current schema isn't broken, but we don't necessarily provide guidance text for all the possible ways the schema might be used. That might be better suited for an informational RFC or a white paper of some kind.\r\n\r\nThe CDDL and explanation is out of sync, all I am trying to do is to clarify what is in the document and what CDDL is representing, just trying to let them be in sync.",
              "createdAt": "2024-10-17T17:16:59Z",
              "updatedAt": "2024-10-17T17:16:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NnKEG",
          "commit": {
            "abbreviatedOid": "e6127f5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-17T17:28:59Z",
          "updatedAt": "2024-10-17T17:37:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86No2Ao",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T21:03:39Z",
          "updatedAt": "2024-10-17T21:03:39Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Perhaps a compromise for wording can be \r\n\r\nIf additions populate authorized-by with any key different from the CoRIM Issuer's, then the CoRIM Issuer MUST be an authorized delegate of the alternate key for the purpose of assigning authority to the Claims in question.\r\nBy default, no key is an authorized delegate for any other key for any Claim.\r\nThe definition of an authorized delegate is a policy decision outside the scope of this document.\r\n",
              "createdAt": "2024-10-17T21:03:39Z",
              "updatedAt": "2024-10-17T21:03:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86NplTH",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T23:03:30Z",
          "updatedAt": "2024-10-17T23:03:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> If additions populate authorized-by\r\n\r\nWhile I agree with the guidance text above, I can't point to any transformation text that populates additions. This was by design because we said we'd only focus on use case 1 for now.",
              "createdAt": "2024-10-17T23:03:30Z",
              "updatedAt": "2024-10-17T23:03:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nptm1",
          "commit": {
            "abbreviatedOid": "c20d97f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T23:14:30Z",
          "updatedAt": "2024-10-17T23:14:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> The CDDL and explanation is out of sync, all I am trying to do is to clarify what is in the document and what CDDL is representing, just trying to let them be in sync.\r\n\r\nI'm not sure what is out of sync (if my latest text didn't clarify it sufficiently). These edits are in the Triples section already, so there's no point in self-referencing it. \r\n\r\nI honestly think the original text was sufficient for this section. It merely introduced some terminology that is used later. The new text seems reasonable too, but is on the edge of getting ahead of ourselves as we're just explaining what a triple is right now.",
              "createdAt": "2024-10-17T23:14:30Z",
              "updatedAt": "2024-10-17T23:14:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 325,
      "id": "PR_kwDOH6-tI85-m1iT",
      "title": "Allow mkey tstr",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/325",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added tstr to $measured-element-type-choice.\r\n\r\nFix #312",
      "createdAt": "2024-10-15T00:40:55Z",
      "updatedAt": "2024-10-16T14:05:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "42bd6ae7e85bcee5da53f1ee91fc824e958836a6",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "allow-mkey-tstr",
      "headRefOid": "eac7ec20783d4382a57f56f8384aae65f2080409",
      "closedAt": "2024-10-16T14:04:59Z",
      "mergedAt": "2024-10-16T14:04:59Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "a5a32094d40ce9f33bd0b09f8dbb77f9891f68ff"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86NJMJo",
          "commit": {
            "abbreviatedOid": "eac7ec2"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T02:47:45Z",
          "updatedAt": "2024-10-15T02:47:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86NLimm",
          "commit": {
            "abbreviatedOid": "eac7ec2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-15T08:54:41Z",
          "updatedAt": "2024-10-15T08:54:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86NLmKn",
          "commit": {
            "abbreviatedOid": "eac7ec2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T09:00:14Z",
          "updatedAt": "2024-10-15T09:00:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 326,
      "id": "PR_kwDOH6-tI85-uCZD",
      "title": "Conditional endorsement series triple section reworded",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/326",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added description to conditional series triple to address issues #310 and #321.\r\nUpdated example [here](https://github.com/ietf-rats-wg/draft-ietf-rats-corim/blob/cond-series-wording/cddl/examples/comid-series.diag) to better illustrate a use case.",
      "createdAt": "2024-10-15T19:07:50Z",
      "updatedAt": "2024-10-24T22:16:01Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "cond-series-wording",
      "headRefOid": "9834a8c8c0fc813cb3bd056f907ca04878209980",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86NalpX",
          "commit": {
            "abbreviatedOid": "707ab32"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-16T13:50:29Z",
          "updatedAt": "2024-10-16T13:59:50Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Can we make this a syntactically valid 6.554 value like in the referenced documentation?\r\n\r\n-----BEGIN PUBLIC KEY-----\\nMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEn1LlwLN/KBYQRVH6HfIMTzfEqJOVztLe\\nkLchp2hi78cCaMY81FBlYs8J9l7krc+M4aBeCGYFjba+hiXttJWPL7ydlE+5UG4U\\nNkn3Eos8EiZByi9DVsyfy9eejh+8AXgp\\n-----END PUBLIC KEY-----",
              "createdAt": "2024-10-16T13:50:29Z",
              "updatedAt": "2024-10-16T13:59:50Z"
            },
            {
              "originalPosition": 63,
              "body": "```suggestion\r\n          [ / conditional-series-record #3 /\r\n```\r\n2 is already used.",
              "createdAt": "2024-10-16T13:54:09Z",
              "updatedAt": "2024-10-16T13:59:50Z"
            },
            {
              "originalPosition": 7,
              "body": "The ordering leads to negative conditions in the head of the rule still. The possible evaluation inconsistency from Issue #321 remains.\r\n\r\nIf the conditions are mutually-exclusive, then there's no need to order them and the triple is syntactic sugar for multiple normal conditions.\r\nIf the conditions are not mutually-exclusive, then you need a way to stratify condition matching to regain logical consistency.\r\n\r\nGiven that you haven't stated any condition, I don't know what your intention is here.",
              "createdAt": "2024-10-16T13:59:47Z",
              "updatedAt": "2024-10-16T13:59:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Na2N7",
          "commit": {
            "abbreviatedOid": "707ab32"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T14:12:17Z",
          "updatedAt": "2024-10-16T14:12:17Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Issue #327 ",
              "createdAt": "2024-10-16T14:12:17Z",
              "updatedAt": "2024-10-16T14:12:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Nc7wG",
          "commit": {
            "abbreviatedOid": "707ab32"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T17:14:22Z",
          "updatedAt": "2024-10-16T17:14:22Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "> Issue #327\r\n\r\nGiven issue #327 addresses the concern. It doesn't need to be addressed in this PR.",
              "createdAt": "2024-10-16T17:14:22Z",
              "updatedAt": "2024-10-16T17:14:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 329,
      "id": "PR_kwDOH6-tI85-4m79",
      "title": "Section restructuring",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/329",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Created a section for acs augmentation and put ACS requirements, and phase 2 - 4 sections inside. order of triple processing became part of ACS requirements and augmentation using CoMID triples became introduction to the new ACS augmentation section\r\n\r\nThis PR addresses issues #320 and #324\r\n\r\nNote that PR #323 overlaps this PR possibly requiring manual merge.",
      "createdAt": "2024-10-16T20:21:20Z",
      "updatedAt": "2024-10-23T18:20:39Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "69cb6fdf09c2cb88e714e49e5df1717c593ebadd",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "Section-restructuring",
      "headRefOid": "7e7ff12de841c739b2e57072769646403fb001ca",
      "closedAt": "2024-10-23T18:20:28Z",
      "mergedAt": "2024-10-23T18:20:28Z",
      "mergedBy": "nedmsmith",
      "mergeCommit": {
        "oid": "866e582ea9c17cd57739557202ee95df76e600f0"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith Are you proposing ACS Addition Sections in this PR ahead of Defining the Triples ?\r\n\r\nif No, then sorry I mis-understood. If Yes, then we have a serious issue! ",
          "createdAt": "2024-10-17T17:13:16Z",
          "updatedAt": "2024-10-17T17:13:16Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n\r\nIgnore my earlier comment, I think i got the hang of the PR now!",
          "createdAt": "2024-10-17T17:14:44Z",
          "updatedAt": "2024-10-17T17:14:44Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR isn't trying to make content changes to sections. Merely moving sections around. There is still more work to do to get the content right.",
          "createdAt": "2024-10-17T17:33:25Z",
          "updatedAt": "2024-10-17T17:33:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86NgAbQ",
          "commit": {
            "abbreviatedOid": "67ec31c"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T01:46:25Z",
          "updatedAt": "2024-10-17T03:00:14Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "CoMID reference value matching isn\u2019t up to policy. We define it here?",
              "createdAt": "2024-10-17T01:46:26Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nThis document describes an example evidence structure which can be\r\n```",
              "createdAt": "2024-10-17T01:46:42Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            },
            {
              "originalPosition": 48,
              "body": "And the mkey",
              "createdAt": "2024-10-17T01:47:59Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            },
            {
              "originalPosition": 81,
              "body": "The order should not be important so long as additions are followed by triple processing that has a condition that could match it. We don\u2019t want to impose other order dependencies unless you need to stratify triple processing more explicitly.\r\n\r\nGiven that we\u2019re defining a processing order for base triples, it should also be allowable for profiles to specify when their triples get processed if indeed order is important. Will they always be after the base triples, or can they be specified to happen at any time?",
              "createdAt": "2024-10-17T02:57:22Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nLogically, the ACS represents the conjunction of all claims, so adding an ECT entry to the existing ACS at the end is equivalent to inserting it anywhere else.\r\n```",
              "createdAt": "2024-10-17T02:59:38Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nImplementations may optimize ECT order to achieve better performance.\r\n```",
              "createdAt": "2024-10-17T03:00:02Z",
              "updatedAt": "2024-10-17T03:00:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86OZRh4",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-23T14:36:20Z",
          "updatedAt": "2024-10-23T14:36:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZRoh",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-23T14:36:24Z",
          "updatedAt": "2024-10-23T14:36:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZTlQ",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-23T14:37:51Z",
          "updatedAt": "2024-10-23T14:37:51Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "refer issue #334 ",
              "createdAt": "2024-10-23T14:37:51Z",
              "updatedAt": "2024-10-23T14:37:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86OZU1b",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-23T14:39:38Z",
          "updatedAt": "2024-10-23T14:39:38Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "refer to issue #335",
              "createdAt": "2024-10-23T14:39:38Z",
              "updatedAt": "2024-10-23T14:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86OZVA3",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-23T14:39:53Z",
          "updatedAt": "2024-10-23T14:39:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZVBU",
          "commit": {
            "abbreviatedOid": "ac0b5dd"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-23T14:39:53Z",
          "updatedAt": "2024-10-23T14:39:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZXUQ",
          "commit": {
            "abbreviatedOid": "67ec31c"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-23T14:42:08Z",
          "updatedAt": "2024-10-23T14:42:08Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Issue #336",
              "createdAt": "2024-10-23T14:42:08Z",
              "updatedAt": "2024-10-23T14:42:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 331,
      "id": "PR_kwDOH6-tI85_L_vT",
      "title": "Add signing practice comment in security considerations.",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/331",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Thought this might be good to mention.",
      "createdAt": "2024-10-19T18:35:38Z",
      "updatedAt": "2024-10-30T15:46:31Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "cef560ec815f27d0289991aefa912ada22ac8f65",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "encctx",
      "headRefOid": "3500c8e727eef6b9f8466d838073a06c1e6a8dcd",
      "closedAt": "2024-10-30T15:46:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as per @deeglaze Suggestion, as the context is set by tag 501",
          "createdAt": "2024-10-30T15:46:31Z",
          "updatedAt": "2024-10-30T15:46:31Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 332,
      "id": "PR_kwDOH6-tI85_hq8M",
      "title": "Allow signing untagged corim-map",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/332",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There's no need to require the tag, and the veraison/corim package hasn't been tagging its payload.",
      "createdAt": "2024-10-22T23:52:01Z",
      "updatedAt": "2024-10-23T14:30:43Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "27766e76f58b38ec5f7726c41051902026c74f8d",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "tagpayload",
      "headRefOid": "5a16a2075a81c2fa99c39d38415bc736078c54ff",
      "closedAt": "2024-10-23T14:30:43Z",
      "mergedAt": "2024-10-23T14:30:43Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "69cb6fdf09c2cb88e714e49e5df1717c593ebadd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86OY9-s",
          "commit": {
            "abbreviatedOid": "5068081"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-23T14:17:40Z",
          "updatedAt": "2024-10-23T14:17:41Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nCORIM_FRAGS +=corim-map.cddl\r\n```",
              "createdAt": "2024-10-23T14:17:41Z",
              "updatedAt": "2024-10-23T14:17:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86OZGUp",
          "commit": {
            "abbreviatedOid": "5068081"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-23T14:25:50Z",
          "updatedAt": "2024-10-23T14:25:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n payload: bstr .cbor tagged-corim-map  / corim-map\r\n```",
              "createdAt": "2024-10-23T14:25:50Z",
              "updatedAt": "2024-10-23T14:25:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86OZIRu",
          "commit": {
            "abbreviatedOid": "5a16a20"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-23T14:28:34Z",
          "updatedAt": "2024-10-23T14:28:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZJ0k",
          "commit": {
            "abbreviatedOid": "5a16a20"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-10-23T14:30:03Z",
          "updatedAt": "2024-10-23T14:30:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86OZKa0",
          "commit": {
            "abbreviatedOid": "5a16a20"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-23T14:30:32Z",
          "updatedAt": "2024-10-23T14:30:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 337,
      "id": "PR_kwDOH6-tI85_qJoz",
      "title": "Drop top level tagging requirement",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/337",
      "state": "OPEN",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Tagged type choices are not typical.\r\nI would go so far as to drop the 500 tag as the entrypoint to CoRIM altogether. NVIDIA is creating CoRIMs this way, but they are using a different content-type in the protected header. I think we can drop it in an follow-up.\r\n\r\nThis patch drops\r\n\r\n* the need to tag the type choice\r\n* the extensibility of concise-rim-type-choice, since extensibility is governed by a profile, and the profile is not known at this point in parsing.\r\n* the need to tag the signed corim, since it is a COSE-sign1 with an unambigiuous content-type, and COSE-sign1 already has its own tag.\r\n\r\nAddresses Issue #333, but 500 removal is TBD.",
      "createdAt": "2024-10-23T18:12:02Z",
      "updatedAt": "2024-10-30T22:24:33Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "topleveltag",
      "headRefOid": "7f35ed6f2dcf8279041cddc07fd9a8e2798f9db4",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR probably should have some examples that tests the new functionality.\r\n\r\nThe section \"Concise Reference Integrity Manifest (CoRIM)\" may need to be updated to describe the possibility for unsigned payloads.",
          "createdAt": "2024-10-23T18:53:43Z",
          "updatedAt": "2024-10-23T18:57:32Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Added a small change to the section about the specific #6.501 tag.",
          "createdAt": "2024-10-25T03:54:18Z",
          "updatedAt": "2024-10-25T03:54:18Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that this PR would allow four different tags (500, 501, 502, 18) instead of one (500) to represent a top-level CoRIM.",
          "createdAt": "2024-10-30T10:59:37Z",
          "updatedAt": "2024-10-30T10:59:37Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "> Note that this PR would allow four different tags (500, 501, 502, 18) instead of one (500) to represent a top-level CoRIM.\r\n\r\nI think this is the pattern for CBOR though. There\u2019s no single top level tag for COSE objects either.\r\n\r\n500 and 502 are for theoretical encoding options that I don\u2019t understand the justification for either.",
          "createdAt": "2024-10-30T12:38:25Z",
          "updatedAt": "2024-10-30T12:38:25Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Note that this PR would allow four different tags (500, 501, 502, 18) instead of one (500) to represent a top-level CoRIM.\r\n> \r\n> I think this is the pattern for CBOR though. There\u2019s no single top level tag for COSE objects either.\r\n> \r\n> 500 and 502 are for theoretical encoding options that I don\u2019t understand the justification for either.\r\n\r\nIn fact, I'd drop 500 for sure, and may also be convinced to drop 502 if offered one or two pints of Guinness :-)",
          "createdAt": "2024-10-30T12:54:16Z",
          "updatedAt": "2024-10-30T12:54:16Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Would the proposed solution allow both `500(signed-corim)` and `502(signed-corim)`? Would that be confusing?\r\n```\r\ncorim = (tagged-concise-rim-type-choice / concise-rim-type-choice)\r\ntagged-concise-rim-type-choice = #6.500(concise-rim-type-choice)\r\ntagged-signed-corim = #6.502(signed-corim)\r\nconcise-rim-type-choice /= tagged-corim-map\r\nconcise-rim-type-choice /= tagged-signed-corim\r\nconcise-rim-type-choice /= signed-corim\r\ntagged-corim-map = #6.501(corim-map)\r\ntagged-signed-corim = #6.502(signed-corim)\r\nsigned-corim = #6.18(COSE-Sign1-corim)\r\nCOSE-Sign1-corim = [\r\n  protected: bstr .cbor protected-corim-header-map\r\n  unprotected: unprotected-corim-header-map\r\n  payload: bstr .cbor (tagged-corim-map / corim-map)\r\n  signature: bstr\r\n]\r\n```\r\nIf #6.500 is dropped then wouldn't corim be defined as:\r\n```\r\ncorim = concise-rim-type-choice\r\nconcise-rim-type-choice /= #6.501(corim-map)\r\nconcise-rim-type-choice /= #6.502(signed-corim)\r\n```\r\nIf 502 is used, then the cose payload would  use `corim-map` instead of `tagged-corim-map`?\r\n",
          "createdAt": "2024-10-30T13:45:07Z",
          "updatedAt": "2024-10-30T13:45:07Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "We can say 502 is for signing envelopes that don't have their own CBOR tag or need further disambiguation.\r\n\r\n500 is generally a confusing representation choice, so I think we've lost that one..\r\nI can be convinced to have the payload always be 501-tagged for simplicity, it'll just invalidate cocli-signed CoRIMs. That's fine.",
          "createdAt": "2024-10-30T14:07:18Z",
          "updatedAt": "2024-10-30T14:08:14Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We can say 502 is for signing envelopes that don't have their own CBOR tag or need further disambiguation.\r\n> \r\n> 500 is generally a confusing representation choice, so I think we've lost that one.. I can be convinced to have the payload always be 501-tagged for simplicity, it'll just invalidate cocli-signed CoRIMs. That's fine.\r\n\r\nThe easiest, and most consistent, would be to always require 501 (even when found in 502) and 502.",
          "createdAt": "2024-10-30T14:25:21Z",
          "updatedAt": "2024-10-30T14:25:21Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "body": "Am I to understand that the MUST language in sec-corim-signed is not intended, and 502 is an anything-goes tag so long as the protected payload is a 501-tagged CBOR-encoded corim-map?",
          "createdAt": "2024-10-30T14:53:07Z",
          "updatedAt": "2024-10-30T14:53:07Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Am I to understand that the MUST language in sec-corim-signed is not intended,\r\n\r\nWhich MUST-language are you referring to?\r\n\r\n> and 502 is an anything-goes tag so long as the protected payload is a 501-tagged CBOR-encoded corim-map?\r\n\r\nNot sure, but at the moment we seem to have an inconsistency between CDDL and prose.  In S4.2 we say: _\"payload: A CBOR encoded *tagged* CoRIM.\"_, whilst the CDDL allows a \"naked\" `corim-map` alongside the tagged one.  Besides, \"CoRIM\" should be \"`corim-map`\".\r\n\r\n",
          "createdAt": "2024-10-30T15:02:07Z",
          "updatedAt": "2024-10-30T15:02:07Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "It was concluded in CoRIM Meeting 30th october to drop tag for #6.500 and propose the same change in TCG.\r\n\r\nAlso remove type extensibility from top level $concise-rim-type-choice, i.e. make it\r\nonly: `concise-rim-type-choice` ",
          "createdAt": "2024-10-30T15:43:25Z",
          "updatedAt": "2024-10-30T15:43:25Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 338,
      "id": "PR_kwDOH6-tI85_2PvM",
      "title": "Add COSE-Sign-corim for completeness",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/338",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The COSE specification allows for multiple sigantures, not just unprotected counter signatures. We should allow that representation with the same protected header requirements as COSE-Sign1-corim.",
      "createdAt": "2024-10-25T03:52:23Z",
      "updatedAt": "2024-10-30T20:34:17Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "deeglaze/draft-ietf-rats-corim",
      "headRefName": "cosign",
      "headRefOid": "97c4d858f0450660dde4ae1f83201a4871495328",
      "closedAt": "2024-10-30T20:34:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed, we decided to allow only single signer signatures (i.e., `COSE_Sign1`) to eliminate any ambiguity regarding the authority.",
          "createdAt": "2024-10-30T15:46:29Z",
          "updatedAt": "2024-10-30T15:46:29Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 341,
      "id": "PR_kwDOH6-tI85_-BLq",
      "title": "Verify key triples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/341",
      "state": "OPEN",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses the majority of issue #330 (but one challenge remains).\r\n\r\nExpanded examples may be needed.",
      "createdAt": "2024-10-26T00:38:33Z",
      "updatedAt": "2024-11-14T01:47:18Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "verify-key-triples",
      "headRefOid": "552e89fe4aaa76e4ab582324cdc1513633544161",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86O4DRs",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T05:57:18Z",
          "updatedAt": "2024-10-26T05:57:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This optional mkey is a parsing annoyance. Can we move the non-environment fields to a map? Backward compatibility can just select between array and map.",
              "createdAt": "2024-10-26T05:57:18Z",
              "updatedAt": "2024-10-26T05:57:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4DVU",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T05:59:51Z",
          "updatedAt": "2024-10-26T05:59:51Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I prefer the older wording",
              "createdAt": "2024-10-26T05:59:51Z",
              "updatedAt": "2024-10-26T05:59:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4DXi",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T06:00:58Z",
          "updatedAt": "2024-10-26T06:00:59Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "I find this harder to understand",
              "createdAt": "2024-10-26T06:00:58Z",
              "updatedAt": "2024-10-26T06:00:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4DeV",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T06:04:57Z",
          "updatedAt": "2024-10-26T06:04:57Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n* `authority-list`: An optional list of `$crypto-key-type-choice` keys that identifies the authorities that asserted the `key-list` in the target Evidence or Reference Values.\r\n```",
              "createdAt": "2024-10-26T06:04:57Z",
              "updatedAt": "2024-10-26T06:04:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4DkH",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T06:07:55Z",
          "updatedAt": "2024-10-26T06:07:56Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Similar to prior comment. Would like to check for violations of the restriction",
              "createdAt": "2024-10-26T06:07:56Z",
              "updatedAt": "2024-10-26T06:07:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4Dmb",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T06:09:14Z",
          "updatedAt": "2024-10-26T06:09:15Z",
          "comments": [
            {
              "originalPosition": 150,
              "body": "```suggestion\r\n* The `cmtype` of the `ev` entry's `addition` ECT is set to `endorsements`.\r\n```",
              "createdAt": "2024-10-26T06:09:15Z",
              "updatedAt": "2024-10-26T06:09:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86O4DnP",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-26T06:09:46Z",
          "updatedAt": "2024-10-26T06:09:46Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "```suggestion\r\n* Populate the `ev` `condition` ECT using either the `identity-triple-record` or `attest-key-triple-record` ({{sec-comid-triple-identity}}) as follows:\r\n```",
              "createdAt": "2024-10-26T06:09:46Z",
              "updatedAt": "2024-10-26T06:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PacpS",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-30T19:28:02Z",
          "updatedAt": "2024-10-30T19:28:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> This optional mkey is a parsing annoyance. Can we move the non-environment fields to a map? Backward compatibility can just select between array and map.\r\n\r\nCan you suggest what the map might look like?",
              "createdAt": "2024-10-30T19:28:02Z",
              "updatedAt": "2024-10-30T19:28:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PbHSi",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-30T20:32:56Z",
          "updatedAt": "2024-10-30T20:32:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I want to first know why we need these additions to begin with. mkeys are meant for measured components of an attested environment, so there should not be different attestation keys at the mkey level. Why do we need authorities when attestation keys should be accepted based an trust anchors?",
              "createdAt": "2024-10-30T20:32:56Z",
              "updatedAt": "2024-10-30T20:32:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Pp9qP",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-01T14:08:56Z",
          "updatedAt": "2024-11-01T14:08:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> there should not be different attestation keys at the mkey level. Why do we need authorities when attestation keys should be accepted based an trust anchors?\r\n\r\nThe mkey and authority fields (along with the other fields) are condition values used for searching / matching ACS entries. The matched entry defines the context for the addition entry which is to add an endorsement under verifier authority for the subset of keys that satisfy verification checks. The addition ACS entry is otherwise identical to the matched ACS entry. Since the current ECT structure has mkey/element it makes sense to enable searching based on the mkey/element. ",
              "createdAt": "2024-11-01T14:08:56Z",
              "updatedAt": "2024-11-01T14:08:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PqfrI",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-01T15:19:18Z",
          "updatedAt": "2024-11-01T15:19:18Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "reverted",
              "createdAt": "2024-11-01T15:19:18Z",
              "updatedAt": "2024-11-01T15:19:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ps72j",
          "commit": {
            "abbreviatedOid": "8c7a8ec"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-01T21:44:43Z",
          "updatedAt": "2024-11-01T21:44:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "okay, then I'd suggest the following:\r\n\r\n```\r\nidentity-triple = identity-triple-record / identity-triple-map\r\nidentity-triple-map = {\r\n  &(environment: 0) => environment-map\r\n  ? &(mkey: 1) => $measured-element-type-choice\r\n  &(key-list: 2) => [ + $crypto-key-type-choice ]\r\n  ? &(authority-list: 3) => [ + $crypto-key-type-choice ]\r\n}\r\n```\r\nand not change identity-triple-record.",
              "createdAt": "2024-11-01T21:44:43Z",
              "updatedAt": "2024-11-01T21:44:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuQO_",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:10:27Z",
          "updatedAt": "2024-11-02T15:10:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "What is wrong with the current proposal?",
              "createdAt": "2024-11-02T15:10:27Z",
              "updatedAt": "2024-11-02T15:10:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuQVf",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:13:53Z",
          "updatedAt": "2024-11-02T15:13:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Suppose $measured-element-type-choice is a list of tagged bytes that get misinterpreted as crypto-key-type-choice. Do you have mkey,key-list or key-list,authority-list?",
              "createdAt": "2024-11-02T15:13:53Z",
              "updatedAt": "2024-11-02T15:13:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuRbI",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:39:29Z",
          "updatedAt": "2024-11-02T15:39:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The triples map defines the identity triple as an array of `identity-triple-record`. All of the triples are defined in terms of records (and not maps). This was discussed at length.\r\n\r\nIf the new fields are placed at the end of the existing fields then the ambiguity goes away.\r\n```\r\n? &(identity-triples: 2) =>\r\n    [ + identity-triple-record ]\r\n\r\nidentity-triple-record = [\r\n  environment: environment-map\r\n  key-list: [ + $crypto-key-type-choice ]\r\n  ? mkey: $measured-element-type-choice\r\n  ? authority-list: [ + $crypto-key-type-choice ]\r\n]\r\n```\r\nIf mkey is omitted then the second list of crypto-key-type-choice is the authority-list. If mkey is included then it isn't confused with a key list.",
              "createdAt": "2024-11-02T15:39:29Z",
              "updatedAt": "2024-11-02T15:39:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuhKA",
          "commit": {
            "abbreviatedOid": "99bf3ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T16:55:17Z",
          "updatedAt": "2024-11-02T16:55:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I don't think the reordering avoids the ambiguity. I think you'd need to require that measured-element-type-choice must not be an array.",
              "createdAt": "2024-11-02T16:55:17Z",
              "updatedAt": "2024-11-02T16:55:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QKOxQ",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T15:12:14Z",
          "updatedAt": "2024-11-06T15:12:14Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nThe identity keys are bound to or associated with a Target Environment (as identified by `environment` and `mkey`\u2014see below) within the device.\r\n```",
              "createdAt": "2024-11-06T15:12:14Z",
              "updatedAt": "2024-11-06T15:12:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QKPNn",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T15:12:29Z",
          "updatedAt": "2024-11-06T15:12:30Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "emdash",
              "createdAt": "2024-11-06T15:12:29Z",
              "updatedAt": "2024-11-06T15:12:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QKXPw",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T15:18:04Z",
          "updatedAt": "2024-11-06T15:18:05Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "We're using a mix of . and / for following object structure. Looks like '.' is winning out, but please change the remaining / use \"ACS processing requirements\":\r\n\r\n> measurement-map/authorized-by asserts that the actual state of one or more Claims within the Target Environment, as identified by environment-map, have the measurement values in measurement-map/mval.",
              "createdAt": "2024-11-06T15:18:04Z",
              "updatedAt": "2024-11-06T15:18:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QKYVP",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T15:19:35Z",
          "updatedAt": "2024-11-06T15:19:35Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "This is a type mismatch. Do you want [key] or do you want to append key into `cryptokeys`?",
              "createdAt": "2024-11-06T15:19:35Z",
              "updatedAt": "2024-11-06T15:19:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QLN0x",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T16:29:51Z",
          "updatedAt": "2024-11-06T16:29:51Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "It should be append.",
              "createdAt": "2024-11-06T16:29:51Z",
              "updatedAt": "2024-11-06T16:29:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QLPMX",
          "commit": {
            "abbreviatedOid": "6215060"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T16:32:06Z",
          "updatedAt": "2024-11-06T16:32:06Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "should be an issue unless the cited text is part of the paragraphs touched by this PR. ",
              "createdAt": "2024-11-06T16:32:06Z",
              "updatedAt": "2024-11-06T16:32:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDZ-J",
          "commit": {
            "abbreviatedOid": "96d79ca"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:23:58Z",
          "updatedAt": "2024-11-13T15:23:58Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "okay",
              "createdAt": "2024-11-13T15:23:58Z",
              "updatedAt": "2024-11-13T15:23:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDbGi",
          "commit": {
            "abbreviatedOid": "96d79ca"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:25:12Z",
          "updatedAt": "2024-11-13T15:25:12Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "In which cases do you not follow the SHOULD as an implementer?",
              "createdAt": "2024-11-13T15:25:12Z",
              "updatedAt": "2024-11-13T15:25:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDfGa",
          "commit": {
            "abbreviatedOid": "96d79ca"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:30:36Z",
          "updatedAt": "2024-11-13T15:30:36Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "@deeglaze seems to have fixed the last remaining \"/\" in #346\r\n\r\nThis is resolved.",
              "createdAt": "2024-11-13T15:30:36Z",
              "updatedAt": "2024-11-13T15:30:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDmNb",
          "commit": {
            "abbreviatedOid": "96d79ca"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:40:31Z",
          "updatedAt": "2024-11-13T15:40:31Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "```suggestion\r\n* If key verification succeeds, **extend**(`ev`.`addition`.`element-list`.`element-map`.`element-claims`.`measurement-values-map`.`cryptokeys`, key).\r\n```\r\n\r\nNot sure what we're doing about adding to a list. Append? Extend?",
              "createdAt": "2024-11-13T15:40:31Z",
              "updatedAt": "2024-11-13T15:40:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDnzT",
          "commit": {
            "abbreviatedOid": "b628388"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:42:45Z",
          "updatedAt": "2024-11-13T15:42:45Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nVerifiers SHOULD enforce key use restrictions.\r\n```",
              "createdAt": "2024-11-13T15:42:45Z",
              "updatedAt": "2024-11-13T15:42:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDp3I",
          "commit": {
            "abbreviatedOid": "7b0c099"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T15:45:41Z",
          "updatedAt": "2024-11-13T15:45:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RDp73",
          "commit": {
            "abbreviatedOid": "96d79ca"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:45:47Z",
          "updatedAt": "2024-11-13T15:45:48Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nnon-empty<{\r\n   ? &(mkey: 0) => $measured-element-type-choice,\r\n   ? &(authorized-by: 2) => [ + $crypto-key-type-choice ] \r\n}>\r\n```\r\n\r\nI used authorized-by in this suggestion. What's the difference to authority-list?",
              "createdAt": "2024-11-13T15:45:48Z",
              "updatedAt": "2024-11-13T15:45:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDv6Y",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:54:09Z",
          "updatedAt": "2024-11-13T15:54:09Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not sure how the suggestion was pulled in. This was:\r\n\r\n```suggestion\r\n  ? mkey: $measured-element-type-choice\r\n  ? authority-list: [ + $crypto-key-type-choice ]\r\n```",
              "createdAt": "2024-11-13T15:54:09Z",
              "updatedAt": "2024-11-13T15:54:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDwfO",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:55:00Z",
          "updatedAt": "2024-11-13T15:55:00Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "What was the difference between authorized-by and authority-list?",
              "createdAt": "2024-11-13T15:55:00Z",
              "updatedAt": "2024-11-13T15:55:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REPWd",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-11-13T16:37:05Z",
          "updatedAt": "2024-11-13T16:39:51Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Needs updating with the added nesting.",
              "createdAt": "2024-11-13T16:37:05Z",
              "updatedAt": "2024-11-13T16:39:51Z"
            },
            {
              "originalPosition": 203,
              "body": "I'm thoroughly confused what point an attest-key-triple serves if it is exactly the same as an endorsement of a cryptokey. It loses information about the key usage for verifying evidence to just being about having some key provisioned to it.",
              "createdAt": "2024-11-13T16:39:45Z",
              "updatedAt": "2024-11-13T16:39:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REWvi",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T16:47:11Z",
          "updatedAt": "2024-11-13T16:47:11Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "@yogeshbdeshpande when PSA (not CCA) has its token verified with the IAK, \"the verification public key is looked up in the appraisal context using the ueid claim found in the PSA claims-set.\"\r\n\r\nThis appraisal context is separate from the ACS? It's some unmentioned data structure that associates an environment with the key that should be used to verify the PSA? If not, and there is an ECT representation of it, then how is the transformation in #341 that strips the `attest-key-triple` quality to make it just another `cryptokey` measurement supposed to maintain the integrity of that lookup process?",
              "createdAt": "2024-11-13T16:47:11Z",
              "updatedAt": "2024-11-13T16:47:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REe2K",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T16:56:01Z",
          "updatedAt": "2024-11-13T16:56:02Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "Hi @deeglaze : Veraison started when we did not had the concept of ACS within CoRIM draft, forget matching the exact data structure! However the concept of Appraisal context is the same as ACS. I would not prefer to explain too many details about Veraison implementation here, been this is a more generic CoRIM repo, but happy to explain it in a separate issue under Veraison repository!",
              "createdAt": "2024-11-13T16:56:01Z",
              "updatedAt": "2024-11-13T16:56:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RFAdG",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:43:07Z",
          "updatedAt": "2024-11-13T17:43:08Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "Appraisal Context in this document is used as a nebulous, \"stuff related to appraisal that we didn't represent in the ACS\".\r\nIf we're making attest-key-triple mean something more than an endorsement of an (attesting) environment holding a key, we need to disambiguate it in the ACS to make the evidence verification section self-contained. ",
              "createdAt": "2024-11-13T17:43:07Z",
              "updatedAt": "2024-11-13T17:43:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RHR4e",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T22:27:24Z",
          "updatedAt": "2024-11-13T22:27:25Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "> What was the difference between authorized-by and authority-list?\r\n\r\nnothing. This thread is outdated.",
              "createdAt": "2024-11-13T22:27:24Z",
              "updatedAt": "2024-11-13T22:31:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RHSwq",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T22:30:07Z",
          "updatedAt": "2024-11-13T22:30:07Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "The original text was actually wrong (append direction was reversed). The new text fixes this. \r\n\r\nThe other thread doesn't seem related to the cited text. Maybe it belongs somewhere else or take it to the issue instead of the PR?",
              "createdAt": "2024-11-13T22:30:07Z",
              "updatedAt": "2024-11-13T22:30:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RHk1Z",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T23:33:43Z",
          "updatedAt": "2024-11-13T23:33:43Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "> If we're making attest-key-triple mean something more than an endorsement of an (attesting) environment holding a key, we need to disambiguate it in the ACS to make the evidence verification section self-contained.\r\n\r\nWe're not. The ACS has an ECT that associates the name of the key with an environment. This exists under the authority of the RVP as well as the Attester.\r\n\r\nThe attest-key-triple asked the verifier to do key verification. As a result, the ACS has a third ECT entry identical to the first two, this time under the authority of the Endorser and the Verifier. The Endorser is the entity asking to do the key verify checks, and the Verifier is the entity that did the check. \r\n\r\nPutting it all together:\r\nstep 1: Attester says key _X exists in environment _E.\r\nstep 2: RVP says key _X is supposed to exist in env _E. (aka step 1 is corroborated)\r\nstep 3: Endorser says key _X is supposed to be verified.\r\nstep 4: Verifier says key _X was verified. \r\n\r\nAn RP may have a policy that wants to see all 4 steps. There are entries in the ACS for all 4.",
              "createdAt": "2024-11-13T23:33:43Z",
              "updatedAt": "2024-11-13T23:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RIJ6j",
          "commit": {
            "abbreviatedOid": "cdde887"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-14T01:47:18Z",
          "updatedAt": "2024-11-14T01:47:18Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "The triples are named wrong, then. We shouldn't say anything about attesting or identity of the triple just means the signer demands a check to be done. I don't like that though, since there's still nothing that cleanly says \"to get the attesting key for evidence of Target Environment E{layer n+1}, use the first cryptokey in E{layer n} (no mkey)\"\r\n\r\nA profile can of course say do something else, but as long as we're already translating everything to internal representations, I'd like to know in what senses I'm saying profile P's analog to evidence verification is \"treat X as Y\".",
              "createdAt": "2024-11-14T01:47:18Z",
              "updatedAt": "2024-11-14T01:47:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 343,
      "id": "PR_kwDOH6-tI86AjeYp",
      "title": "Provide proper Triples explaination",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/343",
      "state": "OPEN",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #310 ",
      "createdAt": "2024-10-31T17:45:34Z",
      "updatedAt": "2024-11-13T17:40:15Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "triples-explaination",
      "headRefOid": "09bb82446a6e8eda4079fec37a605888a7a5b742",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith, @thomas-fossati and @andrew-draper Kindly review the same, as discussed during the review!",
          "createdAt": "2024-11-13T16:10:02Z",
          "updatedAt": "2024-11-13T16:10:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86PkXA7",
          "commit": {
            "abbreviatedOid": "2a03203"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-31T17:46:57Z",
          "updatedAt": "2024-10-31T17:46:57Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nAn Endorsed Values triple provides additional Endorsements that are valid when a Target Environment has been verified against reference\tmeasurements. For Endorsed Values Claims, the subject is either a Target or Attesting Environment, the object contains Endorsements for one or more measured elements of an Environment, and the predicate defines semantics for how the object relates to the subject.\r\n```",
              "createdAt": "2024-10-31T17:46:57Z",
              "updatedAt": "2024-10-31T17:46:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Pm66m",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-01T01:46:30Z",
          "updatedAt": "2024-11-01T01:46:31Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nTo process `reference-triple-record` both the `ref-env` and `ref-claims` criteria are compared with Evidence entries.\r\nFirst `ref-env` is used as a Search criterion to locate the Evidence environment that matches the reference environment.\r\nSubsequently, the `ref-claims` from this triple are used to match against the Evidence measurements for the matched environment.\r\n```",
              "createdAt": "2024-11-01T01:46:30Z",
              "updatedAt": "2024-11-01T21:31:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PqdUZ",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-01T15:15:26Z",
          "updatedAt": "2024-11-01T15:15:26Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "`ref-claims` in last sentence is also missing back quotes.\r\nNote: It's easier to manage if each sentence starts a new line.",
              "createdAt": "2024-11-01T15:15:26Z",
              "updatedAt": "2024-11-01T15:15:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Ps5Nq",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-11-01T21:32:01Z",
          "updatedAt": "2024-11-01T21:38:50Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nAn Endorsed Values triple provides additional Endorsements that are valid when a Target Environment has been verified against reference measurements.\r\nFor Endorsed Values Claims, the subject is either a Target or Attesting Environment, the object contains Endorsements for one or more measured elements of an Environment, and the predicate defines semantics for how the object relates to the subject.\r\n```",
              "createdAt": "2024-11-01T21:32:01Z",
              "updatedAt": "2024-11-01T21:38:50Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nA Conditional Endorsement Triple declares one or more conditions that, once they match, cause every entry in the endorsements to be added to the accepted state.\r\nThe conditions are `stateful-environment-records` which match Target Environments from Evidence in certain reference state.\r\n```\r\n\r\nI think the example should be below the data definition and an a valid diag for better clarity.",
              "createdAt": "2024-11-01T21:37:49Z",
              "updatedAt": "2024-11-01T21:38:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuQZm",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:16:06Z",
          "updatedAt": "2024-11-02T15:16:06Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "> An Endorsed Values triple provides additional Endorsements that are valid when a Target Environment has been verified against reference measurements.\r\n\r\n```suggestion\r\nAn Endorsed Values triple provides additional Endorsements that are valid when a Target Environment has been verified against Reference Values or Evidence.\r\nFor Endorsed Values Claims, the _subject_ is a Target Environment, the _object_ contains Endorsement Claims for the Environment, and the _predicate_ defines semantics for how the _object_ relates to the _subject_.\r\n```",
              "createdAt": "2024-11-02T15:16:06Z",
              "updatedAt": "2024-11-02T15:19:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuQl8",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:21:57Z",
          "updatedAt": "2024-11-02T15:21:57Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Shouldn't the structure of a triple be described somewhere else in a section that applies to all triples not just Endorsed Value Triple? It shouldn't be repeated in every section having to do with triples. Clarification about what parts of the triple are subject and object might be needed however.",
              "createdAt": "2024-11-02T15:21:57Z",
              "updatedAt": "2024-11-02T15:21:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86PuQrK",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T15:24:41Z",
          "updatedAt": "2024-11-02T15:24:41Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "> A Conditional Endorsement Triple declares one or more conditions that, once they match, cause every entry in the endorsements to be added to the accepted state.\r\n> The conditions are `stateful-environment-records` which match Target Environments from Evidence in certain reference state.\r\n\r\n```suggestion\r\nA Conditional Endorsement Triple declares one or more conditions that, once they match, cause every entry in `endorsements` to be added to the accepted state.\r\nThe conditions are `stateful-environment-records` which match Target Environments from Evidence in certain reference state.\r\n```",
              "createdAt": "2024-11-02T15:24:41Z",
              "updatedAt": "2024-11-02T15:24:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86Pv7C-",
          "commit": {
            "abbreviatedOid": "0239db4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-02T19:11:07Z",
          "updatedAt": "2024-11-02T19:11:08Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Agree I will commit this suggestion",
              "createdAt": "2024-11-02T19:11:08Z",
              "updatedAt": "2024-11-02T19:11:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QKGfL",
          "commit": {
            "abbreviatedOid": "504306e"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-06T15:06:09Z",
          "updatedAt": "2024-11-06T15:08:47Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nA Conditional Endorsement Series triple uses a stateful environment, (i.e. `stateful-environment-record`), that identifies a Target Environment based on an `environment-map` plus the `measurement-map` measurements that have matching Evidence.\t\r\n```",
              "createdAt": "2024-11-06T15:06:09Z",
              "updatedAt": "2024-11-06T15:08:47Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nThe series object is an array of `conditional-series-record` that has both Reference and Endorsed Values.\r\nEach `conditional-series-record` record is evaluated in the order it appears in the series array.\r\nThe Endorsed Values are accepted if the series condition in a `conditional-series-record` matches the ACS.\r\nThe first `conditional-series-record` that successfully matches an ACS Entry terminates the matching and the corresponding Endorsed Values are accepted.\r\nIf none of the series conditions match an ACS Entry, the triple is not matched, and no Endorsed values are accepted.\t\r\n```\r\n\r\nWe still have the problem of needing to rule out negative matches based on lack of information. Please leave a link to https://github.com/ietf-rats-wg/draft-ietf-rats-corim/issues/321",
              "createdAt": "2024-11-06T15:08:39Z",
              "updatedAt": "2024-11-06T15:08:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QuFXH",
          "commit": {
            "abbreviatedOid": "504306e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-11T19:24:32Z",
          "updatedAt": "2024-11-11T19:24:32Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Done, I want to progress this PR first so that we  can discuss the Issue in #321 \r\n@deeglaze  please check ",
              "createdAt": "2024-11-11T19:24:32Z",
              "updatedAt": "2024-11-11T19:24:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86QvXa_",
          "commit": {
            "abbreviatedOid": "e9dee6f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-11T23:49:23Z",
          "updatedAt": "2024-11-11T23:49:23Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I think we got rid of this wording before because there is no requirement of verifying anything.",
              "createdAt": "2024-11-11T23:49:23Z",
              "updatedAt": "2024-11-11T23:49:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDUSA",
          "commit": {
            "abbreviatedOid": "e9dee6f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:17:00Z",
          "updatedAt": "2024-11-13T15:17:01Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nAn Endorsed Values triple provides additional Endorsements for an existing Target Environment.\r\n```",
              "createdAt": "2024-11-13T15:17:00Z",
              "updatedAt": "2024-11-13T15:17:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RDU7l",
          "commit": {
            "abbreviatedOid": "e9dee6f"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T15:17:41Z",
          "updatedAt": "2024-11-13T15:17:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RDVoD",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T15:18:39Z",
          "updatedAt": "2024-11-13T15:18:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RDWqI",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "deeglaze",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T15:20:06Z",
          "updatedAt": "2024-11-13T15:20:06Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nFor Endorsed Values Claims, the subject is a Target Environment, the object contains Endorsement Claims for the Environment, and the predicate defines semantics for how the object relates to the subject.\r\n```",
              "createdAt": "2024-11-13T15:20:06Z",
              "updatedAt": "2024-11-13T15:20:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REe-4",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T16:56:15Z",
          "updatedAt": "2024-11-13T16:56:15Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nFor a Reference Value triple, the subject identifies a Target Environment, the object contains reference measurements associated to one or more measured elements of the Environment, and the predicate asserts that these are expected (i.e., reference) measurements for the Target Environment.\r\n```",
              "createdAt": "2024-11-13T16:56:15Z",
              "updatedAt": "2024-11-13T16:56:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REfh7",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T16:57:03Z",
          "updatedAt": "2024-11-13T16:57:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n* `ref-env`: Identifies the Target Environment\r\n```",
              "createdAt": "2024-11-13T16:57:03Z",
              "updatedAt": "2024-11-13T16:57:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REgGl",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T16:58:00Z",
          "updatedAt": "2024-11-13T16:58:01Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nFirst `ref-env` is used as a search criterion to locate the Evidence environment that matches the reference environment.\r\n```",
              "createdAt": "2024-11-13T16:58:00Z",
              "updatedAt": "2024-11-13T16:58:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REh2G",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:00:25Z",
          "updatedAt": "2024-11-13T17:00:25Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "However, this seems phrased backwards, isn't it?  One uses the environment identifiers associated with the appraised evidence to locate the matching ref-triples.",
              "createdAt": "2024-11-13T17:00:25Z",
              "updatedAt": "2024-11-13T17:00:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REjKV",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:02:03Z",
          "updatedAt": "2024-11-13T17:02:03Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nAn Endorsed Values triple provides additional Endorsements - i.e., claims reflecting the actual state - for an existing Target Environment.\r\n```",
              "createdAt": "2024-11-13T17:02:03Z",
              "updatedAt": "2024-11-13T17:02:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REmIu",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:04:57Z",
          "updatedAt": "2024-11-13T17:04:58Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "unclear why `_` is used here (and not in the ref-value triple explainer)",
              "createdAt": "2024-11-13T17:04:58Z",
              "updatedAt": "2024-11-13T17:04:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REnFc",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:06:08Z",
          "updatedAt": "2024-11-13T17:06:09Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "have we already defined \"accepted state\" at this point?  If not, I suggest using a more intelligible term (e.g., actual state, as per I-D.ietf-rats-endorsements)",
              "createdAt": "2024-11-13T17:06:09Z",
              "updatedAt": "2024-11-13T17:07:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REni6",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:06:35Z",
          "updatedAt": "2024-11-13T17:06:35Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nThe conditions are expressed via `stateful-environment-records`, which match Target Environments from Evidence in certain reference state.\r\n```",
              "createdAt": "2024-11-13T17:06:35Z",
              "updatedAt": "2024-11-13T17:06:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REppA",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:10:12Z",
          "updatedAt": "2024-11-13T17:10:12Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "This reference to the internals is not in tune with the \"gentle introduction\" spirit of this PR.\r\n\r\n```suggestion\r\nA Conditional Endorsement Series triple uses a \"stateful environment\" that identifies a Target Environment plus the measurements that have matching Evidence.\t\r\n```",
              "createdAt": "2024-11-13T17:10:12Z",
              "updatedAt": "2024-11-13T17:10:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REqi0",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:11:21Z",
          "updatedAt": "2024-11-13T17:11:21Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nThe series object is an array of records contaning both Reference and Endorsed Values.\r\n```",
              "createdAt": "2024-11-13T17:11:21Z",
              "updatedAt": "2024-11-13T17:11:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REqwa",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:11:34Z",
          "updatedAt": "2024-11-13T17:11:34Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nEach record is evaluated in the order it appears in the series array.\r\n```",
              "createdAt": "2024-11-13T17:11:34Z",
              "updatedAt": "2024-11-13T17:11:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RErZf",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:12:20Z",
          "updatedAt": "2024-11-13T17:12:20Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "This one too seems too deep too soon: reference to internals, mention of ACS.",
              "createdAt": "2024-11-13T17:12:20Z",
              "updatedAt": "2024-11-13T17:12:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RErkA",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:12:37Z",
          "updatedAt": "2024-11-13T17:12:37Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "ditto",
              "createdAt": "2024-11-13T17:12:37Z",
              "updatedAt": "2024-11-13T17:12:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REwHX",
          "commit": {
            "abbreviatedOid": "722da75"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:18:43Z",
          "updatedAt": "2024-11-13T17:18:43Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I think the original text is more clear as the triple is indeed very complex so more the text clarity the merrier it is!",
              "createdAt": "2024-11-13T17:18:43Z",
              "updatedAt": "2024-11-13T17:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REysz",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:23:17Z",
          "updatedAt": "2024-11-13T17:23:17Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "As mentioned it is much safer to be precise as to which record we are referring  here!",
              "createdAt": "2024-11-13T17:23:17Z",
              "updatedAt": "2024-11-13T17:23:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86REzEG",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:23:58Z",
          "updatedAt": "2024-11-13T17:23:58Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nA Conditional Endorsement Triple declares one or more conditions that, once they match, cause every entry in the endorsements to be added to the actual state.\r\n```",
              "createdAt": "2024-11-13T17:23:58Z",
              "updatedAt": "2024-11-13T17:23:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE0pu",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:25:07Z",
          "updatedAt": "2024-11-13T17:25:08Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Also `` is the convention we have been following, so prefer this way as against to a new convention of \"xyz\"",
              "createdAt": "2024-11-13T17:25:07Z",
              "updatedAt": "2024-11-13T17:25:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE1wj",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:26:05Z",
          "updatedAt": "2024-11-13T17:26:06Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "It is much safer to be precise as to which record we are referring here!",
              "createdAt": "2024-11-13T17:26:05Z",
              "updatedAt": "2024-11-13T17:26:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE2cJ",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I have addressed most of the comments!",
          "createdAt": "2024-11-13T17:27:00Z",
          "updatedAt": "2024-11-13T17:27:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RE3s3",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:29:19Z",
          "updatedAt": "2024-11-13T17:29:19Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "We can change ACS to attester's actual state",
              "createdAt": "2024-11-13T17:29:19Z",
              "updatedAt": "2024-11-13T17:29:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE4ct",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:30:39Z",
          "updatedAt": "2024-11-13T17:30:39Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nThe Endorsed Values are accepted if the series condition in a `conditional-series-record` matches the attester's actual state.\r\n```",
              "createdAt": "2024-11-13T17:30:39Z",
              "updatedAt": "2024-11-13T17:30:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE4tU",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:31:07Z",
          "updatedAt": "2024-11-13T17:31:07Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nThe first `conditional-series-record` that successfully matches an attester's actual state terminates the matching and the corresponding Endorsed Values are accepted.\r\n```",
              "createdAt": "2024-11-13T17:31:07Z",
              "updatedAt": "2024-11-13T17:31:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE5cX",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:32:30Z",
          "updatedAt": "2024-11-13T17:32:30Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nIf none of the series conditions match the attester's actual state, the triple is not matched, and no Endorsed values are accepted.\t\r\n```",
              "createdAt": "2024-11-13T17:32:30Z",
              "updatedAt": "2024-11-13T17:32:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE7ka",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-13T17:36:12Z",
          "updatedAt": "2024-11-13T17:36:13Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "The triple is hard to explain with out the context of ACS, The matching semantics needs ACS. Few alternatives below:\r\n\r\n1. Forward reference to ACS and request reader to understand ACS before arriving here!\r\n2. Change ACS to attester's actual state. Tried but does not improve the situation dramatically, infact matching on attester's actual state yield more ambIguity!",
              "createdAt": "2024-11-13T17:36:13Z",
              "updatedAt": "2024-11-13T17:36:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOH6-tI86RE8rN",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I added my own comments to the earlier comments!",
          "createdAt": "2024-11-13T17:37:01Z",
          "updatedAt": "2024-11-13T17:37:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RE5vP",
          "commit": {
            "abbreviatedOid": "09bb824"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "multiple comments",
          "createdAt": "2024-11-13T17:33:05Z",
          "updatedAt": "2024-11-13T17:40:15Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nA Conditional Endorsement Triple declares one or more conditions that, once matched, results in augmenting the Attester with the Endorsement Claims.\r\n```\r\nI think the reader is equally confused by \"actual\" given the reader is confused by \"accepted\". ",
              "createdAt": "2024-11-13T17:33:05Z",
              "updatedAt": "2024-11-13T17:40:15Z"
            },
            {
              "originalPosition": 51,
              "body": "If using the actual CDDL (which occurs earlier in the document?) can't be used here, the reader is equally confused by \"stateful environment\" as they would be `stateful-environment`. The current text assumes the reader is familiar with what has been discussed in previous sections. \r\n\r\nThe goal of #310 is to provide one or two sentences of elevator text that describes the triple subject, object, and predicate without using those terms.",
              "createdAt": "2024-11-13T17:39:48Z",
              "updatedAt": "2024-11-13T17:40:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 346,
      "id": "PR_kwDOH6-tI86BFnjK",
      "title": "Use . instead of / for field projection",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-corim/pull/346",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes Issue #345",
      "createdAt": "2024-11-06T17:28:16Z",
      "updatedAt": "2024-11-13T15:21:47Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "baseRefName": "main",
      "baseRefOid": "866e582ea9c17cd57739557202ee95df76e600f0",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-corim",
      "headRefName": "deeglaze-patch-1",
      "headRefOid": "1ac55fb971f4068c02e8e969d6c6f73194da2f87",
      "closedAt": "2024-11-13T15:21:42Z",
      "mergedAt": "2024-11-13T15:21:42Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "f22e072f3d1ee000dc3cc2fd9d3db41b294a790f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOH6-tI86RDXXb",
          "commit": {
            "abbreviatedOid": "1ac55fb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T15:21:01Z",
          "updatedAt": "2024-11-13T15:21:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOH6-tI86RDXbF",
          "commit": {
            "abbreviatedOid": "1ac55fb"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-11-13T15:21:06Z",
          "updatedAt": "2024-11-13T15:21:06Z",
          "comments": []
        }
      ]
    }
  ]
}